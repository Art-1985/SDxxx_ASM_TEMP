     1                     ;============================================================
     2                     ;	Project:		MTF351_ASM_TEMP
     3                     ;	FILE:			MTF351_ASM_TEMP.asm
     4                     ;  	Target:  		MTF351
     5                     ;	Author:			Arthur (Lu Hungche)
     6                     ;	Date:			2020/03/11
     7                     ;------------------------------------------------------------
     8                     ;	Description:	For MTF351 Instruction and EFT Verify
     9                     ;	Active-Low: P50(Red-PWR)、P51(Yel-PUSH)、
    10                     ;					
    11                     ;------------------------------------------------------------
    12                     ; History:
    13                     ; Ver  | dd-mmm-yyyy |  Who  | Description of changes
    14                     ; =====|=============|=======|===============================
    15                     ;  0.1 | 11 Mat 2020 |Arthur | Original Release.
    16                     ; -----|-------------|-------|-------------------------------
    17                     ;  0.2 |
    18                     ; -----|-------------|-------|-------------------------------
    19                     ;============================================================
    20                     
    21                     ;==================== Project Include ====================
    22                     Include	"MTF351.INC"
     1            C        ;======================================================;
     2            C        ;  Title:       EM88F758N Include File                 ;
     3            C        ;  Description: The Definition of EM88F758N Registers  ;
     4            C        ;  Company:     ELAN MICROELECTRONICS LTD.	       	   ;
     5            C        ;  Date:        2014/12/03                             ;
     6            C        ;======================================================;
     7            C        
     8            C        ;======================================================;
     9            C        ; Operational Registers Define                         ;
    10            C        ;======================================================;
    11            C        ;======================================================;
    12            C        ; Registers R0~R4                                      ;
    13            C        ;======================================================;
    14            C        ; IAR: Indirect Address Register
    15       2000 C        IAR     ==    0x00:rpage 0
    15 00000 0010 C        IAR     ==    0x00:rpage 0
    16            C        
    17            C        ; BSR: Bank Selection Control Register
    18       2001 C        BSR     ==    0x01:rpage 0
    18 00000 0010 C        BSR     ==    0x01:rpage 0
    19       2001 C        	SBS1	==	BSR.5
    19 00000 0540 C        	SBS1	==	BSR.5
    20       2001 C        	SBS0	==	BSR.4
    20 00000 0440 C        	SBS0	==	BSR.4
    21       2001 C        	GBS0	==	BSR.0
    21 00000 0040 C        	GBS0	==	BSR.0
    22            C        
    23            C        ; PC: Program Counter Low
    24       2002 C        PCL      ==    0x02:rpage 0
    24 00000 0010 C        PCL      ==    0x02:rpage 0
    25            C        
    26            C        ; PSR: Process Status Register
    27       2003 C        STATUS  ==    0x03:rpage 0
    27 00000 0010 C        STATUS  ==    0x03:rpage 0
    28       2003 C        	IT	==  STATUS.7    ; Interrupt mask bit
    28 00000 0740 C        	IT	==  STATUS.7    ; Interrupt mask bit
    29       2003 C        	N       ==  STATUS.6    ; Negative bit
    29 00000 0640 C        	N       ==  STATUS.6    ; Negative bit
    30       2003 C        	OV      ==  STATUS.5    ; Overflow bit
    30 00000 0540 C        	OV      ==  STATUS.5    ; Overflow bit
    31       2003 C        	T       ==  STATUS.4    ; Time-out bit
    31 00000 0440 C        	T       ==  STATUS.4    ; Time-out bit
    32       2003 C        	P       ==  STATUS.3    ; Power-down bit
    32 00000 0340 C        	P       ==  STATUS.3    ; Power-down bit
    33       2003 C        	Z       ==  STATUS.2    ; Zero flag
    33 00000 0240 C        	Z       ==  STATUS.2    ; Zero flag
    34       2003 C        	DC      ==  STATUS.1    ; Auxiliary carry flag
    34 00000 0140 C        	DC      ==  STATUS.1    ; Auxiliary carry flag
    35       2003 C        	C       ==  STATUS.0    ; Carry flag
    35 00000 0040 C        	C       ==  STATUS.0    ; Carry flag
    36            C        
    37            C        ; RSR: RAM Select Register
    38       2004 C        RSR     ==    0x04:rpage 0
    38 00000 0010 C        RSR     ==    0x04:rpage 0
    39            C        
    40            C        
    41            C        ;======================================================
    42            C        ;      BANK 0 Registers                                   
    43            C        ;======================================================
    44            C        ; R5 ~ RA: I/O Port Address
    45       2005 C        P5      ==    0x05:rpage 0
    45 00000 0010 C        P5      ==    0x05:rpage 0
    46       2006 C        P6      ==    0x06:rpage 0
    46 00000 0010 C        P6      ==    0x06:rpage 0
    47       2007 C        P7	==    0x07:rpage 0
    47 00000 0010 C        P7	==    0x07:rpage 0
    48       2005 C        PORT5   ==    0x05:rpage 0
    48 00000 0010 C        PORT5   ==    0x05:rpage 0
    49       2006 C        PORT6   ==    0x06:rpage 0
    49 00000 0010 C        PORT6   ==    0x06:rpage 0
    50       2007 C        PORT7   ==    0x07:rpage 0
    50 00000 0010 C        PORT7   ==    0x07:rpage 0
    51            C        
    52            C        ; RB ~ RD: I/O Control Register
    53       200B C        IOCR5	==    0x0B:rpage 0
    53 00000 0010 C        IOCR5	==    0x0B:rpage 0
    54       200C C        IOCR6	==    0x0C:rpage 0
    54 00000 0010 C        IOCR6	==    0x0C:rpage 0
    55       200D C        IOCR7	==    0x0D:rpage 0
    55 00000 0010 C        IOCR7	==    0x0D:rpage 0
    56            C        
    57            C        ; OMCR:Operating Mode Control Register
    58       200E C        OMCR 	==    0x0E:rpage 0
    58 00000 0010 C        OMCR 	==    0x0E:rpage 0
    59       200E C        	CPUS	==	OMCR.7			;CPU Osillator Source Select
    59 00000 0740 C        	CPUS	==	OMCR.7			;CPU Osillator Source Select
    60       200E C        	IDLE	==	OMCR.6			;Idle Mode Enable Bit.
    60 00000 0640 C        	IDLE	==	OMCR.6			;Idle Mode Enable Bit.
    61       200E C        	CLK2	==	OMCR.5
    61 00000 0540 C        	CLK2	==	OMCR.5
    62       200E C        	CLK1	==	OMCR.4
    62 00000 0440 C        	CLK1	==	OMCR.4
    63       200E C        	CLK0	==	OMCR.3
    63 00000 0340 C        	CLK0	==	OMCR.3
    64            C        	
    65       200E C        	RCM1	==	OMCR.1
    65 00000 0140 C        	RCM1	==	OMCR.1
    66       200E C        	RCM0	==	OMCR.0
    66 00000 0040 C        	RCM0	==	OMCR.0
    67            C        						
    68            C        ; EIESCR:External interrupt Edge Select Register
    69       200F C        EIESCR  ==    0x0F:rpage 0
    69 00000 0010 C        EIESCR  ==    0x0F:rpage 0
    70       200F C        	EIES1	==	EIESCR.3
    70 00000 0340 C        	EIES1	==	EIESCR.3
    71       200F C        	EIES0	==	EIESCR.2
    71 00000 0240 C        	EIES0	==	EIESCR.2
    72            C        
    73            C        ; WUCR1:Wake-up Control Register 1
    74       2010 C        WUCR1 	==    0x10:rpage 0
    74 00000 0010 C        WUCR1 	==    0x10:rpage 0
    75       2010 C        	CMP2WK	==	WUCR1.7
    75 00000 0740 C        	CMP2WK	==	WUCR1.7
    76       2010 C        	CMP1WK	==	WUCR1.6
    76 00000 0640 C        	CMP1WK	==	WUCR1.6
    77       2010 C        	LVDWK	==	WUCR1.5
    77 00000 0540 C        	LVDWK	==	WUCR1.5
    78       2010 C        	ADWK	==	WUCR1.4
    78 00000 0440 C        	ADWK	==	WUCR1.4
    79       2010 C        	INT1WK	==	WUCR1.3
    79 00000 0340 C        	INT1WK	==	WUCR1.3
    80       2010 C        	INT0WK	==	WUCR1.2
    80 00000 0240 C        	INT0WK	==	WUCR1.2
    81            C        
    82            C        ; Reserver 0x11
    83            C        
    84            C        ; WUCR3:Wake-up Control Register 3
    85       2012 C        WUCR3  ==    0x12:rpage 0
    85 00000 0010 C        WUCR3  ==    0x12:rpage 0
    86       2012 C        	ICWKP7	==	WUCR3.6
    86 00000 0640 C        	ICWKP7	==	WUCR3.6
    87       2012 C        	ICWKP6	==	WUCR3.5
    87 00000 0540 C        	ICWKP6	==	WUCR3.5
    88       2012 C        	ICWKP5	==	WUCR3.4
    88 00000 0440 C        	ICWKP5	==	WUCR3.4
    89            C        
    90            C        ; SFR1:Status Flag Register 1
    91       2014 C        SFR1 	==    0x14:rpage 0
    91 00000 0010 C        SFR1 	==    0x14:rpage 0
    92       2014 C        	CMP2SF	==	SFR1.7
    92 00000 0740 C        	CMP2SF	==	SFR1.7
    93       2014 C        	CMP1SF	==	SFR1.6
    93 00000 0640 C        	CMP1SF	==	SFR1.6
    94       2014 C        	LVDSF	==	SFR1.5
    94 00000 0540 C        	LVDSF	==	SFR1.5
    95       2014 C        	ADSF	==	SFR1.4
    95 00000 0440 C        	ADSF	==	SFR1.4
    96       2014 C        	EXSF1	==	SFR1.3
    96 00000 0340 C        	EXSF1	==	SFR1.3
    97       2014 C        	EXSF0	==	SFR1.2
    97 00000 0240 C        	EXSF0	==	SFR1.2
    98            C        
    99            C        ; SFR2:Status Flag Register 2
   100            C        ;SFR2 	==    0x15:rpage 0
   101            C        
   102            C        ; SFR3:Status Flag Register 3
   103            C        ;SFR3 	==    0x16:rpage 0
   104            C        
   105            C        ; SFR4:Status Flag Register 4
   106       2017 C        SFR4	==    0x17:rpage 0
   106 00000 0010 C        SFR4	==    0x17:rpage 0
   107       2017 C        	P7ICSF	==	SFR4.6
   107 00000 0640 C        	P7ICSF	==	SFR4.6
   108       2017 C        	P6ICSF	==	SFR4.5
   108 00000 0540 C        	P6ICSF	==	SFR4.5
   109       2017 C        	P5ICSF	==	SFR4.4
   109 00000 0440 C        	P5ICSF	==	SFR4.4
   110            C        
   111            C        ; SFR6:Status Flag Register 6
   112       2019 C        SFR6	==    0x19:rpage 0
   112 00000 0010 C        SFR6	==    0x19:rpage 0
   113       2019 C        	SHSF	==	SFR6.7
   113 00000 0740 C        	SHSF	==	SFR6.7
   114            C        
   115            C        ; IMR1:Interrupt Mask Register 1
   116       201B C        IMR1 	==    0x1B:rpage 0
   116 00000 0010 C        IMR1 	==    0x1B:rpage 0
   117       201B C        	CMP2IE	==	IMR1.7
   117 00000 0740 C        	CMP2IE	==	IMR1.7
   118       201B C        	CMP1IE	==	IMR1.6
   118 00000 0640 C        	CMP1IE	==	IMR1.6
   119       201B C        	LVDIE	==	IMR1.5
   119 00000 0540 C        	LVDIE	==	IMR1.5
   120       201B C        	ADIE	==	IMR1.4
   120 00000 0440 C        	ADIE	==	IMR1.4
   121       201B C        	EXIE1	==	IMR1.3
   121 00000 0340 C        	EXIE1	==	IMR1.3
   122       201B C        	EXIE0	==	IMR1.2
   122 00000 0240 C        	EXIE0	==	IMR1.2
   123            C        
   124            C        ; IMR2:Interrupt Mask Register 2
   125            C        ;IMR2 	==    0x1C:rpage 0
   126            C        ;	CMP4IE	==	IMR2.7
   127            C        ;	CMP3IE	==	IMR2.6
   128            C        
   129            C        ; IMR3:Interrupt Mask Register 3
   130            C        ;IMR3 	==    0x1D:rpage 0
   131            C        
   132            C        ; IMR4:Interrupt Mask Register 4
   133       201E C        IMR4 	==    0x1E:rpage 0
   133 00000 0010 C        IMR4 	==    0x1E:rpage 0
   134       201E C        	P7ICIE	==	IMR4.6
   134 00000 0640 C        	P7ICIE	==	IMR4.6
   135       201E C        	P6ICIE	==	IMR4.5
   135 00000 0540 C        	P6ICIE	==	IMR4.5
   136       201E C        	P5ICIE	==	IMR4.4
   136 00000 0440 C        	P5ICIE	==	IMR4.4
   137            C        
   138            C        ; IMR6:Interrupt Mask Register 6
   139       2020 C        IMR6 	==    0x20:rpage 0
   139 00000 0010 C        IMR6 	==    0x20:rpage 0
   140       2020 C        	SHIE	==	IMR6.7
   140 00000 0740 C        	SHIE	==	IMR6.7
   141            C        
   142            C        ; WDTCR:Watch Dog Timer Control Register
   143       2021 C        WDTCR 	==    0x21:rpage 0
   143 00000 0010 C        WDTCR 	==    0x21:rpage 0
   144       2021 C        	WDTE	==	WDTCR.7
   144 00000 0740 C        	WDTE	==	WDTCR.7
   145       2021 C        	PSWE	==	WDTCR.3
   145 00000 0340 C        	PSWE	==	WDTCR.3
   146       2021 C        	WPSR2	==	WDTCR.2
   146 00000 0240 C        	WPSR2	==	WDTCR.2
   147       2021 C        	WPSR1	==	WDTCR.1
   147 00000 0140 C        	WPSR1	==	WDTCR.1
   148       2021 C        	WPSR0	==	WDTCR.0
   148 00000 0040 C        	WPSR0	==	WDTCR.0
   149            C        
   150            C        ; Reserver 0x22~0x3D
   151            C        
   152            C        ; ADCR1:ADC Control Register 1
   153       203E C        ADCR1	==   0x3E:rpage 0
   153 00000 0010 C        ADCR1	==   0x3E:rpage 0
   154       203E C        	CKR2		==	ADCR1.7
   154 00000 0740 C        	CKR2		==	ADCR1.7
   155       203E C        	CKR1		==	ADCR1.6
   155 00000 0640 C        	CKR1		==	ADCR1.6
   156       203E C        	CKR0		==	ADCR1.5
   156 00000 0540 C        	CKR0		==	ADCR1.5
   157       203E C        	ADRUN		==	ADCR1.4
   157 00000 0440 C        	ADRUN		==	ADCR1.4
   158       203E C        	ADP		==	ADCR1.3
   158 00000 0340 C        	ADP		==	ADCR1.3
   159       203E C        	ADOM		==	ADCR1.2
   159 00000 0240 C        	ADOM		==	ADCR1.2
   160       203E C        	SHS1		==	ADCR1.1
   160 00000 0140 C        	SHS1		==	ADCR1.1
   161       203E C        	SHS0		==	ADCR1.0
   161 00000 0040 C        	SHS0		==	ADCR1.0
   162            C        
   163            C        ; ADCR2:ADC Control Register 2
   164       203F C        ADCR2	==   0x3F:rpage 0
   164 00000 0010 C        ADCR2	==   0x3F:rpage 0
   165       203F C        	VPIS2		==	ADCR2.6
   165 00000 0640 C        	VPIS2		==	ADCR2.6
   166       203F C        	ADIM		==	ADCR2.5
   166 00000 0540 C        	ADIM		==	ADCR2.5
   167       203F C        	ADCMS		==	ADCR2.4
   167 00000 0440 C        	ADCMS		==	ADCR2.4
   168       203F C        	VPIS1		==	ADCR2.3
   168 00000 0340 C        	VPIS1		==	ADCR2.3
   169       203F C        	VPIS0		==	ADCR2.2
   169 00000 0240 C        	VPIS0		==	ADCR2.2
   170       203F C        	VREFP		==	ADCR2.1
   170 00000 0140 C        	VREFP		==	ADCR2.1
   171            C        
   172            C        ; ADISR:ADC Input Channel Selection Register
   173       2040 C        ADISR	==   0x40:rpage 0
   173 00000 0010 C        ADISR	==   0x40:rpage 0
   174       2040 C        	STPMK		==	ADISR.7
   174 00000 0740 C        	STPMK		==	ADISR.7
   175            C        
   176       2040 C        	ADIS3		==	ADISR.3
   176 00000 0340 C        	ADIS3		==	ADISR.3
   177       2040 C        	ADIS2		==	ADISR.2
   177 00000 0240 C        	ADIS2		==	ADISR.2
   178       2040 C        	ADIS1		==	ADISR.1
   178 00000 0140 C        	ADIS1		==	ADISR.1
   179       2040 C        	ADIS0		==	ADISR.0	
   179 00000 0040 C        	ADIS0		==	ADISR.0	
   180            C        
   181            C        ; ADER1:ADC Input Control Register 1
   182       2041 C        ADER1	==   0x41:rpage 0
   182 00000 0010 C        ADER1	==   0x41:rpage 0
   183       2041 C        	ADE7		==	ADER1.7
   183 00000 0740 C        	ADE7		==	ADER1.7
   184       2041 C        	ADE6		==	ADER1.6
   184 00000 0640 C        	ADE6		==	ADER1.6
   185       2041 C        	ADE5		==	ADER1.5
   185 00000 0540 C        	ADE5		==	ADER1.5
   186       2041 C        	ADE4		==	ADER1.4
   186 00000 0440 C        	ADE4		==	ADER1.4
   187       2041 C        	ADE3		==	ADER1.3
   187 00000 0340 C        	ADE3		==	ADER1.3
   188       2041 C        	ADE2		==	ADER1.2
   188 00000 0240 C        	ADE2		==	ADER1.2
   189       2041 C        	ADE1		==	ADER1.1
   189 00000 0140 C        	ADE1		==	ADER1.1
   190       2041 C        	ADE0		==	ADER1.0
   190 00000 0040 C        	ADE0		==	ADER1.0
   191            C        
   192            C        ; Reserve 0x42
   193            C        
   194            C        ; ADDL:Low Byte of ADC Data Buffer
   195       2043 C        ADDL	==   0x43:rpage 0
   195 00000 0010 C        ADDL	==   0x43:rpage 0
   196            C        
   197            C        ; ADDH:High Byte of ADC Data Buffer
   198       2044 C        ADDH	==   0x44:rpage 0
   198 00000 0010 C        ADDH	==   0x44:rpage 0
   199            C        
   200            C        ; ADCVL:Low Byte of ADC Comparison
   201       2045 C        ADCVL	==   0x45:rpage 0
   201 00000 0010 C        ADCVL	==   0x45:rpage 0
   202            C        
   203            C        ; ADCVH:High Byte of ADC Comparison
   204       2046 C        ADCVH	==   0x46:rpage 0
   204 00000 0010 C        ADCVH	==   0x46:rpage 0
   205            C        
   206            C        ; ADCONBUF:High Byte of ADC Comparison
   207       2047 C        ADCONBUF==   0x47:rpage 0
   207 00000 0010 C        ADCONBUF==   0x47:rpage 0
   208       2047 C        	ADBFEN		==	ADCONBUF.7
   208 00000 0740 C        	ADBFEN		==	ADCONBUF.7
   209       2047 C        	ADBFOVR		==	ADCONBUF.6
   209 00000 0640 C        	ADBFOVR		==	ADCONBUF.6
   210       2047 C        	ADBFINT		==	ADCONBUF.5
   210 00000 0540 C        	ADBFINT		==	ADCONBUF.5
   211            C        
   212       2047 C        	ADBFPTR2	==	ADCONBUF.2
   212 00000 0240 C        	ADBFPTR2	==	ADCONBUF.2
   213       2047 C        	ADBFPTR1	==	ADCONBUF.1
   213 00000 0140 C        	ADBFPTR1	==	ADCONBUF.1
   214       2047 C        	ADBFPTR0	==	ADCONBUF.0
   214 00000 0040 C        	ADBFPTR0	==	ADCONBUF.0
   215            C        
   216            C        ;Reserve 0x48~0x4F
   217            C        
   218            C        ;======================================================
   219            C        ;      BANK 1 Registers                                
   220            C        ;======================================================
   221            C        ; P5PHCR:Port 5 Pull-high Control Rgister
   222       2008 C        P5PHCR	==    0x08:rpage 1
   222 00000 0011 C        P5PHCR	==    0x08:rpage 1
   223            C        
   224            C        ; P6PHCR:Port 6 Pull-high Control Rgister
   225       2009 C        P6PHCR	==    0x09:rpage 1
   225 00000 0011 C        P6PHCR	==    0x09:rpage 1
   226            C        
   227            C        ; P7PHCR:Port 7 Pull-high Control Rgister
   228       200A C        P7PHCR ==    0x0A:rpage 1
   228 00000 0011 C        P7PHCR ==    0x0A:rpage 1
   229       200A C        	P7LPH		==	P7PHCR.0
   229 00000 0041 C        	P7LPH		==	P7PHCR.0
   230            C        
   231            C        ; P5PLCR:Port 5 Pull-low Control Register
   232       200B C        P5PLCR	==    0x0B:rpage 1
   232 00000 0011 C        P5PLCR	==    0x0B:rpage 1
   233            C        
   234            C        ; P6PLCR:Port 6 Pull-low Control Register
   235       200C C        P6PLCR	==    0x0C:rpage 1
   235 00000 0011 C        P6PLCR	==    0x0C:rpage 1
   236            C        
   237            C        ; P7PLCR:Port 7 Pull-low Control Register
   238       200D C        P7PLCR ==    0x0D:rpage 1
   238 00000 0011 C        P7PLCR ==    0x0D:rpage 1
   239       200D C        	P7LPL		==	P7PLCR.0
   239 00000 0041 C        	P7LPL		==	P7PLCR.0
   240            C        
   241            C        ; P5HDSCR:Port 5 High Drive Control Register
   242       200E C        P5HDSCR	==    0x0E:rpage 1
   242 00000 0011 C        P5HDSCR	==    0x0E:rpage 1
   243            C        
   244            C        ; P6HDSCR:Port 6 High Drive Control Register
   245       200F C        P6HDSCR	==    0x0F:rpage 1
   245 00000 0011 C        P6HDSCR	==    0x0F:rpage 1
   246            C        
   247            C        ; P7HDSCR:Port 7 High Drive Control Register
   248       2010 C        P7HDSCR ==    0x10:rpage 1
   248 00000 0011 C        P7HDSCR ==    0x10:rpage 1
   249       2010 C        	P7LHDS		==	P7HDSCR.0
   249 00000 0041 C        	P7LHDS		==	P7HDSCR.0
   250            C        
   251            C        ; P5ODCR:Port 5 Open-drain control Register
   252       2011 C        P5ODCR	==    0x11:rpage 1
   252 00000 0011 C        P5ODCR	==    0x11:rpage 1
   253            C        
   254            C        ; P6ODCR:Port 6 Open-drain control Register
   255       2012 C        P6ODCR	==    0x12:rpage 1
   255 00000 0011 C        P6ODCR	==    0x12:rpage 1
   256            C        
   257            C        ; P7ODCR:Port 7 Open-drain control Register
   258       2013 C        P7ODCR ==    0x13:rpage 1
   258 00000 0011 C        P7ODCR ==    0x13:rpage 1
   259       2013 C        	P7LOD		==	P7ODCR.0
   259 00000 0041 C        	P7LOD		==	P7ODCR.0
   260            C        
   261            C        ;Reserve 0x14~0x43
   262            C        
   263            C        ; FLKR:Flash Key Register for Table Write
   264       2044 C        FLKR	==    0x44:rpage 1
   264 00000 0011 C        FLKR	==    0x44:rpage 1
   265            C        
   266            C        ; TBPTL:Table Point Low Register
   267       2045 C        TBPTL	==    0x45:rpage 1
   267 00000 0011 C        TBPTL	==    0x45:rpage 1
   268            C        
   269            C        ; TBPTH:Table Point High Register
   270       2046 C        TBPTH	==    0x46:rpage 1
   270 00000 0011 C        TBPTH	==    0x46:rpage 1
   271       2046 C        	HLB		==	TBPTH.7
   271 00000 0741 C        	HLB		==	TBPTH.7
   272       2046 C        	RDS		==	TBPTH.6
   272 00000 0641 C        	RDS		==	TBPTH.6
   273            C        
   274            C        ; STKMON:Stack Point
   275       2047 C        STKMON	==    0x47:rpage 1
   275 00000 0011 C        STKMON	==    0x47:rpage 1
   276       2047 C        	STOV	==	STKMON.7
   276 00000 0741 C        	STOV	==	STKMON.7
   277       2047 C        	STL2	==	STKMON.2
   277 00000 0241 C        	STL2	==	STKMON.2
   278       2047 C        	STL1	==	STKMON.1
   278 00000 0141 C        	STL1	==	STKMON.1
   279       2047 C        	STL0	==	STKMON.0
   279 00000 0041 C        	STL0	==	STKMON.0
   280            C        
   281            C        ; PCH:Program Counter High
   282       2048 C        PCH	==    0x48:rpage 1
   282 00000 0011 C        PCH	==    0x48:rpage 1
   283            C        
   284            C        ; LVDCR:Low Voltage Detector Control Register
   285       2049 C        LVDCR	==    0x49:rpage 1
   285 00000 0011 C        LVDCR	==    0x49:rpage 1
   286       2049 C        	LVDEN		==	LVDCR.7
   286 00000 0741 C        	LVDEN		==	LVDCR.7
   287       2049 C        	LVDB		==	LVDCR.3		; LVD Status
   287 00000 0341 C        	LVDB		==	LVDCR.3		; LVD Status
   288            C        
   289            C        ; COBS1:Code Option Bit Selection Register 1
   290       204A C        COBS1	==    0x4A:rpage 1
   290 00000 0011 C        COBS1	==    0x4A:rpage 1
   291       204A C        	HLFS		==	COBS1.7
   291 00000 0741 C        	HLFS		==	COBS1.7
   292       204A C        	RESETEN		==	COBS1.6
   292 00000 0641 C        	RESETEN		==	COBS1.6
   293       204A C        	ENWDT		==	COBS1.5
   293 00000 0541 C        	ENWDT		==	COBS1.5
   294       204A C        	ADFM		==	COBS1.2
   294 00000 0241 C        	ADFM		==	COBS1.2
   295            C        
   296            C        ; COBS2:Code Option Bit Selection Register 2
   297            C        ;COBS2	==    0x4B:rpage 1
   298            C        
   299            C        ; COBS3:Code Option Bit Selection Register 3
   300       204C C        COBS3	==    0x4C:rpage 1
   300 00000 0011 C        COBS3	==    0x4C:rpage 1
   301       204C C        	FSS0		==	COBS3.5
   301 00000 0541 C        	FSS0		==	COBS3.5
   302       204C C        	SC4		==	COBS3.4
   302 00000 0441 C        	SC4		==	COBS3.4
   303       204C C        	SC3		==	COBS3.3
   303 00000 0341 C        	SC3		==	COBS3.3
   304       204C C        	SC2		==	COBS3.2
   304 00000 0241 C        	SC2		==	COBS3.2
   305       204C C        	SC1		==	COBS3.1
   305 00000 0141 C        	SC1		==	COBS3.1
   306       204C C        	SC0		==	COBS3.0
   306 00000 0041 C        	SC0		==	COBS3.0
   307            C        
   308            C        ; TBWCR:Table Write Control Register
   309       204D C        TBWCR	==    0x4D:rpage 1
   309 00000 0011 C        TBWCR	==    0x4D:rpage 1
   310       204D C        	IAPEN		==	TBWCR.0
   310 00000 0041 C        	IAPEN		==	TBWCR.0
   311            C        
   312            C        ; TBWAL:Table Write Start Address Low Byte
   313       204E C        TBWAL	==    0x4E:rpage 1
   313 00000 0011 C        TBWAL	==    0x4E:rpage 1
   314            C        
   315            C        ; TBWAH:Table Write Start Address Low Byte
   316       204F C        TBWAH	==    0x4F:rpage 1
   316 00000 0011 C        TBWAH	==    0x4F:rpage 1
   317            C        
   318            C        
   319            C        ;======================================================
   320            C        ;      BANK 2 Registers                                
   321            C        ;======================================================
   322            C        ; TM1CR1:
   323       2005 C        TM1CR1	==    0x05:rpage 2
   323 00000 0012 C        TM1CR1	==    0x05:rpage 2
   324       2005 C        	TM1S		==	TM1CR1.7
   324 00000 0742 C        	TM1S		==	TM1CR1.7
   325       2005 C        	TM1RC		==	TM1CR1.6
   325 00000 0642 C        	TM1RC		==	TM1CR1.6
   326       2005 C        	TM1SS1		==	TM1CR1.5
   326 00000 0542 C        	TM1SS1		==	TM1CR1.5
   327            C        
   328       2005 C        	TM1FF		==	TM1CR1.3
   328 00000 0342 C        	TM1FF		==	TM1CR1.3
   329       2005 C        	TM1MOS		==	TM1CR1.2
   329 00000 0242 C        	TM1MOS		==	TM1CR1.2
   330       2005 C        	TM1IS1		==	TM1CR1.1
   330 00000 0142 C        	TM1IS1		==	TM1CR1.1
   331       2005 C        	TM1IS0		==	TM1CR1.0
   331 00000 0042 C        	TM1IS0		==	TM1CR1.0
   332            C        
   333            C        ; TM1CR2:
   334       2006 C        TM1CR2	==    0x06:rpage 2
   334 00000 0012 C        TM1CR2	==    0x06:rpage 2
   335            C        
   336            C        ; TM1DBH:
   337       2007 C        TM1DBH	==    0x07:rpage 2
   337 00000 0012 C        TM1DBH	==    0x07:rpage 2
   338            C        
   339            C        ; TM1DBL:
   340       2008 C        TM1DBL	==    0x08:rpage 2
   340 00000 0012 C        TM1DBL	==    0x08:rpage 2
   341            C        
   342            C        ; TM1DAH:
   343       2009 C        TM1DAH	==    0x09:rpage 2
   343 00000 0012 C        TM1DAH	==    0x09:rpage 2
   344            C        
   345            C        ; TM1DAL:
   346       200A C        TM1DAL	==    0x0A:rpage 2
   346 00000 0012 C        TM1DAL	==    0x0A:rpage 2
   347            C        
   348            C        ; TM2CR1:
   349       200B C        TM2CR1	==    0x0B:rpage 2
   349 00000 0012 C        TM2CR1	==    0x0B:rpage 2
   350       200B C        	TM2S		==	TM2CR1.7
   350 00000 0742 C        	TM2S		==	TM2CR1.7
   351       200B C        	TM2RC		==	TM2CR1.6
   351 00000 0642 C        	TM2RC		==	TM2CR1.6
   352       200B C        	TM2SS1		==	TM2CR1.5
   352 00000 0542 C        	TM2SS1		==	TM2CR1.5
   353       200B C        	TM2FF		==	TM2CR1.3
   353 00000 0342 C        	TM2FF		==	TM2CR1.3
   354       200B C        	TM2MOS		==	TM2CR1.2
   354 00000 0242 C        	TM2MOS		==	TM2CR1.2
   355       200B C        	TM2IS1		==	TM2CR1.1
   355 00000 0142 C        	TM2IS1		==	TM2CR1.1
   356       200B C        	TM2IS0		==	TM2CR1.0
   356 00000 0042 C        	TM2IS0		==	TM2CR1.0
   357            C        
   358            C        ; TM2CR2:
   359       200C C        TM2CR2	==    0x0C:rpage 2
   359 00000 0012 C        TM2CR2	==    0x0C:rpage 2
   360            C        
   361            C        ; TM2DBH:
   362       200D C        TM2DBH	==    0x0D:rpage 2
   362 00000 0012 C        TM2DBH	==    0x0D:rpage 2
   363            C        
   364            C        ; TM2DBL:
   365       200E C        TM2DBL	==    0x0E:rpage 2
   365 00000 0012 C        TM2DBL	==    0x0E:rpage 2
   366            C        
   367            C        ; TM2DAH:
   368       200F C        TM2DAH	==    0x0F:rpage 2
   368 00000 0012 C        TM2DAH	==    0x0F:rpage 2
   369            C        
   370            C        ; TM2DAL:
   371       2010 C        TM2DAL	==    0x10:rpage 2
   371 00000 0012 C        TM2DAL	==    0x10:rpage 2
   372            C        
   373            C        ; TM3CR1:
   374       2011 C        TM3CR1	==    0x11:rpage 2
   374 00000 0012 C        TM3CR1	==    0x11:rpage 2
   375       2011 C        	TM3S		==	TM3CR1.7
   375 00000 0742 C        	TM3S		==	TM3CR1.7
   376       2011 C        	TM3RC		==	TM3CR1.6
   376 00000 0642 C        	TM3RC		==	TM3CR1.6
   377       2011 C        	TM3SS1		==	TM3CR1.5
   377 00000 0542 C        	TM3SS1		==	TM3CR1.5
   378       2011 C        	TM3FF		==	TM3CR1.3
   378 00000 0342 C        	TM3FF		==	TM3CR1.3
   379       2011 C        	TM3MOS		==	TM3CR1.2
   379 00000 0242 C        	TM3MOS		==	TM3CR1.2
   380       2011 C        	TM3IS1		==	TM3CR1.1
   380 00000 0142 C        	TM3IS1		==	TM3CR1.1
   381       2011 C        	TM3IS0		==	TM3CR1.0
   381 00000 0042 C        	TM3IS0		==	TM3CR1.0
   382            C        
   383            C        ; TM3CR2:
   384       2012 C        TM3CR2	==    0x12:rpage 2
   384 00000 0012 C        TM3CR2	==    0x12:rpage 2
   385            C        
   386            C        ; TM3DBH:
   387       2013 C        TM3DBH	==    0x13:rpage 2
   387 00000 0012 C        TM3DBH	==    0x13:rpage 2
   388            C        
   389            C        ; TM3DBL:
   390       2014 C        TM3DBL	==    0x14:rpage 2
   390 00000 0012 C        TM3DBL	==    0x14:rpage 2
   391            C        
   392            C        ; TM3DAH:
   393       2015 C        TM3DAH	==    0x15:rpage 2
   393 00000 0012 C        TM3DAH	==    0x15:rpage 2
   394            C        
   395            C        ; TM3DAL:
   396       2016 C        TM3DAL	==    0x16:rpage 2
   396 00000 0012 C        TM3DAL	==    0x16:rpage 2
   397            C        
   398            C        ; TM4CR1:
   399       2017 C        TM4CR1	==    0x17:rpage 2
   399 00000 0012 C        TM4CR1	==    0x17:rpage 2
   400       2017 C        	TM4S		==	TM4CR1.7
   400 00000 0742 C        	TM4S		==	TM4CR1.7
   401       2017 C        	TM4RC		==	TM4CR1.6
   401 00000 0642 C        	TM4RC		==	TM4CR1.6
   402       2017 C        	TM4SS1		==	TM4CR1.5
   402 00000 0542 C        	TM4SS1		==	TM4CR1.5
   403       2017 C        	TM4FF		==	TM4CR1.3
   403 00000 0342 C        	TM4FF		==	TM4CR1.3
   404       2017 C        	TM4MOS		==	TM4CR1.2
   404 00000 0242 C        	TM4MOS		==	TM4CR1.2
   405       2017 C        	TM4IS1		==	TM4CR1.1
   405 00000 0142 C        	TM4IS1		==	TM4CR1.1
   406       2017 C        	TM4IS0		==	TM4CR1.0
   406 00000 0042 C        	TM4IS0		==	TM4CR1.0
   407            C        
   408            C        ; TM4CR2:
   409       2018 C        TM4CR2	==    0x18:rpage 2
   409 00000 0012 C        TM4CR2	==    0x18:rpage 2
   410            C        
   411            C        ; TM4DBH:
   412       2019 C        TM4DBH	==    0x19:rpage 2
   412 00000 0012 C        TM4DBH	==    0x19:rpage 2
   413            C        
   414            C        ; TM4DBL:
   415       201A C        TM4DBL	==    0x1A:rpage 2
   415 00000 0012 C        TM4DBL	==    0x1A:rpage 2
   416            C        
   417            C        ; TM4DAH:
   418       201B C        TM4DAH	==    0x1B:rpage 2
   418 00000 0012 C        TM4DAH	==    0x1B:rpage 2
   419            C        
   420            C        ; TM4DAL:
   421       201C C        TM4DAL	==    0x1C:rpage 2
   421 00000 0012 C        TM4DAL	==    0x1C:rpage 2
   422            C        
   423            C        ; EI01NCR:
   424       201D C        EI01NCR	==    0x1D:rpage 2
   424 00000 0012 C        EI01NCR	==    0x1D:rpage 2
   425       201D C        	EI1NRE		==	EI01NCR.7
   425 00000 0742 C        	EI1NRE		==	EI01NCR.7
   426       201D C        	EI1NR1		==	EI01NCR.5
   426 00000 0542 C        	EI1NR1		==	EI01NCR.5
   427       201D C        	EI1NR0		==	EI01NCR.4
   427 00000 0442 C        	EI1NR0		==	EI01NCR.4
   428       201D C        	EI0NRE		==	EI01NCR.3
   428 00000 0342 C        	EI0NRE		==	EI01NCR.3
   429       201D C        	EI0NR1		==	EI01NCR.1
   429 00000 0142 C        	EI0NR1		==	EI01NCR.1
   430       201D C        	EI0NR0		==	EI01NCR.0
   430 00000 0042 C        	EI0NR0		==	EI01NCR.0
   431            C        
   432            C        ; CMP1CR:
   433       201E C        CMP1CR	==    0x1E:rpage 2
   433 00000 0012 C        CMP1CR	==    0x1E:rpage 2
   434       201E C        	C1PRS1		==	CMP1CR.7
   434 00000 0742 C        	C1PRS1		==	CMP1CR.7
   435       201E C        	C1PRS0		==	CMP1CR.6
   435 00000 0642 C        	C1PRS0		==	CMP1CR.6
   436       201E C        	C1NRS1		==	CMP1CR.5
   436 00000 0542 C        	C1NRS1		==	CMP1CR.5
   437       201E C        	C1NRS0		==	CMP1CR.4
   437 00000 0442 C        	C1NRS0		==	CMP1CR.4
   438       201E C        	CMP1EN		==	CMP1CR.2
   438 00000 0242 C        	CMP1EN		==	CMP1CR.2
   439       201E C        	CMP1OE		==	CMP1CR.1
   439 00000 0142 C        	CMP1OE		==	CMP1CR.1
   440       201E C        	CMP1OUT		==	CMP1CR.0
   440 00000 0042 C        	CMP1OUT		==	CMP1CR.0
   441            C        
   442            C        ; CMP2CR:
   443       201F C        CMP2CR	==    0x1F:rpage 2
   443 00000 0012 C        CMP2CR	==    0x1F:rpage 2
   444       201F C        	C2PRS1		==	CMP2CR.7
   444 00000 0742 C        	C2PRS1		==	CMP2CR.7
   445       201F C        	C2PRS0		==	CMP2CR.6
   445 00000 0642 C        	C2PRS0		==	CMP2CR.6
   446       201F C        	C2NRS1		==	CMP2CR.5
   446 00000 0542 C        	C2NRS1		==	CMP2CR.5
   447       201F C        	C2NRS0		==	CMP2CR.4
   447 00000 0442 C        	C2NRS0		==	CMP2CR.4
   448       201F C        	HYSEN2		==	CMP2CR.3
   448 00000 0342 C        	HYSEN2		==	CMP2CR.3
   449       201F C        	CMP2EN		==	CMP2CR.2
   449 00000 0242 C        	CMP2EN		==	CMP2CR.2
   450       201F C        	CMP2OE		==	CMP2CR.1
   450 00000 0142 C        	CMP2OE		==	CMP2CR.1
   451       201F C        	CMP2OUT		==	CMP2CR.0
   451 00000 0042 C        	CMP2OUT		==	CMP2CR.0
   452            C        
   453            C        ;Reserve 0x20~0x21
   454            C        
   455            C        ; CMPESCR:
   456       2022 C        CMPESCR	==    0x22:rpage 2
   456 00000 0012 C        CMPESCR	==    0x22:rpage 2
   457       2022 C        	CMP2ES		==	CMPESCR.1
   457 00000 0142 C        	CMP2ES		==	CMPESCR.1
   458       2022 C        	CMP1ES		==	CMPESCR.0
   458 00000 0042 C        	CMP1ES		==	CMPESCR.0
   459            C        
   460            C        ; CMP12NCR:
   461       2023 C        CMP12NCR==    0x23:rpage 2
   461 00000 0012 C        CMP12NCR==    0x23:rpage 2
   462       2023 C        	CO2NRE		==	CMP12NCR.7
   462 00000 0742 C        	CO2NRE		==	CMP12NCR.7
   463       2023 C        	CO2NR1		==	CMP12NCR.5
   463 00000 0542 C        	CO2NR1		==	CMP12NCR.5
   464       2023 C        	CO2NR0		==	CMP12NCR.4
   464 00000 0442 C        	CO2NR0		==	CMP12NCR.4
   465       2023 C        	CO1NRE		==	CMP12NCR.3
   465 00000 0342 C        	CO1NRE		==	CMP12NCR.3
   466       2023 C        	CO1NR1		==	CMP12NCR.1
   466 00000 0142 C        	CO1NR1		==	CMP12NCR.1
   467       2023 C        	CO1NR0		==	CMP12NCR.0
   467 00000 0042 C        	CO1NR0		==	CMP12NCR.0
   468            C        
   469            C        ;Reserve 0x24
   470            C        
   471            C        ; CMPTCR1:
   472       2025 C        CMPTCR1	==    0x25:rpage 2
   472 00000 0012 C        CMPTCR1	==    0x25:rpage 2
   473       2025 C        	CMPTEN		==	CMPTCR1.7
   473 00000 0742 C        	CMPTEN		==	CMPTCR1.7
   474       2025 C        	VOSFS2		==	CMPTCR1.6
   474 00000 0642 C        	VOSFS2		==	CMPTCR1.6
   475       2025 C        	VOSFS1		==	CMPTCR1.5
   475 00000 0542 C        	VOSFS1		==	CMPTCR1.5
   476       2025 C        	VOSFS0		==	CMPTCR1.4
   476 00000 0442 C        	VOSFS0		==	CMPTCR1.4
   477       2025 C        	TRIMDU2		==	CMPTCR1.1
   477 00000 0142 C        	TRIMDU2		==	CMPTCR1.1
   478       2025 C        	TRIMDU1		==	CMPTCR1.0
   478 00000 0042 C        	TRIMDU1		==	CMPTCR1.0
   479            C        
   480            C        ; CMPTCR2:
   481       2026 C        CMPTCR2	==    0x26:rpage 2
   481 00000 0012 C        CMPTCR2	==    0x26:rpage 2
   482       2026 C        	TRIMOS		==	CMPTCR2.4
   482 00000 0442 C        	TRIMOS		==	CMPTCR2.4
   483       2026 C        	TRIMIS2		==	CMPTCR2.1
   483 00000 0142 C        	TRIMIS2		==	CMPTCR2.1
   484       2026 C        	TRIMIS1		==	CMPTCR2.0
   484 00000 0042 C        	TRIMIS1		==	CMPTCR2.0
   485            C        
   486            C        ; TCMP1H:
   487       2027 C        TCMP1H	==    0x27:rpage 2
   487 00000 0012 C        TCMP1H	==    0x27:rpage 2
   488       2027 C        	TCMP1HS		==	TCMP1H.7
   488 00000 0742 C        	TCMP1HS		==	TCMP1H.7
   489       2027 C        	TCMP1H4		==	TCMP1H.4
   489 00000 0442 C        	TCMP1H4		==	TCMP1H.4
   490       2027 C        	TCMP1H3		==	TCMP1H.3
   490 00000 0342 C        	TCMP1H3		==	TCMP1H.3
   491       2027 C        	TCMP1H2		==	TCMP1H.2
   491 00000 0242 C        	TCMP1H2		==	TCMP1H.2
   492       2027 C        	TCMP1H1		==	TCMP1H.1
   492 00000 0142 C        	TCMP1H1		==	TCMP1H.1
   493       2027 C        	TCMP1H0		==	TCMP1H.0
   493 00000 0042 C        	TCMP1H0		==	TCMP1H.0
   494            C        
   495            C        ; TCMP1L:
   496       2028 C        TCMP1L	==    0x28:rpage 2
   496 00000 0012 C        TCMP1L	==    0x28:rpage 2
   497       2028 C        	TCMP1LS		==	TCMP1L.7
   497 00000 0742 C        	TCMP1LS		==	TCMP1L.7
   498       2028 C        	TCMP1L4		==	TCMP1L.4
   498 00000 0442 C        	TCMP1L4		==	TCMP1L.4
   499       2028 C        	TCMP1L3		==	TCMP1L.3
   499 00000 0342 C        	TCMP1L3		==	TCMP1L.3
   500       2028 C        	TCMP1L2		==	TCMP1L.2
   500 00000 0242 C        	TCMP1L2		==	TCMP1L.2
   501       2028 C        	TCMP1L1		==	TCMP1L.1
   501 00000 0142 C        	TCMP1L1		==	TCMP1L.1
   502       2028 C        	TCMP1L0		==	TCMP1L.0
   502 00000 0042 C        	TCMP1L0		==	TCMP1L.0
   503            C        
   504            C        ;Reserve 0x29~0x2A
   505            C        
   506            C        ; THCMP2H:
   507       202B C        THCMP2H	==    0x2B:rpage 2
   507 00000 0012 C        THCMP2H	==    0x2B:rpage 2
   508       202B C        	THCMP2HS	==	THCMP2H.7
   508 00000 0742 C        	THCMP2HS	==	THCMP2H.7
   509            C        
   510       202B C        	THCMP2H5	==	THCMP2H.5
   510 00000 0542 C        	THCMP2H5	==	THCMP2H.5
   511       202B C        	THCMP2H4	==	THCMP2H.4
   511 00000 0442 C        	THCMP2H4	==	THCMP2H.4
   512       202B C        	THCMP2H3	==	THCMP2H.3
   512 00000 0342 C        	THCMP2H3	==	THCMP2H.3
   513       202B C        	THCMP2H2	==	THCMP2H.2
   513 00000 0242 C        	THCMP2H2	==	THCMP2H.2
   514       202B C        	THCMP2H1	==	THCMP2H.1
   514 00000 0142 C        	THCMP2H1	==	THCMP2H.1
   515       202B C        	THCMP2H0	==	THCMP2H.0
   515 00000 0042 C        	THCMP2H0	==	THCMP2H.0
   516            C        
   517            C        ; TLCMP2H:
   518       202C C        TLCMP2H	==    0x2C:rpage 2
   518 00000 0012 C        TLCMP2H	==    0x2C:rpage 2
   519       202C C        	TLCMP2HS	==	TLCMP2H.7
   519 00000 0742 C        	TLCMP2HS	==	TLCMP2H.7
   520            C        
   521       202C C        	TLCMP2H5	==	TLCMP2H.5
   521 00000 0542 C        	TLCMP2H5	==	TLCMP2H.5
   522       202C C        	TLCMP2H4	==	TLCMP2H.4
   522 00000 0442 C        	TLCMP2H4	==	TLCMP2H.4
   523       202C C        	TLCMP2H3	==	TLCMP2H.3
   523 00000 0342 C        	TLCMP2H3	==	TLCMP2H.3
   524       202C C        	TLCMP2H2	==	TLCMP2H.2
   524 00000 0242 C        	TLCMP2H2	==	TLCMP2H.2
   525       202C C        	TLCMP2H1	==	TLCMP2H.1
   525 00000 0142 C        	TLCMP2H1	==	TLCMP2H.1
   526       202C C        	TLCMP2H0	==	TLCMP2H.0
   526 00000 0042 C        	TLCMP2H0	==	TLCMP2H.0
   527            C        
   528            C        ; THCMP2L:
   529       202D C        THCMP2L	==    0x2D:rpage 2
   529 00000 0012 C        THCMP2L	==    0x2D:rpage 2
   530       202D C        	THCMP2LS	==	THCMP2L.7
   530 00000 0742 C        	THCMP2LS	==	THCMP2L.7
   531            C        
   532       202D C        	THCMP2L5	==	THCMP2L.5
   532 00000 0542 C        	THCMP2L5	==	THCMP2L.5
   533       202D C        	THCMP2L4	==	THCMP2L.4
   533 00000 0442 C        	THCMP2L4	==	THCMP2L.4
   534       202D C        	THCMP2L3	==	THCMP2L.3
   534 00000 0342 C        	THCMP2L3	==	THCMP2L.3
   535       202D C        	THCMP2L2	==	THCMP2L.2
   535 00000 0242 C        	THCMP2L2	==	THCMP2L.2
   536       202D C        	THCMP2L1	==	THCMP2L.1
   536 00000 0142 C        	THCMP2L1	==	THCMP2L.1
   537       202D C        	THCMP2L0	==	THCMP2L.0
   537 00000 0042 C        	THCMP2L0	==	THCMP2L.0
   538            C        
   539            C        ; TLCMP2L:
   540       202E C        TLCMP2L	==    0x2E:rpage 2
   540 00000 0012 C        TLCMP2L	==    0x2E:rpage 2
   541       202E C        	TLCMP2LS	==	TLCMP2L.7
   541 00000 0742 C        	TLCMP2LS	==	TLCMP2L.7
   542            C        
   543       202E C        	TLCMP2L5	==	TLCMP2L.5
   543 00000 0542 C        	TLCMP2L5	==	TLCMP2L.5
   544       202E C        	TLCMP2L4	==	TLCMP2L.4
   544 00000 0442 C        	TLCMP2L4	==	TLCMP2L.4
   545       202E C        	TLCMP2L3	==	TLCMP2L.3
   545 00000 0342 C        	TLCMP2L3	==	TLCMP2L.3
   546       202E C        	TLCMP2L2	==	TLCMP2L.2
   546 00000 0242 C        	TLCMP2L2	==	TLCMP2L.2
   547       202E C        	TLCMP2L1	==	TLCMP2L.1
   547 00000 0142 C        	TLCMP2L1	==	TLCMP2L.1
   548       202E C        	TLCMP2L0	==	TLCMP2L.0
   548 00000 0042 C        	TLCMP2L0	==	TLCMP2L.0
   549            C        
   550            C        ;Reserve 0x2F~0x3B
   551            C        
   552            C        ; COBS4
   553       203C C        COBS4	==    0x3C:rpage 2
   553 00000 0012 C        COBS4	==    0x3C:rpage 2
   554            C        
   555            C        ; COBS5
   556       203D C        COBS5	==    0x3D:rpage 2
   556 00000 0012 C        COBS5	==    0x3D:rpage 2
   557            C        
   558            C        ; COBS6
   559       203E C        COBS6	==    0x3E:rpage 2
   559 00000 0012 C        COBS6	==    0x3E:rpage 2
   560            C        
   561            C        ; COBS7
   562       203F C        COBS7	==    0x3F:rpage 2
   562 00000 0012 C        COBS7	==    0x3F:rpage 2
   563            C        
   564            C        ; MULMOD:
   565       2040 C        MULMOD	==    0x40:rpage 2
   565 00000 0012 C        MULMOD	==    0x40:rpage 2
   566       2040 C        	PROD16		==	MULMOD.4
   566 00000 0442 C        	PROD16		==	MULMOD.4
   567       2040 C        	MACEN		==	MULMOD.3
   567 00000 0342 C        	MACEN		==	MULMOD.3
   568       2040 C        	MACM		==	MULMOD.2
   568 00000 0242 C        	MACM		==	MULMOD.2
   569       2040 C        	SMCAND		==	MULMOD.1
   569 00000 0142 C        	SMCAND		==	MULMOD.1
   570       2040 C        	SMIER		==	MULMOD.0
   570 00000 0042 C        	SMIER		==	MULMOD.0
   571            C        
   572            C        ; PRODH:
   573       2041 C        PRODH	==    0x41:rpage 2
   573 00000 0012 C        PRODH	==    0x41:rpage 2
   574            C        
   575            C        ; PRODL:
   576       2042 C        PRODL	==    0x42:rpage 2
   576 00000 0012 C        PRODL	==    0x42:rpage 2
   577            C        
   578            C        ; SFR7:
   579       2043 C        SFR7	==    0x43:rpage 2
   579 00000 0012 C        SFR7	==    0x43:rpage 2
   580       2043 C        	TM4SF	== SFR7.3
   580 00000 0342 C        	TM4SF	== SFR7.3
   581       2043 C        	TM3SF	== SFR7.2
   581 00000 0242 C        	TM3SF	== SFR7.2
   582       2043 C        	TM2SF	== SFR7.1
   582 00000 0142 C        	TM2SF	== SFR7.1
   583       2043 C        	TM1SF	== SFR7.0
   583 00000 0042 C        	TM1SF	== SFR7.0
   584            C        
   585            C        ;Reserve 0x44
   586            C        
   587            C        ; IMR7:
   588       2045 C        IMR7	==    0x45:rpage 2
   588 00000 0012 C        IMR7	==    0x45:rpage 2
   589       2045 C        	TM4IE	== IMR7.3
   589 00000 0342 C        	TM4IE	== IMR7.3
   590       2045 C        	TM3IE	== IMR7.2
   590 00000 0242 C        	TM3IE	== IMR7.2
   591       2045 C        	TM2IE	== IMR7.1
   591 00000 0142 C        	TM2IE	== IMR7.1
   592       2045 C        	TM1IE	== IMR7.0
   592 00000 0042 C        	TM1IE	== IMR7.0
   593            C        
   594            C        ;Reserve 0x46
   595            C        
   596            C        ; LOCKPR:Lock Page Number Register
   597       2047 C        LOCKPR	==	  0x47:rpage 2
   597 00000 0012 C        LOCKPR	==	  0x47:rpage 2
   598            C        
   599            C        ; LOCKPR:Lock Page Number Register
   600       2048 C        LOCKCR	==	  0x48:rpage 2
   600 00000 0012 C        LOCKCR	==	  0x48:rpage 2
   601       2048 C        	LOCKEN	== LOCKCR.7
   601 00000 0742 C        	LOCKEN	== LOCKCR.7
   602            C        
   603            C        ; ICEMR3:ICE Monitor Register 3
   604       2049 C        ICEMR3	==    0x49:rpage 2
   604 00000 0012 C        ICEMR3	==    0x49:rpage 2
   605            C        
   606            C        ; ICEMR2:ICE Monitor Register 2
   607       204A C        ICEMR2	==    0x4A:rpage 2
   607 00000 0012 C        ICEMR2	==    0x4A:rpage 2
   608            C        
   609            C        ; ICEMR1:ICE Monitor Register 1
   610       204B C        ICEMR1	==    0x4B:rpage 2
   610 00000 0012 C        ICEMR1	==    0x4B:rpage 2
   611            C        
   612            C        ; ICEACK:ICE Monitor ACK egister
   613       204C C        ICEACK	==    0x4C:rpage 2
   613 00000 0012 C        ICEACK	==    0x4C:rpage 2
   614            C        
   615            C        ; ICEBUF:ICE Monitor Buffer Register
   616       204D C        ICEBUF	==    0x4D:rpage 2
   616 00000 0012 C        ICEBUF	==    0x4D:rpage 2
   617            C        
   618            C        
   619            C        ;======================================================
   620            C        ;      BANK 3 Registers                                
   621            C        ;======================================================
   622            C        
   623            C        ; EIOPWMPE0
   624       2005 C        EIOPWMPE0	==    0x05:rpage 3
   624 00000 0013 C        EIOPWMPE0	==    0x05:rpage 3
   625            C        
   626            C        ; EOPWMPE0
   627       2006 C        EOPWMPE0	==    0x06:rpage 3
   627 00000 0013 C        EOPWMPE0	==    0x06:rpage 3
   628            C        
   629            C        ; EIOPHAPE
   630       2007 C        EIOPHAPE	==    0x07:rpage 3
   630 00000 0013 C        EIOPHAPE	==    0x07:rpage 3
   631            C        
   632            C        ;Reserve 0x08
   633            C        
   634            C        ; T5CRH
   635       2009 C        T5CRH		==    0x09:rpage 3
   635 00000 0013 C        T5CRH		==    0x09:rpage 3
   636            C        
   637            C        ; T5CRL
   638       200A C        T5CRL		==    0x0A:rpage 3
   638 00000 0013 C        T5CRL		==    0x0A:rpage 3
   639            C        
   640            C        ; T6CRH
   641       200B C        T6CRH		==    0x0B:rpage 3
   641 00000 0013 C        T6CRH		==    0x0B:rpage 3
   642            C        
   643            C        ; T6CRL
   644       200C C        T6CRL		==    0x0C:rpage 3
   644 00000 0013 C        T6CRL		==    0x0C:rpage 3
   645            C        
   646            C        ; PWMCR1H
   647       200D C        PWMCR1H		==    0x0D:rpage 3
   647 00000 0013 C        PWMCR1H		==    0x0D:rpage 3
   648            C        
   649            C        ; PWMCR1L
   650       200E C        PWMCR1L		==    0x0E:rpage 3
   650 00000 0013 C        PWMCR1L		==    0x0E:rpage 3
   651            C        
   652            C        ; PWMCR2H
   653       200F C        PWMCR2H		==    0x0F:rpage 3
   653 00000 0013 C        PWMCR2H		==    0x0F:rpage 3
   654            C        
   655            C        ; PWMCR2L
   656       2010 C        PWMCR2L		==    0x10:rpage 3
   656 00000 0013 C        PWMCR2L		==    0x10:rpage 3
   657            C        
   658            C        ; T5OPMS
   659       2011 C        T5OPMS		==    0x11:rpage 3
   659 00000 0013 C        T5OPMS		==    0x11:rpage 3
   660            C        
   661            C        ; T6OPMS
   662       2012 C        T6OPMS		==    0x12:rpage 3
   662 00000 0013 C        T6OPMS		==    0x12:rpage 3
   663            C        
   664            C        ; ASPWM
   665       2013 C        ASPWM		==    0x13:rpage 3
   665 00000 0013 C        ASPWM		==    0x13:rpage 3
   666            C        
   667            C        ; LVPWM
   668       2014 C        LVPWM		==    0x14:rpage 3
   668 00000 0013 C        LVPWM		==    0x14:rpage 3
   669            C        
   670            C        ; SLPWM
   671       2015 C        SLPWM		==    0x15:rpage 3
   671 00000 0013 C        SLPWM		==    0x15:rpage 3
   672            C        
   673            C        ; COPH
   674       2016 C        COPH		==    0x16:rpage 3
   674 00000 0013 C        COPH		==    0x16:rpage 3
   675            C        
   676            C        ; COPL
   677       2017 C        COPL		==    0x17:rpage 3
   677 00000 0013 C        COPL		==    0x17:rpage 3
   678            C        
   679            C        ; MCOPH
   680       2018 C        MCOPH		==    0x18:rpage 3
   680 00000 0013 C        MCOPH		==    0x18:rpage 3
   681            C        
   682            C        ; MCOPL
   683       2019 C        MCOP		==    0x19:rpage 3
   683 00000 0013 C        MCOP		==    0x19:rpage 3
   684            C        
   685            C        ; T5DECR
   686       201A C        T5DECR		==    0x1A:rpage 3
   686 00000 0013 C        T5DECR		==    0x1A:rpage 3
   687            C        
   688            C        ; T5DEB
   689       201B C        T5DEB		==    0x1B:rpage 3
   689 00000 0013 C        T5DEB		==    0x1B:rpage 3
   690            C        
   691            C        ; HACRH
   692       201C C        HACRH		==    0x1C:rpage 3
   692 00000 0013 C        HACRH		==    0x1C:rpage 3
   693            C        
   694            C        ; HACRL
   695       201D C        HACRL		==    0x1D:rpage 3
   695 00000 0013 C        HACRL		==    0x1D:rpage 3
   696            C        
   697            C        ; BRKCR1H
   698       201E C        BRKCR1H		==    0x1E:rpage 3
   698 00000 0013 C        BRKCR1H		==    0x1E:rpage 3
   699            C        
   700            C        ; BRKCR1L
   701       201F C        BRKCR1L		==    0x1F:rpage 3
   701 00000 0013 C        BRKCR1L		==    0x1F:rpage 3
   702            C        
   703            C        ; BRKCR2H
   704       2020 C        BRKCR2H		==    0x20:rpage 3
   704 00000 0013 C        BRKCR2H		==    0x20:rpage 3
   705            C        
   706            C        ; BRKCR2L
   707       2021 C        BRKCR2L		==    0x21:rpage 3
   707 00000 0013 C        BRKCR2L		==    0x21:rpage 3
   708            C        
   709            C        ; TRADCR
   710       2022 C        TRADCR		==    0x22:rpage 3
   710 00000 0013 C        TRADCR		==    0x22:rpage 3
   711            C        
   712            C        ; TSF1H
   713       2023 C        TSF1H		==    0x23:rpage 3
   713 00000 0013 C        TSF1H		==    0x23:rpage 3
   714            C        
   715            C        ; TSF1L
   716       2024 C        TSF1L		==    0x24:rpage 3
   716 00000 0013 C        TSF1L		==    0x24:rpage 3
   717            C        
   718            C        ; SETM1H
   719       2025 C        SETM1H		==    0x25:rpage 3
   719 00000 0013 C        SETM1H		==    0x25:rpage 3
   720       2025 C        	IEHC		==	SETM1H.7
   720 00000 0743 C        	IEHC		==	SETM1H.7
   721       2025 C        	MTRS		==	SETM1H.6
   721 00000 0643 C        	MTRS		==	SETM1H.6
   722       2025 C        	COIDS		==	SETM1H.3
   722 00000 0343 C        	COIDS		==	SETM1H.3
   723       2025 C        	BRKFS		==	SETM1H.2
   723 00000 0243 C        	BRKFS		==	SETM1H.2
   724            C        
   725            C        ; SETM1L
   726       2026 C        SETM1L		==    0x26:rpage 3
   726 00000 0013 C        SETM1L		==    0x26:rpage 3
   727       2026 C        	T6MTS		==	SETM1L.3
   727 00000 0343 C        	T6MTS		==	SETM1L.3
   728       2026 C        	T6RS		==	SETM1L.2
   728 00000 0243 C        	T6RS		==	SETM1L.2
   729       2026 C        	T5MTS		==	SETM1L.1
   729 00000 0143 C        	T5MTS		==	SETM1L.1
   730       2026 C        	T5RS		==	SETM1L.0
   730 00000 0043 C        	T5RS		==	SETM1L.0
   731            C        
   732            C        
   733            C        ; RSTM1H
   734       2027 C        RSTM1H		==    0x27:rpage 3
   734 00000 0013 C        RSTM1H		==    0x27:rpage 3
   735       2027 C        	MTRR		==	RSTM1H.6
   735 00000 0643 C        	MTRR		==	RSTM1H.6
   736       2027 C        	COIDR		==	RSTM1H.3
   736 00000 0343 C        	COIDR		==	RSTM1H.3
   737       2027 C        	BRKFR		==	RSTM1H.2
   737 00000 0243 C        	BRKFR		==	RSTM1H.2
   738            C        
   739            C        ; RSTM1L
   740       2028 C        RSTM1L		==    0x28:rpage 3
   740 00000 0013 C        RSTM1L		==    0x28:rpage 3
   741       2028 C        	T6MTR		==	RSTM1L.3
   741 00000 0343 C        	T6MTR		==	RSTM1L.3
   742       2028 C        	T6RR		==	RSTM1L.2
   742 00000 0243 C        	T6RR		==	RSTM1L.2
   743       2028 C        	T5MTR		==	RSTM1L.1
   743 00000 0143 C        	T5MTR		==	RSTM1L.1
   744       2028 C        	T5RR		==	RSTM1L.0
   744 00000 0043 C        	T5RR		==	RSTM1L.0
   745            C        
   746            C        ;Reserve 0x29~0x2A
   747            C        
   748            C        ; T5VALH
   749       202B C        T5VALH		==    0x2B:rpage 3
   749 00000 0013 C        T5VALH		==    0x2B:rpage 3
   750            C        
   751            C        ; T5VALL
   752       202C C        T5VALL		==    0x2C:rpage 3
   752 00000 0013 C        T5VALL		==    0x2C:rpage 3
   753            C        
   754            C        ; T5PDH
   755       202D C        T5PDH		==    0x2D:rpage 3
   755 00000 0013 C        T5PDH		==    0x2D:rpage 3
   756            C        
   757            C        ; T5PDL
   758       202E C        T5PDL		==    0x2E:rpage 3
   758 00000 0013 C        T5PDL		==    0x2E:rpage 3
   759            C        
   760            C        ; T5ACDH
   761       202F C        T5ACDH		==    0x2F:rpage 3
   761 00000 0013 C        T5ACDH		==    0x2F:rpage 3
   762            C        
   763            C        ; T5ACDL
   764       2030 C        T5ACDL		==    0x30:rpage 3
   764 00000 0013 C        T5ACDL		==    0x30:rpage 3
   765            C        
   766            C        ; T5BCDH
   767       2031 C        T5BCDH		==    0x31:rpage 3
   767 00000 0013 C        T5BCDH		==    0x31:rpage 3
   768            C        
   769            C        ; T5BCDL
   770       2032 C        T5BCDL		==    0x32:rpage 3
   770 00000 0013 C        T5BCDL		==    0x32:rpage 3
   771            C        
   772            C        ; T5CCDH
   773       2033 C        T5CCDH		==    0x33:rpage 3
   773 00000 0013 C        T5CCDH		==    0x33:rpage 3
   774            C        
   775            C        ; T5CCDL
   776       2034 C        T5CCDL		==    0x34:rpage 3
   776 00000 0013 C        T5CCDL		==    0x34:rpage 3
   777            C        
   778            C        ; T5ACDMH
   779       2035 C        T5ACDMH		==    0x35:rpage 3
   779 00000 0013 C        T5ACDMH		==    0x35:rpage 3
   780            C        
   781            C        ; T5ACDML
   782       2036 C        T5ACDML		==    0x36:rpage 3
   782 00000 0013 C        T5ACDML		==    0x36:rpage 3
   783            C        
   784            C        ; T5BCDMH
   785       2037 C        T5BCDMH		==    0x37:rpage 3
   785 00000 0013 C        T5BCDMH		==    0x37:rpage 3
   786            C        
   787            C        ; T5BCDML
   788       2038 C        T5BCDML		==    0x38:rpage 3
   788 00000 0013 C        T5BCDML		==    0x38:rpage 3
   789            C        
   790            C        ; T5CCDMH
   791       2039 C        T5CCDMH		==    0x39:rpage 3
   791 00000 0013 C        T5CCDMH		==    0x39:rpage 3
   792            C        
   793            C        ; T5CCDML
   794       203A C        T5CCDML		==    0x3A:rpage 3
   794 00000 0013 C        T5CCDML		==    0x3A:rpage 3
   795            C        
   796            C        ; TRAD1VH
   797       203B C        TRAD1VH		==    0x3B:rpage 3
   797 00000 0013 C        TRAD1VH		==    0x3B:rpage 3
   798            C        
   799            C        ; TRAD1VL
   800       203C C        TRAD1VL		==    0x3C:rpage 3
   800 00000 0013 C        TRAD1VL		==    0x3C:rpage 3
   801            C        
   802            C        ; TRAD2VH
   803       203D C        TRAD2VH		==    0x3D:rpage 3
   803 00000 0013 C        TRAD2VH		==    0x3D:rpage 3
   804            C        
   805            C        ; TRAD2VL
   806       203E C        TRAD2VL		==    0x3E:rpage 3
   806 00000 0013 C        TRAD2VL		==    0x3E:rpage 3
   807            C        
   808            C        ; T6VALH
   809       203F C        T6VALH		==    0x3F:rpage 3
   809 00000 0013 C        T6VALH		==    0x3F:rpage 3
   810            C        
   811            C        ; T6VALL
   812       2040 C        T6VALL		==    0x40:rpage 3
   812 00000 0013 C        T6VALL		==    0x40:rpage 3
   813            C        
   814            C        ; T6PDH
   815       2041 C        T6PDH		==    0x41:rpage 3
   815 00000 0013 C        T6PDH		==    0x41:rpage 3
   816            C        
   817            C        ; T6PDL
   818       2042 C        T6PDL		==    0x42:rpage 3
   818 00000 0013 C        T6PDL		==    0x42:rpage 3
   819            C        
   820            C        ; T6CDH
   821       2043 C        T6CDH		==    0x43:rpage 3
   821 00000 0013 C        T6CDH		==    0x43:rpage 3
   822            C        
   823            C        ; T6CDL
   824       2044 C        T6CDL		==    0x44:rpage 3
   824 00000 0013 C        T6CDL		==    0x44:rpage 3
   825            C        
   826            C        ; T6CDMH
   827       2045 C        T6CDMH		==    0x45:rpage 3
   827 00000 0013 C        T6CDMH		==    0x45:rpage 3
   828            C        
   829            C        ; T6CDML
   830       2046 C        T6CDML		==    0x46:rpage 3
   830 00000 0013 C        T6CDML		==    0x46:rpage 3
   831            C        
   832            C        ;Reserve 0x47~0x4B
   833            C        
   834            C        ; SFR9
   835       204C C        SFR9		==    0x4C:rpage 3
   835 00000 0013 C        SFR9		==    0x4C:rpage 3
   836       204C C        	T5PDMSF		==	SFR9.7
   836 00000 0743 C        	T5PDMSF		==	SFR9.7
   837       204C C        	T5ONEMSF	==	SFR9.6
   837 00000 0643 C        	T5ONEMSF	==	SFR9.6
   838       204C C        	IRT5CSF		==	SFR9.5
   838 00000 0543 C        	IRT5CSF		==	SFR9.5
   839       204C C        	IRT5BSF		==	SFR9.4
   839 00000 0443 C        	IRT5BSF		==	SFR9.4
   840       204C C        	IRT5ASF		==	SFR9.3
   840 00000 0343 C        	IRT5ASF		==	SFR9.3
   841       204C C        	IFT5CSF		==	SFR9.2
   841 00000 0243 C        	IFT5CSF		==	SFR9.2
   842       204C C        	IFT5BSF		==	SFR9.1
   842 00000 0143 C        	IFT5BSF		==	SFR9.1
   843       204C C        	IFT5ASF		==	SFR9.0
   843 00000 0043 C        	IFT5ASF		==	SFR9.0
   844            C        
   845            C        ; SFR10
   846       204D C        SFR10		==    0x4D:rpage 3
   846 00000 0013 C        SFR10		==    0x4D:rpage 3
   847       204D C        	MTRSF		==	SFR10.7
   847 00000 0743 C        	MTRSF		==	SFR10.7
   848       204D C        	BRKSF		==	SFR10.6
   848 00000 0643 C        	BRKSF		==	SFR10.6
   849       204D C        	HAEGSF		==	SFR10.5
   849 00000 0543 C        	HAEGSF		==	SFR10.5
   850       204D C        	HACOSF		==	SFR10.4
   850 00000 0443 C        	HACOSF		==	SFR10.4
   851       204D C        	HAERRSF		==	SFR10.3
   851 00000 0343 C        	HAERRSF		==	SFR10.3
   852       204D C        	T6PDMSF		==	SFR10.2
   852 00000 0243 C        	T6PDMSF		==	SFR10.2
   853       204D C        	IRT6SF		==	SFR10.1
   853 00000 0143 C        	IRT6SF		==	SFR10.1
   854       204D C        	IFT6SF		==	SFR10.0
   854 00000 0043 C        	IFT6SF		==	SFR10.0
   855            C        
   856            C        ; IMR9
   857       204E C        IMR9		==    0x4E:rpage 3
   857 00000 0013 C        IMR9		==    0x4E:rpage 3
   858       204E C        	T5PDMIE		==	IMR9.7
   858 00000 0743 C        	T5PDMIE		==	IMR9.7
   859       204E C        	T5ONEMIE	==	IMR9.6
   859 00000 0643 C        	T5ONEMIE	==	IMR9.6
   860       204E C        	IRT5CIE		==	IMR9.5
   860 00000 0543 C        	IRT5CIE		==	IMR9.5
   861       204E C        	IRT5BIE		==	IMR9.4
   861 00000 0443 C        	IRT5BIE		==	IMR9.4
   862       204E C        	IRT5AIE		==	IMR9.3
   862 00000 0343 C        	IRT5AIE		==	IMR9.3
   863       204E C        	IFT5CIE		==	IMR9.2
   863 00000 0243 C        	IFT5CIE		==	IMR9.2
   864       204E C        	IFT5BIE		==	IMR9.1
   864 00000 0143 C        	IFT5BIE		==	IMR9.1
   865       204E C        	IFT5AIE		==	IMR9.0
   865 00000 0043 C        	IFT5AIE		==	IMR9.0
   866            C        
   867            C        ; IMR10
   868       204F C        IMR10		==    0x4F:rpage 3
   868 00000 0013 C        IMR10		==    0x4F:rpage 3
   869       204F C        	MTRIE		==	IMR10.7
   869 00000 0743 C        	MTRIE		==	IMR10.7
   870       204F C        	BRKIE		==	IMR10.6
   870 00000 0643 C        	BRKIE		==	IMR10.6
   871       204F C        	HAEGIE		==	IMR10.5
   871 00000 0543 C        	HAEGIE		==	IMR10.5
   872       204F C        	HACOIE		==	IMR10.4
   872 00000 0443 C        	HACOIE		==	IMR10.4
   873       204F C        	HAERRIE		==	IMR10.3
   873 00000 0343 C        	HAERRIE		==	IMR10.3
   874       204F C        	T6PDMIE		==	IMR10.2
   874 00000 0243 C        	T6PDMIE		==	IMR10.2
   875       204F C        	IRT6IE		==	IMR10.1
   875 00000 0143 C        	IRT6IE		==	IMR10.1
   876       204F C        	IFT6IE		==	IMR10.0
   876 00000 0043 C        	IFT6IE		==	IMR10.0
   877            C        
   878            C        
   879            C        
    23                     
    24                     ;================ General Purpose Register ===============
    25       0050          	TMP50	== 0x50
    26       0051          	TMP51	== 0x51
    27       0052          	TMP52	== 0x52
    28       0053          	TMP53	== 0x53
    29       0054          	TMP54	== 0x54
    30       0055          	TMP55	== 0x55
    31       0056          	TMP56	== 0x56
    32       0057          	TMP57	== 0x57
    33       0058          	TMP58	== 0x58
    34       0059          	TMP59	== 0x59
    35       005A          	TMP5A	== 0x5A
    36       005B          	TMP5B	== 0x5B
    37       005C          	TMP5C	== 0x5C
    38       005D          	TMP5D	== 0x5D
    39       005E          	TMP5E	== 0x5E
    40       005F          	TMP5F	== 0x5F
    41                     	
    42       005A          	INST	== 0x5A
    43                     
    44       0080          	TMP80	== 0x80
    45       0081          	TMP81	== 0x81
    46       0082          	TMP82	== 0x82
    47       0083          	TMP83	== 0x83
    48       0084          	TMP84	== 0x84
    49       0085          	TMP85	== 0x85
    50       0086          	TMP86	== 0x86
    51       0087          	TMP87	== 0x87
    52       0088          	TMP88	== 0x88
    53       0089          	TMP89	== 0x89
    54       008A          	TMP8A	== 0x8A
    55       008B          	TMP8B	== 0x8B
    56       008C          	TMP8C	== 0x8C
    57       008D          	TMP8D	== 0x8D
    58       008E          	TMP8E	== 0x8E
    59       008F          	TMP8F	== 0x8F
    60                     
    61                     ;================ Interrupt Vector Table =================
    62                     	ORG 	0x0000
    63 00000 5050          	JMP 	MAIN
    64                     	ORG		0x0002
    65 00002 506E          	JMP 	JMP_FAIL	;0x0002
    66 00003 506E          	JMP 	JMP_FAIL	;0x0003
    67 00004 506E          	JMP 	JMP_FAIL	;0x0004
    68 00005 506E          	JMP 	JMP_FAIL	;0x0005
    69 00006 506E          	JMP 	JMP_FAIL	;0x0006
    70 00007 506E          	JMP 	JMP_FAIL	;0x0007
    71 00008 506E          	JMP 	JMP_FAIL	;0x0008
    72 00009 506E          	JMP 	JMP_FAIL	;0x0009
    73 0000A 506E          	JMP 	JMP_FAIL	;0x000A
    74 0000B 506E          	JMP 	JMP_FAIL	;0x000B
    75 0000C 506E          	JMP 	JMP_FAIL	;0x000C
    76 0000D 506E          	JMP 	JMP_FAIL	;0x000D
    77 0000E 506E          	JMP 	JMP_FAIL	;0x000E
    78 0000F 506E          	JMP 	JMP_FAIL	;0x000F
    79 00010 506E          	JMP 	JMP_FAIL	;0x0010
    80 00011 506E          	JMP 	JMP_FAIL	;0x0011
    81 00012 506E          	JMP 	JMP_FAIL	;0x0012
    82 00013 506E          	JMP 	JMP_FAIL	;0x0013
    83 00014 506E          	JMP 	JMP_FAIL	;0x0014
    84 00015 506E          	JMP 	JMP_FAIL	;0x0015
    85 00016 506E          	JMP 	JMP_FAIL	;0x0016
    86 00017 506E          	JMP 	JMP_FAIL	;0x0017
    87 00018 506E          	JMP 	JMP_FAIL	;0x0018
    88 00019 506E          	JMP 	JMP_FAIL	;0x0019
    89 0001A 506E          	JMP 	JMP_FAIL	;0x001A
    90 0001B 506E          	JMP 	JMP_FAIL	;0x001B
    91 0001C 506E          	JMP 	JMP_FAIL	;0x001C
    92 0001D 506E          	JMP 	JMP_FAIL	;0x001D
    93 0001E 506E          	JMP 	JMP_FAIL	;0x001E
    94 0001F 506E          	JMP 	JMP_FAIL	;0x001F
    95 00020 506E          	JMP 	JMP_FAIL	;0x0020
    96 00021 506E          	JMP 	JMP_FAIL	;0x0021
    97 00022 506E          	JMP 	JMP_FAIL	;0x0022
    98 00023 506E          	JMP 	JMP_FAIL	;0x0023
    99 00024 506E          	JMP 	JMP_FAIL	;0x0024
   100 00025 506E          	JMP 	JMP_FAIL	;0x0025
   101 00026 506E          	JMP 	JMP_FAIL	;0x0026
   102 00027 506E          	JMP 	JMP_FAIL	;0x0027
   103 00028 506E          	JMP 	JMP_FAIL	;0x0028
   104 00029 506E          	JMP 	JMP_FAIL	;0x0029
   105 0002A 506E          	JMP 	JMP_FAIL	;0x002A
   106 0002B 506E          	JMP 	JMP_FAIL	;0x002B
   107 0002C 506E          	JMP 	JMP_FAIL	;0x002C
   108 0002D 506E          	JMP 	JMP_FAIL	;0x002D
   109 0002E 506E          	JMP 	JMP_FAIL	;0x002E
   110 0002F 506E          	JMP 	JMP_FAIL	;0x002F
   111 00030 506E          	JMP 	JMP_FAIL	;0x0030
   112 00031 506E          	JMP 	JMP_FAIL	;0x0031
   113 00032 506E          	JMP 	JMP_FAIL	;0x0032
   114 00033 506E          	JMP 	JMP_FAIL	;0x0033
   115 00034 506E          	JMP 	JMP_FAIL	;0x0034
   116 00035 506E          	JMP 	JMP_FAIL	;0x0035
   117 00036 506E          	JMP 	JMP_FAIL	;0x0036
   118 00037 506E          	JMP 	JMP_FAIL	;0x0037
   119 00038 506E          	JMP 	JMP_FAIL	;0x0038
   120 00039 506E          	JMP 	JMP_FAIL	;0x0039
   121 0003A 506E          	JMP 	JMP_FAIL	;0x003A
   122 0003B 506E          	JMP 	JMP_FAIL	;0x003B
   123 0003C 506E          	JMP 	JMP_FAIL	;0x003C
   124 0003D 506E          	JMP 	JMP_FAIL	;0x003D
   125 0003E 506E          	JMP 	JMP_FAIL	;0x003E
   126 0003F 506E          	JMP 	JMP_FAIL	;0x003F
   127 00040 506E          	JMP 	JMP_FAIL	;0x0040
   128 00041 506E          	JMP 	JMP_FAIL	;0x0041
   129 00042 506E          	JMP 	JMP_FAIL	;0x0042
   130 00043 506E          	JMP 	JMP_FAIL	;0x0043
   131 00044 506E          	JMP 	JMP_FAIL	;0x0044
   132 00045 506E          	JMP 	JMP_FAIL	;0x0045
   133 00046 506E          	JMP 	JMP_FAIL	;0x0046
   134 00047 506E          	JMP 	JMP_FAIL	;0x0047
   135 00048 506E          	JMP 	JMP_FAIL	;0x0048
   136 00049 506E          	JMP 	JMP_FAIL	;0x0049
   137 0004A 506E          	JMP 	JMP_FAIL	;0x004A
   138 0004B 506E          	JMP 	JMP_FAIL	;0x004B
   139 0004C 506E          	JMP 	JMP_FAIL	;0x004C
   140 0004D 506E          	JMP 	JMP_FAIL	;0x004D
   141 0004E 506E          	JMP 	JMP_FAIL	;0x004E
   142 0004F 506E          	JMP 	JMP_FAIL	;0x004F
   143                     ;==================== Main Function ======================
   144                     	ORG		0x0050
   145 00050               MAIN:
   146                     	;CALL 	EFT_INIT
   147 00050 4080          	CALL	SYS_INIT
   148 00051 0003          	SLEP
   149 00052 0003          	SLEP
   150 00053 0003          	SLEP
   151 00054 0003          	SLEP
   152 00055 408B          	CALL	GPIO_INIT
   153                     	;CALL	WAKE_INIT
   154                     	;CALL	KEY_DEBOUNCE
   155 00056 40BB          	CALL	RAM_SHA_INIT
   156 00057 40C5          	CALL	RAM_IND_INIT
   157                     	;CALL	TEST_EEPROM (Do not loop forever)
   158                     	;CALL	TEST_FLASH (Do not loop forever)
   159                     
   160                     ;====================== BACK_GROUND_LOOP ================
   161 00058               BACK_GROUND_LOOP:
   162 00058 7A00          	SBANK	0
   163 00059 40E4          	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
   164 0005A 448E          	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
   165 0005B 45BD          	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
   166 0005C 4685          	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
   167 0005D 46BD          	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
   168 0005E 46BE          	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
   169 0005F 46FD          	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
   170 00060 473C          	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
   171 00061 4763          	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
   172 00062 476E          	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
   173 00063 47B7          	CALL	TEST_READ_ROM			;TBRD, TBRDA
   174 00064 4F00          	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
   175 00065 4F17          	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
   176 00066 4F2E          	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
   177 00067 4F45          	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
   178 00068               	JMP_PASS:
   179 00068 0085          	BTG		P5,0
   180 00069 2105          	BC		P5,1
   181 0006A 2A05          	BS		P5,2
   182 0006B 2305          	BC		P5,3
   183 0006C 2C05          	BS		P5,4	
   184 0006D 5058          	JMP		BACK_GROUND_LOOP
   185                     
   186                     ;====================== ERROR_LOOP =====================
   187 0006E               JMP_FAIL:
   188 0006E 7A00          	SBANK	0
   189 0006F 2905          	BS		P5,1
   190 00070 2205          	BC		P5,2
   191 00071 2B05          	BS		P5,3
   192 00072 2405          	BC		P5,4
   193 00073 506E          	JMP		JMP_FAIL
   194 00074               RAM_FAIL:
   195 00074 7A00          	SBANK	0
   196 00075 2905          	BS		P5,1
   197 00076 2205          	BC		P5,2
   198 00077 2B05          	BS		P5,3
   199 00078 2405          	BC		P5,4
   200 00079 5074          	JMP		RAM_FAIL
   201 0007A               INS_FAIL:
   202 0007A 7A00          	SBANK	0
   203 0007B 2905          	BS		P5,1
   204 0007C 2205          	BC		P5,2
   205 0007D 2B05          	BS		P5,3
   206 0007E 2405          	BC		P5,4	
   207 0007F 507A          	JMP		INS_FAIL
   208                     
   209                     ;================== PEIPHERAL_INITIAL ==================
   210                     	;-------------------------------;
   211 00080               	SYS_INIT:	
   212 00080 7A00          		SBANK	0
   213                     		;BS		CPUS	;FSYS=FM
   214 00081 260E          		BC		IDLE	;SLEEP_MODE
   215 00082 6000          		MOV		A,@0x00
   216 00083 0114          		MOV		SFR1,A
   217 00084 0117          		MOV		SFR4,A
   218 00085 0119          		MOV		SFR6,A
   219 00086 7A03          		SBANK	3
   220 00087 6000          		MOV		A,@0x00
   221 00088 014C          		MOV		SFR9,A
   222 00089 014D          		MOV		SFR10,A
   223 0008A 0012          		RET
   224                     	;-------------------------------;		
   225 0008B               	GPIO_INIT:
   226 0008B 7A00          		SBANK	0
   227 0008C 0305          		CLR		P5
   228 0008D 60E0          		MOV		A,@0xE0
   229 0008E 010B          		MOV		IOCR5,A
   230 0008F 60FF          		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
   231 00090 0105          		MOV		P5,A
   232 00091 0012          		RET
   233                     
   234                     	;-------------------------------;
   235 00092               	WAKE_INIT:
   236 00092 7A00          		SBANK	0
   237 00093 3B03          		JBS		P			; PWR ON reset(1)/RST pin reset(0)
   238 00094 5097          		JMP		$+3
   239 00095 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   240 00096 0003          		SLEP
   241 00097 3B03          		JBS		P
   242 00098 509B          		JMP		$+3
   243 00099 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   244 0009A 0003          		SLEP
   245 0009B 3B03          		JBS		P
   246 0009C 509F          		JMP		$+3
   247 0009D 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   248 0009E 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   249 0009F 0003          		SLEP		
   250 000A0 0012          		RET
   251                     	;-------------------------------;
   252 000A1               	KEY_DEBOUNCE:
   253 000A1 3D05          		JBS		P5,5		; Push, or not
   254 000A2 50A4          		JMP		$+2
   255 000A3 50A1          		JMP		$-2
   256 000A4 3D05          		JBS		P5,5
   257 000A5 50A1          		JMP		KEY_DEBOUNCE
   258 000A6 3D05          		JBS		P5,5
   259 000A7 50A1          		JMP		KEY_DEBOUNCE
   260 000A8 3D05          		JBS		P5,5
   261 000A9 50A1          		JMP		KEY_DEBOUNCE
   262 000AA 3D05          		JBS		P5,5
   263 000AB 50A1          		JMP		KEY_DEBOUNCE
   264 000AC 3D05          		JBS		P5,5
   265 000AD 50A1          		JMP		KEY_DEBOUNCE
   266 000AE 3D05          		JBS		P5,5
   267 000AF 50A1          		JMP		KEY_DEBOUNCE
   268 000B0 3D05          		JBS		P5,5
   269 000B1 50A1          		JMP		KEY_DEBOUNCE
   270 000B2 3D05          		JBS		P5,5
   271 000B3 50A1          		JMP		KEY_DEBOUNCE
   272 000B4 3D05          		JBS		P5,5
   273 000B5 50A1          		JMP		KEY_DEBOUNCE
   274 000B6 3D05          		JBS		P5,5
   275 000B7 50B5          		JMP		$-2
   276 000B8 60FF          		MOV		A,@0xFF		; Turn Off all LED
   277 000B9 0105          		MOV		P5,A		
   278 000BA 0012          		RET
   279                     	;-------------------------------;
   280 000BB               	RAM_SHA_INIT:
   281 000BB 6050          		MOV		A,@0x50
   282 000BC 0104          		MOV		RSR,A
   283 000BD 60FF          		MOV		A,@0xFF		;RAM_SHA_LOOP
   284 000BE 0100          		MOV		IAR,A
   285 000BF 1504          		INC		RSR
   286 000C0 6080          		MOV		A,@0x80
   287 000C1 0C04          		XOR		A,RSR
   288 000C2 3A03          		JBS		Z
   289 000C3 50BD          		JMP		$-6
   290                     		
   291                     		;MOV		A,@0x50
   292                     		;MOV		RSR,A
   293                     		;MOV		A,@0xFF
   294                     		;XOR		A,IAR
   295                     		;JBS		Z
   296                     		;JMP		RAM_FAIL
   297                     		;INC		RSR
   298                     		;MOV		A,@0x80
   299                     		;XOR		A,RSR
   300                     		;JBS		Z
   301                     		;JMP		$-8
   302 000C4 0012          		RET
   303                     	;-------------------------------;		
   304 000C5               	RAM_IND_INIT:
   305 000C5 6080          		MOV		A,@0x80
   306 000C6 0104          		MOV		RSR,A
   307 000C7               		RAM_IND_LOOP_0:
   308 000C7 7A40          		GBANK	0
   309 000C8 60FF          		MOV		A,@0xFF
   310 000C9 0100          		MOV		IAR,A
   311 000CA 1504          		INC		RSR
   312 000CB 6000          		MOV		A,@0x00
   313 000CC 0C04          		XOR		A,RSR
   314 000CD 3A03          		JBS		Z
   315 000CE 50C7          		JMP		RAM_IND_LOOP_0
   316 000CF 6080          		MOV		A,@0x80
   317 000D0 0104          		MOV		RSR,A
   318 000D1               		RAM_IND_LOOP_1:
   319 000D1 7A41          		GBANK	1
   320 000D2 60FF          		MOV		A,@0xFF
   321 000D3 0100          		MOV		IAR,A
   322 000D4 1504          		INC		RSR
   323 000D5 6000          		MOV		A,@0x00
   324 000D6 0C04          		XOR		A,RSR
   325 000D7 3A03          		JBS		Z
   326 000D8 50D1          		JMP		RAM_IND_LOOP_1
   327 000D9 6080          		MOV		A,@0x80
   328 000DA 0104          		MOV		RSR,A
   329 000DB 0012          		RET
   330                     	;-------------------------------;
   331 000DC               	STATUS_CLEAR:
   332 000DC 6000          		MOV		A,@0x00
   333 000DD 0103          		MOV		STATUS,A
   334 000DE 0012          		RET
   335                     	;-------------------------------;
   336 000DF               	INST_XOR_JUDGE:
   337 000DF 3A03          		JBS		Z			; IF(Z=1) BRANCH
   338 000E0 507A          		JMP		INS_FAIL
   339 000E1 3603          		JBC		N			; IF(N=0) BRANCH
   340 000E2 507A          		JMP		INS_FAIL
   341 000E3 0012          		RET
   342                     ;================== Jmp Sub Function ==================
   343 000E4               	TEST_INST_ARITHEMATIC:
   344 000E4               		INST_DAA:			;-------Instruction Test => DAA , C?
   345 000E4 6001          			MOV		A,@0x01
   346 000E5 015A          			MOV		INST,A
   347 000E6 40DC          			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
   348 000E7 60AA          			MOV		A,@0xAA
   349 000E8 0001          			DAA
   350 000E9 3803          			JBS		C			; Check C = 1?
   351 000EA 507A          			JMP	INS_FAIL
   352 000EB 3103          			JBC		DC			; Check DC = 0?
   353 000EC 507A          			JMP	INS_FAIL
   354 000ED 3203          			JBC		Z			; Check Z = 0?
   355 000EE 507A          			JMP	INS_FAIL
   356 000EF 3503          			JBC		OV			; Check OV = 0?
   357 000F0 507A          			JMP	INS_FAIL
   358 000F1 3603          			JBC		N			; Check N = 0?
   359 000F2 507A          			JMP	INS_FAIL
   360 000F3 6C10          			XOR		A,@0x10		; Check Result ?
   361 000F4 3A03          			JBS		Z			; Check Z = 1?
   362 000F5 507A          			JMP	INS_FAIL
   363 000F6 3603          			JBC		N			; Check N = 0?
   364 000F7 507A          			JMP	INS_FAIL
   365 000F8 40DC          			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
   366 000F9 6080          			MOV		A,@0x80
   367 000FA 0150          			MOV		0x50,A		; [0x50] = 0x80
   368 000FB 607F          			MOV		A,@0x7F		; 
   369 000FC 0E50          			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
   370 000FD 0001          			DAA
   371 000FE 3803          			JBS		C			; Check C = 1?
   372 000FF 507A          			JMP	INS_FAIL
   373 00100 3103          			JBC		DC			; Check DC = 0?
   374 00101 507A          			JMP	INS_FAIL
   375 00102 3203          			JBC		Z			; Check Z = 0?
   376 00103 507A          			JMP	INS_FAIL
   377 00104 3503          			JBC		OV			; Check OV = 0?
   378 00105 507A          			JMP	INS_FAIL
   379 00106 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   380 00107 507A          			JMP	INS_FAIL
   381 00108 2203          			BC		Z
   382 00109 2603          			BC		N
   383 0010A 6C65          			XOR		A,@0x65		; Check Result ?
   384 0010B 3A03          			JBS		Z			; Check Z = 1?
   385 0010C 507A          			JMP	INS_FAIL
   386 0010D 3603          			JBC		N			; Check N = 0?
   387 0010E 507A          			JMP	INS_FAIL
   388 0010F 0000          			NOP
   389 00110 6000          			MOV		A,@0x00
   390 00111 0103          			MOV		STATUS,A
   391                     			;-------DAA(0x00)=66
   392 00112 2803          			BS		C
   393 00113 6080          			MOV		A,@0x80
   394 00114 0150          			MOV		0x50,A		; [0x50] = 0x80
   395 00115 607F          			MOV		A,@0x7F		; 
   396 00116 7E50          			ADC		A,0x50		; A = 0x7F + 0x80
   397 00117 0001          			DAA
   398 00118 3803          			JBS		C			; Check C = 1? 	/ By ADC
   399 00119 507A          			JMP	INS_FAIL
   400 0011A 3903          			JBS		DC			; Check DC = 1? / By ADC
   401 0011B 507A          			JMP	INS_FAIL
   402 0011C 3A03          			JBS		Z			; Check Z = 1? 	/ By ADC
   403 0011D 507A          			JMP	INS_FAIL
   404 0011E 3503          			JBC		OV			; Check OV = 0?
   405 0011F 507A          			JMP	INS_FAIL
   406 00120 3603          			JBC		N			; Check N = 0?
   407 00121 507A          			JMP	INS_FAIL
   408 00122 6C66          			XOR		A,@0x66		; Check Result ?
   409 00123 3A03          			JBS		Z			; Check Z = 1?
   410 00124 507A          			JMP	INS_FAIL
   411 00125 3603          			JBC		N			; Check N = 0?
   412 00126 507A          			JMP	INS_FAIL
   413 00127 6000          			MOV		A,@0x00
   414 00128 0103          			MOV		STATUS,A
   415                     			;-------DAA(0x80)=E6
   416 00129 60FF          			MOV		A,@0xFF
   417 0012A 0150          			MOV		0x50,A		; [0x50] = 0xFF
   418 0012B 607F          			MOV		A,@0x7F		; 
   419 0012C 0450          			SUB		A,0x50		; A = 0xFF - 0x7F
   420 0012D 0001          			DAA
   421 0012E 3803          			JBS		C			; Check C = 1? 	/ By SUB
   422 0012F 507A          			JMP	INS_FAIL
   423 00130 3903          			JBS		DC			; Check DC = 1? / By SUB
   424 00131 507A          			JMP	INS_FAIL
   425 00132 3203          			JBC		Z			; Check Z = 0?
   426 00133 507A          			JMP	INS_FAIL
   427 00134 3503          			JBC		OV			; Check OV = 0?
   428 00135 507A          			JMP	INS_FAIL
   429 00136 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   430 00137 507A          			JMP	INS_FAIL
   431 00138 2203          			BC		Z
   432 00139 2603          			BC		N
   433 0013A 6CE6          			XOR		A,@0xE6		; Check Result ?
   434 0013B 3A03          			JBS		Z			; Check Z = 1?
   435 0013C 507A          			JMP	INS_FAIL
   436 0013D 3603          			JBC		N			; Check N = 0?
   437 0013E 507A          			JMP	INS_FAIL
   438 0013F               		INST_CLA:			;-------Instruction Test => CLA
   439 0013F 6008          			MOV		A,@0x08
   440 00140 015A          			MOV		INST,A
   441 00141 605A          			MOV		A,@0x5A
   442 00142 6C5A          			XOR		A,@0x5A		; Check Result ?
   443 00143 3A03          			JBS		Z			; Check Z = 1?
   444 00144 507A          			JMP	INS_FAIL
   445 00145 3603          			JBC		N			; Check N = 0?
   446 00146 507A          			JMP	INS_FAIL
   447 00147 605A          			MOV		A,@0x5A
   448 00148 0200          			CLRA
   449 00149 3A03          			JBS		Z			; Check Z = 1?
   450 0014A 507A          			JMP	INS_FAIL
   451 0014B 2203          			BC		Z
   452 0014C 6C00          			XOR		A,@0x00		; Check Result ?
   453 0014D 3A03          			JBS		Z			; Check Z = 1?
   454 0014E 507A          			JMP	INS_FAIL
   455 0014F 3603          			JBC		N			; Check N = 0?
   456 00150 507A          			JMP	INS_FAIL
   457 00151               		INST_CLR:			;-------Instruction Test => CLR
   458 00151 6009          			MOV		A,@0x09
   459 00152 015A          			MOV		INST,A
   460 00153 60AA          			MOV		A,@0xAA
   461 00154 0150          			MOV		0x50,A
   462 00155 1050          			MOV		A,0x50
   463 00156 6CAA          			XOR		A,@0xAA		; Check Result ?
   464 00157 3A03          			JBS		Z			; Check Z = 1?
   465 00158 507A          			JMP	INS_FAIL
   466 00159 3603          			JBC		N			; Check N = 0?
   467 0015A 507A          			JMP	INS_FAIL
   468 0015B 0350          			CLR		0x50
   469 0015C 3A03          			JBS		Z			; Check Z = 1?
   470 0015D 507A          			JMP	INS_FAIL
   471 0015E 2203          			BC		Z
   472 0015F 1050          			MOV		A,0x50
   473 00160 6C00          			XOR		A,@0x00		; Check Result ?
   474 00161 3A03          			JBS		Z			; Check Z = 1?
   475 00162 507A          			JMP	INS_FAIL
   476 00163 3603          			JBC		N			; Check N = 0?
   477 00164 507A          			JMP	INS_FAIL
   478 00165               		INST_SUB_A_R:		;-------Instruction Test => SUB A,R
   479 00165 600A          			MOV		A,@0x0A
   480 00166 015A          			MOV		INST,A
   481 00167 6000          			MOV		A,@0x00
   482 00168 0103          			MOV		STATUS,A
   483 00169 6002          			MOV		A,@0x02		; SUB(2-1)=1
   484 0016A 0150          			MOV		0x50,A		; [0x50] = 0x02
   485 0016B 6001          			MOV		A,@0x01
   486 0016C 0450          			SUB		A,0x50		; A = [0x50] - A
   487 0016D 3803          			JBS		C			; Check C = 1? 	; Resulet is Positive
   488 0016E 507A          			JMP	INS_FAIL
   489 0016F 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   490 00170 507A          			JMP	INS_FAIL
   491 00171 3203          			JBC		Z			; Check Z = 0?
   492 00172 507A          			JMP	INS_FAIL
   493 00173 3503          			JBC		OV			; Check OV = 0?
   494 00174 507A          			JMP	INS_FAIL
   495 00175 3603          			JBC		N			; Check N = 0?
   496 00176 507A          			JMP	INS_FAIL
   497 00177 2203          			BC		Z
   498 00178 6C01          			XOR		A,@0x01		; Check Result ?
   499 00179 3A03          			JBS		Z			; Check Z = 1?
   500 0017A 507A          			JMP	INS_FAIL
   501 0017B 3603          			JBC		N			; Check N = 0?
   502 0017C 507A          			JMP	INS_FAIL
   503 0017D 6000          			MOV		A,@0x00
   504 0017E 0103          			MOV		STATUS,A
   505 0017F 6002          			MOV		A,@0x02		; SUB(2-2)=0
   506 00180 0150          			MOV		0x50,A		; [0x50] = 0x02
   507 00181 6002          			MOV		A,@0x02
   508 00182 0450          			SUB		A,0x50		; A = [0x50] - A
   509 00183 3803          			JBS		C			; Check C = 1?	; Result is Positive
   510 00184 507A          			JMP	INS_FAIL
   511 00185 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   512 00186 507A          			JMP	INS_FAIL
   513 00187 3A03          			JBS		Z			; Check Z = 1?	; Result is Zero
   514 00188 507A          			JMP	INS_FAIL
   515 00189 3503          			JBC		OV			; Check OV = 0?
   516 0018A 507A          			JMP	INS_FAIL
   517 0018B 3603          			JBC		N			; Check N = 0?
   518 0018C 507A          			JMP	INS_FAIL
   519 0018D 2203          			BC		Z
   520 0018E 6C00          			XOR		A,@0x00		; Check Result ?
   521 0018F 3A03          			JBS		Z			; Check Z = 1?
   522 00190 507A          			JMP	INS_FAIL
   523 00191 3603          			JBC		N			; Check N = 0?
   524 00192 507A          			JMP	INS_FAIL
   525 00193 6000          			MOV		A,@0x00
   526 00194 0103          			MOV		STATUS,A
   527 00195 60FF          			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
   528 00196 0150          			MOV		0x50,A		; [0x50] = 0xFF
   529 00197 607F          			MOV		A,@0x7F
   530 00198 0450          			SUB		A,0x50		; A = [0x50] - A
   531 00199 3803          			JBS		C			; Check C = 1?
   532 0019A 507A          			JMP	INS_FAIL
   533 0019B 3903          			JBS		DC			; Check DC = 1?
   534 0019C 507A          			JMP	INS_FAIL
   535 0019D 3203          			JBC		Z			; Check Z = 0?
   536 0019E 507A          			JMP	INS_FAIL
   537 0019F 3503          			JBC		OV			; Check OV = 0?
   538 001A0 507A          			JMP	INS_FAIL
   539 001A1 3E03          			JBS		N			; Check N = 1?
   540 001A2 507A          			JMP	INS_FAIL
   541 001A3 2203          			BC		Z
   542 001A4 2603          			BC		N
   543 001A5 6C80          			XOR		A,@0x80		; Check Result ?
   544 001A6 3A03          			JBS		Z			; Check Z = 1?
   545 001A7 507A          			JMP	INS_FAIL
   546 001A8 3603          			JBC		N			; Check N = 0?
   547 001A9 507A          			JMP	INS_FAIL
   548 001AA 6000          			MOV		A,@0x00
   549 001AB 0103          			MOV		STATUS,A
   550 001AC 6080          			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
   551 001AD 0150          			MOV		0x50,A		; [0x50] = 0x80
   552 001AE 607F          			MOV		A,@0x7F
   553 001AF 0450          			SUB		A,0x50		; A = [0x50] - A
   554 001B0 3803          			JBS		C			; Check C = 1?
   555 001B1 507A          			JMP	INS_FAIL
   556 001B2 3103          			JBC		DC			; Check DC = 0?
   557 001B3 507A          			JMP	INS_FAIL
   558 001B4 3203          			JBC		Z			; Check Z = 0?
   559 001B5 507A          			JMP	INS_FAIL
   560 001B6 3D03          			JBS		OV			; Check OV = 1?
   561 001B7 507A          			JMP	INS_FAIL
   562 001B8 3603          			JBC		N			; Check N = 0?
   563 001B9 507A          			JMP	INS_FAIL
   564 001BA 2203          			BC		Z
   565 001BB 2603          			BC		N
   566 001BC 6C01          			XOR		A,@0x01		; Check Result ?
   567 001BD 3A03          			JBS		Z			; Check Z = 1?
   568 001BE 507A          			JMP	INS_FAIL
   569 001BF 3603          			JBC		N			; Check N = 0?
   570 001C0 507A          			JMP	INS_FAIL
   571 001C1 6000          			MOV		A,@0x00
   572 001C2 0103          			MOV		STATUS,A
   573 001C3 6001          			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
   574 001C4 0150          			MOV		0x50,A		; [0x50] = 0x01
   575 001C5 6003          			MOV		A,@0x03
   576 001C6 0450          			SUB		A,0x50		; A = [0x50] - A
   577 001C7 3003          			JBC		C			; Check C = 0?
   578 001C8 507A          			JMP	INS_FAIL
   579 001C9 3103          			JBC		DC			; Check DC = 0?
   580 001CA 507A          			JMP	INS_FAIL
   581 001CB 3203          			JBC		Z			; Check Z = 0?
   582 001CC 507A          			JMP	INS_FAIL
   583 001CD 3503          			JBC		OV			; Check OV = 0?
   584 001CE 507A          			JMP	INS_FAIL
   585 001CF 3E03          			JBS		N			; Check N = 1?
   586 001D0 507A          			JMP	INS_FAIL
   587 001D1 2203          			BC		Z
   588 001D2 2603          			BC		N
   589 001D3 6CFE          			XOR		A,@0xFE		; Check Result ?
   590 001D4 3A03          			JBS		Z			; Check Z = 1?
   591 001D5 507A          			JMP	INS_FAIL
   592 001D6 3603          			JBC		N			; Check N = 0?
   593 001D7 507A          			JMP	INS_FAIL
   594 001D8               		INST_SUB_R_A:		;-------Instruction Test => SUB R,A
   595 001D8 600B          			MOV		A,@0x0B
   596 001D9 015A          			MOV		INST,A
   597 001DA 6000          			MOV		A,@0x00
   598 001DB 0103          			MOV		STATUS,A
   599 001DC 6002          			MOV		A,@0x02
   600 001DD 0150          			MOV		0x50,A		; [0x50] = 0x02
   601 001DE 6001          			MOV		A,@0x01
   602 001DF 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   603 001E0 1003          			MOV		A,STATUS
   604 001E1 6C1B          			XOR		A,@0x1B		; for non reset
   605                     			;;XOR		A,@0x13
   606 001E2 40DF          			CALL	INST_XOR_JUDGE
   607 001E3 2203          			BC		Z
   608 001E4 2603          			BC		N
   609 001E5 1050          			MOV		A,0x50
   610 001E6 6C01          			XOR		A,@0x01		; Check Result ?
   611 001E7 40DF          			CALL	INST_XOR_JUDGE
   612 001E8 6000          			MOV		A,@0x00
   613 001E9 0103          			MOV		STATUS,A
   614 001EA 6002          			MOV		A,@0x02
   615 001EB 0150          			MOV		0x50,A		; [0x50] = 0x02
   616 001EC 6002          			MOV		A,@0x02
   617 001ED 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x02
   618 001EE 1003          			MOV		A,STATUS
   619 001EF 6C1F          			XOR		A,@0x1F		; for nono reset
   620                     			;;XOR		A,@0x17
   621 001F0 40DF          			CALL	INST_XOR_JUDGE
   622 001F1 2203          			BC		Z
   623 001F2 2603          			BC		N
   624 001F3 1050          			MOV		A,0x50
   625 001F4 6C00          			XOR		A,@0x00		; Check Result ?
   626 001F5 3A03          			JBS		Z			; Check Z = 1?
   627 001F6 507A          			JMP	INS_FAIL
   628 001F7 3603          			JBC		N			; Check N = 0?
   629 001F8 507A          			JMP	INS_FAIL
   630 001F9 6000          			MOV		A,@0x00
   631 001FA 0103          			MOV		STATUS,A
   632 001FB 6080          			MOV		A,@0x80
   633 001FC 0150          			MOV		0x50,A		; [0x50] = 0x80
   634 001FD 6001          			MOV		A,@0x01
   635 001FE 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   636 001FF 1003          			MOV		A,STATUS
   637 00200 6C39          			XOR		A,@0x39	;; for non reset
   638                     			;;XOR		A,@0x31
   639 00201 40DF          			CALL	INST_XOR_JUDGE
   640 00202 2203          			BC		Z
   641 00203 2603          			BC		N
   642 00204 1050          			MOV		A,0x50
   643 00205 6C7F          			XOR		A,@0x7F		; Check Result ?
   644 00206 40DF          			CALL	INST_XOR_JUDGE
   645 00207               		INST_SUB_A_K:		;-------Instruction Test => SUB A,k
   646 00207 6030          			MOV		A,@0x30
   647 00208 015A          			MOV		INST,A
   648 00209 40DC          			CALL	STATUS_CLEAR
   649 0020A 60FF          			MOV		A,@0xFF		; 0xFF-0xFF
   650 0020B 74FF          			SUB		A,@0xFF		; A = 0xFF - 0xFF
   651 0020C 3803          			JBS		C			; Check C = 1?
   652 0020D 507A          			JMP	INS_FAIL
   653 0020E 3903          			JBS		DC			; Check DC = 1?
   654 0020F 507A          			JMP	INS_FAIL
   655 00210 3A03          			JBS		Z			; Check Z = 1?
   656 00211 507A          			JMP	INS_FAIL
   657 00212 3503          			JBC		OV			; Check OV = 0?
   658 00213 507A          			JMP	INS_FAIL
   659 00214 3603          			JBC		N			; Check N = 0?
   660 00215 507A          			JMP	INS_FAIL
   661 00216 6C00          			XOR		A,@0x00		; Check Result ?
   662 00217 40DF          			CALL	INST_XOR_JUDGE
   663 00218 40DC          			CALL	STATUS_CLEAR
   664 00219 607F          			MOV		A,@0x7F		; 0x00-0x7F
   665 0021A 7400          			SUB		A,@0x00		; A = 0x00 - 0x7F
   666 0021B 3003          			JBC		C			; Check C = 0?
   667 0021C 507A          			JMP	INS_FAIL
   668 0021D 3103          			JBC		DC			; Check DC = 0?
   669 0021E 507A          			JMP	INS_FAIL
   670 0021F 3203          			JBC		Z			; Check Z = 0?
   671 00220 507A          			JMP	INS_FAIL
   672 00221 3503          			JBC		OV			; Check OV = 0?
   673 00222 507A          			JMP	INS_FAIL
   674 00223 3E03          			JBS		N			; Check N = 1?
   675 00224 507A          			JMP	INS_FAIL
   676 00225 6C81          			XOR		A,@0x81		; Check Result ?
   677 00226 40DF          			CALL	INST_XOR_JUDGE
   678 00227 40DC          			CALL	STATUS_CLEAR
   679 00228 6001          			MOV		A,@0x01		; 0x80-0x01
   680 00229 7480          			SUB		A,@0x80		; A = 0x80 - 0x01
   681 0022A 3803          			JBS		C			; Check C = 1?
   682 0022B 507A          			JMP	INS_FAIL
   683 0022C 3103          			JBC		DC			; Check DC = 0?
   684 0022D 507A          			JMP	INS_FAIL
   685 0022E 3203          			JBC		Z			; Check Z = 0?
   686 0022F 507A          			JMP	INS_FAIL
   687 00230 3D03          			JBS		OV			; Check OV = 1?
   688 00231 507A          			JMP	INS_FAIL
   689 00232 3603          			JBC		N			; Check N = 0?
   690 00233 507A          			JMP	INS_FAIL
   691 00234 6C7F          			XOR		A,@0x7F		; Check Result ?
   692 00235 40DF          			CALL	INST_XOR_JUDGE
   693 00236               		INST_SUBB_A_R:		;-------Instruction Test => SUBB A,R
   694 00236 6031          			MOV		A,@0x31
   695 00237 015A          			MOV		INST,A
   696 00238 40DC          			CALL	STATUS_CLEAR
   697 00239 2003          			BC		C			; B = 1
   698 0023A 6000          			MOV		A,@0x00		;0x00-0xF
   699 0023B 0150          			MOV		0x50,A		; [0x50] = 0x00
   700 0023C 60FF          			MOV		A,@0xFF		; A = 0x01
   701 0023D 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   702 0023E 3003          			JBC		C			; Check C = 0?
   703 0023F 507A          			JMP	INS_FAIL
   704 00240 3103          			JBC		DC			; Check DC = 0?
   705 00241 507A          			JMP	INS_FAIL
   706 00242 3A03          			JBS		Z			; Check Z = 1?
   707 00243 507A          			JMP	INS_FAIL
   708 00244 3503          			JBC		OV			; Check OV = 0?
   709 00245 507A          			JMP	INS_FAIL
   710 00246 3603          			JBC		N			; Check N = 0?
   711 00247 507A          			JMP	INS_FAIL
   712 00248 6C00          			XOR		A,@0x00		; Check Result ?
   713 00249 40DF          			CALL	INST_XOR_JUDGE	
   714 0024A 40DC          			CALL	STATUS_CLEAR
   715 0024B 2003          			BC		C			; B = 1
   716 0024C 6000          			MOV		A,@0x00		; 0x00-0x7F
   717 0024D 0150          			MOV		0x50,A		; [0x50] = 0x00
   718 0024E 607F          			MOV		A,@0x7F		; A = 0x01
   719 0024F 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   720 00250 3003          			JBC		C			; Check C = 0?
   721 00251 507A          			JMP	INS_FAIL
   722 00252 3103          			JBC		DC			; Check DC = 0?
   723 00253 507A          			JMP	INS_FAIL
   724 00254 3203          			JBC		Z			; Check Z = 0?
   725 00255 507A          			JMP	INS_FAIL
   726 00256 3503          			JBC		OV			; Check OV = 0?
   727 00257 507A          			JMP	INS_FAIL
   728 00258 3E03          			JBS		N			; Check N = 1?
   729 00259 507A          			JMP	INS_FAIL
   730 0025A 6C80          			XOR		A,@0x80		; Check Result ?
   731 0025B 40DF          			CALL	INST_XOR_JUDGE
   732 0025C 40DC          			CALL	STATUS_CLEAR
   733 0025D 2003          			BC		C			; B = 1
   734 0025E 6080          			MOV		A,@0x80		; 0x80-0x01
   735 0025F 0150          			MOV		0x50,A		; [0x50] = 0x80
   736 00260 6001          			MOV		A,@0x01		; A = 0x01
   737 00261 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   738 00262 3803          			JBS		C			; Check C = 1?
   739 00263 507A          			JMP	INS_FAIL
   740 00264 3103          			JBC		DC			; Check DC = 0?
   741 00265 507A          			JMP	INS_FAIL
   742 00266 3203          			JBC		Z			; Check Z = 0?
   743 00267 507A          			JMP	INS_FAIL
   744 00268 3D03          			JBS		OV			; Check OV = 1?
   745 00269 507A          			JMP	INS_FAIL
   746 0026A 3603          			JBC		N			; Check N = 0?
   747 0026B 507A          			JMP	INS_FAIL
   748 0026C 6C7E          			XOR		A,@0x7E		; Check Result ?
   749 0026D 40DF          			CALL	INST_XOR_JUDGE
   750 0026E               		INST_SUBB_R_A:			;-------Instruction Test => SUBB R,A
   751 0026E 6032          			MOV		A,@0x32
   752 0026F 015A          			MOV		INST,A
   753 00270 40DC          			CALL	STATUS_CLEAR
   754 00271 2003          			BC		C			; B = 1
   755 00272 6000          			MOV		A,@0x00		; 0x00-0xFF
   756 00273 0150          			MOV		0x50,A		; [0x50] = 0x00
   757 00274 60FF          			MOV		A,@0xFF
   758 00275 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
   759 00276 1003          			MOV		A,STATUS
   760 00277 6C1C          			XOR		A,@0x1C		; Check Status ?
   761                     			;;XOR		A,@0x14		; Check Status ?
   762 00278 40DF          			CALL	INST_XOR_JUDGE
   763 00279 1050          			MOV		A,0x50
   764 0027A 6C00          			XOR		A,@0x00		; Check Result ?
   765 0027B 40DF          			CALL	INST_XOR_JUDGE
   766 0027C 40DC          			CALL	STATUS_CLEAR
   767 0027D 2003          			BC		C			; B = 1
   768 0027E 6000          			MOV		A,@0x00		; 0x00-0x7F
   769 0027F 0150          			MOV		0x50,A		; [0x50] = 0x00
   770 00280 607F          			MOV		A,@0x7F
   771 00281 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
   772 00282 1003          			MOV		A,STATUS
   773 00283 6C58          			XOR		A,@0x58		; Check Status ?
   774                     			;;XOR		A,@0x50		; Check Status ?
   775 00284 40DF          			CALL	INST_XOR_JUDGE
   776 00285 1050          			MOV		A,0x50
   777 00286 6C80          			XOR		A,@0x80		; Check Result ?
   778 00287 40DF          			CALL	INST_XOR_JUDGE
   779 00288 40DC          			CALL	STATUS_CLEAR
   780 00289 2003          			BC		C			; B = 1
   781 0028A 6080          			MOV		A,@0x80		; ,0x80-0x01
   782 0028B 0150          			MOV		0x50,A		; [0x50] = 0x80
   783 0028C 6001          			MOV		A,@0x01
   784 0028D 7950          			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
   785 0028E 1003          			MOV		A,STATUS
   786 0028F 6C39          			XOR		A,@0x39		; Check Status ?
   787                     			;;XOR		A,@0x31		; Check Status ?
   788 00290 40DF          			CALL	INST_XOR_JUDGE
   789 00291 1050          			MOV		A,0x50
   790 00292 6C7E          			XOR		A,@0x7E		; Check Result ?
   791 00293 40DF          			CALL	INST_XOR_JUDGE
   792                     
   793 00294               		INST_DECA:			;-------Instruction Test => DECA R
   794 00294 600C          			MOV		A,@0x0C
   795 00295 015A          			MOV		INST,A
   796 00296 6000          			MOV		A,@0x00
   797 00297 0103          			MOV		STATUS,A
   798 00298 6020          			MOV		A,@0x20		; 0x20-1
   799 00299 0150          			MOV		0x50,A		; [0x50] = 0x20
   800 0029A 0650          			DECA	0x50		; A = [0x50] - 1
   801 0029B 3803          			JBS		C			; Check C = 1?	; Result is Positive
   802 0029C 507A          			JMP	INS_FAIL
   803 0029D 3103          			JBC		DC			; Check DC = 0?
   804 0029E 507A          			JMP	INS_FAIL
   805 0029F 3203          			JBC		Z			; Check Z = 0?
   806 002A0 507A          			JMP	INS_FAIL
   807 002A1 3503          			JBC		OV			; Check OV = 0?
   808 002A2 507A          			JMP	INS_FAIL
   809 002A3 3603          			JBC		N			; Check N = 0?
   810 002A4 507A          			JMP	INS_FAIL
   811 002A5 6C1F          			XOR		A,@0x1F		; Check Result ?
   812 002A6 3A03          			JBS		Z			; Check Z = 1?
   813 002A7 507A          			JMP	INS_FAIL
   814 002A8 3603          			JBC		N			; Check N = 0?
   815 002A9 507A          			JMP	INS_FAIL
   816 002AA 6000          			MOV		A,@0x00
   817 002AB 0103          			MOV		STATUS,A
   818 002AC 6001          			MOV		A,@0x01		; 0x01-1
   819 002AD 0150          			MOV		0x50,A		; [0x50] = 0x01
   820 002AE 0650          			DECA	0x50		; A = [0x50] - 1
   821 002AF 3803          			JBS		C			; Check C = 1?	; Result is Positive
   822 002B0 507A          			JMP	INS_FAIL
   823 002B1 3903          			JBS		DC			; Check DC = 1?
   824 002B2 507A          			JMP	INS_FAIL
   825 002B3 3A03          			JBS		Z			; Check Z = 1?
   826 002B4 507A          			JMP	INS_FAIL
   827 002B5 3503          			JBC		OV			; Check OV = 0?
   828 002B6 507A          			JMP	INS_FAIL
   829 002B7 3603          			JBC		N			; Check N = 0?
   830 002B8 507A          			JMP	INS_FAIL
   831 002B9 2203          			BC		Z
   832 002BA 6C00          			XOR		A,@0x00		; Check Result ?
   833 002BB 3A03          			JBS		Z			; Check Z = 1?
   834 002BC 507A          			JMP	INS_FAIL
   835 002BD 3603          			JBC		N			; Check N = 0?
   836 002BE 507A          			JMP	INS_FAIL
   837 002BF 6000          			MOV		A,@0x00
   838 002C0 0103          			MOV		STATUS,A
   839 002C1 6000          			MOV		A,@0x00		; 0x00-1
   840 002C2 0150          			MOV		0x50,A		; [0x50] = 0x00
   841 002C3 0650          			DECA	0x50		; A = [0x50] - 1
   842 002C4 3003          			JBC		C			; Check C = 0?
   843 002C5 507A          			JMP	INS_FAIL
   844 002C6 3103          			JBC		DC			; Check DC = 0?
   845 002C7 507A          			JMP	INS_FAIL
   846 002C8 3203          			JBC		Z			; Check Z = 0?
   847 002C9 507A          			JMP	INS_FAIL
   848 002CA 3503          			JBC		OV			; Check OV = 0?
   849 002CB 507A          			JMP	INS_FAIL
   850 002CC 3E03          			JBS		N			; Check N = 1?
   851 002CD 507A          			JMP	INS_FAIL
   852 002CE 2203          			BC		Z
   853 002CF 2603          			BC		N
   854 002D0 6CFF          			XOR		A,@0xFF		; Check Result ?
   855 002D1 3A03          			JBS		Z			; Check Z = 1?
   856 002D2 507A          			JMP	INS_FAIL
   857 002D3 3603          			JBC		N			; Check N = 0?
   858 002D4 507A          			JMP	INS_FAIL
   859 002D5 6000          			MOV		A,@0x00
   860 002D6 0103          			MOV		STATUS,A
   861 002D7 6080          			MOV		A,@0x80		; 0x80-1
   862 002D8 0150          			MOV		0x50,A		; [0x50] = 0x80
   863 002D9 0650          			DECA	0x50		; A = [0x50] - 1
   864 002DA 3803          			JBS		C			; Check C = 1?
   865 002DB 507A          			JMP	INS_FAIL
   866 002DC 3103          			JBC		DC			; Check DC = 0?
   867 002DD 507A          			JMP	INS_FAIL
   868 002DE 3203          			JBC		Z			; Check Z = 0?
   869 002DF 507A          			JMP	INS_FAIL
   870 002E0 3D03          			JBS		OV			; Check OV = 1?
   871 002E1 507A          			JMP	INS_FAIL
   872 002E2 3603          			JBC		N			; Check N = 0?
   873 002E3 507A          			JMP	INS_FAIL
   874 002E4 2203          			BC		Z
   875 002E5 2603          			BC		N
   876 002E6 6C7F          			XOR		A,@0x7F		; Check Result ?
   877 002E7 3A03          			JBS		Z			; Check Z = 1?
   878 002E8 507A          			JMP	INS_FAIL
   879 002E9 3603          			JBC		N			; Check N = 0?
   880 002EA 507A          			JMP	INS_FAIL
   881                     
   882                     
   883                     
   884 002EB               		INST_DEC:			;-------Instruction Test => DEC R
   885 002EB 600D          			MOV		A,@0x0D
   886 002EC 015A          			MOV		INST,A
   887 002ED 6000          			MOV		A,@0x00
   888 002EE 0103          			MOV		STATUS,A
   889 002EF 6020          			MOV		A,@0x20		; 0x20-1
   890 002F0 0150          			MOV		0x50,A		; [0x50] = 0x20
   891 002F1 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   892 002F2 1003          			MOV		A,STATUS
   893 002F3 6C19          			XOR		A,@0x19		; Check Status ? for non rest
   894                     			;;XOR		A,@0x11		; Check Status ?
   895 002F4 3A03          			JBS		Z			; Check Z = 1?
   896 002F5 507A          			JMP	INS_FAIL
   897 002F6 3603          			JBC		N			; Check N = 0?
   898 002F7 507A          			JMP	INS_FAIL
   899 002F8 2203          			BC		Z
   900 002F9 1050          			MOV		A,0x50
   901 002FA 6C1F          			XOR		A,@0x1F		; Check Result ?
   902 002FB 3A03          			JBS		Z			; Check Z = 1?
   903 002FC 507A          			JMP	INS_FAIL
   904 002FD 3603          			JBC		N			; Check N = 0?
   905 002FE 507A          			JMP	INS_FAIL
   906 002FF 6000          			MOV		A,@0x00
   907 00300 0103          			MOV		STATUS,A
   908 00301 6001          			MOV		A,@0x01		; 0x01-1
   909 00302 0150          			MOV		0x50,A		; [0x50] = 0x01
   910 00303 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   911 00304 1003          			MOV		A,STATUS
   912 00305 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
   913                     			;;XOR		A,@0x17		; Check Status ?
   914 00306 3A03          			JBS		Z			; Check Z = 1?
   915 00307 507A          			JMP	INS_FAIL
   916 00308 3603          			JBC		N			; Check N = 0?
   917 00309 507A          			JMP	INS_FAIL
   918 0030A 2203          			BC		Z
   919 0030B 1050          			MOV		A,0x50
   920 0030C 6C00          			XOR		A,@0x00		; Check Result ?
   921 0030D 3A03          			JBS		Z			; Check Z = 1?
   922 0030E 507A          			JMP	INS_FAIL
   923 0030F 3603          			JBC		N			; Check N = 0?
   924 00310 507A          			JMP	INS_FAIL
   925 00311 6000          			MOV		A,@0x00
   926 00312 0103          			MOV		STATUS,A
   927 00313 6000          			MOV		A,@0x00		; 0x00-1
   928 00314 0150          			MOV		0x50,A		; [0x50] = 0x00
   929 00315 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   930 00316 1003          			MOV		A,STATUS
   931 00317 6C58          			XOR		A,@0x58		; Check Status ? for non reset
   932                     			;;XOR		A,@0x50		; Check Status ?
   933 00318 3A03          			JBS		Z			; Check Z = 1?
   934 00319 507A          			JMP	INS_FAIL
   935 0031A 3603          			JBC		N			; Check N = 0?
   936 0031B 507A          			JMP	INS_FAIL
   937 0031C 2203          			BC		Z
   938 0031D 1050          			MOV		A,0x50
   939 0031E 6CFF          			XOR		A,@0xFF		; Check Result ?
   940 0031F 3A03          			JBS		Z			; Check Z = 1?
   941 00320 507A          			JMP	INS_FAIL
   942 00321 3603          			JBC		N			; Check N = 0?
   943 00322 507A          			JMP	INS_FAIL
   944 00323 6000          			MOV		A,@0x00
   945 00324 0103          			MOV		STATUS,A
   946 00325 6080          			MOV		A,@0x80		; 0x80-1
   947 00326 0150          			MOV		0x50,A		; [0x50] = 0x80
   948 00327 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   949 00328 1003          			MOV		A,STATUS
   950 00329 6C39          			XOR		A,@0x39		; Check Status ? for non reset
   951                     			;;XOR		A,@0x31		; Check Status ?
   952 0032A 3A03          			JBS		Z			; Check Z = 1?
   953 0032B 507A          			JMP	INS_FAIL
   954 0032C 3603          			JBC		N			; Check N = 0?
   955 0032D 507A          			JMP	INS_FAIL
   956 0032E 2203          			BC		Z
   957 0032F 1050          			MOV		A,0x50
   958 00330 6C7F          			XOR		A,@0x7F		; Check Result ?
   959 00331 3A03          			JBS		Z			; Check Z = 1?
   960 00332 507A          			JMP	INS_FAIL
   961 00333 3603          			JBC		N			; Check N = 0?
   962 00334 507A          			JMP	INS_FAIL
   963                     
   964 00335               		INST_ADD_A_R:		;-------Instruction Test => ADD A,R
   965 00335 6012          			MOV		A,@0x12
   966 00336 015A          			MOV		INST,A
   967 00337 40DC          			CALL	STATUS_CLEAR	; 0x80+0x7F
   968 00338 6080          			MOV		A,@0x80
   969 00339 0150          			MOV		0x50,A		; [0x50] = 0x80
   970 0033A 607F          			MOV		A,@0x7F		; 
   971 0033B 0E50          			ADD		A,0x50		; A = 0x7F + 0x80
   972 0033C 3003          			JBC		C			; Check C = 0?
   973 0033D 507A          			JMP	INS_FAIL
   974 0033E 3103          			JBC		DC			; Check DC = 0?
   975 0033F 507A          			JMP	INS_FAIL
   976 00340 3203          			JBC		Z			; Check Z = 0?
   977 00341 507A          			JMP	INS_FAIL
   978 00342 3503          			JBC		OV			; Check OV = 0?
   979 00343 507A          			JMP	INS_FAIL
   980 00344 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   981 00345 507A          			JMP	INS_FAIL
   982 00346 2203          			BC		Z
   983 00347 2603          			BC		N
   984 00348 6CFF          			XOR		A,@0xFF		; Check Result ?
   985 00349 3A03          			JBS		Z			; Check Z = 1?
   986 0034A 507A          			JMP	INS_FAIL
   987 0034B 3603          			JBC		N			; Check N = 0?
   988 0034C 507A          			JMP	INS_FAIL
   989 0034D 40DC          			CALL	STATUS_CLEAR	; 0xFF+0x01
   990 0034E 60FF          			MOV		A,@0xFF
   991 0034F 0150          			MOV		0x50,A		; [0x50] = 0xFF
   992 00350 6001          			MOV		A,@0x01		; 
   993 00351 0E50          			ADD		A,0x50		; A = 0x01 + 0xFF
   994 00352 3803          			JBS		C			; Check C = 1?
   995 00353 507A          			JMP	INS_FAIL
   996 00354 3903          			JBS		DC			; Check DC = 1?
   997 00355 507A          			JMP	INS_FAIL
   998 00356 3A03          			JBS		Z			; Check Z = 1?
   999 00357 507A          			JMP	INS_FAIL
  1000 00358 3503          			JBC		OV			; Check OV = 0?
  1001 00359 507A          			JMP	INS_FAIL
  1002 0035A 3603          			JBC		N			; Check N = 0?
  1003 0035B 507A          			JMP	INS_FAIL
  1004 0035C 2203          			BC		Z
  1005 0035D 2603          			BC		N
  1006 0035E 6C00          			XOR		A,@0x00		; Check Result ?
  1007 0035F 3A03          			JBS		Z			; Check Z = 1?
  1008 00360 507A          			JMP	INS_FAIL
  1009 00361 3603          			JBC		N			; Check N = 0?
  1010 00362 507A          			JMP	INS_FAIL
  1011 00363 40DC          			CALL	STATUS_CLEAR	; 0x7F+0x01
  1012 00364 607F          			MOV		A,@0x7F
  1013 00365 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1014 00366 6001          			MOV		A,@0x01		; 
  1015 00367 0E50          			ADD		A,0x50		; A = 0x01 + 0x7F
  1016 00368 3003          			JBC		C			; Check C = 0?
  1017 00369 507A          			JMP	INS_FAIL
  1018 0036A 3903          			JBS		DC			; Check DC = 1?
  1019 0036B 507A          			JMP	INS_FAIL
  1020 0036C 3203          			JBC		Z			; Check Z = 0?
  1021 0036D 507A          			JMP	INS_FAIL
  1022 0036E 3D03          			JBS		OV			; Check OV = 1?
  1023 0036F 507A          			JMP	INS_FAIL
  1024 00370 3E03          			JBS		N			; Check N = 1?
  1025 00371 507A          			JMP	INS_FAIL
  1026 00372 2203          			BC		Z
  1027 00373 2603          			BC		N
  1028 00374 6C80          			XOR		A,@0x80		; Check Result ?
  1029 00375 3A03          			JBS		Z			; Check Z = 1?
  1030 00376 507A          			JMP	INS_FAIL
  1031 00377 3603          			JBC		N			; Check N = 0?
  1032 00378 507A          			JMP	INS_FAIL
  1033 00379               		INST_ADD_R_A:		;-------Instruction Test => ADD R,A
  1034 00379 6013          			MOV		A,@0x13
  1035 0037A 015A          			MOV		INST,A
  1036 0037B 40DC          			CALL	STATUS_CLEAR	; 0x80+0x7F
  1037 0037C 6080          			MOV		A,@0x80
  1038 0037D 0150          			MOV		0x50,A		; [0x50] = 0x80
  1039 0037E 607F          			MOV		A,@0x7F		; A = 0x7F
  1040 0037F 0F50          			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
  1041 00380 1003          			MOV		A,STATUS
  1042 00381 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1043                     			;;XOR		A,@0x50		; Check Status ?
  1044 00382 3A03          			JBS		Z			; Check Z = 1?
  1045 00383 507A          			JMP	INS_FAIL
  1046 00384 3603          			JBC		N			; Check N = 0?
  1047 00385 507A          			JMP	INS_FAIL
  1048 00386 1050          			MOV		A,0x50
  1049 00387 6CFF          			XOR		A,@0xFF		; Check Result ?
  1050 00388 3A03          			JBS		Z			; Check Z = 1?
  1051 00389 507A          			JMP	INS_FAIL
  1052 0038A 3603          			JBC		N			; Check N = 0?
  1053 0038B 507A          			JMP	INS_FAIL
  1054 0038C 40DC          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1055 0038D 60FF          			MOV		A,@0xFF
  1056 0038E 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1057 0038F 6001          			MOV		A,@0x01		; A = 0x01
  1058 00390 0F50          			ADD		0x50,A		; [0x50] = 0xFF + 0x01
  1059 00391 1003          			MOV		A,STATUS
  1060 00392 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
  1061                     			;;XOR		A,@0x17		; Check Status ?
  1062 00393 3A03          			JBS		Z			; Check Z = 1?
  1063 00394 507A          			JMP	INS_FAIL
  1064 00395 3603          			JBC		N			; Check N = 0?
  1065 00396 507A          			JMP	INS_FAIL
  1066 00397 1050          			MOV		A,0x50
  1067 00398 6C00          			XOR		A,@0x00		; Check Result ?
  1068 00399 3A03          			JBS		Z			; Check Z = 1?
  1069 0039A 507A          			JMP	INS_FAIL
  1070 0039B 3603          			JBC		N			; Check N = 0?
  1071 0039C 507A          			JMP	INS_FAIL
  1072 0039D 40DC          			CALL	STATUS_CLEAR	;0x7F+0x01
  1073 0039E 607F          			MOV		A,@0x7F
  1074 0039F 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1075 003A0 6001          			MOV		A,@0x01		; A = 0x01
  1076 003A1 0F50          			ADD		0x50,A		; [0x50] = 0x7F + 0x01
  1077 003A2 1003          			MOV		A,STATUS
  1078 003A3 6C7A          			XOR		A,@0x7A		; Check Status ? for non reset
  1079                     			;;XOR		A,@0x72		; Check Status ?
  1080 003A4 3A03          			JBS		Z			; Check Z = 1?
  1081 003A5 507A          			JMP	INS_FAIL
  1082 003A6 3603          			JBC		N			; Check N = 0?
  1083 003A7 507A          			JMP	INS_FAIL
  1084 003A8 1050          			MOV		A,0x50
  1085 003A9 6C80          			XOR		A,@0x80		; Check Result ?
  1086 003AA 3A03          			JBS		Z			; Check Z = 1?
  1087 003AB 507A          			JMP	INS_FAIL
  1088 003AC 3603          			JBC		N			; Check N = 0?
  1089 003AD 507A          			JMP	INS_FAIL
  1090 003AE               		INST_ADD_A_K:		;-------Instruction Test => ADD A,k
  1091 003AE 6034          			MOV		A,@0x34
  1092 003AF 015A          			MOV		INST,A
  1093 003B0 40DC          			CALL	STATUS_CLEAR
  1094 003B1 607F          			MOV		A,@0x7F		;0x7F+0x01
  1095 003B2 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1096 003B3 3003          			JBC		C			; Check C = 0?
  1097 003B4 507A          			JMP	INS_FAIL
  1098 003B5 3903          			JBS		DC			; Check DC = 1?
  1099 003B6 507A          			JMP	INS_FAIL
  1100 003B7 3203          			JBC		Z			; Check Z = 0?
  1101 003B8 507A          			JMP	INS_FAIL
  1102 003B9 3D03          			JBS		OV			; Check OV = 1?
  1103 003BA 507A          			JMP	INS_FAIL
  1104 003BB 3E03          			JBS		N			; Check N = 1?
  1105 003BC 507A          			JMP	INS_FAIL
  1106 003BD 6C80          			XOR		A,@0x80		; Check Result ?
  1107 003BE 40DF          			CALL	INST_XOR_JUDGE
  1108 003BF 40DC          			CALL	STATUS_CLEAR
  1109 003C0 60FF          			MOV		A,@0xFF		;0xFF+0x01
  1110 003C1 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1111 003C2 3803          			JBS		C			; Check C = 1?
  1112 003C3 507A          			JMP	INS_FAIL
  1113 003C4 3903          			JBS		DC			; Check DC = 1?
  1114 003C5 507A          			JMP	INS_FAIL
  1115 003C6 3A03          			JBS		Z			; Check Z = 1?
  1116 003C7 507A          			JMP	INS_FAIL
  1117 003C8 3503          			JBC		OV			; Check OV = 0?
  1118 003C9 507A          			JMP	INS_FAIL
  1119 003CA 3603          			JBC		N			; Check N = 0?
  1120 003CB 507A          			JMP	INS_FAIL
  1121 003CC 6C00          			XOR		A,@0x00		; Check Result ?
  1122 003CD 40DF          			CALL	INST_XOR_JUDGE
  1123 003CE 40DC          			CALL	STATUS_CLEAR
  1124 003CF 607F          			MOV		A,@0x7F		; 0x80+0x7F
  1125 003D0 7C80          			ADD		A,@0x80		; A = 0x80 + A
  1126 003D1 3003          			JBC		C			; Check C = 0?
  1127 003D2 507A          			JMP	INS_FAIL
  1128 003D3 3103          			JBC		DC			; Check DC = 0?
  1129 003D4 507A          			JMP	INS_FAIL
  1130 003D5 3203          			JBC		Z			; Check Z = 0?
  1131 003D6 507A          			JMP	INS_FAIL
  1132 003D7 3503          			JBC		OV			; Check OV = 0?
  1133 003D8 507A          			JMP	INS_FAIL
  1134 003D9 3E03          			JBS		N			; Check N = 1?
  1135 003DA 507A          			JMP	INS_FAIL
  1136 003DB 6CFF          			XOR		A,@0xFF		; Check Result ?
  1137 003DC 40DF          			CALL	INST_XOR_JUDGE
  1138 003DD               		INST_ADC_A_R:		;-------Instruction Test => ADC A,R
  1139 003DD 6036          			MOV		A,@0x36
  1140 003DE 015A          			MOV		INST,A
  1141 003DF 40DC          			CALL	STATUS_CLEAR
  1142 003E0 2803          			BS		C			; 0x7F+0x00
  1143 003E1 607F          			MOV		A,@0x7F		
  1144 003E2 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1145 003E3 6000          			MOV		A,@0x00		; A = 0x00
  1146 003E4 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1147 003E5 3003          			JBC		C			; Check C = 0?
  1148 003E6 507A          			JMP	INS_FAIL
  1149 003E7 3903          			JBS		DC			; Check DC = 1?
  1150 003E8 507A          			JMP	INS_FAIL
  1151 003E9 3203          			JBC		Z			; Check Z = 0?
  1152 003EA 507A          			JMP	INS_FAIL
  1153 003EB 3D03          			JBS		OV			; Check OV = 1?
  1154 003EC 507A          			JMP	INS_FAIL
  1155 003ED 3E03          			JBS		N			; Check N = 1?
  1156 003EE 507A          			JMP	INS_FAIL
  1157 003EF 6C80          			XOR		A,@0x80		; Check Result ?
  1158 003F0 40DF          			CALL	INST_XOR_JUDGE
  1159 003F1 40DC          			CALL	STATUS_CLEAR
  1160 003F2 2803          			BS		C			; 0x80+0x7F
  1161 003F3 6080          			MOV		A,@0x80
  1162 003F4 0150          			MOV		0x50,A		; [0x50] = 0x80
  1163 003F5 607F          			MOV		A,@0x7F		; A = 0x7F
  1164 003F6 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1165 003F7 3803          			JBS		C			; Check C = 1?
  1166 003F8 507A          			JMP	INS_FAIL
  1167 003F9 3903          			JBS		DC			; Check DC = 1?
  1168 003FA 507A          			JMP	INS_FAIL
  1169 003FB 3A03          			JBS		Z			; Check Z = 1?
  1170 003FC 507A          			JMP	INS_FAIL
  1171 003FD 3503          			JBC		OV			; Check OV = 0?
  1172 003FE 507A          			JMP	INS_FAIL
  1173 003FF 3603          			JBC		N			; Check N = 0?
  1174 00400 507A          			JMP	INS_FAIL
  1175 00401 6C00          			XOR		A,@0x00		; Check Result ?
  1176 00402 40DF          			CALL	INST_XOR_JUDGE
  1177 00403               		INST_ADC_R_A:		;-------Instruction Test => ADC R,A
  1178 00403 6037          			MOV		A,@0x37
  1179 00404 015A          			MOV		INST,A
  1180 00405 40DC          			CALL	STATUS_CLEAR
  1181 00406 2803          			BS		C			;0x7F+0x00
  1182 00407 607F          			MOV		A,@0x7F
  1183 00408 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1184 00409 6000          			MOV		A,@0x00		; A = 0x00
  1185 0040A 2203          			BC		Z
  1186 0040B 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1187 0040C 1003          			MOV		A,STATUS
  1188 0040D 6C7A          			XOR		A,@0x7A		; Check Status ?
  1189                     			;;XOR		A,@0x72		; Check Status ?
  1190 0040E 40DF          			CALL	INST_XOR_JUDGE
  1191 0040F 1050          			MOV		A,0x50
  1192 00410 6C80          			XOR		A,@0x80		; Check Result ?
  1193 00411 40DF          			CALL	INST_XOR_JUDGE
  1194 00412 40DC          			CALL	STATUS_CLEAR
  1195 00413 2803          			BS		C			;0x80+0x7F
  1196 00414 6080          			MOV		A,@0x80
  1197 00415 0150          			MOV		0x50,A		; [0x50] = 0x80
  1198 00416 607F          			MOV		A,@0x7F		; A = 0x7F
  1199 00417 2203          			BC		Z
  1200 00418 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1201 00419 1003          			MOV		A,STATUS
  1202 0041A 6C1F          			XOR		A,@0x1F		; Check Status ?
  1203                     			;;XOR		A,@0x17		; Check Status ?
  1204 0041B 40DF          			CALL	INST_XOR_JUDGE
  1205 0041C 1050          			MOV		A,0x50
  1206 0041D 6C00          			XOR		A,@0x00		; Check Result ?
  1207 0041E 40DF          			CALL	INST_XOR_JUDGE
  1208                     
  1209 0041F               		INST_INCA:			;-------Instruction Test => INCA R
  1210 0041F 6017          			MOV		A,@0x17
  1211 00420 015A          			MOV		INST,A
  1212 00421 40DC          			CALL	STATUS_CLEAR	; 0x7F+0x01
  1213 00422 607F          			MOV		A,@0x7F
  1214 00423 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1215 00424 1450          			INCA	0x50		; A = [0x50] +1		
  1216 00425 3003          			JBC		C			; Check C = 0?
  1217 00426 507A          			JMP	INS_FAIL
  1218 00427 3903          			JBS		DC			; Check DC = 1?
  1219 00428 507A          			JMP	INS_FAIL
  1220 00429 3203          			JBC		Z			; Check Z = 0?
  1221 0042A 507A          			JMP	INS_FAIL
  1222 0042B 3D03          			JBS		OV			; Check OV = 1?
  1223 0042C 507A          			JMP	INS_FAIL
  1224 0042D 3E03          			JBS		N			; Check N = 1?
  1225 0042E 507A          			JMP	INS_FAIL
  1226 0042F 2203          			BC		Z
  1227 00430 2603          			BC		N
  1228 00431 6C80          			XOR		A,@0x80		; Check Result ?
  1229 00432 3A03          			JBS		Z			; Check Z = 1?
  1230 00433 507A          			JMP	INS_FAIL
  1231 00434 3603          			JBC		N			; Check N = 0?
  1232 00435 507A          			JMP	INS_FAIL
  1233 00436 40DC          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1234 00437 60FF          			MOV		A,@0xFF
  1235 00438 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1236 00439 1450          			INCA	0x50		; A = [0x50] +1		
  1237 0043A 3803          			JBS		C			; Check C = 1?
  1238 0043B 507A          			JMP	INS_FAIL
  1239 0043C 3903          			JBS		DC			; Check DC = 1?
  1240 0043D 507A          			JMP	INS_FAIL
  1241 0043E 3A03          			JBS		Z			; Check Z = 1?
  1242 0043F 507A          			JMP	INS_FAIL
  1243 00440 3503          			JBC		OV			; Check OV = 0?
  1244 00441 507A          			JMP	INS_FAIL
  1245 00442 3603          			JBC		N			; Check N = 0?
  1246 00443 507A          			JMP	INS_FAIL
  1247 00444 2203          			BC		Z
  1248 00445 2603          			BC		N
  1249 00446 6C00          			XOR		A,@0x00		; Check Result ?
  1250 00447 3A03          			JBS		Z			; Check Z = 1?
  1251 00448 507A          			JMP	INS_FAIL
  1252 00449 3603          			JBC		N			; Check N = 0?
  1253 0044A 507A          			JMP	INS_FAIL
  1254                     
  1255 0044B               		INST_INC:			;-------Instruction Test => INC R
  1256 0044B 6018          			MOV		A,@0x18
  1257 0044C 015A          			MOV		INST,A
  1258 0044D 40DC          			CALL 	STATUS_CLEAR	; 0x7F+0x01
  1259 0044E 607F          			MOV		A,@0x7F
  1260 0044F 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1261 00450 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1262 00451 1003          			MOV		A,STATUS
  1263 00452 6C7A          			XOR		A,@0x7A		; Check Status ?
  1264                     			;;XOR		A,@0x72		; Check Status ?
  1265 00453 3A03          			JBS		Z			; Check Z = 1?
  1266 00454 507A          			JMP	INS_FAIL
  1267 00455 3603          			JBC		N			; Check N = 0?
  1268 00456 507A          			JMP	INS_FAIL
  1269 00457 1050          			MOV		A,0x50
  1270 00458 6C80          			XOR		A,@0x80		; Check Result ?
  1271 00459 3A03          			JBS		Z			; Check Z = 1?
  1272 0045A 507A          			JMP	INS_FAIL
  1273 0045B 3603          			JBC		N			; Check N = 0?
  1274 0045C 507A          			JMP	INS_FAIL
  1275 0045D 40DC          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1276 0045E 60FF          			MOV		A,@0xFF
  1277 0045F 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1278 00460 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1279 00461 1003          			MOV		A,STATUS
  1280 00462 6C1F          			XOR		A,@0x1F		; Check Status ?
  1281                     			;;XOR		A,@0x17		; Check Status ?
  1282 00463 3A03          			JBS		Z			; Check Z = 1?
  1283 00464 507A          			JMP	INS_FAIL
  1284 00465 3603          			JBC		N			; Check N = 0?
  1285 00466 507A          			JMP	INS_FAIL
  1286 00467 1050          			MOV		A,0x50
  1287 00468 6C00          			XOR		A,@0x00		; Check Result ?
  1288 00469 3A03          			JBS		Z			; Check Z = 1?
  1289 0046A 507A          			JMP	INS_FAIL
  1290 0046B 3603          			JBC		N			; Check N = 0?
  1291 0046C 507A          			JMP	INS_FAIL
  1292                     
  1293 0046D               		INST_NEG_R:			;-------Instruction Test => NEG R
  1294 0046D 6035          			MOV		A,@0x35
  1295 0046E 015A          			MOV		INST,A
  1296 0046F 40DC          			CALL	STATUS_CLEAR
  1297 00470 6000          			MOV		A,@0x00		; 0x00
  1298 00471 0150          			MOV		0x50,A		; [0x50] = 0x00
  1299 00472 7D50          			NEG		0x50
  1300 00473 1003          			MOV		A,STATUS
  1301 00474 6C1F          			XOR		A,@0x1F		; Check Status ?
  1302                     			;;XOR		A,@0x17		; Check Status ?
  1303 00475 40DF          			CALL	INST_XOR_JUDGE
  1304 00476 1050          			MOV		A,0x50
  1305 00477 6C00          			XOR		A,@0x00		; Check Result ?
  1306 00478 40DF          			CALL	INST_XOR_JUDGE
  1307 00479 40DC          			CALL	STATUS_CLEAR
  1308 0047A 6001          			MOV		A,@0x01		; 0x01
  1309 0047B 0150          			MOV		0x50,A		; [0x50] = 0x01
  1310 0047C 7D50          			NEG		0x50
  1311 0047D 1003          			MOV		A,STATUS
  1312 0047E 6C58          			XOR		A,@0x58		; Check Status ?
  1313                     			;;XOR		A,@0x50		; Check Status ?
  1314 0047F 40DF          			CALL	INST_XOR_JUDGE
  1315 00480 1050          			MOV		A,0x50
  1316 00481 6CFF          			XOR		A,@0xFF		; Check Result ?
  1317 00482 4675          			CALL	INST_XCH
  1318 00483 40DC          			CALL	STATUS_CLEAR
  1319 00484 6080          			MOV		A,@0x80		; 0x80
  1320 00485 0150          			MOV		0x50,A		; [0x50] = 0x80
  1321 00486 7D50          			NEG		0x50
  1322 00487 1003          			MOV		A,STATUS
  1323 00488 6C7A          			XOR		A,@0x7A		; Check Status ?
  1324                     			;;XOR		A,@0x72		; Check Status ?
  1325 00489 40DF          			CALL	INST_XOR_JUDGE
  1326 0048A 1050          			MOV		A,0x50
  1327 0048B 6C80          			XOR		A,@0x80		; Check Result ?
  1328 0048C 40DF          			CALL	INST_XOR_JUDGE
  1329                     
  1330 0048D 0012          		RET
  1331 0048E               	TEST_INST_LOGIC_I:
  1332 0048E               		INST_BTG:			;-------Instruction Test => BTG R,b	
  1333 0048E 6006          			MOV		A,@0x06
  1334 0048F 015A          			MOV		INST,A
  1335 00490 40DC          			CALL	STATUS_CLEAR
  1336 00491 60FF          			MOV		A,@0xFF
  1337 00492 0104          			MOV		RSR,A		; Start Address
  1338 00493 0084          			BTG		RSR
  1339 00494 1004          			MOV		A,RSR
  1340 00495 6CFE          			XOR		A,@0xFE		; Check Result ?
  1341 00496 40DF          			CALL	INST_XOR_JUDGE
  1342 00497               		INST_OR_A_R:		;-------Instruction Test => OR A,R
  1343 00497 600E          			MOV		A,@0x0E
  1344 00498 015A          			MOV		INST,A
  1345 00499 6000          			MOV		A,@0x00
  1346 0049A 0103          			MOV		STATUS,A
  1347 0049B 6000          			MOV		A,@0x00
  1348 0049C 0150          			MOV		0x50,A		; [0x50] = 0x00
  1349 0049D 6000          			MOV		A,@0x00
  1350 0049E 2203          			BC		Z
  1351 0049F 0850          			OR		A,0x50		; A = A | [0x50]
  1352 004A0 3003          			JBC		C			; Check C = 0?
  1353 004A1 507A          			JMP	INS_FAIL
  1354 004A2 3103          			JBC		DC			; Check DC = 0?
  1355 004A3 507A          			JMP	INS_FAIL
  1356 004A4 3A03          			JBS		Z			; Check Z = 1?
  1357 004A5 507A          			JMP	INS_FAIL
  1358 004A6 3503          			JBC		OV			; Check OV = 0?
  1359 004A7 507A          			JMP	INS_FAIL
  1360 004A8 3603          			JBC		N			; Check N = 0?
  1361 004A9 507A          			JMP	INS_FAIL
  1362 004AA 2203          			BC		Z
  1363 004AB 6C00          			XOR		A,@0x00		; Check Result ?
  1364 004AC 3A03          			JBS		Z			; Check Z = 1?
  1365 004AD 507A          			JMP	INS_FAIL
  1366 004AE 3603          			JBC		N			; Check N = 0?
  1367 004AF 507A          			JMP	INS_FAIL
  1368 004B0 6000          			MOV		A,@0x00
  1369 004B1 0103          			MOV		STATUS,A
  1370 004B2 6055          			MOV		A,@0x55
  1371 004B3 0150          			MOV		0x50,A		; [0x50] = 0x55
  1372 004B4 60AA          			MOV		A,@0xAA
  1373 004B5 2203          			BC		Z
  1374 004B6 0850          			OR		A,0x50		; A = A | [0x50]
  1375 004B7 3003          			JBC		C			; Check C = 0?
  1376 004B8 507A          			JMP	INS_FAIL
  1377 004B9 3103          			JBC		DC			; Check DC = 0?
  1378 004BA 507A          			JMP	INS_FAIL
  1379 004BB 3203          			JBC		Z			; Check Z = 0?
  1380 004BC 507A          			JMP	INS_FAIL
  1381 004BD 3503          			JBC		OV			; Check OV = 0?
  1382 004BE 507A          			JMP	INS_FAIL
  1383 004BF 3E03          			JBS		N			; Check N = 1?
  1384 004C0 507A          			JMP	INS_FAIL
  1385 004C1 2203          			BC		Z
  1386 004C2 6CFF          			XOR		A,@0xFF		; Check Result ?
  1387 004C3 3A03          			JBS		Z			; Check Z = 1?
  1388 004C4 507A          			JMP	INS_FAIL
  1389 004C5 3603          			JBC		N			; Check N = 0?
  1390 004C6 507A          			JMP	INS_FAIL
  1391                     
  1392 004C7               		INST_OR_R_A:		;-------Instruction Test => OR R,A
  1393 004C7 600F          			MOV		A,@0x0F
  1394 004C8 015A          			MOV		INST,A
  1395 004C9 6000          			MOV		A,@0x00
  1396 004CA 0103          			MOV		STATUS,A
  1397 004CB 6000          			MOV		A,@0x00
  1398 004CC 0150          			MOV		0x50,A		; [0x50] = 0x00
  1399 004CD 6000          			MOV		A,@0x00		; A = 0x00
  1400 004CE 2203          			BC		Z
  1401 004CF 0950          			OR		0x50,A		; [0x50] = A | [0x50]
  1402 004D0 1003          			MOV		A,STATUS
  1403 004D1 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1404                     			;;XOR		A,@0x14		; Check Status ?
  1405 004D2 3A03          			JBS		Z			; Check Z = 1?
  1406 004D3 507A          			JMP	INS_FAIL
  1407 004D4 3603          			JBC		N			; Check N = 0?
  1408 004D5 507A          			JMP	INS_FAIL
  1409 004D6 1050          			MOV		A,0x50		; A = Result[0x50]
  1410 004D7 2203          			BC		Z
  1411 004D8 2603          			BC		N
  1412 004D9 6C00          			XOR		A,@0x00		; Check Result ?
  1413 004DA 3A03          			JBS		Z			; Check Z = 1?
  1414 004DB 507A          			JMP	INS_FAIL
  1415 004DC 3603          			JBC		N			; Check N = 0?
  1416 004DD 507A          			JMP	INS_FAIL
  1417 004DE 6000          			MOV		A,@0x00
  1418 004DF 0103          			MOV		STATUS,A
  1419 004E0 6055          			MOV		A,@0x55
  1420 004E1 0150          			MOV		0x50,A		; [0x50] = 0x55
  1421 004E2 60AA          			MOV		A,@0xAA		; A = 0xAA
  1422 004E3 0950          			OR		0x50,A		; [0x50] = 0xAA | 0x55
  1423 004E4 1003          			MOV		A,STATUS
  1424 004E5 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1425                     			;;XOR		A,@0x50		; Check Status ?
  1426 004E6 3A03          			JBS		Z			; Check Z = 1?
  1427 004E7 507A          			JMP	INS_FAIL
  1428 004E8 3603          			JBC		N			; Check N = 0?
  1429 004E9 507A          			JMP	INS_FAIL
  1430 004EA 1050          			MOV		A,0x50
  1431 004EB 2203          			BC		Z
  1432 004EC 2603          			BC		N
  1433 004ED 6CFF          			XOR		A,@0xFF		; Check Result ?
  1434 004EE 3A03          			JBS		Z			; Check Z = 1?
  1435 004EF 507A          			JMP	INS_FAIL
  1436 004F0 3603          			JBC		N			; Check N = 0?
  1437 004F1 507A          			JMP	INS_FAIL
  1438                     
  1439 004F2               		INST_AND_A_R:		;-------Instruction Test => AND A,R
  1440 004F2 6010          			MOV		A,@0x10
  1441 004F3 015A          			MOV		INST,A
  1442 004F4 40DC          			CALL	STATUS_CLEAR
  1443 004F5 6055          			MOV		A,@0x55
  1444 004F6 0150          			MOV		0x50,A		; [0x50] = 0x55
  1445 004F7 60AA          			MOV		A,@0xAA
  1446 004F8 0A50          			AND		A,0x50		; A = 0xAA & 0x55
  1447 004F9 3003          			JBC		C			; Check C = 0?
  1448 004FA 507A          			JMP	INS_FAIL
  1449 004FB 3103          			JBC		DC			; Check DC = 0?
  1450 004FC 507A          			JMP	INS_FAIL
  1451 004FD 3A03          			JBS		Z			; Check Z = 1?
  1452 004FE 507A          			JMP	INS_FAIL
  1453 004FF 3503          			JBC		OV			; Check OV = 0?
  1454 00500 507A          			JMP	INS_FAIL
  1455 00501 3603          			JBC		N			; Check N = 0?
  1456 00502 507A          			JMP	INS_FAIL
  1457 00503 6C00          			XOR		A,@0x00		; Check Result ?
  1458 00504 3A03          			JBS		Z			; Check Z = 1?
  1459 00505 507A          			JMP	INS_FAIL
  1460 00506 3603          			JBC		N			; Check N = 0?
  1461 00507 507A          			JMP	INS_FAIL
  1462 00508 40DC          			CALL	STATUS_CLEAR
  1463 00509 60F5          			MOV		A,@0xF5
  1464 0050A 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1465 0050B 60FA          			MOV		A,@0xFA
  1466 0050C 0A50          			AND		A,0x50		; A = 0xFA & 0xF5
  1467 0050D 3003          			JBC		C			; Check C = 0?
  1468 0050E 507A          			JMP	INS_FAIL
  1469 0050F 3103          			JBC		DC			; Check DC = 0?
  1470 00510 507A          			JMP	INS_FAIL
  1471 00511 3203          			JBC		Z			; Check Z = 0?
  1472 00512 507A          			JMP	INS_FAIL
  1473 00513 3503          			JBC		OV			; Check OV = 0?
  1474 00514 507A          			JMP	INS_FAIL
  1475 00515 3E03          			JBS		N			; Check N = 1?
  1476 00516 507A          			JMP	INS_FAIL
  1477 00517 6CF0          			XOR		A,@0xF0		; Check Result ?
  1478 00518 3A03          			JBS		Z			; Check Z = 1?
  1479 00519 507A          			JMP	INS_FAIL
  1480 0051A 3603          			JBC		N			; Check N = 0?
  1481 0051B 507A          			JMP	INS_FAIL
  1482 0051C               		INST_AND_R_A:		;-------Instruction Test => AND R,A
  1483 0051C 6011          			MOV		A,@0x11
  1484 0051D 015A          			MOV		INST,A
  1485 0051E 40DC          			CALL	STATUS_CLEAR
  1486 0051F 6055          			MOV		A,@0x55
  1487 00520 0150          			MOV		0x50,A		; [0x50] = 0x55
  1488 00521 60AA          			MOV		A,@0xAA
  1489 00522 0B50          			AND		0x50,A		; [0x50] = 0xAA & 0x55
  1490 00523 1003          			MOV		A,STATUS
  1491 00524 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1492                     			;;XOR		A,@0x14		; Check Status ?
  1493 00525 3A03          			JBS		Z			; Check Z = 1?
  1494 00526 507A          			JMP	INS_FAIL
  1495 00527 3603          			JBC		N			; Check N = 0?
  1496 00528 507A          			JMP	INS_FAIL
  1497 00529 2203          			BC		Z
  1498 0052A 1050          			MOV		A,0x50
  1499 0052B 2203          			BC		Z
  1500 0052C 6C00          			XOR		A,@0x00		; Check Result ?
  1501 0052D 3A03          			JBS		Z			; Check Z = 1?
  1502 0052E 507A          			JMP	INS_FAIL
  1503 0052F 3603          			JBC		N			; Check N = 0?
  1504 00530 507A          			JMP	INS_FAIL
  1505 00531 40DC          			CALL	STATUS_CLEAR
  1506 00532 60F5          			MOV		A,@0xF5
  1507 00533 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1508 00534 60FA          			MOV		A,@0xFA
  1509 00535 0B50          			AND		0x50,A		; [0x50] = 0xFA & 0xF5
  1510 00536 1003          			MOV		A,STATUS
  1511 00537 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1512                     			;;XOR		A,@0x50		; Check Status ?
  1513 00538 3A03          			JBS		Z			; Check Z = 1?
  1514 00539 507A          			JMP	INS_FAIL
  1515 0053A 3603          			JBC		N			; Check N = 0?
  1516 0053B 507A          			JMP	INS_FAIL
  1517 0053C 2203          			BC		Z
  1518 0053D 1050          			MOV		A,0x50
  1519 0053E 2203          			BC		Z
  1520 0053F 6CF0          			XOR		A,@0xF0		; Check Result ?
  1521 00540 3A03          			JBS		Z			; Check Z = 1?
  1522 00541 507A          			JMP	INS_FAIL
  1523 00542 3603          			JBC		N			; Check N = 0?
  1524 00543 507A          			JMP	INS_FAIL
  1525 00544               		INST_AND_A_K:		;-------Instruction Test => AND A,k
  1526 00544 6029          			MOV		A,@0x29
  1527 00545 015A          			MOV		INST,A
  1528 00546 40DC          			CALL	STATUS_CLEAR
  1529 00547 60AA          			MOV		A,@0xAA
  1530 00548 6855          			AND		A,@0x55		; A = 0xAA & 0x55
  1531 00549 3003          			JBC		C			; Check C = 0?
  1532 0054A 507A          			JMP	INS_FAIL
  1533 0054B 3103          			JBC		DC			; Check DC = 0?
  1534 0054C 507A          			JMP	INS_FAIL
  1535 0054D 3A03          			JBS		Z			; Check Z = 1?
  1536 0054E 507A          			JMP	INS_FAIL
  1537 0054F 3503          			JBC		OV			; Check OV = 0?
  1538 00550 507A          			JMP	INS_FAIL
  1539 00551 3603          			JBC		N			; Check N = 0?
  1540 00552 507A          			JMP	INS_FAIL
  1541 00553 6C00          			XOR		A,@0x00		; Check Result ?
  1542 00554 3A03          			JBS		Z			; Check Z = 1?
  1543 00555 507A          			JMP	INS_FAIL
  1544 00556 3603          			JBC		N			; Check N = 0?
  1545 00557 507A          			JMP	INS_FAIL
  1546 00558 40DC          			CALL	STATUS_CLEAR
  1547 00559 60AA          			MOV		A,@0xAA
  1548 0055A 68FF          			AND		A,@0xFF		; A = A & 0xFF
  1549 0055B 3003          			JBC		C			; Check C = 0?
  1550 0055C 507A          			JMP	INS_FAIL
  1551 0055D 3103          			JBC		DC			; Check DC = 0?
  1552 0055E 507A          			JMP	INS_FAIL
  1553 0055F 3203          			JBC		Z			; Check Z = 0?
  1554 00560 507A          			JMP	INS_FAIL
  1555 00561 3503          			JBC		OV			; Check OV = 0?
  1556 00562 507A          			JMP	INS_FAIL
  1557 00563 3E03          			JBS		N			; Check N = 1?
  1558 00564 507A          			JMP	INS_FAIL
  1559 00565 6CAA          			XOR		A,@0xAA		; Check Result ?
  1560 00566 40DF          			CALL	INST_XOR_JUDGE
  1561                     
  1562 00567               		INST_COMA:			;-------Instruction Test => COMA R
  1563 00567 6015          			MOV		A,@0x15
  1564 00568 015A          			MOV		INST,A
  1565 00569 40DC          			CALL	STATUS_CLEAR
  1566 0056A 60FF          			MOV		A,@0xFF
  1567 0056B 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1568 0056C 1250          			COMA	0x50		; A = /R
  1569 0056D 3003          			JBC		C			; Check C = 0?
  1570 0056E 507A          			JMP	INS_FAIL
  1571 0056F 3103          			JBC		DC			; Check DC = 0?
  1572 00570 507A          			JMP	INS_FAIL
  1573 00571 3A03          			JBS		Z			; Check Z = 1?
  1574 00572 507A          			JMP	INS_FAIL
  1575 00573 3503          			JBC		OV			; Check OV = 0?
  1576 00574 507A          			JMP	INS_FAIL
  1577 00575 3603          			JBC		N			; Check N = 0?
  1578 00576 507A          			JMP	INS_FAIL
  1579 00577 6C00          			XOR		A,@0x00		; Check Result ?
  1580 00578 3A03          			JBS		Z			; Check Z = 1?
  1581 00579 507A          			JMP	INS_FAIL
  1582 0057A 3603          			JBC		N			; Check N = 0?
  1583 0057B 507A          			JMP	INS_FAIL	
  1584 0057C 40DC          			CALL	STATUS_CLEAR
  1585 0057D 6005          			MOV		A,@0x05
  1586 0057E 0150          			MOV		0x50,A		; [0x50] = 0x05
  1587 0057F 1250          			COMA	0x50		; A = /R
  1588 00580 3003          			JBC		C			; Check C = 0?
  1589 00581 507A          			JMP	INS_FAIL
  1590 00582 3103          			JBC		DC			; Check DC = 0?
  1591 00583 507A          			JMP	INS_FAIL
  1592 00584 3203          			JBC		Z			; Check Z = 0?
  1593 00585 507A          			JMP	INS_FAIL
  1594 00586 3503          			JBC		OV			; Check OV = 0?
  1595 00587 507A          			JMP	INS_FAIL
  1596 00588 3E03          			JBS		N			; Check N = 1?
  1597 00589 507A          			JMP	INS_FAIL
  1598 0058A 6CFA          			XOR		A,@0xFA		; Check Result ?
  1599 0058B 3A03          			JBS		Z			; Check Z = 1?
  1600 0058C 507A          			JMP	INS_FAIL
  1601 0058D 3603          			JBC		N			; Check N = 0?
  1602 0058E 507A          			JMP	INS_FAIL
  1603 0058F               		INST_COM:			;-------Instruction Test => COM R
  1604 0058F 6016          			MOV		A,@0x16
  1605 00590 015A          			MOV		INST,A
  1606 00591 40DC          			CALL	STATUS_CLEAR
  1607 00592 60FF          			MOV		A,@0xFF
  1608 00593 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1609 00594 1350          			COM		0x50		; [0x50] = /[0x50]
  1610 00595 1003          			MOV		A,STATUS
  1611 00596 6C1C          			XOR		A,@0x1C		; Check Status ?
  1612                     			;;XOR		A,@0x14		; Check Status ?
  1613 00597 3A03          			JBS		Z			; Check Z = 1?
  1614 00598 507A          			JMP	INS_FAIL
  1615 00599 3603          			JBC		N			; Check N = 0?
  1616 0059A 507A          			JMP	INS_FAIL
  1617 0059B 2203          			BC		Z
  1618 0059C 2603          			BC		N
  1619 0059D 1050          			MOV		A,0x50
  1620 0059E 6C00          			XOR		A,@0x00		; Check Result ?
  1621 0059F 3A03          			JBS		Z			; Check Z = 1?
  1622 005A0 507A          			JMP	INS_FAIL
  1623 005A1 3603          			JBC		N			; Check N = 0?
  1624 005A2 507A          			JMP	INS_FAIL
  1625 005A3 40DC          			CALL	STATUS_CLEAR
  1626 005A4 6000          			MOV		A,@0x00
  1627 005A5 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1628 005A6 1350          			COM		0x50		; [0x50] = /[0x50]
  1629 005A7 1003          			MOV		A,STATUS
  1630 005A8 6C58          			XOR		A,@0x58		; Check Status ?
  1631                     			;;XOR		A,@0x50		; Check Status ?
  1632 005A9 3A03          			JBS		Z			; Check Z = 1?
  1633 005AA 507A          			JMP	INS_FAIL
  1634 005AB 3603          			JBC		N			; Check N = 0?
  1635 005AC 507A          			JMP	INS_FAIL
  1636 005AD 2203          			BC		Z
  1637 005AE 2603          			BC		N
  1638 005AF 1050          			MOV		A,0x50
  1639 005B0 6CFF          			XOR		A,@0xFF		; Check Result ?
  1640 005B1 3A03          			JBS		Z			; Check Z = 1?
  1641 005B2 507A          			JMP	INS_FAIL
  1642 005B3 3603          			JBC		N			; Check N = 0?
  1643 005B4 507A          			JMP	INS_FAIL
  1644 005B5               		INST_OR_A_K:		;-------Instruction Test => OR A,k
  1645 005B5 6026          			MOV		A,@0x26
  1646 005B6 015A          			MOV		INST,A
  1647 005B7 40DC          			CALL	STATUS_CLEAR
  1648 005B8 60A5          			MOV		A,@0xA5
  1649 005B9 645A          			OR		A,@0x5A		; A = 0xA5 | 0x5A
  1650 005BA 6CFF          			XOR		A,@0xFF		; Check Result ?
  1651 005BB 40DF          			CALL	INST_XOR_JUDGE
  1652 005BC 0012          		RET
  1653                     
  1654 005BD               	TEST_INST_LOGIC_II:
  1655 005BD               		INST_RR_R:			;-------Instruction Test => RR R
  1656 005BD 602B          			MOV		A,@0x2B
  1657 005BE 015A          			MOV		INST,A
  1658 005BF 40DC          			CALL	STATUS_CLEAR
  1659 005C0 6055          			MOV		A,@0x55
  1660 005C1 0150          			MOV		0x50,A		; [0x50] = 0x55
  1661 005C2 6F50          			RR		0x50		; [0x50] = [0x50] >> 1
  1662 005C3 1003          			MOV		A,STATUS
  1663 005C4 6C58          			XOR		A,@0x58		; Check Status ?
  1664                     			;;XOR		A,@0x50		; Check Status ?
  1665 005C5 40DF          			CALL	INST_XOR_JUDGE
  1666 005C6 1050          			MOV		A,0x50
  1667 005C7 6CAA          			XOR		A,@0xAA		; Check Result ?
  1668 005C8 40DF          			CALL	INST_XOR_JUDGE
  1669                     
  1670 005C9               		INST_RRA_R:			;-------Instruction Test => RRA R
  1671 005C9 602A          			MOV		A,@0x2A
  1672 005CA 015A          			MOV		INST,A
  1673 005CB 40DC          			CALL 	STATUS_CLEAR
  1674 005CC 6055          			MOV		A,@0x55
  1675 005CD 0150          			MOV		0x50,A		; [0x50] = 0x55
  1676 005CE 6E50          			RRA		0x50		; A = [0x50] >> 1
  1677 005CF 3003          			JBC		C			; Check C = 0?
  1678 005D0 507A          			JMP	INS_FAIL
  1679 005D1 3103          			JBC		DC			; Check DC = 0?
  1680 005D2 507A          			JMP	INS_FAIL
  1681 005D3 3203          			JBC		Z			; Check Z = 0?
  1682 005D4 507A          			JMP	INS_FAIL
  1683 005D5 3503          			JBC		OV			; Check OV = 0?
  1684 005D6 507A          			JMP	INS_FAIL
  1685 005D7 3E03          			JBS		N			; Check N = 1?
  1686 005D8 507A          			JMP	INS_FAIL
  1687 005D9 6CAA          			XOR		A,@0xAA		; Check Result ?
  1688 005DA 40DF          			CALL	INST_XOR_JUDGE
  1689                     
  1690 005DB               		INST_RRCA_R:		;-------Instruction Test => RRCA R
  1691 005DB 601B          			MOV		A,@0x1B
  1692 005DC 015A          			MOV		INST,A
  1693 005DD 40DC          			CALL	STATUS_CLEAR
  1694 005DE 2803          			BS		C
  1695 005DF 60AA          			MOV		A,@0xAA
  1696 005E0 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1697 005E1 1850          			RRCA	0x50		; A = [0x50] >> 1
  1698 005E2 3003          			JBC		C			; Check C = 0?
  1699 005E3 507A          			JMP	INS_FAIL
  1700 005E4 3103          			JBC		DC			; Check DC = 0?
  1701 005E5 507A          			JMP	INS_FAIL
  1702 005E6 3203          			JBC		Z			; Check Z = 0?
  1703 005E7 507A          			JMP	INS_FAIL
  1704 005E8 3503          			JBC		OV			; Check OV = 0?
  1705 005E9 507A          			JMP	INS_FAIL
  1706 005EA 3E03          			JBS		N			; Check N = 1?
  1707 005EB 507A          			JMP	INS_FAIL
  1708 005EC 6CD5          			XOR		A,@0xD5		; Check Result ?
  1709 005ED 40DF          			CALL	INST_XOR_JUDGE
  1710 005EE 40DC          			CALL	STATUS_CLEAR
  1711 005EF 6055          			MOV		A,@0x55
  1712 005F0 0150          			MOV		0x50,A		; [0x50] = 0x55
  1713 005F1 1850          			RRCA	0x50		; A = [0x50] >> 1
  1714 005F2 3803          			JBS		C			; Check C = 1?
  1715 005F3 507A          			JMP	INS_FAIL
  1716 005F4 3103          			JBC		DC			; Check DC = 0?
  1717 005F5 507A          			JMP	INS_FAIL
  1718 005F6 3203          			JBC		Z			; Check Z = 0?
  1719 005F7 507A          			JMP	INS_FAIL
  1720 005F8 3503          			JBC		OV			; Check OV = 0?
  1721 005F9 507A          			JMP	INS_FAIL
  1722 005FA 3603          			JBC		N			; Check N = 0?
  1723 005FB 507A          			JMP	INS_FAIL
  1724 005FC 6C2A          			XOR		A,@0x2A		; Check Result ?
  1725 005FD 40DF          			CALL	INST_XOR_JUDGE
  1726 005FE               		INST_RRC_R:			;-------Instruction Test => RRC R
  1727 005FE 601C          			MOV		A,@0x1C
  1728 005FF 015A          			MOV		INST,A
  1729 00600 40DC          			CALL	STATUS_CLEAR
  1730 00601 2803          			BS		C
  1731 00602 60AA          			MOV		A,@0xAA
  1732 00603 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1733 00604 2203          			BC		Z
  1734 00605 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1735 00606 1003          			MOV		A,STATUS
  1736 00607 6C58          			XOR		A,@0x58		; Check Status ?
  1737                     			;;XOR		A,@0x50		; Check Status ?
  1738 00608 40DF          			CALL	INST_XOR_JUDGE
  1739 00609 1050          			MOV		A,0x50
  1740 0060A 6CD5          			XOR		A,@0xD5		; Check Result ?
  1741 0060B 40DF          			CALL	INST_XOR_JUDGE
  1742 0060C 40DC          			CALL	STATUS_CLEAR
  1743 0060D 6055          			MOV		A,@0x55
  1744 0060E 0150          			MOV		0x50,A		; [0x50] = 0x55
  1745 0060F 2203          			BC		Z
  1746 00610 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1747 00611 1003          			MOV		A,STATUS
  1748 00612 6C19          			XOR		A,@0x19		; Check Status ?
  1749                     			;;XOR		A,@0x11		; Check Status ?
  1750 00613 3A03          			JBS		Z			; Check Z = 1?
  1751 00614 507A          			JMP	INS_FAIL
  1752 00615 3603          			JBC		N			; Check N = 0?
  1753 00616 507A          			JMP	INS_FAIL
  1754 00617 1050          			MOV		A,0x50
  1755 00618 6C2A          			XOR		A,@0x2A		; Check Result ?
  1756 00619 40DF          			CALL	INST_XOR_JUDGE
  1757 0061A               		INST_RLCA_R:		;-------Instruction Test => RLCA R
  1758 0061A 601D          			MOV		A,@0x1D
  1759 0061B 015A          			MOV		INST,A
  1760 0061C 40DC          			CALL STATUS_CLEAR
  1761 0061D 2803          			BS		C
  1762 0061E 6055          			MOV		A,@0x55
  1763 0061F 0150          			MOV		0x50,A		; [0x50] = 0x55
  1764 00620 1A50          			RLCA	0x50		; A = [0x50] << 1
  1765 00621 3003          			JBC		C			; Check C = 0?
  1766 00622 507A          			JMP	INS_FAIL
  1767 00623 3103          			JBC		DC			; Check DC = 0?
  1768 00624 507A          			JMP	INS_FAIL
  1769 00625 3203          			JBC		Z			; Check Z = 0?
  1770 00626 507A          			JMP	INS_FAIL
  1771 00627 3503          			JBC		OV			; Check OV = 0?
  1772 00628 507A          			JMP	INS_FAIL
  1773 00629 3E03          			JBS		N			; Check N = 1?
  1774 0062A 507A          			JMP	INS_FAIL
  1775 0062B 6CAB          			XOR		A,@0xAB		; Check Result ?
  1776 0062C 40DF          			CALL	INST_XOR_JUDGE
  1777 0062D 40DC          			CALL	STATUS_CLEAR
  1778 0062E 60AA          			MOV		A,@0xAA
  1779 0062F 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1780 00630 1A50          			RLCA	0x50		; A = [0x50] << 1
  1781 00631 3803          			JBS		C			; Check C = 1?
  1782 00632 507A          			JMP	INS_FAIL
  1783 00633 3103          			JBC		DC			; Check DC = 0?
  1784 00634 507A          			JMP	INS_FAIL
  1785 00635 3203          			JBC		Z			; Check Z = 0?
  1786 00636 507A          			JMP	INS_FAIL
  1787 00637 3503          			JBC		OV			; Check OV = 0?
  1788 00638 507A          			JMP	INS_FAIL
  1789 00639 3603          			JBC		N			; Check N = 0?
  1790 0063A 507A          			JMP	INS_FAIL
  1791 0063B 6C54          			XOR		A,@0x54		; Check Result ?
  1792 0063C 40DF          			CALL	INST_XOR_JUDGE
  1793 0063D               		INST_RLC_R:			;-------Instruction Test => RLC R
  1794 0063D 601E          			MOV		A,@0x1E
  1795 0063E 015A          			MOV		INST,A
  1796 0063F 40DC          			CALL	STATUS_CLEAR
  1797 00640 2803          			BS		C
  1798 00641 6055          			MOV		A,@0x55
  1799 00642 0150          			MOV		0x50,A		; [0x50] = 0x55
  1800 00643 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1801 00644 1003          			MOV		A,STATUS
  1802 00645 6C58          			XOR		A,@0x58		; Check Status ?
  1803                     			;;XOR		A,@0x50		; Check Status ?
  1804 00646 40DF          			CALL	INST_XOR_JUDGE
  1805 00647 1050          			MOV		A,0x50
  1806 00648 6CAB          			XOR		A,@0xAB		; Check Result ?
  1807 00649 40DF          			CALL	INST_XOR_JUDGE
  1808 0064A 40DC          			CALL	STATUS_CLEAR
  1809 0064B 60AA          			MOV		A,@0xAA
  1810 0064C 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1811 0064D 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1812 0064E 1003          			MOV		A,STATUS
  1813 0064F 6C19          			XOR		A,@0x19		; Check Status ?
  1814                     			;;XOR		A,@0x11		; Check Status ?
  1815 00650 40DF          			CALL	INST_XOR_JUDGE
  1816 00651 1050          			MOV		A,0x50
  1817 00652 6C54          			XOR		A,@0x54		; Check Result ?
  1818 00653 40DF          			CALL	INST_XOR_JUDGE
  1819                     
  1820 00654               		INST_RLA_A:			;-------Instruction Test => RLA R
  1821 00654 602E          			MOV		A,@0x2E
  1822 00655 015A          			MOV		INST,A
  1823 00656 40DC          			CALL	STATUS_CLEAR
  1824 00657 605A          			MOV		A,@0x5A
  1825 00658 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1826 00659 7250          			RLA		0x50		; A = [0x50] << 1
  1827 0065A 3003          			JBC		C			; Check C = 0?
  1828 0065B 507A          			JMP	INS_FAIL
  1829 0065C 3103          			JBC		DC			; Check DC = 0?
  1830 0065D 507A          			JMP	INS_FAIL
  1831 0065E 3203          			JBC		Z			; Check Z = 0?
  1832 0065F 507A          			JMP	INS_FAIL
  1833 00660 3503          			JBC		OV			; Check OV = 0?
  1834 00661 507A          			JMP	INS_FAIL
  1835 00662 3E03          			JBS		N			; Check N = 1?
  1836 00663 507A          			JMP	INS_FAIL
  1837 00664 6CB4          			XOR		A,@0xB4		; Check Result ?
  1838 00665 40DF          			CALL	INST_XOR_JUDGE
  1839                     
  1840 00666               		INST_RL_R:			;-------Instruction Test => RL R
  1841 00666 602F          			MOV		A,@0x2F
  1842 00667 015A          			MOV		INST,A
  1843 00668 40DC          			CALL	STATUS_CLEAR
  1844 00669 605A          			MOV		A,@0x5A
  1845 0066A 0150          			MOV		0x50,A		; [0x50] = 0xA5
  1846 0066B 7350          			RL		0x50		; [0x50] = [0x50] << 1
  1847 0066C 1003          			MOV		A,STATUS
  1848 0066D 6C58          			XOR		A,@0x58		; Check Status ?
  1849                     			;;XOR		A,@0x50		; Check Status ?
  1850 0066E 3A03          			JBS		Z			; Check Z = 1?
  1851 0066F 507A          			JMP	INS_FAIL
  1852 00670 3603          			JBC		N			; Check N = 0?
  1853 00671 507A          			JMP	INS_FAIL
  1854 00672 1050          			MOV		A,0x50
  1855 00673 6CB4          			XOR		A,@0xB4		; Check Result ?
  1856 00674 40DF          			CALL	INST_XOR_JUDGE
  1857 00675               		INST_XCH:			;-------Instruction Test => XCH R
  1858 00675 602D          			MOV		A,@0x2D
  1859 00676 015A          			MOV		INST,A
  1860 00677 40DC          			CALL	STATUS_CLEAR
  1861 00678 6055          			MOV		A,@0x55
  1862 00679 0150          			MOV		0x50,A		; [0x50] = 0x55
  1863 0067A 60AA          			MOV		A,@0xAA
  1864 0067B 7150          			XCH		0x50		; [0x50] <-> A
  1865 0067C 6C55          			XOR		A,@0x55		; Check Result ?
  1866 0067D 3A03          			JBS		Z			; Check Z = 1?
  1867 0067E 507A          			JMP	INS_FAIL
  1868 0067F 3603          			JBC		N			; Check N = 0?
  1869 00680 507A          			JMP	INS_FAIL
  1870 00681 1050          			MOV		A,0x50
  1871 00682 6CAA          			XOR		A,@0xAA		; Check Result ?
  1872 00683 40DF          			CALL	INST_XOR_JUDGE
  1873 00684 0012          		RET
  1874 00685               	TEST_INST_TRANSFER:
  1875 00685               		INST_MOV_R_A:		;-------Instruction Test => MOV R,A
  1876 00685 6007          			MOV		A,@0x07
  1877 00686 015A          			MOV		INST,A
  1878 00687 40DC          			CALL	STATUS_CLEAR
  1879 00688 60FF          			MOV		A,@0xFF
  1880 00689 0150          			MOV		0x50,A
  1881 0068A 1003          			MOV		A,STATUS
  1882 0068B 6C18          			XOR		A,@0x18		;At  OCDS
  1883                     			;XOR		A,@0x98		; Check Status ? ;; For not reset
  1884                     			;;XOR		A,@0x10		; Check Status ?
  1885 0068C 40DF          			CALL	INST_XOR_JUDGE
  1886 0068D 1050          			MOV		A,0x50
  1887 0068E 6CFF          			XOR		A,@0xFF		; Check Result ?
  1888 0068F 40DF          			CALL	INST_XOR_JUDGE
  1889 00690               		INST_MOV_R_R:		;-------Instruction Test => MOV R,R
  1890 00690 6014          			MOV		A,@0x14
  1891 00691 015A          			MOV		INST,A
  1892 00692 40DC          			CALL	STATUS_CLEAR
  1893 00693 6000          			MOV		A,@0x00
  1894 00694 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1895 00695 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1896 00696 1003          			MOV		A,STATUS
  1897 00697 6C1C          			XOR		A,@0x1C		; Check Status ?
  1898                     			;;XOR		A,@0x14		; Check Status ?
  1899 00698 3A03          			JBS		Z			; Check Z = 1?
  1900 00699 507A          			JMP	INS_FAIL
  1901 0069A 3603          			JBC		N			; Check N = 0?
  1902 0069B 507A          			JMP	INS_FAIL
  1903 0069C 1050          			MOV		A,0x50
  1904 0069D 2203          			BC		Z
  1905 0069E 6C00          			XOR		A,@0x00		; Check Result ?
  1906 0069F 3A03          			JBS		Z			; Check Z = 1?
  1907 006A0 507A          			JMP	INS_FAIL
  1908 006A1 3603          			JBC		N			; Check N = 0?
  1909 006A2 507A          			JMP	INS_FAIL
  1910 006A3 40DC          			CALL	STATUS_CLEAR
  1911 006A4 6000          			MOV		A,@0x00
  1912 006A5 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1913 006A6 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1914 006A7 2850          			BS		0x50,0
  1915 006A8 1050          			MOV		A,0x50
  1916 006A9 6C01          			XOR		A,@0x01		; Check Result ?
  1917 006AA 40DF          			CALL	INST_XOR_JUDGE
  1918                     
  1919 006AB               		INST_SWAPA_R:		;-------Instruction Test => SWAPA R
  1920 006AB 601F          			MOV		A,@0x1F
  1921 006AC 015A          			MOV		INST,A
  1922 006AD 40DC          			CALL	STATUS_CLEAR
  1923 006AE 605A          			MOV		A,@0x5A
  1924 006AF 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1925 006B0 1C50          			SWAPA	0x50
  1926 006B1 6CA5          			XOR		A,@0xA5		; Check Result ?
  1927 006B2 40DF          			CALL	INST_XOR_JUDGE
  1928 006B3               		INST_SWAP_R:		;-------Instruction Test => SWAP R
  1929 006B3 6020          			MOV		A,@0x20
  1930 006B4 015A          			MOV		INST,A
  1931 006B5 40DC          			CALL	STATUS_CLEAR
  1932 006B6 605A          			MOV		A,@0x5A
  1933 006B7 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1934 006B8 1D50          			SWAP	0x50
  1935 006B9 1050          			MOV		A,0x50
  1936 006BA 6CA5          			XOR		A,@0xA5		; Check Result ?
  1937 006BB 40DF          			CALL	INST_XOR_JUDGE
  1938 006BC 0012          		RET
  1939                     
  1940 006BD               	TEST_INST_MANIPULATION:
  1941 006BD 0012          		RET
  1942                     
  1943 006BE               	TEST_INST_BRANCH_I:
  1944 006BE               		INST_DJZ_R:			;------- Instruction Test => DJZ R
  1945 006BE 601A          			MOV		A,@0x1A
  1946 006BF 015A          			MOV		INST,A
  1947 006C0 40DC          			CALL	STATUS_CLEAR
  1948 006C1 6001          			MOV		A,@0x01
  1949 006C2 0150          			MOV		0x50,A		; [0x50] = 0x01
  1950 006C3 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1951 006C4 507A          			JMP		INS_FAIL
  1952 006C5 1050          			MOV		A,0x50
  1953 006C6 6C00          			XOR		A,@0x00		; Check Result ?
  1954 006C7 40DF          			CALL	INST_XOR_JUDGE	
  1955 006C8 40DC          			CALL	STATUS_CLEAR
  1956 006C9 6002          			MOV		A,@0x02
  1957 006CA 0150          			MOV		0x50,A		; [0x50] = 0x02
  1958 006CB 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1959 006CC 56CE          			JMP		$+2
  1960 006CD 507A          			JMP		INS_FAIL
  1961 006CE               		INST_DJZA_R:		;------- Instruction Test => DJZA R
  1962 006CE 6019          			MOV		A,@0x19
  1963 006CF 015A          			MOV		INST,A
  1964 006D0 40DC          			CALL	STATUS_CLEAR
  1965 006D1 6001          			MOV		A,@0x01
  1966 006D2 0150          			MOV		0x50,A		; [0x50] = 0x01
  1967 006D3 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1968 006D4 507A          			JMP	INS_FAIL
  1969 006D5 6C00          			XOR		A,@0x00		; Check Result ?
  1970 006D6 40DF          			CALL	INST_XOR_JUDGE
  1971 006D7 40DC          			CALL	STATUS_CLEAR
  1972 006D8 6002          			MOV		A,@0x02
  1973 006D9 0150          			MOV		0x50,A		; [0x50] = 0x02
  1974 006DA 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1975 006DB 56DD          			JMP		$+2
  1976 006DC 507A          			JMP	INS_FAIL
  1977 006DD               		INST_JZA_R:			;-------Instruction Test => JZA R
  1978 006DD 6021          			MOV		A,@0x21
  1979 006DE 015A          			MOV		INST,A
  1980 006DF 40DC          			CALL	STATUS_CLEAR
  1981 006E0 60FF          			MOV		A,@0xFF
  1982 006E1 0150          			MOV		0x50,A
  1983 006E2 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1984 006E3 507A          			JMP		INS_FAIL
  1985 006E4 6C00          			XOR		A,@0x00		; Check Result ?
  1986 006E5 40DF          			CALL	INST_XOR_JUDGE
  1987 006E6 40DC          			CALL	STATUS_CLEAR
  1988 006E7 6080          			MOV		A,@0x80
  1989 006E8 0150          			MOV		0x50,A
  1990 006E9 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1991 006EA 56EC          			JMP		$+2
  1992 006EB 507A          			JMP		INS_FAIL
  1993 006EC               		INST_JZ_R:			;-------Instruction Test => JZ R
  1994 006EC 6022          			MOV		A,@0x22
  1995 006ED 015A          			MOV		INST,A
  1996 006EE 40DC          			CALL	STATUS_CLEAR
  1997 006EF 60FF          			MOV		A,@0xFF
  1998 006F0 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1999 006F1 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  2000 006F2 507A          			JMP		INS_FAIL
  2001 006F3 1050          			MOV		A,0x50
  2002 006F4 6C00          			XOR		A,@0x00		; Check Result ?
  2003 006F5 40DF          			CALL	INST_XOR_JUDGE
  2004 006F6 40DC          			CALL	STATUS_CLEAR
  2005 006F7 6080          			MOV		A,@0x80
  2006 006F8 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2007 006F9 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  2008 006FA 56FC          			JMP		$+2
  2009 006FB 507A          			JMP		INS_FAIL
  2010 006FC 0012          		RET
  2011 006FD               	TEST_INST_BRANCH_II:
  2012 006FD               		INST_JE_R:			;-------Instruction Test => JE R
  2013 006FD 6023          			MOV		A,@0x23
  2014 006FE 015A          			MOV		INST,A
  2015 006FF 40DC          			CALL	STATUS_CLEAR
  2016 00700 605A          			MOV		A,@0x5A
  2017 00701 0150          			MOV		0x50,A		; [0x50] = 0x5A
  2018 00702 6150          			JE		0x50		; [0x50] = A?
  2019 00703 507A          			JMP		INS_FAIL
  2020 00704 605B          			MOV		A,@0x5B
  2021 00705 0150          			MOV		0x50,A		; [0x50] = 0x5B
  2022 00706 605C          			MOV		A,@0x5C
  2023 00707 6150          			JE		0x50		; [0x50] = A(0x5C)?
  2024 00708 570A          			JMP		$+2
  2025 00709 507A          			JMP		INS_FAIL
  2026 0070A               		INST_JGE_R:			;-------Instruction Test => JGE R
  2027 0070A 6024          			MOV		A,@0x24
  2028 0070B 015A          			MOV		INST,A
  2029 0070C 40DC          			CALL	STATUS_CLEAR
  2030 0070D 607F          			MOV		A,@0x7F
  2031 0070E 0150          			MOV		0x50,A		; [0x50] = 0x7F
  2032 0070F 6000          			MOV		A,@0x00
  2033 00710 6250          			JGE		0x50		; [0x50] > A ?
  2034 00711 507A          			JMP		INS_FAIL
  2035 00712 40DC          			CALL	STATUS_CLEAR
  2036 00713 60FF          			MOV		A,@0xFF
  2037 00714 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2038 00715 6080          			MOV		A,@0x80
  2039 00716 6250          			JGE		0x50		; [0x50] > A ?
  2040 00717 507A          			JMP		INS_FAIL
  2041 00718 40DC          			CALL	STATUS_CLEAR
  2042 00719 6000          			MOV		A,@0x00
  2043 0071A 0150          			MOV		0x50,A		; [0x50] = 0x00
  2044 0071B 60FF          			MOV		A,@0xFF
  2045 0071C 6250          			JGE		0x50		; [0x50] > A(0xFF) ?x
  2046 0071D 571F          			JMP		$+2
  2047 0071E 507A          			JMP		INS_FAIL
  2048                     
  2049 0071F               		INST_JLE_R:			;-------Instruction Test => JLE R
  2050 0071F 6025          			MOV		A,@0x25
  2051 00720 015A          			MOV		INST,A
  2052 00721 40DC          			CALL	STATUS_CLEAR
  2053 00722 6000          			MOV		A,@0x00
  2054 00723 0150          			MOV		0x50,A		; [0x50] = 0x00
  2055 00724 607F          			MOV		A,@0x7F
  2056 00725 6350          			JLE		0x50		; [0x50] < A ?
  2057 00726 507A          			JMP		INS_FAIL
  2058 00727 6000          			MOV		A,@0x00
  2059 00728 0103          			MOV		STATUS,A
  2060 00729 6080          			MOV		A,@0x80
  2061 0072A 0150          			MOV		0x50,A		; [0x50] = 0x80
  2062 0072B 60FF          			MOV		A,@0xFF
  2063 0072C 6350          			JLE		0x50		; [0x50] < A ?
  2064 0072D 507A          			JMP		INS_FAIL
  2065 0072E 40DC          			CALL	STATUS_CLEAR
  2066 0072F 60FF          			MOV		A,@0xFF
  2067 00730 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2068 00731 6000          			MOV		A,@0x00
  2069 00732 6350          			JLE		0x50		; [0x50] < A(0x00) ?x
  2070 00733 5735          			JMP		$+2
  2071 00734 507A          			JMP		INS_FAIL
  2072 00735               		INST_JE_K:			;-------Instruction Test => JE k
  2073 00735 6027          			MOV		A,@0x27
  2074 00736 015A          			MOV		INST,A
  2075 00737 40DC          			CALL	STATUS_CLEAR
  2076 00738 607F          			MOV		A,@0x7F
  2077 00739 657F          			JE		@0x7F
  2078 0073A 507A          			JMP	INS_FAIL
  2079 0073B 0012          		RET
  2080 0073C               	TEST_INST_BRANCH_III:
  2081 0073C               		INST_CALL_K:		;-------Instruction Test => CALL k
  2082 0073C 6002          			MOV	A,@0x02
  2083 0073D 015A          			MOV	INST,A
  2084 0073E 40DC          			CALL	STATUS_CLEAR
  2085 0073F 6003          			MOV		A,@0x03
  2086 00740 0150          			MOV		0x50,A
  2087 00741 47E2          			CALL	CALL_Test
  2088 00742 1050          			MOV		A,0x50
  2089 00743 6C04          			XOR		A,@0x04
  2090 00744 40DF          			CALL	INST_XOR_JUDGE
  2091                     
  2092 00745               		INST_LCALL_K:		;-------Instruction Test => LCALL k
  2093 00745 6003          			MOV		A,@0x03
  2094 00746 015A          			MOV		INST,A
  2095 00747 40DC          			CALL	STATUS_CLEAR
  2096 00748 6003          			MOV		A,@0x03
  2097 00749 0151          			MOV		0x51,A
  2098 0074A 7A80          			LCALL	LCALL_Test
  2098 0074B 0FFE          			LCALL	LCALL_Test
***     Warning A053: The target address of 'lcall' or 'ljmp' instruction is not over page (4K).
  2099 0074C 1051          			MOV		A,0x51
  2100 0074D 6C04          			XOR		A,@0x04		; Check Result ?
  2101 0074E 40DF          			CALL	INST_XOR_JUDGE
  2102                     
  2103 0074F               		INST_RETL_K:		;-------Instruction Test => RETL k
  2104 0074F 602C          			MOV		A,@0x2C
  2105 00750 015A          			MOV		INST,A
  2106 00751 40DC          			CALL	STATUS_CLEAR
  2107 00752 6000          			MOV		A,@0x00
  2108 00753 4EF0          			CALL	INST_RETL_TABLE
  2109 00754 6CA1          			XOR		A,@0xA1
  2110 00755 40DF          			CALL	INST_XOR_JUDGE
  2111 00756 6001          			MOV		A,@0x01
  2112 00757 4EF0          			CALL	INST_RETL_TABLE
  2113 00758 6CA2          			XOR		A,@0xA2
  2114 00759 40DF          			CALL	INST_XOR_JUDGE
  2115 0075A 6002          			MOV		A,@0x02
  2116 0075B 4EF0          			CALL	INST_RETL_TABLE
  2117 0075C 6CA4          			XOR		A,@0xA4
  2118 0075D 40DF          			CALL	INST_XOR_JUDGE
  2119 0075E 6003          			MOV		A,@0x03
  2120 0075F 4EF0          			CALL	INST_RETL_TABLE
  2121 00760 6CA8          			XOR		A,@0xA8
  2122 00761 40DF          			CALL	INST_XOR_JUDGE
  2123 00762 0012          		RET
  2124 00763               	TEST_INST_CONTROL:
  2125 00763               		INST_ENI:			;-------Instruction Test => ENI , IT?
  2126 00763 6004          			MOV		A,@0x04
  2127 00764 015A          			MOV		INST,A
  2128 00765 0010          			ENI
  2129 00766 3F03          			JBS		IT		; Check IT = 1?
  2130 00767 507A          			JMP	INS_FAIL
  2131 00768               		INST_DISI:			;-------Instruction Test => DISI , IT?
  2132 00768 6005          			MOV		A,@0x05
  2133 00769 015A          			MOV		INST,A
  2134 0076A 0011          			DISI
  2135 0076B 3703          			JBC		IT		; Check IT = 0?
  2136 0076C 507A          			JMP	INS_FAIL
  2137 0076D 0012          		RET
  2138                     
  2139 0076E               	TEST_SHORT_BRANCH:
  2140                     		;ORG	0x800
  2141 0076E 40DC          		CALL	STATUS_CLEAR
  2142 0076F 2803          		BS	C
  2143 00770 6903          		SJC		@0x03
  2144 00771 506E          		JMP		JMP_FAIL
  2145 00772 506E          		JMP		JMP_FAIL
  2146 00773 506E          		JMP		JMP_FAIL
  2147 00774 2003          		BC	C
  2148 00775 6A03          		SJNC	bbb		;@0x03
  2149 00776 506E          		JMP		JMP_FAIL
  2150 00777 506E          		JMP		JMP_FAIL
  2151 00778 506E          		JMP		JMP_FAIL
  2152 00779               		bbb:		
  2153 00779 2A03          			BS		Z
  2154 0077A 6B03          			SJZ		@0x03
  2155 0077B 506E          			JMP		JMP_FAIL
  2156 0077C 506E          			JMP		JMP_FAIL
  2157 0077D 506E          			JMP		JMP_FAIL
  2158 0077E 0200          			CLRA
  2159 0077F 6B03          			SJZ		@0x03
  2160 00780 506E          			JMP		JMP_FAIL
  2161 00781 506E          			JMP		JMP_FAIL
  2162 00782 506E          			JMP		JMP_FAIL
  2163 00783 578B          		JMP		IATEST1		;JMP back Test as below
  2164 00784               		aaa:	
  2165 00784 5798          			JMP	IATEST2		; -9
  2166 00785 506E          			JMP	JMP_FAIL	; -8
  2167 00786 506E          			JMP	JMP_FAIL	; -7
  2168 00787 506E          			JMP	JMP_FAIL	; -6
  2169 00788 506E          			JMP	JMP_FAIL	; -5
  2170 00789 506E          			JMP	JMP_FAIL	; -4
  2171 0078A 506E          			JMP	JMP_FAIL	; -3
  2172 0078B               		IATEST1:	
  2173 0078B 2803          			BS		C		; -2
  2174 0078C 69F7          			SJC		aaa		; -1
  2175 0078D 69F7          			SJC		@0xF7	; -1
  2176 0078E 506E          			JMP		JMP_FAIL
  2177 0078F 506E          			JMP		JMP_FAIL
  2178 00790 506E          			JMP		JMP_FAIL
  2179 00791 57A4          			JMP		IATEST3		; -9
  2180 00792 506E          			JMP		JMP_FAIL	; -8
  2181 00793 506E          			JMP		JMP_FAIL	; -7
  2182 00794 506E          			JMP		JMP_FAIL	; -6
  2183 00795 506E          			JMP		JMP_FAIL	; -5
  2184 00796 506E          			JMP		JMP_FAIL	; -4
  2185 00797 506E          			JMP		JMP_FAIL	; -3
  2186 00798               		IATEST2:	
  2187 00798 2003          			BC		C		; -2
  2188 00799 6AF7          			SJNC		@0xF7	; -1
  2189 0079A 57B5          			JMP		_IPass
  2190 0079B 57B5          			JMP		_IPass
  2191 0079C 57B5          			JMP		_IPass
  2192 0079D 57B0          			JMP		IATEST4		; -9
  2193 0079E 506E          			JMP		JMP_FAIL	; -8
  2194 0079F 506E          			JMP		JMP_FAIL	; -7
  2195 007A0 506E          			JMP		JMP_FAIL	; -6
  2196 007A1 506E          			JMP		JMP_FAIL	; -5
  2197 007A2 506E          			JMP		JMP_FAIL	; -4
  2198 007A3 506E          			JMP		JMP_FAIL	; -3
  2199 007A4               		IATEST3:	
  2200 007A4 2A03          			BS		Z		; -2
  2201 007A5 6BF7          			SJZ		@0xF7	; -1
  2202 007A6 506E          			JMP		JMP_FAIL
  2203 007A7 506E          			JMP		JMP_FAIL
  2204 007A8 506E          			JMP		JMP_FAIL
  2205                     
  2206 007A9 57B5          			JMP		_IPass		; -9
  2207 007AA 506E          			JMP		JMP_FAIL	; -8
  2208 007AB 506E          			JMP		JMP_FAIL	; -7
  2209 007AC 506E          			JMP		JMP_FAIL	; -6
  2210 007AD 506E          			JMP		JMP_FAIL	; -5
  2211 007AE 506E          			JMP		JMP_FAIL	; -4
  2212 007AF 506E          			JMP		JMP_FAIL	; -3
  2213 007B0               		IATEST4:	
  2214 007B0 2203          			BC		Z		; -2
  2215 007B1 6DF7          			SJNZ	@0xF7	; -1
  2216 007B2 506E          			JMP		JMP_FAIL
  2217 007B3 506E          			JMP		JMP_FAIL
  2218 007B4 506E          			JMP		JMP_FAIL
  2219 007B5               		_IPass:
  2220 007B5 0000          				NOP
  2221 007B6 0012          		RET
  2222                     
  2223 007B7               	TEST_READ_ROM:
  2224 007B7               		INST_TBLRD_R:
  2225 007B7 6028          			MOV		A,@0x28
  2226 007B8 015A          			MOV		INST,A
  2227 007B9 7A01          			SBANK	1
  2228 007BA 60F1          			MOV		A,@0xF1		;ADDR(0x0EF1)
  2229 007BB 0145          			MOV		TBPTL,A
  2230 007BC 600E          			MOV		A,@0x0E
  2231 007BD 0146          			MOV		TBPTH,A
  2232 007BE 7A00          			SBANK	0
  2233 007BF 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2234 007C0 6CA1          			XOR		A,@0xA1
  2235 007C1 40DF          			CALL	INST_XOR_JUDGE
  2236 007C2 1050          			MOV		A,0x50
  2237 007C3 6C70          			XOR		A,@0x70
  2238 007C4 40DF          			CALL	INST_XOR_JUDGE
  2239                     
  2240 007C5 7A01          			SBANK	1
  2241                     			;MOV		A,@0xF1		;ADDR(0x0EF1)
  2242                     			;MOV		TBPTL,A
  2243                     			;MOV		A,@0x0E
  2244                     			;MOV		TBPTH,A
  2245 007C6 1545          			INC		TBPTL		;ADDR(0x0EF2)
  2246 007C7 7A00          			SBANK	0
  2247 007C8 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2248 007C9 6CA2          			XOR		A,@0xA2
  2249 007CA 40DF          			CALL	INST_XOR_JUDGE
  2250 007CB 1050          			MOV		A,0x50
  2251 007CC 6C70          			XOR		A,@0x70
  2252 007CD 40DF          			CALL	INST_XOR_JUDGE
  2253 007CE               		INST_TBRD_R:		;-------Instruction Test => TBRD R
  2254 007CE 6033          			MOV		A,@0x33
  2255 007CF 015A          			MOV		INST,A
  2256 007D0 7A01          			SBANK	1
  2257 007D1 60F3          			MOV		A,@0xF3		;ADDR(0x0EF3)
  2258 007D2 0145          			MOV		TBPTL,A
  2259 007D3 600E          			MOV		A,@0x0E
  2260 007D4 0146          			MOV		TBPTH,A
  2261 007D5 7A00          			SBANK	0
  2262 007D6 7B50          			TBRD	0x50
  2263 007D7 1050          			MOV		A,0x50
  2264 007D8 6CA4          			XOR		A,@0xA4
  2265 007D9 40DF          			CALL	INST_XOR_JUDGE
  2266                     
  2267 007DA 7A01          			SBANK	1
  2268                     			;MOV		A,@0xF3
  2269                     			;MOV		TBPTL,A
  2270                     			;MOV		A,@0x0E
  2271                     			;MOV		TBPTH,A
  2272 007DB 1545          			INC		TBPTL		;ADDR(0x0EF4)
  2273 007DC 7A00          			SBANK	0
  2274 007DD 7B50          			TBRD	0x50
  2275 007DE 1050          			MOV		A,0x50
  2276 007DF 6CA8          			XOR		A,@0xA8
  2277 007E0 40DF          			CALL	INST_XOR_JUDGE
  2278 007E1 0012          		RET
  2279                     
  2280                     
  2281 007E2               	CALL_Test:
  2282 007E2 1550          		INC		0x50
  2283 007E3 0012          		RET
  2284                     ORG	0x800 ; ADDR(2048)
  2285 00800 506E          	JMP		JMP_FAIL
  2286 00801 506E          	JMP		JMP_FAIL
  2287 00802 506E          	JMP		JMP_FAIL
  2288                     ;================== EEPROM Test Routine =====================
  2289                     
  2290                     
  2291                     ;================== Return Table ============================
  2292                     ORG	0x0EF0	; ADDR(3824)
  2293 00EF0               	INST_RETL_TABLE:
  2294 00EF0 0F02          		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
  2295 00EF1 70A1          		RETL	@0xA1
  2296 00EF2 70A2          		RETL	@0xA2
  2297 00EF3 70A4          		RETL	@0xA4
  2298 00EF4 70A8          		RETL	@0xA8
  2299 00EF5 701A          		RETL	@0x1A
  2300 00EF6 702A          		RETL	@0x2A
  2301 00EF7 704A          		RETL	@0x4A
  2302 00EF8 708A          		RETL	@0x8A
  2303                     
  2304                     ;================== RAM Test Routine ========================
  2305                     ORG	0x0F00	; ADDR(3840)
  2306 00F00               	TEST_RAM_BANK_0_5:
  2307 00F00 6080          		MOV		A,@0x80		; Write Start SRAM(0x55)
  2308 00F01 0104          		MOV		RSR,A
  2309 00F02 7A40          		GBANK	0
  2310 00F03 6055          		MOV		A,@0x55
  2311 00F04 0100          		MOV		IAR,A
  2312 00F05 1504          		INC		RSR
  2313 00F06 6000          		MOV		A,@0x00
  2314 00F07 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2315 00F08 3A03          		JBS		Z
  2316 00F09 5F03          		JMP		$-6
  2317 00F0A 6080          		MOV		A,@0x80		; Read Start SRAM(0x55)
  2318 00F0B 0104          		MOV		RSR,A
  2319 00F0C 7A40          		GBANK	0
  2320 00F0D 6055          		MOV		A,@0x55
  2321 00F0E 0D00          		XOR		IAR,A
  2322 00F0F 3A03          		JBS		Z
  2323 00F10 5074          		JMP		RAM_FAIL
  2324 00F11 1504          		INC		RSR
  2325 00F12 6000          		MOV		A,@0x00
  2326 00F13 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2327 00F14 3A03          		JBS		Z
  2328 00F15 5F0D          		JMP		$-8
  2329 00F16 0012          		RET
  2330 00F17               	TEST_RAM_BANK_0_A:
  2331 00F17 6080          		MOV		A,@0x80		; Write Start SRAM(0xAA)
  2332 00F18 0104          		MOV		RSR,A
  2333 00F19 7A40          		GBANK	0
  2334 00F1A 60AA          		MOV		A,@0xAA		; SRAM(0xAA)
  2335 00F1B 0100          		MOV		IAR,A
  2336 00F1C 1504          		INC		RSR
  2337 00F1D 6000          		MOV		A,@0x00
  2338 00F1E 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2339 00F1F 3A03          		JBS		Z
  2340 00F20 5F1A          		JMP		$-6
  2341 00F21 6080          		MOV		A,@0x80
  2342 00F22 0104          		MOV		RSR,A
  2343 00F23 7A40          		GBANK	0
  2344 00F24 60AA          		MOV		A,@0xAA
  2345 00F25 0D00          		XOR		IAR,A
  2346 00F26 3A03          		JBS		Z
  2347 00F27 5074          		JMP		RAM_FAIL
  2348 00F28 1504          		INC		RSR
  2349 00F29 6000          		MOV		A,@0x00
  2350 00F2A 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2351 00F2B 3A03          		JBS		Z
  2352 00F2C 5F24          		JMP		$-8
  2353 00F2D 0012          		RET
  2354 00F2E               	TEST_RAM_BANK_1_3:
  2355 00F2E 6080          		MOV		A,@0x80		; Write Start SRAM(0x33)
  2356 00F2F 0104          		MOV		RSR,A
  2357 00F30 7A41          		GBANK	1
  2358 00F31 6033          		MOV		A,@0x33		; SRAM(0x33)
  2359 00F32 0100          		MOV		IAR,A
  2360 00F33 1504          		INC		RSR
  2361 00F34 6000          		MOV		A,@0x00
  2362 00F35 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2363 00F36 3A03          		JBS		Z
  2364 00F37 5F31          		JMP		$-6
  2365 00F38 6080          		MOV		A,@0x80
  2366 00F39 0104          		MOV		RSR,A
  2367 00F3A 7A41          		GBANK	1
  2368 00F3B 6033          		MOV		A,@0x33
  2369 00F3C 0D00          		XOR		IAR,A
  2370 00F3D 3A03          		JBS		Z
  2371 00F3E 5074          		JMP		RAM_FAIL
  2372 00F3F 1504          		INC		RSR
  2373 00F40 6000          		MOV		A,@0x00
  2374 00F41 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2375 00F42 3A03          		JBS		Z
  2376 00F43 5F3B          		JMP		$-8
  2377 00F44 0012          		RET
  2378 00F45               	TEST_RAM_BANK_1_C:
  2379 00F45 6080          		MOV		A,@0x80		; Write Start SRAM(0xCC)
  2380 00F46 0104          		MOV		RSR,A
  2381 00F47 7A41          		GBANK	1
  2382 00F48 60CC          		MOV		A,@0xCC		; SRAM(0xCC)
  2383 00F49 0100          		MOV		IAR,A
  2384 00F4A 1504          		INC		RSR
  2385 00F4B 6000          		MOV		A,@0x00
  2386 00F4C 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2387 00F4D 3A03          		JBS		Z
  2388 00F4E 5F48          		JMP		$-6
  2389 00F4F 6080          		MOV		A,@0x80
  2390 00F50 0104          		MOV		RSR,A
  2391 00F51 7A41          		GBANK	1
  2392 00F52 60CC          		MOV		A,@0xCC
  2393 00F53 0D00          		XOR		IAR,A
  2394 00F54 3A03          		JBS		Z
  2395 00F55 5074          		JMP		RAM_FAIL
  2396 00F56 1504          		INC		RSR
  2397 00F57 6000          		MOV		A,@0x00
  2398 00F58 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2399 00F59 3A03          		JBS		Z
  2400 00F5A 5F52          		JMP		$-8
  2401 00F5B 0012          		RET
  2402                     
  2403                     ;================== Long Sub Routine ========================
  2404                     ORG	0x0FFE	; >4K
  2405 00FFE               	LCALL_Test:
  2406 00FFE 1551          		INC		0x51
  2407 00FFF 0012          		RET
  0 Error(s), 1 Warning(s), 0 User Message(s)