****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0XC    , End=0X4F   , Size=68
Start=0X8BD  , End=0X17FF , Size=3907
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  2168 x 15 bits( 35.3%)
Free            |  3976 x 15 bits( 64.7%)
----------------------------------------
****************************************
The Checksum is -- 0x7E4D
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 505D  	JMP JMP_FAIL	;0x0046
000003: 505D  	JMP JMP_FAIL	;0x0047
000004: 505D  	JMP JMP_FAIL	;0x0048
000005: 505D  	JMP JMP_FAIL	;0x0049
000006: 505D  	JMP JMP_FAIL	;0x004A
000007: 505D  	JMP JMP_FAIL	;0x004B
000008: 505D  	JMP JMP_FAIL	;0x004C
000009: 505D  	JMP JMP_FAIL	;0x004D
00000A: 505D  	JMP JMP_FAIL	;0x004E
00000B: 505D  	JMP JMP_FAIL	;0x004F
000050: 2805  	BS		P50	;Off P50
000051: 2905  	BS		P51	;On P51
000052: 4097  	CALL	RAM_SHA_INIT
000053: 40A1  	CALL	RAM_IND_INIT
000054: 40CA  	CALL	EEPROM_INIT
000055: 7A00  	SBANK	0
000056: 40D8  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000057: 420D  	CALL	TEST_INST_LOGIC			;AND, OR, COM, COMA, XOR, CLR, CLRA, RLC, RLCA, RRC, RRCA, SWAP, SWAPA, BTG, RRA, RR, RLA, RL, XCH
000058: 4222  	CALL	TEST_INST_TRANSFER		;MOV
000059: 4235  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP 
00005A: 0000  	NOP
00005B: 5055  	JMP		BACK_GROUND_LOOP
00005C: 5050  	JMP		MAIN
00005D: 7A00  	SBANK	0
00005E: 505D  	JMP		JMP_FAIL
00005F: 7A00  	SBANK	0
000060: 505F  	JMP		RAM_FAIL
000061: 7A00  	SBANK	0
000062: 5061  	JMP		INST_FAIL
000063: 7A00  		SBANK	0
000064: 2F0E  		BS		CPUS	;FSYS=FM
000065: 260E  		BC		IDLE	;SLEEP_MODE
000066: 0013  		RETI
000067: 7A00  		SBANK	0
000068: 0305  		CLR		P5
000069: 600F  		MOV		A,@0x0F	;P50~P53 As Input, Other Setting As Output
00006A: 010B  		MOV		IOCR5,A
00006B: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00006C: 0105  		MOV		P5,A
00006D: 0013  		RETI
00006E: 7A00  		SBANK	0
00006F: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000070: 5073  		JMP		$+3
000071: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000072: 0003  		SLEP
000073: 3B03  		JBS		P
000074: 5077  		JMP		$+3
000075: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000076: 0003  		SLEP
000077: 3B03  		JBS		P
000078: 507B  		JMP		$+3
000079: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007A: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007B: 0003  		SLEP		
00007C: 0013  		RETI
00007D: 3A05  		JBS		P5,2		; Push, or not
00007E: 5080  		JMP		$+2
00007F: 507D  		JMP		$-2
000080: 3A05  		JBS		P5,2
000081: 507D  		JMP		KEY_DEBOUNCE
000082: 3A05  		JBS		P5,2
000083: 507D  		JMP		KEY_DEBOUNCE
000084: 3A05  		JBS		P5,2
000085: 507D  		JMP		KEY_DEBOUNCE
000086: 3A05  		JBS		P5,2
000087: 507D  		JMP		KEY_DEBOUNCE
000088: 3A05  		JBS		P5,2
000089: 507D  		JMP		KEY_DEBOUNCE
00008A: 3A05  		JBS		P5,2
00008B: 507D  		JMP		KEY_DEBOUNCE
00008C: 3A05  		JBS		P5,2
00008D: 507D  		JMP		KEY_DEBOUNCE
00008E: 3A05  		JBS		P5,2
00008F: 507D  		JMP		KEY_DEBOUNCE
000090: 3A05  		JBS		P5,2
000091: 507D  		JMP		KEY_DEBOUNCE
000092: 3A05  		JBS		P5,2
000093: 5091  		JMP		$-2
000094: 60FF  		MOV		A,@0xFF		; Turn Off all LED
000095: 0105  		MOV		P5,A		
000096: 0013  		RETI
000097: 6050  		MOV		A,@0x50
000098: 0104  		MOV		RSR,A
000099: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
00009A: 0100  		MOV		IAR,A
00009B: 1504  		INC		RSR
00009C: 6080  		MOV		A,@0x80
00009D: 0D04  		XOR		RSR,A
00009E: 3A03  		JBS		Z
00009F: 5099  		JMP		$-6
0000A0: 0013  		RETI
0000A1: 6080  		MOV		A,@0x80
0000A2: 0104  		MOV		RSR,A
0000A3: 7A40  		GBANK	0
0000A4: 60FF  		MOV		A,@0xFF
0000A5: 0100  		MOV		IAR,A
0000A6: 1504  		INC		RSR
0000A7: 6000  		MOV		A,@0x00
0000A8: 0D04  		XOR		RSR,A
0000A9: 3A03  		JBS		Z
0000AA: 50A3  		JMP		RAM_IND_LOOP_0
0000AB: 6080  		MOV		A,@0x80
0000AC: 0104  		MOV		RSR,A
0000AD: 7A41  		GBANK	1
0000AE: 60FF  		MOV		A,@0xFF
0000AF: 0100  		MOV		IAR,A
0000B0: 1504  		INC		RSR
0000B1: 6000  		MOV		A,@0x00
0000B2: 0D04  		XOR		RSR,A
0000B3: 3A03  		JBS		Z
0000B4: 50AD  		JMP		RAM_IND_LOOP_1
0000B5: 6080  		MOV		A,@0x80
0000B6: 0104  		MOV		RSR,A
0000B7: 7A42  		GBANK	2
0000B8: 60FF  		MOV		A,@0xFF
0000B9: 0100  		MOV		IAR,A
0000BA: 1504  		INC		RSR
0000BB: 6000  		MOV		A,@0x00
0000BC: 0D04  		XOR		RSR,A
0000BD: 3A03  		JBS		Z
0000BE: 50B7  		JMP		RAM_IND_LOOP_2
0000BF: 6080  		MOV		A,@0x80
0000C0: 0104  		MOV		RSR,A
0000C1: 7A43  		GBANK	3
0000C2: 60FF  		MOV		A,@0xFF
0000C3: 0100  		MOV		IAR,A
0000C4: 1504  		INC		RSR
0000C5: 6000  		MOV		A,@0x00
0000C6: 0D04  		XOR		RSR,A
0000C7: 3A03  		JBS		Z
0000C8: 50C1  		JMP		RAM_IND_LOOP_3
0000C9: 0013  		RETI
0000CA: 6080  		MOV		A,@0x80
0000CB: 0141  		MOV		EECR2,A
0000CC: 1000  		MOV		A,0x00
0000CD: 0150  		MOV		TMP50,A
0000CE: 1050  		MOV		A,TMP50
0000CF: 0142  		MOV		EERA,A
0000D0: 60FF  		MOV		A,@0xFF
0000D1: 0143  		MOV		EERD,A
0000D2: 1550  		INC		TMP50
0000D3: 1080  		MOV		A,0x80
0000D4: 0C50  		XOR		A,TMP50
0000D5: 3A03  		JBS		Z
0000D6: 50CE  		JMP		EEPROM_INIT_LOOP
0000D7: 0013  		RETI
0000D8: 6001  			MOV		A,@0x01
0000D9: 0150  			MOV		INST,A
0000DA: 6000  			MOV		A,@0x00
0000DB: 0103  			MOV		STATUS,A
0000DC: 60AA  			MOV		A,@0xAA
0000DD: 0001  			DAA
0000DE: 3803  			JBS		C			; Check C = 1?
0000DF: 58BB  			JMP	INS_FAIL
0000E0: 3103  			JBC		DC			; Check DC = 0?
0000E1: 58BB  			JMP	INS_FAIL
0000E2: 3203  			JBC		Z			; Check Z = 0?
0000E3: 58BB  			JMP	INS_FAIL
0000E4: 3503  			JBC		OV			; Check OV = 0?
0000E5: 58BB  			JMP	INS_FAIL
0000E6: 3603  			JBC		N			; Check N = 0?
0000E7: 58BB  			JMP	INS_FAIL
0000E8: 6C10  			XOR		A,@0x10		; Check Result ?
0000E9: 3A03  			JBS		Z			; Check Z = 1?
0000EA: 58BB  			JMP	INS_FAIL
0000EB: 3603  			JBC		N			; Check N = 0?
0000EC: 58BB  			JMP	INS_FAIL
0000ED: 6000  			MOV		A,@0x00
0000EE: 0103  			MOV		STATUS,A
0000EF: 6080  			MOV		A,@0x80
0000F0: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000F1: 607F  			MOV		A,@0x7F		; 
0000F2: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000F3: 0001  			DAA
0000F4: 3803  			JBS		C			; Check C = 1?
0000F5: 58BB  			JMP	INS_FAIL
0000F6: 3103  			JBC		DC			; Check DC = 0?
0000F7: 58BB  			JMP	INS_FAIL
0000F8: 3203  			JBC		Z			; Check Z = 0?
0000F9: 58BB  			JMP	INS_FAIL
0000FA: 3503  			JBC		OV			; Check OV = 0?
0000FB: 58BB  			JMP	INS_FAIL
0000FC: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
0000FD: 58BB  			JMP	INS_FAIL
0000FE: 2203  			BC		Z
0000FF: 2603  			BC		N
000100: 6C65  			XOR		A,@0x65		; Check Result ?
000101: 3A03  			JBS		Z			; Check Z = 1?
000102: 58BB  			JMP	INS_FAIL
000103: 3603  			JBC		N			; Check N = 0?
000104: 58BB  			JMP	INS_FAIL
000105: 0000  			NOP
000106: 6000  			MOV		A,@0x00
000107: 0103  			MOV		STATUS,A
000108: 2803  			BS		C
000109: 6080  			MOV		A,@0x80
00010A: 0150  			MOV		0x50,A		; [0x50] = 0x80
00010B: 607F  			MOV		A,@0x7F		; 
00010C: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
00010D: 0001  			DAA
00010E: 3803  			JBS		C			; Check C = 1? 	/ By ADC
00010F: 58BB  			JMP	INS_FAIL
000110: 3903  			JBS		DC			; Check DC = 1? / By ADC
000111: 58BB  			JMP	INS_FAIL
000112: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
000113: 58BB  			JMP	INS_FAIL
000114: 3503  			JBC		OV			; Check OV = 0?
000115: 58BB  			JMP	INS_FAIL
000116: 3603  			JBC		N			; Check N = 0?
000117: 58BB  			JMP	INS_FAIL
000118: 6C66  			XOR		A,@0x66		; Check Result ?
000119: 3A03  			JBS		Z			; Check Z = 1?
00011A: 58BB  			JMP	INS_FAIL
00011B: 3603  			JBC		N			; Check N = 0?
00011C: 58BB  			JMP	INS_FAIL
00011D: 6000  			MOV		A,@0x00
00011E: 0103  			MOV		STATUS,A
00011F: 60FF  			MOV		A,@0xFF
000120: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000121: 607F  			MOV		A,@0x7F		; 
000122: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
000123: 0001  			DAA
000124: 3803  			JBS		C			; Check C = 1? 	/ By SUB
000125: 58BB  			JMP	INS_FAIL
000126: 3903  			JBS		DC			; Check DC = 1? / By SUB
000127: 58BB  			JMP	INS_FAIL
000128: 3203  			JBC		Z			; Check Z = 0?
000129: 58BB  			JMP	INS_FAIL
00012A: 3503  			JBC		OV			; Check OV = 0?
00012B: 58BB  			JMP	INS_FAIL
00012C: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
00012D: 58BB  			JMP	INS_FAIL
00012E: 2203  			BC		Z
00012F: 2603  			BC		N
000130: 6CE6  			XOR		A,@0xE6		; Check Result ?
000131: 3A03  			JBS		Z			; Check Z = 1?
000132: 58BB  			JMP	INS_FAIL
000133: 3603  			JBC		N			; Check N = 0?
000134: 58BB  			JMP	INS_FAIL
000135: 6008  			MOV		A,@0x08
000136: 0150  			MOV		INST,A
000137: 605A  			MOV		A,@0x5A
000138: 6C5A  			XOR		A,@0x5A		; Check Result ?
000139: 3A03  			JBS		Z			; Check Z = 1?
00013A: 58BB  			JMP	INS_FAIL
00013B: 3603  			JBC		N			; Check N = 0?
00013C: 58BB  			JMP	INS_FAIL
00013D: 605A  			MOV		A,@0x5A
00013E: 0200  			CLRA
00013F: 3A03  			JBS		Z			; Check Z = 1?
000140: 58BB  			JMP	INS_FAIL
000141: 2203  			BC		Z
000142: 6C00  			XOR		A,@0x00		; Check Result ?
000143: 3A03  			JBS		Z			; Check Z = 1?
000144: 58BB  			JMP	INS_FAIL
000145: 3603  			JBC		N			; Check N = 0?
000146: 58BB  			JMP	INS_FAIL
000147: 6009  			MOV		A,@0x09
000148: 0150  			MOV		INST,A
000149: 60AA  			MOV		A,@0xAA
00014A: 0150  			MOV		0x50,A
00014B: 1050  			MOV		A,0x50
00014C: 6CAA  			XOR		A,@0xAA		; Check Result ?
00014D: 3A03  			JBS		Z			; Check Z = 1?
00014E: 58BB  			JMP	INS_FAIL
00014F: 3603  			JBC		N			; Check N = 0?
000150: 58BB  			JMP	INS_FAIL
000151: 0350  			CLR		0x50
000152: 3A03  			JBS		Z			; Check Z = 1?
000153: 58BB  			JMP	INS_FAIL
000154: 2203  			BC		Z
000155: 1050  			MOV		A,0x50
000156: 6C00  			XOR		A,@0x00		; Check Result ?
000157: 3A03  			JBS		Z			; Check Z = 1?
000158: 58BB  			JMP	INS_FAIL
000159: 3603  			JBC		N			; Check N = 0?
00015A: 58BB  			JMP	INS_FAIL
00015B: 600A  			MOV		A,@0x0A
00015C: 0150  			MOV		INST,A
00015D: 6000  			MOV		A,@0x00
00015E: 0103  			MOV		STATUS,A
00015F: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000160: 0150  			MOV		0x50,A		; [0x50] = 0x02
000161: 6001  			MOV		A,@0x01
000162: 0450  			SUB		A,0x50		; A = [0x50] - A
000163: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
000164: 58BB  			JMP	INS_FAIL
000165: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000166: 58BB  			JMP	INS_FAIL
000167: 3203  			JBC		Z			; Check Z = 0?
000168: 58BB  			JMP	INS_FAIL
000169: 3503  			JBC		OV			; Check OV = 0?
00016A: 58BB  			JMP	INS_FAIL
00016B: 3603  			JBC		N			; Check N = 0?
00016C: 58BB  			JMP	INS_FAIL
00016D: 2203  			BC		Z
00016E: 6C01  			XOR		A,@0x01		; Check Result ?
00016F: 3A03  			JBS		Z			; Check Z = 1?
000170: 58BB  			JMP	INS_FAIL
000171: 3603  			JBC		N			; Check N = 0?
000172: 58BB  			JMP	INS_FAIL
000173: 6000  			MOV		A,@0x00
000174: 0103  			MOV		STATUS,A
000175: 6002  			MOV		A,@0x02		; SUB(2-2)=0
000176: 0150  			MOV		0x50,A		; [0x50] = 0x02
000177: 6002  			MOV		A,@0x02
000178: 0450  			SUB		A,0x50		; A = [0x50] - A
000179: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00017A: 58BB  			JMP	INS_FAIL
00017B: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00017C: 58BB  			JMP	INS_FAIL
00017D: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
00017E: 58BB  			JMP	INS_FAIL
00017F: 3503  			JBC		OV			; Check OV = 0?
000180: 58BB  			JMP	INS_FAIL
000181: 3603  			JBC		N			; Check N = 0?
000182: 58BB  			JMP	INS_FAIL
000183: 2203  			BC		Z
000184: 6C00  			XOR		A,@0x00		; Check Result ?
000185: 3A03  			JBS		Z			; Check Z = 1?
000186: 58BB  			JMP	INS_FAIL
000187: 3603  			JBC		N			; Check N = 0?
000188: 58BB  			JMP	INS_FAIL
000189: 6000  			MOV		A,@0x00
00018A: 0103  			MOV		STATUS,A
00018B: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
00018C: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00018D: 607F  			MOV		A,@0x7F
00018E: 0450  			SUB		A,0x50		; A = [0x50] - A
00018F: 3803  			JBS		C			; Check C = 1?
000190: 58BB  			JMP	INS_FAIL
000191: 3903  			JBS		DC			; Check DC = 1?
000192: 58BB  			JMP	INS_FAIL
000193: 3203  			JBC		Z			; Check Z = 0?
000194: 58BB  			JMP	INS_FAIL
000195: 3503  			JBC		OV			; Check OV = 0?
000196: 58BB  			JMP	INS_FAIL
000197: 3E03  			JBS		N			; Check N = 1?
000198: 58BB  			JMP	INS_FAIL
000199: 2203  			BC		Z
00019A: 2603  			BC		N
00019B: 6C80  			XOR		A,@0x80		; Check Result ?
00019C: 3A03  			JBS		Z			; Check Z = 1?
00019D: 58BB  			JMP	INS_FAIL
00019E: 3603  			JBC		N			; Check N = 0?
00019F: 58BB  			JMP	INS_FAIL
0001A0: 6000  			MOV		A,@0x00
0001A1: 0103  			MOV		STATUS,A
0001A2: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001A3: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001A4: 607F  			MOV		A,@0x7F
0001A5: 0450  			SUB		A,0x50		; A = [0x50] - A
0001A6: 3803  			JBS		C			; Check C = 1?
0001A7: 58BB  			JMP	INS_FAIL
0001A8: 3103  			JBC		DC			; Check DC = 0?
0001A9: 58BB  			JMP	INS_FAIL
0001AA: 3203  			JBC		Z			; Check Z = 0?
0001AB: 58BB  			JMP	INS_FAIL
0001AC: 3D03  			JBS		OV			; Check OV = 1?
0001AD: 58BB  			JMP	INS_FAIL
0001AE: 3603  			JBC		N			; Check N = 0?
0001AF: 58BB  			JMP	INS_FAIL
0001B0: 2203  			BC		Z
0001B1: 2603  			BC		N
0001B2: 6C01  			XOR		A,@0x01		; Check Result ?
0001B3: 3A03  			JBS		Z			; Check Z = 1?
0001B4: 58BB  			JMP	INS_FAIL
0001B5: 3603  			JBC		N			; Check N = 0?
0001B6: 58BB  			JMP	INS_FAIL
0001B7: 6000  			MOV		A,@0x00
0001B8: 0103  			MOV		STATUS,A
0001B9: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001BA: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001BB: 6003  			MOV		A,@0x03
0001BC: 0450  			SUB		A,0x50		; A = [0x50] - A
0001BD: 3003  			JBC		C			; Check C = 0?
0001BE: 58BB  			JMP	INS_FAIL
0001BF: 3103  			JBC		DC			; Check DC = 0?
0001C0: 58BB  			JMP	INS_FAIL
0001C1: 3203  			JBC		Z			; Check Z = 0?
0001C2: 58BB  			JMP	INS_FAIL
0001C3: 3503  			JBC		OV			; Check OV = 0?
0001C4: 58BB  			JMP	INS_FAIL
0001C5: 3E03  			JBS		N			; Check N = 1?
0001C6: 58BB  			JMP	INS_FAIL
0001C7: 2203  			BC		Z
0001C8: 2603  			BC		N
0001C9: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001CA: 3A03  			JBS		Z			; Check Z = 1?
0001CB: 58BB  			JMP	INS_FAIL
0001CC: 3603  			JBC		N			; Check N = 0?
0001CD: 58BB  			JMP	INS_FAIL
0001CE: 600B  			MOV		A,@0x0B
0001CF: 0150  			MOV		INST,A
0001D0: 6000  			MOV		A,@0x00
0001D1: 0103  			MOV		STATUS,A
0001D2: 6002  			MOV		A,@0x02
0001D3: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001D4: 6001  			MOV		A,@0x01
0001D5: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001D6: 1003  			MOV		A,STATUS
0001D7: 6C1B  			XOR		A,@0x1B		; for non reset
0001D8: 3A03  			JBS		Z			; Check Z = 1?
0001D9: 58BB  			JMP	INS_FAIL
0001DA: 3603  			JBC		N			; Check N = 0?
0001DB: 58BB  			JMP	INS_FAIL
0001DC: 2203  			BC		Z
0001DD: 2603  			BC		N
0001DE: 1050  			MOV		A,0x50
0001DF: 6C01  			XOR		A,@0x01		; Check Result ?
0001E0: 3A03  			JBS		Z			; Check Z = 1?
0001E1: 58BB  			JMP	INS_FAIL
0001E2: 3603  			JBC		N			; Check N = 0?
0001E3: 58BB  			JMP	INS_FAIL
0001E4: 6000  			MOV		A,@0x00
0001E5: 0103  			MOV		STATUS,A
0001E6: 6002  			MOV		A,@0x02
0001E7: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001E8: 6002  			MOV		A,@0x02
0001E9: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001EA: 1003  			MOV		A,STATUS
0001EB: 6C1F  			XOR		A,@0x1F		; for nono reset
0001EC: 3A03  			JBS		Z			; Check Z = 1?
0001ED: 58BB  			JMP	INS_FAIL
0001EE: 3603  			JBC		N			; Check N = 0?
0001EF: 58BB  			JMP	INS_FAIL
0001F0: 2203  			BC		Z
0001F1: 2603  			BC		N
0001F2: 1050  			MOV		A,0x50
0001F3: 6C00  			XOR		A,@0x00		; Check Result ?
0001F4: 3A03  			JBS		Z			; Check Z = 1?
0001F5: 58BB  			JMP	INS_FAIL
0001F6: 3603  			JBC		N			; Check N = 0?
0001F7: 58BB  			JMP	INS_FAIL
0001F8: 6000  			MOV		A,@0x00
0001F9: 0103  			MOV		STATUS,A
0001FA: 6080  			MOV		A,@0x80
0001FB: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001FC: 6001  			MOV		A,@0x01
0001FD: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001FE: 1003  			MOV		A,STATUS
0001FF: 6C39  			XOR		A,@0x39	;; for non reset
000200: 3A03  			JBS		Z			; Check Z = 1?
000201: 58BB  			JMP	INS_FAIL
000202: 3603  			JBC		N			; Check N = 0?
000203: 58BB  			JMP	INS_FAIL
000204: 2203  			BC		Z
000205: 2603  			BC		N
000206: 1050  			MOV		A,0x50
000207: 6C7F  			XOR		A,@0x7F		; Check Result ?
000208: 3A03  			JBS		Z			; Check Z = 1?
000209: 58BB  			JMP	INS_FAIL
00020A: 3603  			JBC		N			; Check N = 0?
00020B: 58BB  			JMP	INS_FAIL
00020C: 0013  		RETI
00020D: 6006  			MOV		A,@0x06
00020E: 0150  			MOV		INST,A
00020F: 6000  			MOV		A,@0x00
000210: 0105  			MOV		P5,A
000211: 0085  			BTG		P5,0
000212: 1005  			MOV		A,P5
000213: 6C01  			XOR		A,@0x01		; Check Result ?
000214: 3A03  			JBS		Z			; Check Z = 1?
000215: 58BB  			JMP	INS_FAIL
000216: 3603  			JBC		N			; Check N = 0?
000217: 58BB  			JMP	INS_FAIL
000218: 60FF  			MOV		A,@0xFF
000219: 0104  			MOV		RSR,A		; Start Address
00021A: 0084  			BTG		RSR
00021B: 1004  			MOV		A,RSR
00021C: 6CFE  			XOR		A,@0xFE		; Check Result ?
00021D: 3A03  			JBS		Z			; Check Z = 1?
00021E: 58BB  			JMP	INS_FAIL
00021F: 3603  			JBC		N			; Check N = 0?
000220: 58BB  			JMP	INS_FAIL
000221: 0013  		RETI
000222: 6007  			MOV		A,@0x07
000223: 0150  			MOV		INST,A
000224: 6000  			MOV		A,@0x00
000225: 0103  			MOV		STATUS,A
000226: 60FF  			MOV		A,@0xFF
000227: 0150  			MOV		0x50,A
000228: 1003  			MOV		A,STATUS
000229: 6C98  			XOR		A,@0x98		; Check Status ? ;; For not reset
00022A: 3A03  			JBS		Z			; Check Z = 1?
00022B: 58BB  			JMP	INS_FAIL
00022C: 3603  			JBC		N			; Check N = 0?
00022D: 58BB  			JMP	INS_FAIL
00022E: 1050  			MOV		A,0x50
00022F: 6CFF  			XOR		A,@0xFF		; Check Result ?
000230: 3A03  			JBS		Z			; Check Z = 1?
000231: 58BB  			JMP	INS_FAIL
000232: 3603  			JBC		N			; Check N = 0?
000233: 58BB  			JMP	INS_FAIL
000234: 0013  		RETI
000235: 6004  			MOV		A,@0x04
000236: 0150  			MOV		INST,A
000237: 0010  			ENI
000238: 3F03  			JBS		IT		; Check IT = 1?
000239: 58BB  			JMP	INS_FAIL
00023A: 6005  			MOV		A,@0x05
00023B: 0150  			MOV		INST,A
00023C: 0011  			DISI
00023D: 3703  			JBC		IT		; Check IT = 0?
00023E: 58BB  			JMP	INS_FAIL
00023F: 0013  		RETI
000240: 600C  	MOV		A,@0x0C
000241: 0150  	MOV		INST,A
000242: 6000  	MOV		A,@0x00
000243: 0103  	MOV		STATUS,A
000244: 6020  		MOV		A,@0x20
000245: 0150  		MOV		0x50,A		; [0x50] = 0x20
000246: 0650  		DECA	0x50		; A = [0x50] - 1
000247: 3803  		JBS		C			; Check C = 1?	; Result is Positive
000248: 58BB  		JMP	INS_FAIL
000249: 3103  		JBC		DC			; Check DC = 0?
00024A: 58BB  		JMP	INS_FAIL
00024B: 3203  		JBC		Z			; Check Z = 0?
00024C: 58BB  		JMP	INS_FAIL
00024D: 3503  		JBC		OV			; Check OV = 0?
00024E: 58BB  		JMP	INS_FAIL
00024F: 3603  		JBC		N			; Check N = 0?
000250: 58BB  		JMP	INS_FAIL
000251: 6C1F  		XOR		A,@0x1F		; Check Result ?
000252: 3A03  		JBS		Z			; Check Z = 1?
000253: 58BB  		JMP	INS_FAIL
000254: 3603  		JBC		N			; Check N = 0?
000255: 58BB  		JMP	INS_FAIL
000256: 6000  	MOV		A,@0x00
000257: 0103  	MOV		STATUS,A
000258: 6001  		MOV		A,@0x01
000259: 0150  		MOV		0x50,A		; [0x50] = 0x01
00025A: 0650  		DECA	0x50		; A = [0x50] - 1
00025B: 3803  		JBS		C			; Check C = 1?	; Result is Positive
00025C: 58BB  		JMP	INS_FAIL
00025D: 3903  		JBS		DC			; Check DC = 1?
00025E: 58BB  		JMP	INS_FAIL
00025F: 3A03  		JBS		Z			; Check Z = 1?
000260: 58BB  		JMP	INS_FAIL
000261: 3503  		JBC		OV			; Check OV = 0?
000262: 58BB  		JMP	INS_FAIL
000263: 3603  		JBC		N			; Check N = 0?
000264: 58BB  		JMP	INS_FAIL
000265: 2203  		BC		Z
000266: 6C00  		XOR		A,@0x00		; Check Result ?
000267: 3A03  		JBS		Z			; Check Z = 1?
000268: 58BB  		JMP	INS_FAIL
000269: 3603  		JBC		N			; Check N = 0?
00026A: 58BB  		JMP	INS_FAIL
00026B: 6000  	MOV		A,@0x00
00026C: 0103  	MOV		STATUS,A
00026D: 6000  		MOV		A,@0x00
00026E: 0150  		MOV		0x50,A		; [0x50] = 0x00
00026F: 0650  		DECA	0x50		; A = [0x50] - 1
000270: 3003  		JBC		C			; Check C = 0?
000271: 58BB  		JMP	INS_FAIL
000272: 3103  		JBC		DC			; Check DC = 0?
000273: 58BB  		JMP	INS_FAIL
000274: 3203  		JBC		Z			; Check Z = 0?
000275: 58BB  		JMP	INS_FAIL
000276: 3503  		JBC		OV			; Check OV = 0?
000277: 58BB  		JMP	INS_FAIL
000278: 3E03  		JBS		N			; Check N = 1?
000279: 58BB  		JMP	INS_FAIL
00027A: 2203  		BC		Z
00027B: 2603  		BC		N
00027C: 6CFF  		XOR		A,@0xFF		; Check Result ?
00027D: 3A03  		JBS		Z			; Check Z = 1?
00027E: 58BB  		JMP	INS_FAIL
00027F: 3603  		JBC		N			; Check N = 0?
000280: 58BB  		JMP	INS_FAIL
000281: 6000  	MOV		A,@0x00
000282: 0103  	MOV		STATUS,A
000283: 6080  		MOV		A,@0x80
000284: 0150  		MOV		0x50,A		; [0x50] = 0x80
000285: 0650  		DECA	0x50		; A = [0x50] - 1
000286: 3803  		JBS		C			; Check C = 1?
000287: 58BB  		JMP	INS_FAIL
000288: 3103  		JBC		DC			; Check DC = 0?
000289: 58BB  		JMP	INS_FAIL
00028A: 3203  		JBC		Z			; Check Z = 0?
00028B: 58BB  		JMP	INS_FAIL
00028C: 3D03  		JBS		OV			; Check OV = 1?
00028D: 58BB  		JMP	INS_FAIL
00028E: 3603  		JBC		N			; Check N = 0?
00028F: 58BB  		JMP	INS_FAIL
000290: 2203  		BC		Z
000291: 2603  		BC		N
000292: 6C7F  		XOR		A,@0x7F		; Check Result ?
000293: 3A03  		JBS		Z			; Check Z = 1?
000294: 58BB  		JMP	INS_FAIL
000295: 3603  		JBC		N			; Check N = 0?
000296: 58BB  		JMP	INS_FAIL
000297: 600D  	MOV		A,@0x0D
000298: 0150  	MOV		INST,A
000299: 6000  	MOV		A,@0x00
00029A: 0103  	MOV		STATUS,A
00029B: 6020  		MOV		A,@0x20
00029C: 0150  		MOV		0x50,A		; [0x50] = 0x20
00029D: 0750  		DEC		0x50		; [0x50] = [0x50] - 0x01
00029E: 1003  		MOV		A,STATUS
00029F: 6C19  		XOR		A,@0x19		; Check Status ? for non rest
0002A0: 3A03  		JBS		Z			; Check Z = 1?
0002A1: 58BB  		JMP	INS_FAIL
0002A2: 3603  		JBC		N			; Check N = 0?
0002A3: 58BB  		JMP	INS_FAIL
0002A4: 2203  		BC		Z
0002A5: 1050  		MOV		A,0x50
0002A6: 6C1F  		XOR		A,@0x1F		; Check Result ?
0002A7: 3A03  		JBS		Z			; Check Z = 1?
0002A8: 58BB  		JMP	INS_FAIL
0002A9: 3603  		JBC		N			; Check N = 0?
0002AA: 58BB  		JMP	INS_FAIL
0002AB: 6000  	MOV		A,@0x00
0002AC: 0103  	MOV		STATUS,A
0002AD: 6001  		MOV		A,@0x01
0002AE: 0150  		MOV		0x50,A		; [0x50] = 0x01
0002AF: 0750  		DEC		0x50		; [0x50] = [0x50] - 0x01
0002B0: 1003  		MOV		A,STATUS
0002B1: 6C1F  		XOR		A,@0x1F		; Check Status ? for non reset
0002B2: 3A03  		JBS		Z			; Check Z = 1?
0002B3: 58BB  		JMP	INS_FAIL
0002B4: 3603  		JBC		N			; Check N = 0?
0002B5: 58BB  		JMP	INS_FAIL
0002B6: 2203  		BC		Z
0002B7: 1050  		MOV		A,0x50
0002B8: 6C00  		XOR		A,@0x00		; Check Result ?
0002B9: 3A03  		JBS		Z			; Check Z = 1?
0002BA: 58BB  		JMP	INS_FAIL
0002BB: 3603  		JBC		N			; Check N = 0?
0002BC: 58BB  		JMP	INS_FAIL
0002BD: 6000  	MOV		A,@0x00
0002BE: 0103  	MOV		STATUS,A
0002BF: 6000  		MOV		A,@0x00
0002C0: 0150  		MOV		0x50,A		; [0x50] = 0x00
0002C1: 0750  		DEC		0x50		; [0x50] = [0x50] - 0x01
0002C2: 1003  		MOV		A,STATUS
0002C3: 6C58  		XOR		A,@0x58		; Check Status ? for non reset
0002C4: 3A03  		JBS		Z			; Check Z = 1?
0002C5: 58BB  		JMP	INS_FAIL
0002C6: 3603  		JBC		N			; Check N = 0?
0002C7: 58BB  		JMP	INS_FAIL
0002C8: 2203  		BC		Z
0002C9: 1050  		MOV		A,0x50
0002CA: 6CFF  		XOR		A,@0xFF		; Check Result ?
0002CB: 3A03  		JBS		Z			; Check Z = 1?
0002CC: 58BB  		JMP	INS_FAIL
0002CD: 3603  		JBC		N			; Check N = 0?
0002CE: 58BB  		JMP	INS_FAIL
0002CF: 6000  	MOV		A,@0x00
0002D0: 0103  	MOV		STATUS,A
0002D1: 6080  		MOV		A,@0x80
0002D2: 0150  		MOV		0x50,A		; [0x50] = 0x80
0002D3: 0750  		DEC		0x50		; [0x50] = [0x50] - 0x01
0002D4: 1003  		MOV		A,STATUS
0002D5: 6C39  		XOR		A,@0x39		; Check Status ? for non reset
0002D6: 3A03  		JBS		Z			; Check Z = 1?
0002D7: 58BB  		JMP	INS_FAIL
0002D8: 3603  		JBC		N			; Check N = 0?
0002D9: 58BB  		JMP	INS_FAIL
0002DA: 2203  		BC		Z
0002DB: 1050  		MOV		A,0x50
0002DC: 6C7F  		XOR		A,@0x7F		; Check Result ?
0002DD: 3A03  		JBS		Z			; Check Z = 1?
0002DE: 58BB  		JMP	INS_FAIL
0002DF: 3603  		JBC		N			; Check N = 0?
0002E0: 58BB  		JMP	INS_FAIL
0002E1: 600E  	MOV		A,@0x0E
0002E2: 0150  	MOV		INST,A
0002E3: 6000  	MOV		A,@0x00
0002E4: 0103  	MOV		STATUS,A
0002E5: 6000  		MOV		A,@0x00
0002E6: 0150  		MOV		0x50,A		; [0x50] = 0x00
0002E7: 6000  		MOV		A,@0x00
0002E8: 2203  		BC		Z
0002E9: 0850  		OR		A,0x50		; A = A | [0x50]
0002EA: 3003  		JBC		C			; Check C = 0?
0002EB: 58BB  		JMP	INS_FAIL
0002EC: 3103  		JBC		DC			; Check DC = 0?
0002ED: 58BB  		JMP	INS_FAIL
0002EE: 3A03  		JBS		Z			; Check Z = 1?
0002EF: 58BB  		JMP	INS_FAIL
0002F0: 3503  		JBC		OV			; Check OV = 0?
0002F1: 58BB  		JMP	INS_FAIL
0002F2: 3603  		JBC		N			; Check N = 0?
0002F3: 58BB  		JMP	INS_FAIL
0002F4: 2203  		BC		Z
0002F5: 6C00  		XOR		A,@0x00		; Check Result ?
0002F6: 3A03  		JBS		Z			; Check Z = 1?
0002F7: 58BB  		JMP	INS_FAIL
0002F8: 3603  		JBC		N			; Check N = 0?
0002F9: 58BB  		JMP	INS_FAIL
0002FA: 6000  	MOV		A,@0x00
0002FB: 0103  	MOV		STATUS,A
0002FC: 6055  		MOV		A,@0x55
0002FD: 0150  		MOV		0x50,A		; [0x50] = 0x55
0002FE: 60AA  		MOV		A,@0xAA
0002FF: 2203  		BC		Z
000300: 0850  		OR		A,0x50		; A = A | [0x50]
000301: 3003  		JBC		C			; Check C = 0?
000302: 58BB  		JMP	INS_FAIL
000303: 3103  		JBC		DC			; Check DC = 0?
000304: 58BB  		JMP	INS_FAIL
000305: 3203  		JBC		Z			; Check Z = 0?
000306: 58BB  		JMP	INS_FAIL
000307: 3503  		JBC		OV			; Check OV = 0?
000308: 58BB  		JMP	INS_FAIL
000309: 3E03  		JBS		N			; Check N = 1?
00030A: 58BB  		JMP	INS_FAIL
00030B: 2203  		BC		Z
00030C: 6CFF  		XOR		A,@0xFF		; Check Result ?
00030D: 3A03  		JBS		Z			; Check Z = 1?
00030E: 58BB  		JMP	INS_FAIL
00030F: 3603  		JBC		N			; Check N = 0?
000310: 58BB  		JMP	INS_FAIL
000311: 600F  	MOV		A,@0x0F
000312: 0150  	MOV		INST,A
000313: 6000  	MOV		A,@0x00
000314: 0103  	MOV		STATUS,A
000315: 6000  		MOV		A,@0x00
000316: 0150  		MOV		0x50,A		; [0x50] = 0x00
000317: 6000  		MOV		A,@0x00		; A = 0x00
000318: 2203  		BC		Z
000319: 0950  		OR		0x50,A		; [0x50] = A | [0x50]
00031A: 1003  		MOV		A,STATUS
00031B: 6C1C  		XOR		A,@0x1C		; Check Status ? for non reset
00031C: 3A03  		JBS		Z			; Check Z = 1?
00031D: 58BB  		JMP	INS_FAIL
00031E: 3603  		JBC		N			; Check N = 0?
00031F: 58BB  		JMP	INS_FAIL
000320: 1050  		MOV		A,0x50		; A = Result[0x50]
000321: 2203  		BC		Z
000322: 2603  		BC		N
000323: 6C00  		XOR		A,@0x00		; Check Result ?
000324: 3A03  		JBS		Z			; Check Z = 1?
000325: 58BB  		JMP	INS_FAIL
000326: 3603  		JBC		N			; Check N = 0?
000327: 58BB  		JMP	INS_FAIL
000328: 6000  	MOV		A,@0x00
000329: 0103  	MOV		STATUS,A
00032A: 6055  		MOV		A,@0x55
00032B: 0150  		MOV		0x50,A		; [0x50] = 0x55
00032C: 60AA  		MOV		A,@0xAA		; A = 0xAA
00032D: 0950  		OR		0x50,A		; [0x50] = 0xAA | 0x55
00032E: 1003  		MOV		A,STATUS
00032F: 6C58  		XOR		A,@0x58		; Check Status ? for non reset
000330: 3A03  		JBS		Z			; Check Z = 1?
000331: 58BB  		JMP	INS_FAIL
000332: 3603  		JBC		N			; Check N = 0?
000333: 58BB  		JMP	INS_FAIL
000334: 1050  		MOV		A,0x50
000335: 2203  		BC		Z
000336: 2603  		BC		N
000337: 6CFF  		XOR		A,@0xFF		; Check Result ?
000338: 3A03  		JBS		Z			; Check Z = 1?
000339: 58BB  		JMP	INS_FAIL
00033A: 3603  		JBC		N			; Check N = 0?
00033B: 58BB  		JMP	INS_FAIL
00033C: 6010  	MOV		A,@0x10
00033D: 0150  	MOV		INST,A
00033E: 6000  	MOV		A,@0x00
00033F: 0103  	MOV		STATUS,A
000340: 6055  		MOV		A,@0x55
000341: 0150  		MOV		0x50,A		; [0x50] = 0x55
000342: 60AA  		MOV		A,@0xAA
000343: 0A50  		AND		A,0x50		; A = 0xAA & 0x55
000344: 3003  		JBC		C			; Check C = 0?
000345: 58BB  		JMP	INS_FAIL
000346: 3103  		JBC		DC			; Check DC = 0?
000347: 58BB  		JMP	INS_FAIL
000348: 3A03  		JBS		Z			; Check Z = 1?
000349: 58BB  		JMP	INS_FAIL
00034A: 3503  		JBC		OV			; Check OV = 0?
00034B: 58BB  		JMP	INS_FAIL
00034C: 3603  		JBC		N			; Check N = 0?
00034D: 58BB  		JMP	INS_FAIL
00034E: 6C00  		XOR		A,@0x00		; Check Result ?
00034F: 3A03  		JBS		Z			; Check Z = 1?
000350: 58BB  		JMP	INS_FAIL
000351: 3603  		JBC		N			; Check N = 0?
000352: 58BB  		JMP	INS_FAIL
000353: 6000  	MOV		A,@0x00
000354: 0103  	MOV		STATUS,A
000355: 60F5  		MOV		A,@0xF5
000356: 0150  		MOV		0x50,A		; [0x50] = 0xF5
000357: 60FA  		MOV		A,@0xFA
000358: 0A50  		AND		A,0x50		; A = 0xFA & 0xF5
000359: 3003  		JBC		C			; Check C = 0?
00035A: 58BB  		JMP	INS_FAIL
00035B: 3103  		JBC		DC			; Check DC = 0?
00035C: 58BB  		JMP	INS_FAIL
00035D: 3203  		JBC		Z			; Check Z = 0?
00035E: 58BB  		JMP	INS_FAIL
00035F: 3503  		JBC		OV			; Check OV = 0?
000360: 58BB  		JMP	INS_FAIL
000361: 3E03  		JBS		N			; Check N = 1?
000362: 58BB  		JMP	INS_FAIL
000363: 6CF0  		XOR		A,@0xF0		; Check Result ?
000364: 3A03  		JBS		Z			; Check Z = 1?
000365: 58BB  		JMP	INS_FAIL
000366: 3603  		JBC		N			; Check N = 0?
000367: 58BB  		JMP	INS_FAIL
000368: 6011  	MOV		A,@0x11
000369: 0150  	MOV		INST,A
00036A: 6000  	MOV		A,@0x00
00036B: 0103  	MOV		STATUS,A
00036C: 6055  		MOV		A,@0x55
00036D: 0150  		MOV		0x50,A		; [0x50] = 0x55
00036E: 60AA  		MOV		A,@0xAA
00036F: 0B50  		AND		0x50,A		; [0x50] = 0xAA & 0x55
000370: 1003  		MOV		A,STATUS
000371: 6C1C  		XOR		A,@0x1C		; Check Status ? for non reset
000372: 3A03  		JBS		Z			; Check Z = 1?
000373: 58BB  		JMP	INS_FAIL
000374: 3603  		JBC		N			; Check N = 0?
000375: 58BB  		JMP	INS_FAIL
000376: 2203  		BC		Z
000377: 1050  		MOV		A,0x50
000378: 2203  		BC		Z
000379: 6C00  		XOR		A,@0x00		; Check Result ?
00037A: 3A03  		JBS		Z			; Check Z = 1?
00037B: 58BB  		JMP	INS_FAIL
00037C: 3603  		JBC		N			; Check N = 0?
00037D: 58BB  		JMP	INS_FAIL
00037E: 6000  	MOV		A,@0x00
00037F: 0103  	MOV		STATUS,A
000380: 60F5  		MOV		A,@0xF5
000381: 0150  		MOV		0x50,A		; [0x50] = 0xF5
000382: 60FA  		MOV		A,@0xFA
000383: 0B50  		AND		0x50,A		; [0x50] = 0xFA & 0xF5
000384: 1003  		MOV		A,STATUS
000385: 6C58  		XOR		A,@0x58		; Check Status ? for non reset
000386: 3A03  		JBS		Z			; Check Z = 1?
000387: 58BB  		JMP	INS_FAIL
000388: 3603  		JBC		N			; Check N = 0?
000389: 58BB  		JMP	INS_FAIL
00038A: 2203  		BC		Z
00038B: 1050  		MOV		A,0x50
00038C: 2203  		BC		Z
00038D: 6CF0  		XOR		A,@0xF0		; Check Result ?
00038E: 3A03  		JBS		Z			; Check Z = 1?
00038F: 58BB  		JMP	INS_FAIL
000390: 3603  		JBC		N			; Check N = 0?
000391: 58BB  		JMP	INS_FAIL
000392: 6012  	MOV		A,@0x12
000393: 0150  	MOV		INST,A
000394: 6000  	MOV		A,@0x00
000395: 0103  	MOV		STATUS,A
000396: 6080  		MOV		A,@0x80
000397: 0150  		MOV		0x50,A		; [0x50] = 0x80
000398: 607F  		MOV		A,@0x7F		; 
000399: 0E50  		ADD		A,0x50		; A = 0x7F + 0x80
00039A: 3003  		JBC		C			; Check C = 0?
00039B: 58BB  		JMP	INS_FAIL
00039C: 3103  		JBC		DC			; Check DC = 0?
00039D: 58BB  		JMP	INS_FAIL
00039E: 3203  		JBC		Z			; Check Z = 0?
00039F: 58BB  		JMP	INS_FAIL
0003A0: 3503  		JBC		OV			; Check OV = 0?
0003A1: 58BB  		JMP	INS_FAIL
0003A2: 3E03  		JBS		N			; Check N = 1?	; Result is Negative
0003A3: 58BB  		JMP	INS_FAIL
0003A4: 2203  		BC		Z
0003A5: 2603  		BC		N
0003A6: 6CFF  		XOR		A,@0xFF		; Check Result ?
0003A7: 3A03  		JBS		Z			; Check Z = 1?
0003A8: 58BB  		JMP	INS_FAIL
0003A9: 3603  		JBC		N			; Check N = 0?
0003AA: 58BB  		JMP	INS_FAIL
0003AB: 6000  	MOV		A,@0x00
0003AC: 0103  	MOV		STATUS,A
0003AD: 60FF  		MOV		A,@0xFF
0003AE: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0003AF: 6001  		MOV		A,@0x01		; 
0003B0: 0E50  		ADD		A,0x50		; A = 0x01 + 0xFF
0003B1: 3803  		JBS		C			; Check C = 1?
0003B2: 58BB  		JMP	INS_FAIL
0003B3: 3903  		JBS		DC			; Check DC = 1?
0003B4: 58BB  		JMP	INS_FAIL
0003B5: 3A03  		JBS		Z			; Check Z = 1?
0003B6: 58BB  		JMP	INS_FAIL
0003B7: 3503  		JBC		OV			; Check OV = 0?
0003B8: 58BB  		JMP	INS_FAIL
0003B9: 3603  		JBC		N			; Check N = 0?
0003BA: 58BB  		JMP	INS_FAIL
0003BB: 2203  		BC		Z
0003BC: 2603  		BC		N
0003BD: 6C00  		XOR		A,@0x00		; Check Result ?
0003BE: 3A03  		JBS		Z			; Check Z = 1?
0003BF: 58BB  		JMP	INS_FAIL
0003C0: 3603  		JBC		N			; Check N = 0?
0003C1: 58BB  		JMP	INS_FAIL
0003C2: 6000  	MOV		A,@0x00
0003C3: 0103  	MOV		STATUS,A
0003C4: 607F  		MOV		A,@0x7F
0003C5: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0003C6: 6001  		MOV		A,@0x01		; 
0003C7: 0E50  		ADD		A,0x50		; A = 0x01 + 0x7F
0003C8: 3003  		JBC		C			; Check C = 0?
0003C9: 58BB  		JMP	INS_FAIL
0003CA: 3903  		JBS		DC			; Check DC = 1?
0003CB: 58BB  		JMP	INS_FAIL
0003CC: 3203  		JBC		Z			; Check Z = 0?
0003CD: 58BB  		JMP	INS_FAIL
0003CE: 3D03  		JBS		OV			; Check OV = 1?
0003CF: 58BB  		JMP	INS_FAIL
0003D0: 3E03  		JBS		N			; Check N = 1?
0003D1: 58BB  		JMP	INS_FAIL
0003D2: 2203  		BC		Z
0003D3: 2603  		BC		N
0003D4: 6C80  		XOR		A,@0x80		; Check Result ?
0003D5: 3A03  		JBS		Z			; Check Z = 1?
0003D6: 58BB  		JMP	INS_FAIL
0003D7: 3603  		JBC		N			; Check N = 0?
0003D8: 58BB  		JMP	INS_FAIL
0003D9: 6013  	MOV		A,@0x13
0003DA: 0150  	MOV		INST,A
0003DB: 6000  	MOV		A,@0x00
0003DC: 0103  	MOV		STATUS,A
0003DD: 6080  		MOV		A,@0x80
0003DE: 0150  		MOV		0x50,A		; [0x50] = 0x80
0003DF: 607F  		MOV		A,@0x7F		; A = 0x7F
0003E0: 0F50  		ADD		0x50,A		; [0x50] = 0x80 + 0x7F
0003E1: 1003  		MOV		A,STATUS
0003E2: 6C58  		XOR		A,@0x58		; Check Status ? for non reset
0003E3: 3A03  		JBS		Z			; Check Z = 1?
0003E4: 58BB  		JMP	INS_FAIL
0003E5: 3603  		JBC		N			; Check N = 0?
0003E6: 58BB  		JMP	INS_FAIL
0003E7: 1050  		MOV		A,0x50
0003E8: 6CFF  		XOR		A,@0xFF		; Check Result ?
0003E9: 3A03  		JBS		Z			; Check Z = 1?
0003EA: 58BB  		JMP	INS_FAIL
0003EB: 3603  		JBC		N			; Check N = 0?
0003EC: 58BB  		JMP	INS_FAIL
0003ED: 6000  	MOV		A,@0x00
0003EE: 0103  	MOV		STATUS,A
0003EF: 60FF  		MOV		A,@0xFF
0003F0: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0003F1: 6001  		MOV		A,@0x01		; A = 0x01
0003F2: 0F50  		ADD		0x50,A		; [0x50] = 0xFF + 0x01
0003F3: 1003  		MOV		A,STATUS
0003F4: 6C1F  		XOR		A,@0x1F		; Check Status ? for non reset
0003F5: 3A03  		JBS		Z			; Check Z = 1?
0003F6: 58BB  		JMP	INS_FAIL
0003F7: 3603  		JBC		N			; Check N = 0?
0003F8: 58BB  		JMP	INS_FAIL
0003F9: 1050  		MOV		A,0x50
0003FA: 6C00  		XOR		A,@0x00		; Check Result ?
0003FB: 3A03  		JBS		Z			; Check Z = 1?
0003FC: 58BB  		JMP	INS_FAIL
0003FD: 3603  		JBC		N			; Check N = 0?
0003FE: 58BB  		JMP	INS_FAIL
0003FF: 6000  	MOV		A,@0x00
000400: 0103  	MOV		STATUS,A
000401: 607F  		MOV		A,@0x7F
000402: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000403: 6001  		MOV		A,@0x01		; A = 0x01
000404: 0F50  		ADD		0x50,A		; [0x50] = 0x7F + 0x01
000405: 1003  		MOV		A,STATUS
000406: 6C7A  		XOR		A,@0x7A		; Check Status ? for non reset
000407: 3A03  		JBS		Z			; Check Z = 1?
000408: 58BB  		JMP	INS_FAIL
000409: 3603  		JBC		N			; Check N = 0?
00040A: 58BB  		JMP	INS_FAIL
00040B: 1050  		MOV		A,0x50
00040C: 6C80  		XOR		A,@0x80		; Check Result ?
00040D: 3A03  		JBS		Z			; Check Z = 1?
00040E: 58BB  		JMP	INS_FAIL
00040F: 3603  		JBC		N			; Check N = 0?
000410: 58BB  		JMP	INS_FAIL
000411: 6014  	MOV		A,@0x14
000412: 0150  	MOV		INST,A
000413: 6000  	MOV		A,@0x00
000414: 0103  	MOV		STATUS,A
000415: 6000  		MOV		A,@0x00
000416: 0150  		MOV		0x50,A		; [0x50] = 0x00		
000417: 1150  		MOV		0x50,0x50	; [0x50] = [0x50]
000418: 1003  		MOV		A,STATUS
000419: 6C1C  		XOR		A,@0x1C		; Check Status ?
00041A: 3A03  		JBS		Z			; Check Z = 1?
00041B: 58BB  		JMP	INS_FAIL
00041C: 3603  		JBC		N			; Check N = 0?
00041D: 58BB  		JMP	INS_FAIL
00041E: 1050  		MOV		A,0x50
00041F: 2203  		BC		Z
000420: 6C00  		XOR		A,@0x00		; Check Result ?
000421: 3A03  		JBS		Z			; Check Z = 1?
000422: 58BB  		JMP	INS_FAIL
000423: 3603  		JBC		N			; Check N = 0?
000424: 58BB  		JMP	INS_FAIL
000425: 6000  	MOV		A,@0x00
000426: 0103  	MOV		STATUS,A
000427: 6000  		MOV		A,@0x00
000428: 0150  		MOV		0x50,A		; [0x50] = 0x00		
000429: 1150  		MOV		0x50,0x50	; [0x50] = [0x50]
00042A: 2850  		BS		0x50,0
00042B: 1050  		MOV		A,0x50
00042C: 6C01  		XOR		A,@0x01		; Check Result ?
00042D: 3A03  		JBS		Z			; Check Z = 1?
00042E: 58BB  		JMP	INS_FAIL
00042F: 3603  		JBC		N			; Check N = 0?
000430: 58BB  		JMP	INS_FAIL
000431: 6015  	MOV		A,@0x15
000432: 0150  	MOV		INST,A
000433: 6000  	MOV		A,@0x00
000434: 0103  	MOV		STATUS,A
000435: 60FF  		MOV		A,@0xFF
000436: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000437: 1250  		COMA	0x50		; A = /R
000438: 3003  		JBC		C			; Check C = 0?
000439: 58BB  		JMP	INS_FAIL
00043A: 3103  		JBC		DC			; Check DC = 0?
00043B: 58BB  		JMP	INS_FAIL
00043C: 3A03  		JBS		Z			; Check Z = 1?
00043D: 58BB  		JMP	INS_FAIL
00043E: 3503  		JBC		OV			; Check OV = 0?
00043F: 58BB  		JMP	INS_FAIL
000440: 3603  		JBC		N			; Check N = 0?
000441: 58BB  		JMP	INS_FAIL
000442: 6C00  		XOR		A,@0x00		; Check Result ?
000443: 3A03  		JBS		Z			; Check Z = 1?
000444: 58BB  		JMP	INS_FAIL
000445: 3603  		JBC		N			; Check N = 0?
000446: 58BB  		JMP	INS_FAIL	
000447: 6000  	MOV		A,@0x00
000448: 0103  	MOV		STATUS,A
000449: 6005  		MOV		A,@0x05
00044A: 0150  		MOV		0x50,A		; [0x50] = 0x05
00044B: 1250  		COMA	0x50		; A = /R
00044C: 3003  		JBC		C			; Check C = 0?
00044D: 58BB  		JMP	INS_FAIL
00044E: 3103  		JBC		DC			; Check DC = 0?
00044F: 58BB  		JMP	INS_FAIL
000450: 3203  		JBC		Z			; Check Z = 0?
000451: 58BB  		JMP	INS_FAIL
000452: 3503  		JBC		OV			; Check OV = 0?
000453: 58BB  		JMP	INS_FAIL
000454: 3E03  		JBS		N			; Check N = 1?
000455: 58BB  		JMP	INS_FAIL
000456: 6CFA  		XOR		A,@0xFA		; Check Result ?
000457: 3A03  		JBS		Z			; Check Z = 1?
000458: 58BB  		JMP	INS_FAIL
000459: 3603  		JBC		N			; Check N = 0?
00045A: 58BB  		JMP	INS_FAIL
00045B: 6016  	MOV		A,@0x16
00045C: 0150  	MOV		INST,A
00045D: 6000  	MOV		A,@0x00
00045E: 0103  	MOV		STATUS,A
00045F: 60FF  		MOV		A,@0xFF
000460: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000461: 1350  		COM		0x50		; [0x50] = /[0x50]
000462: 1003  		MOV		A,STATUS
000463: 6C1C  		XOR		A,@0x1C		; Check Status ?
000464: 3A03  		JBS		Z			; Check Z = 1?
000465: 58BB  		JMP	INS_FAIL
000466: 3603  		JBC		N			; Check N = 0?
000467: 58BB  		JMP	INS_FAIL
000468: 2203  		BC		Z
000469: 2603  		BC		N
00046A: 1050  		MOV		A,0x50
00046B: 6C00  		XOR		A,@0x00		; Check Result ?
00046C: 3A03  		JBS		Z			; Check Z = 1?
00046D: 58BB  		JMP	INS_FAIL
00046E: 3603  		JBC		N			; Check N = 0?
00046F: 58BB  		JMP	INS_FAIL
000470: 6000  	MOV		A,@0x00
000471: 0103  	MOV		STATUS,A
000472: 6000  		MOV		A,@0x00
000473: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000474: 1350  		COM		0x50		; [0x50] = /[0x50]
000475: 1003  		MOV		A,STATUS
000476: 6C58  		XOR		A,@0x58		; Check Status ?
000477: 3A03  		JBS		Z			; Check Z = 1?
000478: 58BB  		JMP	INS_FAIL
000479: 3603  		JBC		N			; Check N = 0?
00047A: 58BB  		JMP	INS_FAIL
00047B: 2203  		BC		Z
00047C: 2603  		BC		N
00047D: 1050  		MOV		A,0x50
00047E: 6CFF  		XOR		A,@0xFF		; Check Result ?
00047F: 3A03  		JBS		Z			; Check Z = 1?
000480: 58BB  		JMP	INS_FAIL
000481: 3603  		JBC		N			; Check N = 0?
000482: 58BB  		JMP	INS_FAIL
000483: 6017  	MOV		A,@0x17
000484: 0150  	MOV		INST,A
000485: 6000  	MOV		A,@0x00
000486: 0103  	MOV		STATUS,A
000487: 607F  		MOV		A,@0x7F
000488: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000489: 1450  		INCA	0x50		; A = [0x50] +1		
00048A: 3003  		JBC		C			; Check C = 0?
00048B: 58BB  		JMP	INS_FAIL
00048C: 3903  		JBS		DC			; Check DC = 1?
00048D: 58BB  		JMP	INS_FAIL
00048E: 3203  		JBC		Z			; Check Z = 0?
00048F: 58BB  		JMP	INS_FAIL
000490: 3D03  		JBS		OV			; Check OV = 1?
000491: 58BB  		JMP	INS_FAIL
000492: 3E03  		JBS		N			; Check N = 1?
000493: 58BB  		JMP	INS_FAIL
000494: 2203  		BC		Z
000495: 2603  		BC		N
000496: 6C80  		XOR		A,@0x80		; Check Result ?
000497: 3A03  		JBS		Z			; Check Z = 1?
000498: 58BB  		JMP	INS_FAIL
000499: 3603  		JBC		N			; Check N = 0?
00049A: 58BB  		JMP	INS_FAIL
00049B: 6000  	MOV		A,@0x00
00049C: 0103  	MOV		STATUS,A
00049D: 60FF  		MOV		A,@0xFF
00049E: 0150  		MOV		0x50,A		; [0x50] = 0xFF
00049F: 1450  		INCA	0x50		; A = [0x50] +1		
0004A0: 3803  		JBS		C			; Check C = 1?
0004A1: 58BB  		JMP	INS_FAIL
0004A2: 3903  		JBS		DC			; Check DC = 1?
0004A3: 58BB  		JMP	INS_FAIL
0004A4: 3A03  		JBS		Z			; Check Z = 1?
0004A5: 58BB  		JMP	INS_FAIL
0004A6: 3503  		JBC		OV			; Check OV = 0?
0004A7: 58BB  		JMP	INS_FAIL
0004A8: 3603  		JBC		N			; Check N = 0?
0004A9: 58BB  		JMP	INS_FAIL
0004AA: 2203  		BC		Z
0004AB: 2603  		BC		N
0004AC: 6C00  		XOR		A,@0x00		; Check Result ?
0004AD: 3A03  		JBS		Z			; Check Z = 1?
0004AE: 58BB  		JMP	INS_FAIL
0004AF: 3603  		JBC		N			; Check N = 0?
0004B0: 58BB  		JMP	INS_FAIL
0004B1: 6018  	MOV		A,@0x18
0004B2: 0150  	MOV		INST,A
0004B3: 6000  	MOV		A,@0x00
0004B4: 0103  	MOV		STATUS,A
0004B5: 607F  		MOV		A,@0x7F
0004B6: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0004B7: 1550  		INC		0x50		; [0x50] = [0x50] + 0x01
0004B8: 1003  		MOV		A,STATUS
0004B9: 6C7A  		XOR		A,@0x7A		; Check Status ?
0004BA: 3A03  		JBS		Z			; Check Z = 1?
0004BB: 58BB  		JMP	INS_FAIL
0004BC: 3603  		JBC		N			; Check N = 0?
0004BD: 58BB  		JMP	INS_FAIL
0004BE: 1050  		MOV		A,0x50
0004BF: 6C80  		XOR		A,@0x80		; Check Result ?
0004C0: 3A03  		JBS		Z			; Check Z = 1?
0004C1: 58BB  		JMP	INS_FAIL
0004C2: 3603  		JBC		N			; Check N = 0?
0004C3: 58BB  		JMP	INS_FAIL
0004C4: 6000  	MOV		A,@0x00
0004C5: 0103  	MOV		STATUS,A
0004C6: 60FF  		MOV		A,@0xFF
0004C7: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0004C8: 1550  		INC		0x50		; [0x50] = [0x50] + 0x01
0004C9: 1003  		MOV		A,STATUS
0004CA: 6C1F  		XOR		A,@0x1F		; Check Status ?
0004CB: 3A03  		JBS		Z			; Check Z = 1?
0004CC: 58BB  		JMP	INS_FAIL
0004CD: 3603  		JBC		N			; Check N = 0?
0004CE: 58BB  		JMP	INS_FAIL
0004CF: 1050  		MOV		A,0x50
0004D0: 6C00  		XOR		A,@0x00		; Check Result ?
0004D1: 3A03  		JBS		Z			; Check Z = 1?
0004D2: 58BB  		JMP	INS_FAIL
0004D3: 3603  		JBC		N			; Check N = 0?
0004D4: 58BB  		JMP	INS_FAIL
0004D5: 6019  	MOV		A,@0x19
0004D6: 0150  	MOV		INST,A
0004D7: 6000  	MOV		A,@0x00
0004D8: 0103  	MOV		STATUS,A
0004D9: 6001  		MOV		A,@0x01
0004DA: 0150  		MOV		0x50,A		; [0x50] = 0x01
0004DB: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0004DC: 58BB  		JMP	INS_FAIL
0004DD: 6C00  		XOR		A,@0x00		; Check Result ?
0004DE: 3A03  		JBS		Z			; Check Z = 1?
0004DF: 58BB  		JMP	INS_FAIL
0004E0: 3603  		JBC		N			; Check N = 0?
0004E1: 58BB  		JMP	INS_FAIL
0004E2: 6000  	MOV		A,@0x00
0004E3: 0103  	MOV		STATUS,A
0004E4: 6002  		MOV		A,@0x02
0004E5: 0150  		MOV		0x50,A		; [0x50] = 0x02
0004E6: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0004E7: 54E9  		JMP		$+2
0004E8: 58BB  		JMP	INS_FAIL
0004E9: 601A  	MOV		A,@0x1A
0004EA: 0150  	MOV		INST,A
0004EB: 6000  	MOV		A,@0x00
0004EC: 0103  	MOV		STATUS,A
0004ED: 6001  		MOV		A,@0x01
0004EE: 0150  		MOV		0x50,A		; [0x50] = 0x01
0004EF: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0004F0: 58BB  		JMP	INS_FAIL
0004F1: 1050  		MOV		A,0x50
0004F2: 6C00  		XOR		A,@0x00		; Check Result ?
0004F3: 3A03  		JBS		Z			; Check Z = 1?
0004F4: 58BB  		JMP	INS_FAIL
0004F5: 3603  		JBC		N			; Check N = 0?
0004F6: 58BB  		JMP	INS_FAIL
0004F7: 6000  	MOV		A,@0x00
0004F8: 0103  	MOV		STATUS,A
0004F9: 6002  		MOV		A,@0x02
0004FA: 0150  		MOV		0x50,A		; [0x50] = 0x02
0004FB: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0004FC: 54FE  		JMP		$+2
0004FD: 58BB  		JMP	INS_FAIL
0004FE: 601B  	MOV		A,@0x1B
0004FF: 0150  	MOV		INST,A
000500: 6000  	MOV		A,@0x00
000501: 0103  	MOV		STATUS,A
000502: 2803  		BS		C
000503: 60AA  		MOV		A,@0xAA
000504: 0150  		MOV		0x50,A		; [0x50] = 0xAA
000505: 1850  		RRCA	0x50		; A = [0x50] >> 1
000506: 3003  		JBC		C			; Check C = 0?
000507: 58BB  		JMP	INS_FAIL
000508: 3103  		JBC		DC			; Check DC = 0?
000509: 58BB  		JMP	INS_FAIL
00050A: 3203  		JBC		Z			; Check Z = 0?
00050B: 58BB  		JMP	INS_FAIL
00050C: 3503  		JBC		OV			; Check OV = 0?
00050D: 58BB  		JMP	INS_FAIL
00050E: 3E03  		JBS		N			; Check N = 1?
00050F: 58BB  		JMP	INS_FAIL
000510: 6CD5  		XOR		A,@0xD5		; Check Result ?
000511: 3A03  		JBS		Z			; Check Z = 1?
000512: 58BB  		JMP	INS_FAIL
000513: 3603  		JBC		N			; Check N = 0?
000514: 58BB  		JMP	INS_FAIL
000515: 6000  	MOV		A,@0x00
000516: 0103  	MOV		STATUS,A
000517: 6055  		MOV		A,@0x55
000518: 0150  		MOV		0x50,A		; [0x50] = 0x55
000519: 1850  		RRCA	0x50		; A = [0x50] >> 1
00051A: 3803  		JBS		C			; Check C = 1?
00051B: 58BB  		JMP	INS_FAIL
00051C: 3103  		JBC		DC			; Check DC = 0?
00051D: 58BB  		JMP	INS_FAIL
00051E: 3203  		JBC		Z			; Check Z = 0?
00051F: 58BB  		JMP	INS_FAIL
000520: 3503  		JBC		OV			; Check OV = 0?
000521: 58BB  		JMP	INS_FAIL
000522: 3603  		JBC		N			; Check N = 0?
000523: 58BB  		JMP	INS_FAIL
000524: 6C2A  		XOR		A,@0x2A		; Check Result ?
000525: 3A03  		JBS		Z			; Check Z = 1?
000526: 58BB  		JMP	INS_FAIL
000527: 3603  		JBC		N			; Check N = 0?
000528: 58BB  		JMP	INS_FAIL
000529: 601C  	MOV		A,@0x1C
00052A: 0150  	MOV		INST,A
00052B: 6000  	MOV		A,@0x00
00052C: 0103  	MOV		STATUS,A
00052D: 2803  		BS		C
00052E: 60AA  		MOV		A,@0xAA
00052F: 0150  		MOV		0x50,A		; [0x50] = 0xAA
000530: 2203  		BC		Z
000531: 1950  		RRC		0x50		; [0x50] = [0x50] >> 1
000532: 1003  		MOV		A,STATUS
000533: 6C58  		XOR		A,@0x58		; Check Status ?
000534: 3A03  		JBS		Z			; Check Z = 1?
000535: 58BB  		JMP	INS_FAIL
000536: 3603  		JBC		N			; Check N = 0?
000537: 58BB  		JMP	INS_FAIL	
000538: 1050  		MOV		A,0x50
000539: 6CD5  		XOR		A,@0xD5		; Check Result ?
00053A: 3A03  		JBS		Z			; Check Z = 1?
00053B: 58BB  		JMP	INS_FAIL
00053C: 3603  		JBC		N			; Check N = 0?
00053D: 58BB  		JMP	INS_FAIL
00053E: 6000  	MOV		A,@0x00
00053F: 0103  	MOV		STATUS,A
000540: 6055  		MOV		A,@0x55
000541: 0150  		MOV		0x50,A		; [0x50] = 0x55
000542: 2203  		BC		Z
000543: 1950  		RRC		0x50		; [0x50] = [0x50] >> 1
000544: 1003  		MOV		A,STATUS
000545: 6C19  		XOR		A,@0x19		; Check Status ?
000546: 3A03  		JBS		Z			; Check Z = 1?
000547: 58BB  		JMP	INS_FAIL
000548: 3603  		JBC		N			; Check N = 0?
000549: 58BB  		JMP	INS_FAIL
00054A: 1050  		MOV		A,0x50
00054B: 6C2A  		XOR		A,@0x2A		; Check Result ?
00054C: 3A03  		JBS		Z			; Check Z = 1?
00054D: 58BB  		JMP	INS_FAIL
00054E: 3603  		JBC		N			; Check N = 0?
00054F: 58BB  		JMP	INS_FAIL
000550: 601D  	MOV		A,@0x1D
000551: 0150  	MOV		INST,A
000552: 6000  	MOV		A,@0x00
000553: 0103  	MOV		STATUS,A
000554: 2803  		BS		C
000555: 6055  		MOV		A,@0x55
000556: 0150  		MOV		0x50,A		; [0x50] = 0x55
000557: 1A50  		RLCA	0x50		; A = [0x50] << 1
000558: 3003  		JBC		C			; Check C = 0?
000559: 58BB  		JMP	INS_FAIL
00055A: 3103  		JBC		DC			; Check DC = 0?
00055B: 58BB  		JMP	INS_FAIL
00055C: 3203  		JBC		Z			; Check Z = 0?
00055D: 58BB  		JMP	INS_FAIL
00055E: 3503  		JBC		OV			; Check OV = 0?
00055F: 58BB  		JMP	INS_FAIL
000560: 3E03  		JBS		N			; Check N = 1?
000561: 58BB  		JMP	INS_FAIL
000562: 6CAB  		XOR		A,@0xAB		; Check Result ?
000563: 3A03  		JBS		Z			; Check Z = 1?
000564: 58BB  		JMP	INS_FAIL
000565: 3603  		JBC		N			; Check N = 0?
000566: 58BB  		JMP	INS_FAIL
000567: 6000  	MOV		A,@0x00
000568: 0103  	MOV		STATUS,A
000569: 60AA  		MOV		A,@0xAA
00056A: 0150  		MOV		0x50,A		; [0x50] = 0xAA
00056B: 1A50  		RLCA	0x50		; A = [0x50] << 1
00056C: 3803  		JBS		C			; Check C = 1?
00056D: 58BB  		JMP	INS_FAIL
00056E: 3103  		JBC		DC			; Check DC = 0?
00056F: 58BB  		JMP	INS_FAIL
000570: 3203  		JBC		Z			; Check Z = 0?
000571: 58BB  		JMP	INS_FAIL
000572: 3503  		JBC		OV			; Check OV = 0?
000573: 58BB  		JMP	INS_FAIL
000574: 3603  		JBC		N			; Check N = 0?
000575: 58BB  		JMP	INS_FAIL
000576: 6C54  		XOR		A,@0x54		; Check Result ?
000577: 3A03  		JBS		Z			; Check Z = 1?
000578: 58BB  		JMP	INS_FAIL
000579: 3603  		JBC		N			; Check N = 0?
00057A: 58BB  		JMP	INS_FAIL
00057B: 601E  	MOV		A,@0x1E
00057C: 0150  	MOV		INST,A
00057D: 6000  	MOV		A,@0x00
00057E: 0103  	MOV		STATUS,A
00057F: 2803  		BS		C
000580: 6055  		MOV		A,@0x55
000581: 0150  		MOV		0x50,A		; [0x50] = 0x55
000582: 1B50  		RLC		0x50		; [0x50] = [0x50] << 1
000583: 1003  		MOV		A,STATUS
000584: 6C58  		XOR		A,@0x58		; Check Status ?
000585: 3A03  		JBS		Z			; Check Z = 1?
000586: 58BB  		JMP	INS_FAIL
000587: 3603  		JBC		N			; Check N = 0?
000588: 58BB  		JMP	INS_FAIL
000589: 1050  		MOV		A,0x50
00058A: 6CAB  		XOR		A,@0xAB		; Check Result ?
00058B: 3A03  		JBS		Z			; Check Z = 1?
00058C: 58BB  		JMP	INS_FAIL
00058D: 3603  		JBC		N			; Check N = 0?
00058E: 58BB  		JMP	INS_FAIL
00058F: 6000  	MOV		A,@0x00
000590: 0103  	MOV		STATUS,A
000591: 60AA  		MOV		A,@0xAA
000592: 0150  		MOV		0x50,A		; [0x50] = 0xAA
000593: 1B50  		RLC		0x50		; [0x50] = [0x50] << 1
000594: 1003  		MOV		A,STATUS
000595: 6C19  		XOR		A,@0x19		; Check Status ?
000596: 3A03  		JBS		Z			; Check Z = 1?
000597: 58BB  		JMP	INS_FAIL
000598: 3603  		JBC		N			; Check N = 0?
000599: 58BB  		JMP	INS_FAIL
00059A: 1050  		MOV		A,0x50
00059B: 6C54  		XOR		A,@0x54		; Check Result ?
00059C: 3A03  		JBS		Z			; Check Z = 1?
00059D: 58BB  		JMP	INS_FAIL
00059E: 3603  		JBC		N			; Check N = 0?
00059F: 58BB  		JMP	INS_FAIL
0005A0: 601F  	MOV		A,@0x1F
0005A1: 0150  	MOV		INST,A
0005A2: 6000  	MOV		A,@0x00
0005A3: 0103  	MOV		STATUS,A
0005A4: 605A  		MOV		A,@0x5A
0005A5: 0150  		MOV		0x50,A		; [0x50] = 0x5A
0005A6: 1C50  		SWAPA	0x50
0005A7: 6CA5  		XOR		A,@0xA5		; Check Result ?
0005A8: 3A03  		JBS		Z			; Check Z = 1?
0005A9: 58BB  		JMP	INS_FAIL
0005AA: 3603  		JBC		N			; Check N = 0?
0005AB: 58BB  		JMP	INS_FAIL
0005AC: 6020  	MOV		A,@0x20
0005AD: 0150  	MOV		INST,A
0005AE: 6000  	MOV		A,@0x00
0005AF: 0103  	MOV		STATUS,A
0005B0: 605A  		MOV		A,@0x5A
0005B1: 0150  		MOV		0x50,A		; [0x50] = 0x5A
0005B2: 1D50  		SWAP	0x50
0005B3: 1050  		MOV		A,0x50
0005B4: 6CA5  		XOR		A,@0xA5		; Check Result ?
0005B5: 3A03  		JBS		Z			; Check Z = 1?
0005B6: 58BB  		JMP	INS_FAIL
0005B7: 3603  		JBC		N			; Check N = 0?
0005B8: 58BB  		JMP	INS_FAIL
0005B9: 6021  	MOV		A,@0x21
0005BA: 0150  	MOV		INST,A
0005BB: 6000  	MOV		A,@0x00
0005BC: 0103  	MOV		STATUS,A
0005BD: 60FF  		MOV		A,@0xFF
0005BE: 0150  		MOV		0x50,A
0005BF: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0005C0: 58BB  		JMP		INS_FAIL
0005C1: 6C00  		XOR		A,@0x00		; Check Result ?
0005C2: 3A03  		JBS		Z			; Check Z = 1?
0005C3: 58BB  		JMP	INS_FAIL
0005C4: 3603  		JBC		N			; Check N = 0?
0005C5: 58BB  		JMP	INS_FAIL
0005C6: 6000  	MOV		A,@0x00
0005C7: 0103  	MOV		STATUS,A
0005C8: 6080  		MOV		A,@0x80
0005C9: 0150  		MOV		0x50,A
0005CA: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0005CB: 55CD  		JMP		$+2
0005CC: 58BB  		JMP		INS_FAIL
0005CD: 6022  	MOV		A,@0x22
0005CE: 0150  	MOV		INST,A
0005CF: 6000  	MOV		A,@0x00
0005D0: 0103  	MOV		STATUS,A
0005D1: 60FF  		MOV		A,@0xFF
0005D2: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0005D3: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0005D4: 58BB  		JMP		INS_FAIL
0005D5: 1050  		MOV		A,0x50
0005D6: 6C00  		XOR		A,@0x00		; Check Result ?
0005D7: 3A03  		JBS		Z			; Check Z = 1?
0005D8: 58BB  		JMP	INS_FAIL
0005D9: 3603  		JBC		N			; Check N = 0?
0005DA: 58BB  		JMP	INS_FAIL
0005DB: 6000  	MOV		A,@0x00
0005DC: 0103  	MOV		STATUS,A
0005DD: 6080  		MOV		A,@0x80
0005DE: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0005DF: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0005E0: 55E2  		JMP		$+2
0005E1: 58BB  		JMP		INS_FAIL
0005E2: 6023  	MOV		A,@0x23
0005E3: 0150  	MOV		INST,A
0005E4: 6000  	MOV		A,@0x00
0005E5: 0103  	MOV		STATUS,A
0005E6: 605A  		MOV		A,@0x5A
0005E7: 0150  		MOV		0x50,A		; [0x50] = 0x5A
0005E8: 6150  		JE		0x50		; [0x50] = A?
0005E9: 58BB  		JMP		INS_FAIL
0005EA: 605B  		MOV		A,@0x5B
0005EB: 0150  		MOV		0x50,A		; [0x50] = 0x5B
0005EC: 605C  		MOV		A,@0x5C
0005ED: 6150  		JE		0x50		; [0x50] = A(0x5C)?
0005EE: 55F0  		JMP		$+2
0005EF: 58BB  		JMP		INS_FAIL
0005F0: 6024  	MOV		A,@0x24
0005F1: 0150  	MOV		INST,A
0005F2: 6000  	MOV		A,@0x00
0005F3: 0103  	MOV		STATUS,A
0005F4: 607F  		MOV		A,@0x7F
0005F5: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0005F6: 6000  		MOV		A,@0x00
0005F7: 6250  		JGE		0x50		; [0x50] > A ?
0005F8: 58BB  		JMP		INS_FAIL
0005F9: 6000  	MOV		A,@0x00
0005FA: 0103  	MOV		STATUS,A
0005FB: 60FF  		MOV		A,@0xFF
0005FC: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0005FD: 6080  		MOV		A,@0x80
0005FE: 6250  		JGE		0x50		; [0x50] > A ?
0005FF: 58BB  		JMP		INS_FAIL
000600: 6000  	MOV		A,@0x00
000601: 0103  	MOV		STATUS,A
000602: 6000  		MOV		A,@0x00
000603: 0150  		MOV		0x50,A		; [0x50] = 0x00
000604: 60FF  		MOV		A,@0xFF
000605: 6250  		JGE		0x50		; [0x50] > A(0xFF) ?x
000606: 5608  		JMP		$+2
000607: 58BB  		JMP		INS_FAIL
000608: 6025  	MOV		A,@0x25
000609: 0150  	MOV		INST,A
00060A: 6000  	MOV		A,@0x00
00060B: 0103  	MOV		STATUS,A
00060C: 6000  		MOV		A,@0x00
00060D: 0150  		MOV		0x50,A		; [0x50] = 0x00
00060E: 607F  		MOV		A,@0x7F
00060F: 6350  		JLE		0x50		; [0x50] < A ?
000610: 58BB  		JMP		INS_FAIL
000611: 6000  	MOV		A,@0x00
000612: 0103  	MOV		STATUS,A
000613: 6080  		MOV		A,@0x80
000614: 0150  		MOV		0x50,A		; [0x50] = 0x80
000615: 60FF  		MOV		A,@0xFF
000616: 6350  		JLE		0x50		; [0x50] < A ?
000617: 58BB  		JMP		INS_FAIL
000618: 6000  	MOV		A,@0x00
000619: 0103  	MOV		STATUS,A
00061A: 60FF  		MOV		A,@0xFF
00061B: 0150  		MOV		0x50,A		; [0x50] = 0xFF
00061C: 6000  		MOV		A,@0x00
00061D: 6350  		JLE		0x50		; [0x50] < A(0x00) ?x
00061E: 5620  		JMP		$+2
00061F: 58BB  		JMP		INS_FAIL
000620: 6026  	MOV		A,@0x26
000621: 0150  	MOV		INST,A
000622: 6000  	MOV		A,@0x00
000623: 0103  	MOV		STATUS,A
000624: 60A5  		MOV		A,@0xA5
000625: 645A  		OR		A,@0x5A		; A = 0xA5 | 0x5A
000626: 6CFF  		XOR		A,@0xFF		; Check Result ?
000627: 3A03  		JBS		Z			; Check Z = 1?
000628: 58BB  		JMP	INS_FAIL
000629: 3603  		JBC		N			; Check N = 0?
00062A: 58BB  		JMP	INS_FAIL
00062B: 6027  	MOV		A,@0x27
00062C: 0150  	MOV		INST,A
00062D: 6000  	MOV		A,@0x00
00062E: 0103  	MOV		STATUS,A
00062F: 607F  		MOV		A,@0x7F
000630: 657F  		JE		@0x7F
000631: 58BB  		JMP	INS_FAIL
000632: 6029  	MOV		A,@0x29
000633: 0150  	MOV		INST,A
000634: 6000  	MOV		A,@0x00
000635: 0103  	MOV		STATUS,A
000636: 60AA  		MOV		A,@0xAA
000637: 6855  		AND		A,@0x55		; A = 0xAA & 0x55
000638: 3003  		JBC		C			; Check C = 0?
000639: 58BB  		JMP	INS_FAIL
00063A: 3103  		JBC		DC			; Check DC = 0?
00063B: 58BB  		JMP	INS_FAIL
00063C: 3A03  		JBS		Z			; Check Z = 1?
00063D: 58BB  		JMP	INS_FAIL
00063E: 3503  		JBC		OV			; Check OV = 0?
00063F: 58BB  		JMP	INS_FAIL
000640: 3603  		JBC		N			; Check N = 0?
000641: 58BB  		JMP	INS_FAIL
000642: 6C00  		XOR		A,@0x00		; Check Result ?
000643: 3A03  		JBS		Z			; Check Z = 1?
000644: 58BB  		JMP	INS_FAIL
000645: 3603  		JBC		N			; Check N = 0?
000646: 58BB  		JMP	INS_FAIL
000647: 6000  	MOV		A,@0x00
000648: 0103  	MOV		STATUS,A
000649: 60AA  		MOV		A,@0xAA
00064A: 68FF  		AND		A,@0xFF		; A = A & 0xFF
00064B: 3003  		JBC		C			; Check C = 0?
00064C: 58BB  		JMP	INS_FAIL
00064D: 3103  		JBC		DC			; Check DC = 0?
00064E: 58BB  		JMP	INS_FAIL
00064F: 3203  		JBC		Z			; Check Z = 0?
000650: 58BB  		JMP	INS_FAIL
000651: 3503  		JBC		OV			; Check OV = 0?
000652: 58BB  		JMP	INS_FAIL
000653: 3E03  		JBS		N			; Check N = 1?
000654: 58BB  		JMP	INS_FAIL
000655: 6CAA  		XOR		A,@0xAA		; Check Result ?
000656: 3A03  		JBS		Z			; Check Z = 1?
000657: 58BB  		JMP	INS_FAIL
000658: 3603  		JBC		N			; Check N = 0?
000659: 58BB  		JMP	INS_FAIL
00065A: 602A  	MOV		A,@0x2A
00065B: 0150  	MOV		INST,A
00065C: 6000  	MOV		A,@0x00
00065D: 0103  	MOV		STATUS,A
00065E: 6055  		MOV		A,@0x55
00065F: 0150  		MOV		0x50,A		; [0x50] = 0x55
000660: 6E50  		RRA		0x50		; A = [0x50] >> 1
000661: 3003  		JBC		C			; Check C = 0?
000662: 58BB  		JMP	INS_FAIL
000663: 3103  		JBC		DC			; Check DC = 0?
000664: 58BB  		JMP	INS_FAIL
000665: 3203  		JBC		Z			; Check Z = 0?
000666: 58BB  		JMP	INS_FAIL
000667: 3503  		JBC		OV			; Check OV = 0?
000668: 58BB  		JMP	INS_FAIL
000669: 3E03  		JBS		N			; Check N = 1?
00066A: 58BB  		JMP	INS_FAIL
00066B: 6CAA  		XOR		A,@0xAA		; Check Result ?
00066C: 3A03  		JBS		Z			; Check Z = 1?
00066D: 58BB  		JMP	INS_FAIL
00066E: 3603  		JBC		N			; Check N = 0?
00066F: 58BB  		JMP	INS_FAIL
000670: 602B  	MOV		A,@0x2B
000671: 0150  	MOV		INST,A
000672: 6000  	MOV		A,@0x00
000673: 0103  	MOV		STATUS,A	
000674: 6055  		MOV		A,@0x55
000675: 0150  		MOV		0x50,A		; [0x50] = 0x55
000676: 6F50  		RR		0x50		; [0x50] = [0x50] >> 1
000677: 1003  		MOV		A,STATUS
000678: 6C58  		XOR		A,@0x58		; Check Status ?
000679: 3A03  		JBS		Z			; Check Z = 1?
00067A: 58BB  		JMP	INS_FAIL
00067B: 3603  		JBC		N			; Check N = 0?
00067C: 58BB  		JMP	INS_FAIL
00067D: 1050  		MOV		A,0x50
00067E: 6CAA  		XOR		A,@0xAA		; Check Result ?
00067F: 3A03  		JBS		Z			; Check Z = 1?
000680: 58BB  		JMP	INS_FAIL
000681: 3603  		JBC		N			; Check N = 0?
000682: 58BB  		JMP	INS_FAIL
000683: 602D  	MOV		A,@0x2D
000684: 0150  	MOV		INST,A
000685: 6000  	MOV		A,@0x00
000686: 0103  	MOV		STATUS,A
000687: 6055  		MOV		A,@0x55
000688: 0150  		MOV		0x50,A		; [0x50] = 0x55
000689: 60AA  		MOV		A,@0xAA
00068A: 7150  		XCH		0x50		; [0x50] <-> A
00068B: 6C55  		XOR		A,@0x55		; Check Result ?
00068C: 3A03  		JBS		Z			; Check Z = 1?
00068D: 58BB  		JMP	INS_FAIL
00068E: 3603  		JBC		N			; Check N = 0?
00068F: 58BB  		JMP	INS_FAIL
000690: 1050  		MOV		A,0x50
000691: 6CAA  		XOR		A,@0xAA		; Check Result ?
000692: 3A03  		JBS		Z			; Check Z = 1?
000693: 58BB  		JMP	INS_FAIL
000694: 3603  		JBC		N			; Check N = 0?
000695: 58BB  		JMP	INS_FAIL
000696: 602E  	MOV		A,@0x2E
000697: 0150  	MOV		INST,A
000698: 6000  	MOV		A,@0x00
000699: 0103  	MOV		STATUS,A	
00069A: 605A  		MOV		A,@0x5A
00069B: 0150  		MOV		0x50,A		; [0x50] = 0x5A
00069C: 7250  		RLA		0x50		; A = [0x50] << 1
00069D: 3003  		JBC		C			; Check C = 0?
00069E: 58BB  		JMP	INS_FAIL
00069F: 3103  		JBC		DC			; Check DC = 0?
0006A0: 58BB  		JMP	INS_FAIL
0006A1: 3203  		JBC		Z			; Check Z = 0?
0006A2: 58BB  		JMP	INS_FAIL
0006A3: 3503  		JBC		OV			; Check OV = 0?
0006A4: 58BB  		JMP	INS_FAIL
0006A5: 3E03  		JBS		N			; Check N = 1?
0006A6: 58BB  		JMP	INS_FAIL
0006A7: 6CB4  		XOR		A,@0xB4		; Check Result ?
0006A8: 3A03  		JBS		Z			; Check Z = 1?
0006A9: 58BB  		JMP	INS_FAIL
0006AA: 3603  		JBC		N			; Check N = 0?
0006AB: 58BB  		JMP	INS_FAIL
0006AC: 602F  	MOV		A,@0x2F
0006AD: 0150  	MOV		INST,A
0006AE: 6000  	MOV		A,@0x00
0006AF: 0103  	MOV		STATUS,A
0006B0: 605A  		MOV		A,@0x5A
0006B1: 0150  		MOV		0x50,A		; [0x50] = 0xA5
0006B2: 7350  		RL		0x50		; [0x50] = [0x50] << 1
0006B3: 1003  		MOV		A,STATUS
0006B4: 6C58  		XOR		A,@0x58		; Check Status ?
0006B5: 3A03  		JBS		Z			; Check Z = 1?
0006B6: 58BB  		JMP	INS_FAIL
0006B7: 3603  		JBC		N			; Check N = 0?
0006B8: 58BB  		JMP	INS_FAIL
0006B9: 1050  		MOV		A,0x50
0006BA: 6CB4  		XOR		A,@0xB4		; Check Result ?
0006BB: 3A03  		JBS		Z			; Check Z = 1?
0006BC: 58BB  		JMP	INS_FAIL
0006BD: 3603  		JBC		N			; Check N = 0?
0006BE: 58BB  		JMP	INS_FAIL
0006BF: 6030  	MOV		A,@0x30
0006C0: 0150  	MOV		INST,A
0006C1: 6000  	MOV		A,@0x00
0006C2: 0103  	MOV		STATUS,A
0006C3: 60FF  		MOV		A,@0xFF
0006C4: 74FF  		SUB		A,@0xFF		; A = 0xFF - 0xFF
0006C5: 3803  		JBS		C			; Check C = 1?
0006C6: 58BB  		JMP	INS_FAIL
0006C7: 3903  		JBS		DC			; Check DC = 1?
0006C8: 58BB  		JMP	INS_FAIL
0006C9: 3A03  		JBS		Z			; Check Z = 1?
0006CA: 58BB  		JMP	INS_FAIL
0006CB: 3503  		JBC		OV			; Check OV = 0?
0006CC: 58BB  		JMP	INS_FAIL
0006CD: 3603  		JBC		N			; Check N = 0?
0006CE: 58BB  		JMP	INS_FAIL
0006CF: 6C00  		XOR		A,@0x00		; Check Result ?
0006D0: 3A03  		JBS		Z			; Check Z = 1?
0006D1: 58BB  		JMP	INS_FAIL
0006D2: 3603  		JBC		N			; Check N = 0?
0006D3: 58BB  		JMP	INS_FAIL
0006D4: 6000  	MOV		A,@0x00
0006D5: 0103  	MOV		STATUS,A
0006D6: 607F  		MOV		A,@0x7F
0006D7: 7400  		SUB		A,@0x00		; A = 0x00 - 0x7F
0006D8: 3003  		JBC		C			; Check C = 0?
0006D9: 58BB  		JMP	INS_FAIL
0006DA: 3103  		JBC		DC			; Check DC = 0?
0006DB: 58BB  		JMP	INS_FAIL
0006DC: 3203  		JBC		Z			; Check Z = 0?
0006DD: 58BB  		JMP	INS_FAIL
0006DE: 3503  		JBC		OV			; Check OV = 0?
0006DF: 58BB  		JMP	INS_FAIL
0006E0: 3E03  		JBS		N			; Check N = 1?
0006E1: 58BB  		JMP	INS_FAIL
0006E2: 6C81  		XOR		A,@0x81		; Check Result ?
0006E3: 3A03  		JBS		Z			; Check Z = 1?
0006E4: 58BB  		JMP	INS_FAIL
0006E5: 3603  		JBC		N			; Check N = 0?
0006E6: 58BB  		JMP	INS_FAIL
0006E7: 6000  	MOV		A,@0x00
0006E8: 0103  	MOV		STATUS,A
0006E9: 6001  		MOV		A,@0x01
0006EA: 7480  		SUB		A,@0x80		; A = 0x80 - 0x01
0006EB: 3803  		JBS		C			; Check C = 1?
0006EC: 58BB  		JMP	INS_FAIL
0006ED: 3103  		JBC		DC			; Check DC = 0?
0006EE: 58BB  		JMP	INS_FAIL
0006EF: 3203  		JBC		Z			; Check Z = 0?
0006F0: 58BB  		JMP	INS_FAIL
0006F1: 3D03  		JBS		OV			; Check OV = 1?
0006F2: 58BB  		JMP	INS_FAIL
0006F3: 3603  		JBC		N			; Check N = 0?
0006F4: 58BB  		JMP	INS_FAIL
0006F5: 6C7F  		XOR		A,@0x7F		; Check Result ?
0006F6: 3A03  		JBS		Z			; Check Z = 1?
0006F7: 58BB  		JMP	INS_FAIL
0006F8: 3603  		JBC		N			; Check N = 0?
0006F9: 58BB  		JMP	INS_FAIL
0006FA: 6031  	MOV		A,@0x31
0006FB: 0150  	MOV		INST,A
0006FC: 6000  	MOV		A,@0x00
0006FD: 0103  	MOV		STATUS,A
0006FE: 2003  		BC		C			; B = 1
0006FF: 6000  		MOV		A,@0x00
000700: 0150  		MOV		0x50,A		; [0x50] = 0x00
000701: 60FF  		MOV		A,@0xFF		; A = 0x01
000702: 7850  		SUBB	A,0x50		; A = [0x50] - A - B
000703: 3003  		JBC		C			; Check C = 0?
000704: 58BB  		JMP	INS_FAIL
000705: 3103  		JBC		DC			; Check DC = 0?
000706: 58BB  		JMP	INS_FAIL
000707: 3A03  		JBS		Z			; Check Z = 1?
000708: 58BB  		JMP	INS_FAIL
000709: 3503  		JBC		OV			; Check OV = 0?
00070A: 58BB  		JMP	INS_FAIL
00070B: 3603  		JBC		N			; Check N = 0?
00070C: 58BB  		JMP	INS_FAIL
00070D: 6C00  		XOR		A,@0x00		; Check Result ?
00070E: 3A03  		JBS		Z			; Check Z = 1?
00070F: 58BB  		JMP	INS_FAIL
000710: 3603  		JBC		N			; Check N = 0?
000711: 58BB  		JMP	INS_FAIL	
000712: 6000  	MOV		A,@0x00
000713: 0103  	MOV		STATUS,A
000714: 2003  		BC		C			; B = 1
000715: 6000  		MOV		A,@0x00
000716: 0150  		MOV		0x50,A		; [0x50] = 0x00
000717: 607F  		MOV		A,@0x7F		; A = 0x01
000718: 7850  		SUBB	A,0x50		; A = [0x50] - A - B
000719: 3003  		JBC		C			; Check C = 0?
00071A: 58BB  		JMP	INS_FAIL
00071B: 3103  		JBC		DC			; Check DC = 0?
00071C: 58BB  		JMP	INS_FAIL
00071D: 3203  		JBC		Z			; Check Z = 0?
00071E: 58BB  		JMP	INS_FAIL
00071F: 3503  		JBC		OV			; Check OV = 0?
000720: 58BB  		JMP	INS_FAIL
000721: 3E03  		JBS		N			; Check N = 1?
000722: 58BB  		JMP	INS_FAIL
000723: 6C80  		XOR		A,@0x80		; Check Result ?
000724: 3A03  		JBS		Z			; Check Z = 1?
000725: 58BB  		JMP	INS_FAIL
000726: 3603  		JBC		N			; Check N = 0?
000727: 58BB  		JMP	INS_FAIL
000728: 6000  	MOV		A,@0x00
000729: 0103  	MOV		STATUS,A
00072A: 2003  		BC		C			; B = 1
00072B: 6080  		MOV		A,@0x80
00072C: 0150  		MOV		0x50,A		; [0x50] = 0x80
00072D: 6001  		MOV		A,@0x01		; A = 0x01
00072E: 7850  		SUBB	A,0x50		; A = [0x50] - A - B
00072F: 3803  		JBS		C			; Check C = 1?
000730: 58BB  		JMP	INS_FAIL
000731: 3103  		JBC		DC			; Check DC = 0?
000732: 58BB  		JMP	INS_FAIL
000733: 3203  		JBC		Z			; Check Z = 0?
000734: 58BB  		JMP	INS_FAIL
000735: 3D03  		JBS		OV			; Check OV = 1?
000736: 58BB  		JMP	INS_FAIL
000737: 3603  		JBC		N			; Check N = 0?
000738: 58BB  		JMP	INS_FAIL
000739: 6C7E  		XOR		A,@0x7E		; Check Result ?
00073A: 3A03  		JBS		Z			; Check Z = 1?
00073B: 58BB  		JMP	INS_FAIL
00073C: 3603  		JBC		N			; Check N = 0?
00073D: 58BB  		JMP	INS_FAIL
00073E: 6032  	MOV		A,@0x32
00073F: 0150  	MOV		INST,A
000740: 6000  	MOV		A,@0x00
000741: 0103  	MOV		STATUS,A
000742: 2003  		BC		C			; B = 1
000743: 6000  		MOV		A,@0x00
000744: 0150  		MOV		0x50,A		; [0x50] = 0x00
000745: 60FF  		MOV		A,@0xFF
000746: 7950  		SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000747: 1003  		MOV		A,STATUS
000748: 6C1C  		XOR		A,@0x1C		; Check Status ?
000749: 3A03  		JBS		Z			; Check Z = 1?
00074A: 58BB  		JMP	INS_FAIL
00074B: 3603  		JBC		N			; Check N = 0?
00074C: 58BB  		JMP	INS_FAIL
00074D: 1050  		MOV		A,0x50
00074E: 6C00  		XOR		A,@0x00		; Check Result ?
00074F: 3A03  		JBS		Z			; Check Z = 1?
000750: 58BB  		JMP	INS_FAIL
000751: 3603  		JBC		N			; Check N = 0?
000752: 58BB  		JMP	INS_FAIL
000753: 6000  	MOV		A,@0x00
000754: 0103  	MOV		STATUS,A
000755: 2003  		BC		C			; B = 1
000756: 6000  		MOV		A,@0x00
000757: 0150  		MOV		0x50,A		; [0x50] = 0x00
000758: 607F  		MOV		A,@0x7F
000759: 7950  		SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
00075A: 1003  		MOV		A,STATUS
00075B: 6C58  		XOR		A,@0x58		; Check Status ?
00075C: 3A03  		JBS		Z			; Check Z = 1?
00075D: 58BB  		JMP	INS_FAIL
00075E: 3603  		JBC		N			; Check N = 0?
00075F: 58BB  		JMP	INS_FAIL
000760: 1050  		MOV		A,0x50
000761: 6C80  		XOR		A,@0x80		; Check Result ?
000762: 3A03  		JBS		Z			; Check Z = 1?
000763: 58BB  		JMP	INS_FAIL
000764: 3603  		JBC		N			; Check N = 0?
000765: 58BB  		JMP	INS_FAIL
000766: 6000  	MOV		A,@0x00
000767: 0103  	MOV		STATUS,A
000768: 2003  		BC		C			; B = 1
000769: 6080  		MOV		A,@0x80
00076A: 0150  		MOV		0x50,A		; [0x50] = 0x80
00076B: 6001  		MOV		A,@0x01
00076C: 7950  		SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
00076D: 1003  		MOV		A,STATUS
00076E: 6C39  		XOR		A,@0x39		; Check Status ?
00076F: 3A03  		JBS		Z			; Check Z = 1?
000770: 58BB  		JMP	INS_FAIL
000771: 3603  		JBC		N			; Check N = 0?
000772: 58BB  		JMP	INS_FAIL
000773: 1050  		MOV		A,0x50
000774: 6C7E  		XOR		A,@0x7E		; Check Result ?
000775: 3A03  		JBS		Z			; Check Z = 1?
000776: 58BB  		JMP	INS_FAIL
000777: 3603  		JBC		N			; Check N = 0?
000778: 58BB  		JMP	INS_FAIL
000779: 6034  	MOV		A,@0x34
00077A: 0150  	MOV		INST,A
00077B: 6000  	MOV		A,@0x00
00077C: 0103  	MOV		STATUS,A
00077D: 607F  		MOV		A,@0x7F
00077E: 7C01  		ADD		A,@0x01		; A = 0x01 + A
00077F: 3003  		JBC		C			; Check C = 0?
000780: 58BB  		JMP	INS_FAIL
000781: 3903  		JBS		DC			; Check DC = 1?
000782: 58BB  		JMP	INS_FAIL
000783: 3203  		JBC		Z			; Check Z = 0?
000784: 58BB  		JMP	INS_FAIL
000785: 3D03  		JBS		OV			; Check OV = 1?
000786: 58BB  		JMP	INS_FAIL
000787: 3E03  		JBS		N			; Check N = 1?
000788: 58BB  		JMP	INS_FAIL
000789: 6C80  		XOR		A,@0x80		; Check Result ?
00078A: 3A03  		JBS		Z			; Check Z = 1?
00078B: 58BB  		JMP	INS_FAIL
00078C: 3603  		JBC		N			; Check N = 0?
00078D: 58BB  		JMP	INS_FAIL
00078E: 6000  	MOV		A,@0x00
00078F: 0103  	MOV		STATUS,A
000790: 60FF  		MOV		A,@0xFF
000791: 7C01  		ADD		A,@0x01		; A = 0x01 + A
000792: 3803  		JBS		C			; Check C = 1?
000793: 58BB  		JMP	INS_FAIL
000794: 3903  		JBS		DC			; Check DC = 1?
000795: 58BB  		JMP	INS_FAIL
000796: 3A03  		JBS		Z			; Check Z = 1?
000797: 58BB  		JMP	INS_FAIL
000798: 3503  		JBC		OV			; Check OV = 0?
000799: 58BB  		JMP	INS_FAIL
00079A: 3603  		JBC		N			; Check N = 0?
00079B: 58BB  		JMP	INS_FAIL
00079C: 6C00  		XOR		A,@0x00		; Check Result ?
00079D: 3A03  		JBS		Z			; Check Z = 1?
00079E: 58BB  		JMP	INS_FAIL
00079F: 3603  		JBC		N			; Check N = 0?
0007A0: 58BB  		JMP	INS_FAIL
0007A1: 6000  	MOV		A,@0x00
0007A2: 0103  	MOV		STATUS,A
0007A3: 607F  		MOV		A,@0x7F
0007A4: 7C80  		ADD		A,@0x80		; A = 0x80 + A
0007A5: 3003  		JBC		C			; Check C = 0?
0007A6: 58BB  		JMP	INS_FAIL
0007A7: 3103  		JBC		DC			; Check DC = 0?
0007A8: 58BB  		JMP	INS_FAIL
0007A9: 3203  		JBC		Z			; Check Z = 0?
0007AA: 58BB  		JMP	INS_FAIL
0007AB: 3503  		JBC		OV			; Check OV = 0?
0007AC: 58BB  		JMP	INS_FAIL
0007AD: 3E03  		JBS		N			; Check N = 1?
0007AE: 58BB  		JMP	INS_FAIL
0007AF: 6CFF  		XOR		A,@0xFF		; Check Result ?
0007B0: 3A03  		JBS		Z			; Check Z = 1?
0007B1: 58BB  		JMP	INS_FAIL
0007B2: 3603  		JBC		N			; Check N = 0?
0007B3: 58BB  		JMP	INS_FAIL
0007B4: 6035  	MOV		A,@0x35
0007B5: 0150  	MOV		INST,A
0007B6: 6000  	MOV		A,@0x00
0007B7: 0103  	MOV		STATUS,A
0007B8: 6000  		MOV		A,@0x00
0007B9: 0150  		MOV		0x50,A		; [0x50] = 0x00
0007BA: 7D50  		NEG		0x50
0007BB: 1003  		MOV		A,STATUS
0007BC: 6C1F  		XOR		A,@0x1F		; Check Status ?
0007BD: 3A03  		JBS		Z			; Check Z = 1?
0007BE: 58BB  		JMP	INS_FAIL
0007BF: 3603  		JBC		N			; Check N = 0?
0007C0: 58BB  		JMP	INS_FAIL
0007C1: 1050  		MOV		A,0x50
0007C2: 6C00  		XOR		A,@0x00		; Check Result ?
0007C3: 3A03  		JBS		Z			; Check Z = 1?
0007C4: 58BB  		JMP	INS_FAIL
0007C5: 3603  		JBC		N			; Check N = 0?
0007C6: 58BB  		JMP	INS_FAIL
0007C7: 6000  	MOV		A,@0x00
0007C8: 0103  	MOV		STATUS,A
0007C9: 6001  		MOV		A,@0x01
0007CA: 0150  		MOV		0x50,A		; [0x50] = 0x01
0007CB: 7D50  		NEG		0x50
0007CC: 1003  		MOV		A,STATUS
0007CD: 6C58  		XOR		A,@0x58		; Check Status ?
0007CE: 3A03  		JBS		Z			; Check Z = 1?
0007CF: 58BB  		JMP	INS_FAIL
0007D0: 3603  		JBC		N			; Check N = 0?
0007D1: 58BB  		JMP	INS_FAIL
0007D2: 1050  		MOV		A,0x50
0007D3: 6CFF  		XOR		A,@0xFF		; Check Result ?
0007D4: 3A03  		JBS		Z			; Check Z = 1?
0007D5: 58BB  		JMP	INS_FAIL
0007D6: 3603  		JBC		N			; Check N = 0?
0007D7: 58BB  		JMP	INS_FAIL
0007D8: 6000  	MOV		A,@0x00
0007D9: 0103  	MOV		STATUS,A
0007DA: 6080  		MOV		A,@0x80
0007DB: 0150  		MOV		0x50,A		; [0x50] = 0x80
0007DC: 7D50  		NEG		0x50
0007DD: 1003  		MOV		A,STATUS
0007DE: 6C7A  		XOR		A,@0x7A		; Check Status ?
0007DF: 3A03  		JBS		Z			; Check Z = 1?
0007E0: 58BB  		JMP	INS_FAIL
0007E1: 3603  		JBC		N			; Check N = 0?
0007E2: 58BB  		JMP	INS_FAIL
0007E3: 1050  		MOV		A,0x50
0007E4: 6C80  		XOR		A,@0x80		; Check Result ?
0007E5: 3A03  		JBS		Z			; Check Z = 1?
0007E6: 58BB  		JMP	INS_FAIL
0007E7: 3603  		JBC		N			; Check N = 0?
0007E8: 58BB  		JMP	INS_FAIL
0007E9: 6036  	MOV		A,@0x36
0007EA: 0150  	MOV		INST,A
0007EB: 6000  	MOV		A,@0x00
0007EC: 0103  	MOV		STATUS,A
0007ED: 2803  		BS		C
0007EE: 607F  		MOV		A,@0x7F
0007EF: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0007F0: 6000  		MOV		A,@0x00		; A = 0x00
0007F1: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
0007F2: 3003  		JBC		C			; Check C = 0?
0007F3: 58BB  		JMP	INS_FAIL
0007F4: 3903  		JBS		DC			; Check DC = 1?
0007F5: 58BB  		JMP	INS_FAIL
0007F6: 3203  		JBC		Z			; Check Z = 0?
0007F7: 58BB  		JMP	INS_FAIL
0007F8: 3D03  		JBS		OV			; Check OV = 1?
0007F9: 58BB  		JMP	INS_FAIL
0007FA: 3E03  		JBS		N			; Check N = 1?
0007FB: 58BB  		JMP	INS_FAIL
0007FC: 6C80  		XOR		A,@0x80		; Check Result ?
0007FD: 3A03  		JBS		Z			; Check Z = 1?
0007FE: 58BB  		JMP	INS_FAIL
0007FF: 3603  		JBC		N			; Check N = 0?
000800: 58BB  		JMP	INS_FAIL
000801: 6000  	MOV		A,@0x00
000802: 0103  	MOV		STATUS,A
000803: 2803  		BS		C
000804: 6080  		MOV		A,@0x80
000805: 0150  		MOV		0x50,A		; [0x50] = 0x80
000806: 607F  		MOV		A,@0x7F		; A = 0x7F
000807: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
000808: 3803  		JBS		C			; Check C = 1?
000809: 58BB  		JMP	INS_FAIL
00080A: 3903  		JBS		DC			; Check DC = 1?
00080B: 58BB  		JMP	INS_FAIL
00080C: 3A03  		JBS		Z			; Check Z = 1?
00080D: 58BB  		JMP	INS_FAIL
00080E: 3503  		JBC		OV			; Check OV = 0?
00080F: 58BB  		JMP	INS_FAIL
000810: 3603  		JBC		N			; Check N = 0?
000811: 58BB  		JMP	INS_FAIL
000812: 6C00  		XOR		A,@0x00		; Check Result ?
000813: 3A03  		JBS		Z			; Check Z = 1?
000814: 58BB  		JMP	INS_FAIL
000815: 3603  		JBC		N			; Check N = 0?
000816: 58BB  		JMP	INS_FAIL
000817: 6037  	MOV		A,@0x37
000818: 0150  	MOV		INST,A
000819: 6000  	MOV		A,@0x00
00081A: 0103  	MOV		STATUS,A
00081B: 2803  		BS		C
00081C: 607F  		MOV		A,@0x7F
00081D: 0150  		MOV		0x50,A		; [0x50] = 0x7F
00081E: 6000  		MOV		A,@0x00		; A = 0x00
00081F: 2203  		BC		Z
000820: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
000821: 1003  		MOV		A,STATUS
000822: 6C7A  		XOR		A,@0x7A		; Check Status ?
000823: 3A03  		JBS		Z			; Check Z = 1?
000824: 58BB  		JMP	INS_FAIL
000825: 3603  		JBC		N			; Check N = 0?
000826: 58BB  		JMP	INS_FAIL
000827: 1050  		MOV		A,0x50
000828: 6C80  		XOR		A,@0x80		; Check Result ?
000829: 3A03  		JBS		Z			; Check Z = 1?
00082A: 58BB  		JMP	INS_FAIL
00082B: 3603  		JBC		N			; Check N = 0?
00082C: 58BB  		JMP	INS_FAIL
00082D: 6000  	MOV		A,@0x00
00082E: 0103  	MOV		STATUS,A
00082F: 2803  		BS		C
000830: 6080  		MOV		A,@0x80
000831: 0150  		MOV		0x50,A		; [0x50] = 0x80
000832: 607F  		MOV		A,@0x7F		; A = 0x7F
000833: 2203  		BC		Z
000834: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
000835: 1003  		MOV		A,STATUS
000836: 6C1F  		XOR		A,@0x1F		; Check Status ?
000837: 3A03  		JBS		Z			; Check Z = 1?
000838: 58BB  		JMP	INS_FAIL
000839: 3603  		JBC		N			; Check N = 0?
00083A: 58BB  		JMP	INS_FAIL
00083B: 1050  		MOV		A,0x50
00083C: 6C00  		XOR		A,@0x00		; Check Result ?
00083D: 3A03  		JBS		Z			; Check Z = 1?
00083E: 58BB  		JMP	INS_FAIL
00083F: 3603  		JBC		N			; Check N = 0?
000840: 58BB  		JMP	INS_FAIL
000841: 0000  		NOP
000842: 0000  		NOP
000843: 0000  		NOP
000844: 0000  		NOP
000845: 6000  	MOV		A,@0x00
000846: 0103  	MOV		STATUS,A
000847: 2803  		BS	C
000848: 6903  		SJC		@0x03
000849: 505D  		JMP	JMP_FAIL
00084A: 505D  		JMP	JMP_FAIL
00084B: 505D  		JMP	JMP_FAIL
00084C: 2003  		BC	C
00084D: 6A03  		SJNC	bbb
00084E: 505D  		JMP	JMP_FAIL
00084F: 505D  		JMP	JMP_FAIL
000850: 505D  		JMP	JMP_FAIL
000851: 2A03  		BS	Z
000852: 6B03  		SJZ		@0x03
000853: 505D  		JMP	JMP_FAIL
000854: 505D  		JMP	JMP_FAIL
000855: 505D  		JMP	JMP_FAIL
000856: 0200  		CLRA
000857: 6B03  		SJZ		@0x03
000858: 505D  		JMP	JMP_FAIL
000859: 505D  		JMP	JMP_FAIL
00085A: 505D  		JMP	JMP_FAIL
00085B: 5863  		JMP	IATEST1
00085C: 5870  		JMP	IATEST2		; -9
00085D: 505D  		JMP	JMP_FAIL	; -8
00085E: 505D  		JMP	JMP_FAIL	; -7
00085F: 505D  		JMP	JMP_FAIL	; -6
000860: 505D  		JMP	JMP_FAIL	; -5
000861: 505D  		JMP	JMP_FAIL	; -4
000862: 505D  		JMP	JMP_FAIL	; -3
000863: 2803  		BS		C		; -2
000864: 69F7  		SJC		aaa		; -1
000865: 69F7  		SJC		@0xF7	; -1
000866: 505D  		JMP	JMP_FAIL
000867: 505D  		JMP	JMP_FAIL
000868: 505D  		JMP	JMP_FAIL
000869: 587C  		JMP	IATEST3		; -9
00086A: 505D  		JMP	JMP_FAIL	; -8
00086B: 505D  		JMP	JMP_FAIL	; -7
00086C: 505D  		JMP	JMP_FAIL	; -6
00086D: 505D  		JMP	JMP_FAIL	; -5
00086E: 505D  		JMP	JMP_FAIL	; -4
00086F: 505D  		JMP	JMP_FAIL	; -3
000870: 2003  		BC		C		; -2
000871: 6AF7  		SJNC		@0xF7	; -1
000872: 588D  		JMP	_IPass
000873: 588D  		JMP	_IPass
000874: 588D  		JMP	_IPass
000875: 5888  		JMP	IATEST4		; -9
000876: 505D  		JMP	JMP_FAIL	; -8
000877: 505D  		JMP	JMP_FAIL	; -7
000878: 505D  		JMP	JMP_FAIL	; -6
000879: 505D  		JMP	JMP_FAIL	; -5
00087A: 505D  		JMP	JMP_FAIL	; -4
00087B: 505D  		JMP	JMP_FAIL	; -3
00087C: 2A03  		BS		Z		; -2
00087D: 6BF7  		SJZ		@0xF7	; -1
00087E: 505D  		JMP	JMP_FAIL
00087F: 505D  		JMP	JMP_FAIL
000880: 505D  		JMP	JMP_FAIL
000881: 588D  		JMP	_IPass		; -9
000882: 505D  		JMP	JMP_FAIL	; -8
000883: 505D  		JMP	JMP_FAIL	; -7
000884: 505D  		JMP	JMP_FAIL	; -6
000885: 505D  		JMP	JMP_FAIL	; -5
000886: 505D  		JMP	JMP_FAIL	; -4
000887: 505D  		JMP	JMP_FAIL	; -3
000888: 2203  		BC		Z		; -2
000889: 6DF7  		SJNZ	@0xF7	; -1
00088A: 505D  		JMP	JMP_FAIL
00088B: 505D  		JMP	JMP_FAIL
00088C: 505D  		JMP	JMP_FAIL
00088D: 0000  		NOP
00088E: 7A41  	GBANK   1
00088F: 6050  	MOV		A,@0x50
000890: 0104  	MOV		RSR,A			; Start Address
000891: 60AF  	MOV		A,@0xAF			; For count from 0x50~0xFF
000892: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF, count value
000893: 6055  	MOV		A,@0x55			; IAR = 0x55
000894: 0100  	MOV		IAR,A			; Write IAR to [RSR]
000895: 1504  	INC		RSR				; RSR = RSR + 1
000896: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
000897: 5893  	JMP		LOOP1			; Until [0xFF] = 0
000898: 6050  	MOV		A,@0x50
000899: 0104  	MOV		RSR,A
00089A: 60AF  	MOV		A,@0xAF
00089B: 01FF  	MOV		0xFF,A
00089C: 60AA  	MOV		A,@0xAA
00089D: 1300  	COM		IAR				; IAR = ~IAR
00089E: 0D00  	XOR		IAR,A
00089F: 3A03  	JBS		Z
0008A0: 505F  	JMP		RAM_FAIL
0008A1: 1504  	INC		RSR				; RSR = RSR + 1
0008A2: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
0008A3: 589C  	JMP		CHECK1			; Until [0xFF] = 0
0008A4: 6050  	MOV		A,@0x50
0008A5: 0104  	MOV		RSR,A			; Start Address
0008A6: 60AF  	MOV		A,@0xAF			; For count from 0x50~0xFF
0008A7: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF, count value
0008A8: 60AA  	MOV		A,@0xAA			; IAR = 0xAA
0008A9: 0100  	MOV		IAR,A			; Write IAR to [RSR]
0008AA: 1504  	INC		RSR				; RSR = RSR + 1
0008AB: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
0008AC: 58A8  	JMP		LOOP2			; Until  [0xFF] = 0	
0008AD: 6050  	MOV		A,@0x50
0008AE: 0104  	MOV		RSR,A			; RSR = 0x50
0008AF: 60AF  	MOV		A,@0xAF
0008B0: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF
0008B1: 60AA  	MOV		A,@0xAA
0008B2: 0D00  	XOR		IAR,A
0008B3: 3A03  	JBS		Z
0008B4: 505F  	JMP		RAM_FAIL
0008B5: 1504  	INC		RSR
0008B6: 17FF  	DJZ		0xFF
0008B7: 58B1  	JMP		CHECK2			; Until [0xFF] = 0
0008B8: 0000  	NOP
0008B9: 0095  	BTG		P5,1
0008BA: 5240  	JMP		TEST_INST
0008BB: 2405  	BC		P5,4
0008BC: 58BB  	JMP		INS_FAIL
