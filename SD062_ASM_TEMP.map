****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0XC    , End=0X4F   , Size=68
Start=0X84C  , End=0X17FF , Size=4020
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  2055 x 15 bits( 33.4%)
Free            |  4089 x 15 bits( 66.6%)
----------------------------------------
****************************************
The Checksum is -- 0x644C
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 5063  	JMP JMP_FAIL	;0x0046
000003: 5063  	JMP JMP_FAIL	;0x0047
000004: 5063  	JMP JMP_FAIL	;0x0048
000005: 5063  	JMP JMP_FAIL	;0x0049
000006: 5063  	JMP JMP_FAIL	;0x004A
000007: 5063  	JMP JMP_FAIL	;0x004B
000008: 5063  	JMP JMP_FAIL	;0x004C
000009: 5063  	JMP JMP_FAIL	;0x004D
00000A: 5063  	JMP JMP_FAIL	;0x004E
00000B: 5063  	JMP JMP_FAIL	;0x004F
000050: 2805  	BS		P50	;Off P50
000051: 2905  	BS		P51	;On P51
000052: 409D  	CALL	RAM_SHA_INIT
000053: 40A7  	CALL	RAM_IND_INIT
000054: 40D0  	CALL	EEPROM_INIT
000055: 7A00  	SBANK	0
000056: 40E6  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000057: 4474  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000058: 45A6  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000059: 466E  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
00005A: 46A6  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005B: 46A7  	CALL	TEST_INST_BRANCH_I		;JE R, JGE, JLE, JE K, JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
00005C: 46A9  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
00005D: 47F0  	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
00005E: 4807  	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
00005F: 481E  	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
000060: 4835  	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
000061: 5055  	JMP		BACK_GROUND_LOOP
000062: 5050  	JMP		MAIN
000063: 7A00  	SBANK	0
000064: 5063  	JMP		JMP_FAIL
000065: 7A00  	SBANK	0
000066: 5065  	JMP		RAM_FAIL
000067: 7A00  	SBANK	0
000068: 5067  	JMP		INS_FAIL
000069: 7A00  		SBANK	0
00006A: 2F0E  		BS		CPUS	;FSYS=FM
00006B: 260E  		BC		IDLE	;SLEEP_MODE
00006C: 0012  		RET
00006D: 7A00  		SBANK	0
00006E: 0305  		CLR		P5
00006F: 600F  		MOV		A,@0x0F	;P50~P53 As Input, Other Setting As Output
000070: 010B  		MOV		IOCR5,A
000071: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
000072: 0105  		MOV		P5,A
000073: 0012  		RET
000074: 7A00  		SBANK	0
000075: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000076: 5079  		JMP		$+3
000077: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000078: 0003  		SLEP
000079: 3B03  		JBS		P
00007A: 507D  		JMP		$+3
00007B: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007C: 0003  		SLEP
00007D: 3B03  		JBS		P
00007E: 5081  		JMP		$+3
00007F: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000080: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000081: 0003  		SLEP		
000082: 0012  		RET
000083: 3A05  		JBS		P5,2		; Push, or not
000084: 5086  		JMP		$+2
000085: 5083  		JMP		$-2
000086: 3A05  		JBS		P5,2
000087: 5083  		JMP		KEY_DEBOUNCE
000088: 3A05  		JBS		P5,2
000089: 5083  		JMP		KEY_DEBOUNCE
00008A: 3A05  		JBS		P5,2
00008B: 5083  		JMP		KEY_DEBOUNCE
00008C: 3A05  		JBS		P5,2
00008D: 5083  		JMP		KEY_DEBOUNCE
00008E: 3A05  		JBS		P5,2
00008F: 5083  		JMP		KEY_DEBOUNCE
000090: 3A05  		JBS		P5,2
000091: 5083  		JMP		KEY_DEBOUNCE
000092: 3A05  		JBS		P5,2
000093: 5083  		JMP		KEY_DEBOUNCE
000094: 3A05  		JBS		P5,2
000095: 5083  		JMP		KEY_DEBOUNCE
000096: 3A05  		JBS		P5,2
000097: 5083  		JMP		KEY_DEBOUNCE
000098: 3A05  		JBS		P5,2
000099: 5097  		JMP		$-2
00009A: 60FF  		MOV		A,@0xFF		; Turn Off all LED
00009B: 0105  		MOV		P5,A		
00009C: 0012  		RET
00009D: 6050  		MOV		A,@0x50
00009E: 0104  		MOV		RSR,A
00009F: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
0000A0: 0100  		MOV		IAR,A
0000A1: 1504  		INC		RSR
0000A2: 6080  		MOV		A,@0x80
0000A3: 0D04  		XOR		RSR,A
0000A4: 3A03  		JBS		Z
0000A5: 509F  		JMP		$-6
0000A6: 0012  		RET
0000A7: 6080  		MOV		A,@0x80
0000A8: 0104  		MOV		RSR,A
0000A9: 7A40  		GBANK	0
0000AA: 60FF  		MOV		A,@0xFF
0000AB: 0100  		MOV		IAR,A
0000AC: 1504  		INC		RSR
0000AD: 6000  		MOV		A,@0x00
0000AE: 0D04  		XOR		RSR,A
0000AF: 3A03  		JBS		Z
0000B0: 50A9  		JMP		RAM_IND_LOOP_0
0000B1: 6080  		MOV		A,@0x80
0000B2: 0104  		MOV		RSR,A
0000B3: 7A41  		GBANK	1
0000B4: 60FF  		MOV		A,@0xFF
0000B5: 0100  		MOV		IAR,A
0000B6: 1504  		INC		RSR
0000B7: 6000  		MOV		A,@0x00
0000B8: 0D04  		XOR		RSR,A
0000B9: 3A03  		JBS		Z
0000BA: 50B3  		JMP		RAM_IND_LOOP_1
0000BB: 6080  		MOV		A,@0x80
0000BC: 0104  		MOV		RSR,A
0000BD: 7A42  		GBANK	2
0000BE: 60FF  		MOV		A,@0xFF
0000BF: 0100  		MOV		IAR,A
0000C0: 1504  		INC		RSR
0000C1: 6000  		MOV		A,@0x00
0000C2: 0D04  		XOR		RSR,A
0000C3: 3A03  		JBS		Z
0000C4: 50BD  		JMP		RAM_IND_LOOP_2
0000C5: 6080  		MOV		A,@0x80
0000C6: 0104  		MOV		RSR,A
0000C7: 7A43  		GBANK	3
0000C8: 60FF  		MOV		A,@0xFF
0000C9: 0100  		MOV		IAR,A
0000CA: 1504  		INC		RSR
0000CB: 6000  		MOV		A,@0x00
0000CC: 0D04  		XOR		RSR,A
0000CD: 3A03  		JBS		Z
0000CE: 50C7  		JMP		RAM_IND_LOOP_3
0000CF: 0012  		RET
0000D0: 6080  		MOV		A,@0x80
0000D1: 0141  		MOV		EECR2,A
0000D2: 1000  		MOV		A,0x00
0000D3: 0150  		MOV		TMP50,A
0000D4: 1050  		MOV		A,TMP50
0000D5: 0142  		MOV		EERA,A
0000D6: 60FF  		MOV		A,@0xFF
0000D7: 0143  		MOV		EERD,A
0000D8: 1550  		INC		TMP50
0000D9: 1080  		MOV		A,0x80
0000DA: 0C50  		XOR		A,TMP50
0000DB: 3A03  		JBS		Z
0000DC: 50D4  		JMP		EEPROM_INIT_LOOP
0000DD: 0012  		RET
0000DE: 6000  		MOV		A,@0x00
0000DF: 0103  		MOV		STATUS,A
0000E0: 0012  		RET
0000E1: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000E2: 5067  		JMP		INS_FAIL
0000E3: 3603  		JBC		N			; IF(N=0) BRANCH
0000E4: 5067  		JMP		INS_FAIL
0000E5: 0012  		RET
0000E6: 6001  			MOV		A,@0x01
0000E7: 015A  			MOV		INST,A
0000E8: 40DE  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000E9: 60AA  			MOV		A,@0xAA
0000EA: 0001  			DAA
0000EB: 3803  			JBS		C			; Check C = 1?
0000EC: 5067  			JMP	INS_FAIL
0000ED: 3103  			JBC		DC			; Check DC = 0?
0000EE: 5067  			JMP	INS_FAIL
0000EF: 3203  			JBC		Z			; Check Z = 0?
0000F0: 5067  			JMP	INS_FAIL
0000F1: 3503  			JBC		OV			; Check OV = 0?
0000F2: 5067  			JMP	INS_FAIL
0000F3: 3603  			JBC		N			; Check N = 0?
0000F4: 5067  			JMP	INS_FAIL
0000F5: 6C10  			XOR		A,@0x10		; Check Result ?
0000F6: 3A03  			JBS		Z			; Check Z = 1?
0000F7: 5067  			JMP	INS_FAIL
0000F8: 3603  			JBC		N			; Check N = 0?
0000F9: 5067  			JMP	INS_FAIL
0000FA: 40DE  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000FB: 6080  			MOV		A,@0x80
0000FC: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000FD: 607F  			MOV		A,@0x7F		; 
0000FE: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000FF: 0001  			DAA
000100: 3803  			JBS		C			; Check C = 1?
000101: 5067  			JMP	INS_FAIL
000102: 3103  			JBC		DC			; Check DC = 0?
000103: 5067  			JMP	INS_FAIL
000104: 3203  			JBC		Z			; Check Z = 0?
000105: 5067  			JMP	INS_FAIL
000106: 3503  			JBC		OV			; Check OV = 0?
000107: 5067  			JMP	INS_FAIL
000108: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000109: 5067  			JMP	INS_FAIL
00010A: 2203  			BC		Z
00010B: 2603  			BC		N
00010C: 6C65  			XOR		A,@0x65		; Check Result ?
00010D: 3A03  			JBS		Z			; Check Z = 1?
00010E: 5067  			JMP	INS_FAIL
00010F: 3603  			JBC		N			; Check N = 0?
000110: 5067  			JMP	INS_FAIL
000111: 0000  			NOP
000112: 6000  			MOV		A,@0x00
000113: 0103  			MOV		STATUS,A
000114: 2803  			BS		C
000115: 6080  			MOV		A,@0x80
000116: 0150  			MOV		0x50,A		; [0x50] = 0x80
000117: 607F  			MOV		A,@0x7F		; 
000118: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000119: 0001  			DAA
00011A: 3803  			JBS		C			; Check C = 1? 	/ By ADC
00011B: 5067  			JMP	INS_FAIL
00011C: 3903  			JBS		DC			; Check DC = 1? / By ADC
00011D: 5067  			JMP	INS_FAIL
00011E: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
00011F: 5067  			JMP	INS_FAIL
000120: 3503  			JBC		OV			; Check OV = 0?
000121: 5067  			JMP	INS_FAIL
000122: 3603  			JBC		N			; Check N = 0?
000123: 5067  			JMP	INS_FAIL
000124: 6C66  			XOR		A,@0x66		; Check Result ?
000125: 3A03  			JBS		Z			; Check Z = 1?
000126: 5067  			JMP	INS_FAIL
000127: 3603  			JBC		N			; Check N = 0?
000128: 5067  			JMP	INS_FAIL
000129: 6000  			MOV		A,@0x00
00012A: 0103  			MOV		STATUS,A
00012B: 60FF  			MOV		A,@0xFF
00012C: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00012D: 607F  			MOV		A,@0x7F		; 
00012E: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
00012F: 0001  			DAA
000130: 3803  			JBS		C			; Check C = 1? 	/ By SUB
000131: 5067  			JMP	INS_FAIL
000132: 3903  			JBS		DC			; Check DC = 1? / By SUB
000133: 5067  			JMP	INS_FAIL
000134: 3203  			JBC		Z			; Check Z = 0?
000135: 5067  			JMP	INS_FAIL
000136: 3503  			JBC		OV			; Check OV = 0?
000137: 5067  			JMP	INS_FAIL
000138: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000139: 5067  			JMP	INS_FAIL
00013A: 2203  			BC		Z
00013B: 2603  			BC		N
00013C: 6CE6  			XOR		A,@0xE6		; Check Result ?
00013D: 3A03  			JBS		Z			; Check Z = 1?
00013E: 5067  			JMP	INS_FAIL
00013F: 3603  			JBC		N			; Check N = 0?
000140: 5067  			JMP	INS_FAIL
000141: 6008  			MOV		A,@0x08
000142: 015A  			MOV		INST,A
000143: 605A  			MOV		A,@0x5A
000144: 6C5A  			XOR		A,@0x5A		; Check Result ?
000145: 3A03  			JBS		Z			; Check Z = 1?
000146: 5067  			JMP	INS_FAIL
000147: 3603  			JBC		N			; Check N = 0?
000148: 5067  			JMP	INS_FAIL
000149: 605A  			MOV		A,@0x5A
00014A: 0200  			CLRA
00014B: 3A03  			JBS		Z			; Check Z = 1?
00014C: 5067  			JMP	INS_FAIL
00014D: 2203  			BC		Z
00014E: 6C00  			XOR		A,@0x00		; Check Result ?
00014F: 3A03  			JBS		Z			; Check Z = 1?
000150: 5067  			JMP	INS_FAIL
000151: 3603  			JBC		N			; Check N = 0?
000152: 5067  			JMP	INS_FAIL
000153: 6009  			MOV		A,@0x09
000154: 015A  			MOV		INST,A
000155: 60AA  			MOV		A,@0xAA
000156: 0150  			MOV		0x50,A
000157: 1050  			MOV		A,0x50
000158: 6CAA  			XOR		A,@0xAA		; Check Result ?
000159: 3A03  			JBS		Z			; Check Z = 1?
00015A: 5067  			JMP	INS_FAIL
00015B: 3603  			JBC		N			; Check N = 0?
00015C: 5067  			JMP	INS_FAIL
00015D: 0350  			CLR		0x50
00015E: 3A03  			JBS		Z			; Check Z = 1?
00015F: 5067  			JMP	INS_FAIL
000160: 2203  			BC		Z
000161: 1050  			MOV		A,0x50
000162: 6C00  			XOR		A,@0x00		; Check Result ?
000163: 3A03  			JBS		Z			; Check Z = 1?
000164: 5067  			JMP	INS_FAIL
000165: 3603  			JBC		N			; Check N = 0?
000166: 5067  			JMP	INS_FAIL
000167: 600A  			MOV		A,@0x0A
000168: 015A  			MOV		INST,A
000169: 6000  			MOV		A,@0x00
00016A: 0103  			MOV		STATUS,A
00016B: 6002  			MOV		A,@0x02		; SUB(2-1)=1
00016C: 0150  			MOV		0x50,A		; [0x50] = 0x02
00016D: 6001  			MOV		A,@0x01
00016E: 0450  			SUB		A,0x50		; A = [0x50] - A
00016F: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
000170: 5067  			JMP	INS_FAIL
000171: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000172: 5067  			JMP	INS_FAIL
000173: 3203  			JBC		Z			; Check Z = 0?
000174: 5067  			JMP	INS_FAIL
000175: 3503  			JBC		OV			; Check OV = 0?
000176: 5067  			JMP	INS_FAIL
000177: 3603  			JBC		N			; Check N = 0?
000178: 5067  			JMP	INS_FAIL
000179: 2203  			BC		Z
00017A: 6C01  			XOR		A,@0x01		; Check Result ?
00017B: 3A03  			JBS		Z			; Check Z = 1?
00017C: 5067  			JMP	INS_FAIL
00017D: 3603  			JBC		N			; Check N = 0?
00017E: 5067  			JMP	INS_FAIL
00017F: 6000  			MOV		A,@0x00
000180: 0103  			MOV		STATUS,A
000181: 6002  			MOV		A,@0x02		; SUB(2-2)=0
000182: 0150  			MOV		0x50,A		; [0x50] = 0x02
000183: 6002  			MOV		A,@0x02
000184: 0450  			SUB		A,0x50		; A = [0x50] - A
000185: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000186: 5067  			JMP	INS_FAIL
000187: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000188: 5067  			JMP	INS_FAIL
000189: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
00018A: 5067  			JMP	INS_FAIL
00018B: 3503  			JBC		OV			; Check OV = 0?
00018C: 5067  			JMP	INS_FAIL
00018D: 3603  			JBC		N			; Check N = 0?
00018E: 5067  			JMP	INS_FAIL
00018F: 2203  			BC		Z
000190: 6C00  			XOR		A,@0x00		; Check Result ?
000191: 3A03  			JBS		Z			; Check Z = 1?
000192: 5067  			JMP	INS_FAIL
000193: 3603  			JBC		N			; Check N = 0?
000194: 5067  			JMP	INS_FAIL
000195: 6000  			MOV		A,@0x00
000196: 0103  			MOV		STATUS,A
000197: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000198: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000199: 607F  			MOV		A,@0x7F
00019A: 0450  			SUB		A,0x50		; A = [0x50] - A
00019B: 3803  			JBS		C			; Check C = 1?
00019C: 5067  			JMP	INS_FAIL
00019D: 3903  			JBS		DC			; Check DC = 1?
00019E: 5067  			JMP	INS_FAIL
00019F: 3203  			JBC		Z			; Check Z = 0?
0001A0: 5067  			JMP	INS_FAIL
0001A1: 3503  			JBC		OV			; Check OV = 0?
0001A2: 5067  			JMP	INS_FAIL
0001A3: 3E03  			JBS		N			; Check N = 1?
0001A4: 5067  			JMP	INS_FAIL
0001A5: 2203  			BC		Z
0001A6: 2603  			BC		N
0001A7: 6C80  			XOR		A,@0x80		; Check Result ?
0001A8: 3A03  			JBS		Z			; Check Z = 1?
0001A9: 5067  			JMP	INS_FAIL
0001AA: 3603  			JBC		N			; Check N = 0?
0001AB: 5067  			JMP	INS_FAIL
0001AC: 6000  			MOV		A,@0x00
0001AD: 0103  			MOV		STATUS,A
0001AE: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001AF: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001B0: 607F  			MOV		A,@0x7F
0001B1: 0450  			SUB		A,0x50		; A = [0x50] - A
0001B2: 3803  			JBS		C			; Check C = 1?
0001B3: 5067  			JMP	INS_FAIL
0001B4: 3103  			JBC		DC			; Check DC = 0?
0001B5: 5067  			JMP	INS_FAIL
0001B6: 3203  			JBC		Z			; Check Z = 0?
0001B7: 5067  			JMP	INS_FAIL
0001B8: 3D03  			JBS		OV			; Check OV = 1?
0001B9: 5067  			JMP	INS_FAIL
0001BA: 3603  			JBC		N			; Check N = 0?
0001BB: 5067  			JMP	INS_FAIL
0001BC: 2203  			BC		Z
0001BD: 2603  			BC		N
0001BE: 6C01  			XOR		A,@0x01		; Check Result ?
0001BF: 3A03  			JBS		Z			; Check Z = 1?
0001C0: 5067  			JMP	INS_FAIL
0001C1: 3603  			JBC		N			; Check N = 0?
0001C2: 5067  			JMP	INS_FAIL
0001C3: 6000  			MOV		A,@0x00
0001C4: 0103  			MOV		STATUS,A
0001C5: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001C6: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001C7: 6003  			MOV		A,@0x03
0001C8: 0450  			SUB		A,0x50		; A = [0x50] - A
0001C9: 3003  			JBC		C			; Check C = 0?
0001CA: 5067  			JMP	INS_FAIL
0001CB: 3103  			JBC		DC			; Check DC = 0?
0001CC: 5067  			JMP	INS_FAIL
0001CD: 3203  			JBC		Z			; Check Z = 0?
0001CE: 5067  			JMP	INS_FAIL
0001CF: 3503  			JBC		OV			; Check OV = 0?
0001D0: 5067  			JMP	INS_FAIL
0001D1: 3E03  			JBS		N			; Check N = 1?
0001D2: 5067  			JMP	INS_FAIL
0001D3: 2203  			BC		Z
0001D4: 2603  			BC		N
0001D5: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001D6: 3A03  			JBS		Z			; Check Z = 1?
0001D7: 5067  			JMP	INS_FAIL
0001D8: 3603  			JBC		N			; Check N = 0?
0001D9: 5067  			JMP	INS_FAIL
0001DA: 600B  			MOV		A,@0x0B
0001DB: 015A  			MOV		INST,A
0001DC: 6000  			MOV		A,@0x00
0001DD: 0103  			MOV		STATUS,A
0001DE: 6002  			MOV		A,@0x02
0001DF: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001E0: 6001  			MOV		A,@0x01
0001E1: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001E2: 1003  			MOV		A,STATUS
0001E3: 6C1B  			XOR		A,@0x1B		; for non reset
0001E4: 40E1  			CALL	INST_XOR_JUDGE
0001E5: 2203  			BC		Z
0001E6: 2603  			BC		N
0001E7: 1050  			MOV		A,0x50
0001E8: 6C01  			XOR		A,@0x01		; Check Result ?
0001E9: 40E1  			CALL	INST_XOR_JUDGE
0001EA: 6000  			MOV		A,@0x00
0001EB: 0103  			MOV		STATUS,A
0001EC: 6002  			MOV		A,@0x02
0001ED: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001EE: 6002  			MOV		A,@0x02
0001EF: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001F0: 1003  			MOV		A,STATUS
0001F1: 6C1F  			XOR		A,@0x1F		; for nono reset
0001F2: 40E1  			CALL	INST_XOR_JUDGE
0001F3: 2203  			BC		Z
0001F4: 2603  			BC		N
0001F5: 1050  			MOV		A,0x50
0001F6: 6C00  			XOR		A,@0x00		; Check Result ?
0001F7: 3A03  			JBS		Z			; Check Z = 1?
0001F8: 5067  			JMP	INS_FAIL
0001F9: 3603  			JBC		N			; Check N = 0?
0001FA: 5067  			JMP	INS_FAIL
0001FB: 6000  			MOV		A,@0x00
0001FC: 0103  			MOV		STATUS,A
0001FD: 6080  			MOV		A,@0x80
0001FE: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001FF: 6001  			MOV		A,@0x01
000200: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
000201: 1003  			MOV		A,STATUS
000202: 6C39  			XOR		A,@0x39	;; for non reset
000203: 40E1  			CALL	INST_XOR_JUDGE
000204: 2203  			BC		Z
000205: 2603  			BC		N
000206: 1050  			MOV		A,0x50
000207: 6C7F  			XOR		A,@0x7F		; Check Result ?
000208: 40E1  			CALL	INST_XOR_JUDGE
000209: 6030  			MOV		A,@0x30
00020A: 015A  			MOV		INST,A
00020B: 40DE  			CALL	STATUS_CLEAR
00020C: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
00020D: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
00020E: 3803  			JBS		C			; Check C = 1?
00020F: 5067  			JMP	INS_FAIL
000210: 3903  			JBS		DC			; Check DC = 1?
000211: 5067  			JMP	INS_FAIL
000212: 3A03  			JBS		Z			; Check Z = 1?
000213: 5067  			JMP	INS_FAIL
000214: 3503  			JBC		OV			; Check OV = 0?
000215: 5067  			JMP	INS_FAIL
000216: 3603  			JBC		N			; Check N = 0?
000217: 5067  			JMP	INS_FAIL
000218: 6C00  			XOR		A,@0x00		; Check Result ?
000219: 40E1  			CALL	INST_XOR_JUDGE
00021A: 40DE  			CALL	STATUS_CLEAR
00021B: 607F  			MOV		A,@0x7F		; 0x00-0x7F
00021C: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
00021D: 3003  			JBC		C			; Check C = 0?
00021E: 5067  			JMP	INS_FAIL
00021F: 3103  			JBC		DC			; Check DC = 0?
000220: 5067  			JMP	INS_FAIL
000221: 3203  			JBC		Z			; Check Z = 0?
000222: 5067  			JMP	INS_FAIL
000223: 3503  			JBC		OV			; Check OV = 0?
000224: 5067  			JMP	INS_FAIL
000225: 3E03  			JBS		N			; Check N = 1?
000226: 5067  			JMP	INS_FAIL
000227: 6C81  			XOR		A,@0x81		; Check Result ?
000228: 40E1  			CALL	INST_XOR_JUDGE
000229: 40DE  			CALL	STATUS_CLEAR
00022A: 6001  			MOV		A,@0x01		; 0x80-0x01
00022B: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
00022C: 3803  			JBS		C			; Check C = 1?
00022D: 5067  			JMP	INS_FAIL
00022E: 3103  			JBC		DC			; Check DC = 0?
00022F: 5067  			JMP	INS_FAIL
000230: 3203  			JBC		Z			; Check Z = 0?
000231: 5067  			JMP	INS_FAIL
000232: 3D03  			JBS		OV			; Check OV = 1?
000233: 5067  			JMP	INS_FAIL
000234: 3603  			JBC		N			; Check N = 0?
000235: 5067  			JMP	INS_FAIL
000236: 6C7F  			XOR		A,@0x7F		; Check Result ?
000237: 40E1  			CALL	INST_XOR_JUDGE
000238: 6031  			MOV		A,@0x31
000239: 015A  			MOV		INST,A
00023A: 40DE  			CALL	STATUS_CLEAR
00023B: 2003  			BC		C			; B = 1
00023C: 6000  			MOV		A,@0x00		;0x00-0xF
00023D: 0150  			MOV		0x50,A		; [0x50] = 0x00
00023E: 60FF  			MOV		A,@0xFF		; A = 0x01
00023F: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000240: 3003  			JBC		C			; Check C = 0?
000241: 5067  			JMP	INS_FAIL
000242: 3103  			JBC		DC			; Check DC = 0?
000243: 5067  			JMP	INS_FAIL
000244: 3A03  			JBS		Z			; Check Z = 1?
000245: 5067  			JMP	INS_FAIL
000246: 3503  			JBC		OV			; Check OV = 0?
000247: 5067  			JMP	INS_FAIL
000248: 3603  			JBC		N			; Check N = 0?
000249: 5067  			JMP	INS_FAIL
00024A: 6C00  			XOR		A,@0x00		; Check Result ?
00024B: 40E1  			CALL	INST_XOR_JUDGE	
00024C: 40DE  			CALL	STATUS_CLEAR
00024D: 2003  			BC		C			; B = 1
00024E: 6000  			MOV		A,@0x00		; 0x00-0x7F
00024F: 0150  			MOV		0x50,A		; [0x50] = 0x00
000250: 607F  			MOV		A,@0x7F		; A = 0x01
000251: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000252: 3003  			JBC		C			; Check C = 0?
000253: 5067  			JMP	INS_FAIL
000254: 3103  			JBC		DC			; Check DC = 0?
000255: 5067  			JMP	INS_FAIL
000256: 3203  			JBC		Z			; Check Z = 0?
000257: 5067  			JMP	INS_FAIL
000258: 3503  			JBC		OV			; Check OV = 0?
000259: 5067  			JMP	INS_FAIL
00025A: 3E03  			JBS		N			; Check N = 1?
00025B: 5067  			JMP	INS_FAIL
00025C: 6C80  			XOR		A,@0x80		; Check Result ?
00025D: 40E1  			CALL	INST_XOR_JUDGE
00025E: 40DE  			CALL	STATUS_CLEAR
00025F: 2003  			BC		C			; B = 1
000260: 6080  			MOV		A,@0x80		; 0x80-0x01
000261: 0150  			MOV		0x50,A		; [0x50] = 0x80
000262: 6001  			MOV		A,@0x01		; A = 0x01
000263: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000264: 3803  			JBS		C			; Check C = 1?
000265: 5067  			JMP	INS_FAIL
000266: 3103  			JBC		DC			; Check DC = 0?
000267: 5067  			JMP	INS_FAIL
000268: 3203  			JBC		Z			; Check Z = 0?
000269: 5067  			JMP	INS_FAIL
00026A: 3D03  			JBS		OV			; Check OV = 1?
00026B: 5067  			JMP	INS_FAIL
00026C: 3603  			JBC		N			; Check N = 0?
00026D: 5067  			JMP	INS_FAIL
00026E: 6C7E  			XOR		A,@0x7E		; Check Result ?
00026F: 40E1  			CALL	INST_XOR_JUDGE
000270: 6032  			MOV		A,@0x32
000271: 015A  			MOV		INST,A
000272: 40DE  			CALL	STATUS_CLEAR
000273: 2003  			BC		C			; B = 1
000274: 6000  			MOV		A,@0x00		; 0x00-0xFF
000275: 0150  			MOV		0x50,A		; [0x50] = 0x00
000276: 60FF  			MOV		A,@0xFF
000277: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000278: 1003  			MOV		A,STATUS
000279: 6C1C  			XOR		A,@0x1C		; Check Status ?
00027A: 40E1  			CALL	INST_XOR_JUDGE
00027B: 1050  			MOV		A,0x50
00027C: 6C00  			XOR		A,@0x00		; Check Result ?
00027D: 40E1  			CALL	INST_XOR_JUDGE
00027E: 40DE  			CALL	STATUS_CLEAR
00027F: 2003  			BC		C			; B = 1
000280: 6000  			MOV		A,@0x00		; 0x00-0x7F
000281: 0150  			MOV		0x50,A		; [0x50] = 0x00
000282: 607F  			MOV		A,@0x7F
000283: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000284: 1003  			MOV		A,STATUS
000285: 6C58  			XOR		A,@0x58		; Check Status ?
000286: 40E1  			CALL	INST_XOR_JUDGE
000287: 1050  			MOV		A,0x50
000288: 6C80  			XOR		A,@0x80		; Check Result ?
000289: 40E1  			CALL	INST_XOR_JUDGE
00028A: 40DE  			CALL	STATUS_CLEAR
00028B: 2003  			BC		C			; B = 1
00028C: 6080  			MOV		A,@0x80		; ,0x80-0x01
00028D: 0150  			MOV		0x50,A		; [0x50] = 0x80
00028E: 6001  			MOV		A,@0x01
00028F: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000290: 1003  			MOV		A,STATUS
000291: 6C39  			XOR		A,@0x39		; Check Status ?
000292: 40E1  			CALL	INST_XOR_JUDGE
000293: 1050  			MOV		A,0x50
000294: 6C7E  			XOR		A,@0x7E		; Check Result ?
000295: 40E1  			CALL	INST_XOR_JUDGE
000296: 600C  			MOV		A,@0x0C
000297: 015A  			MOV		INST,A
000298: 6000  			MOV		A,@0x00
000299: 0103  			MOV		STATUS,A
00029A: 6020  			MOV		A,@0x20		; 0x20-1
00029B: 0150  			MOV		0x50,A		; [0x50] = 0x20
00029C: 0650  			DECA	0x50		; A = [0x50] - 1
00029D: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00029E: 5067  			JMP	INS_FAIL
00029F: 3103  			JBC		DC			; Check DC = 0?
0002A0: 5067  			JMP	INS_FAIL
0002A1: 3203  			JBC		Z			; Check Z = 0?
0002A2: 5067  			JMP	INS_FAIL
0002A3: 3503  			JBC		OV			; Check OV = 0?
0002A4: 5067  			JMP	INS_FAIL
0002A5: 3603  			JBC		N			; Check N = 0?
0002A6: 5067  			JMP	INS_FAIL
0002A7: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002A8: 3A03  			JBS		Z			; Check Z = 1?
0002A9: 5067  			JMP	INS_FAIL
0002AA: 3603  			JBC		N			; Check N = 0?
0002AB: 5067  			JMP	INS_FAIL
0002AC: 6000  			MOV		A,@0x00
0002AD: 0103  			MOV		STATUS,A
0002AE: 6001  			MOV		A,@0x01		; 0x01-1
0002AF: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002B0: 0650  			DECA	0x50		; A = [0x50] - 1
0002B1: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002B2: 5067  			JMP	INS_FAIL
0002B3: 3903  			JBS		DC			; Check DC = 1?
0002B4: 5067  			JMP	INS_FAIL
0002B5: 3A03  			JBS		Z			; Check Z = 1?
0002B6: 5067  			JMP	INS_FAIL
0002B7: 3503  			JBC		OV			; Check OV = 0?
0002B8: 5067  			JMP	INS_FAIL
0002B9: 3603  			JBC		N			; Check N = 0?
0002BA: 5067  			JMP	INS_FAIL
0002BB: 2203  			BC		Z
0002BC: 6C00  			XOR		A,@0x00		; Check Result ?
0002BD: 3A03  			JBS		Z			; Check Z = 1?
0002BE: 5067  			JMP	INS_FAIL
0002BF: 3603  			JBC		N			; Check N = 0?
0002C0: 5067  			JMP	INS_FAIL
0002C1: 6000  			MOV		A,@0x00
0002C2: 0103  			MOV		STATUS,A
0002C3: 6000  			MOV		A,@0x00		; 0x00-1
0002C4: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002C5: 0650  			DECA	0x50		; A = [0x50] - 1
0002C6: 3003  			JBC		C			; Check C = 0?
0002C7: 5067  			JMP	INS_FAIL
0002C8: 3103  			JBC		DC			; Check DC = 0?
0002C9: 5067  			JMP	INS_FAIL
0002CA: 3203  			JBC		Z			; Check Z = 0?
0002CB: 5067  			JMP	INS_FAIL
0002CC: 3503  			JBC		OV			; Check OV = 0?
0002CD: 5067  			JMP	INS_FAIL
0002CE: 3E03  			JBS		N			; Check N = 1?
0002CF: 5067  			JMP	INS_FAIL
0002D0: 2203  			BC		Z
0002D1: 2603  			BC		N
0002D2: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002D3: 3A03  			JBS		Z			; Check Z = 1?
0002D4: 5067  			JMP	INS_FAIL
0002D5: 3603  			JBC		N			; Check N = 0?
0002D6: 5067  			JMP	INS_FAIL
0002D7: 6000  			MOV		A,@0x00
0002D8: 0103  			MOV		STATUS,A
0002D9: 6080  			MOV		A,@0x80		; 0x80-1
0002DA: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002DB: 0650  			DECA	0x50		; A = [0x50] - 1
0002DC: 3803  			JBS		C			; Check C = 1?
0002DD: 5067  			JMP	INS_FAIL
0002DE: 3103  			JBC		DC			; Check DC = 0?
0002DF: 5067  			JMP	INS_FAIL
0002E0: 3203  			JBC		Z			; Check Z = 0?
0002E1: 5067  			JMP	INS_FAIL
0002E2: 3D03  			JBS		OV			; Check OV = 1?
0002E3: 5067  			JMP	INS_FAIL
0002E4: 3603  			JBC		N			; Check N = 0?
0002E5: 5067  			JMP	INS_FAIL
0002E6: 2203  			BC		Z
0002E7: 2603  			BC		N
0002E8: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002E9: 3A03  			JBS		Z			; Check Z = 1?
0002EA: 5067  			JMP	INS_FAIL
0002EB: 3603  			JBC		N			; Check N = 0?
0002EC: 5067  			JMP	INS_FAIL
0002ED: 600D  			MOV		A,@0x0D
0002EE: 015A  			MOV		INST,A
0002EF: 6000  			MOV		A,@0x00
0002F0: 0103  			MOV		STATUS,A
0002F1: 6020  			MOV		A,@0x20		; 0x20-1
0002F2: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002F3: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002F4: 1003  			MOV		A,STATUS
0002F5: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002F6: 3A03  			JBS		Z			; Check Z = 1?
0002F7: 5067  			JMP	INS_FAIL
0002F8: 3603  			JBC		N			; Check N = 0?
0002F9: 5067  			JMP	INS_FAIL
0002FA: 2203  			BC		Z
0002FB: 1050  			MOV		A,0x50
0002FC: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002FD: 3A03  			JBS		Z			; Check Z = 1?
0002FE: 5067  			JMP	INS_FAIL
0002FF: 3603  			JBC		N			; Check N = 0?
000300: 5067  			JMP	INS_FAIL
000301: 6000  			MOV		A,@0x00
000302: 0103  			MOV		STATUS,A
000303: 6001  			MOV		A,@0x01		; 0x01-1
000304: 0150  			MOV		0x50,A		; [0x50] = 0x01
000305: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000306: 1003  			MOV		A,STATUS
000307: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000308: 3A03  			JBS		Z			; Check Z = 1?
000309: 5067  			JMP	INS_FAIL
00030A: 3603  			JBC		N			; Check N = 0?
00030B: 5067  			JMP	INS_FAIL
00030C: 2203  			BC		Z
00030D: 1050  			MOV		A,0x50
00030E: 6C00  			XOR		A,@0x00		; Check Result ?
00030F: 3A03  			JBS		Z			; Check Z = 1?
000310: 5067  			JMP	INS_FAIL
000311: 3603  			JBC		N			; Check N = 0?
000312: 5067  			JMP	INS_FAIL
000313: 6000  			MOV		A,@0x00
000314: 0103  			MOV		STATUS,A
000315: 6000  			MOV		A,@0x00		; 0x00-1
000316: 0150  			MOV		0x50,A		; [0x50] = 0x00
000317: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000318: 1003  			MOV		A,STATUS
000319: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00031A: 3A03  			JBS		Z			; Check Z = 1?
00031B: 5067  			JMP	INS_FAIL
00031C: 3603  			JBC		N			; Check N = 0?
00031D: 5067  			JMP	INS_FAIL
00031E: 2203  			BC		Z
00031F: 1050  			MOV		A,0x50
000320: 6CFF  			XOR		A,@0xFF		; Check Result ?
000321: 3A03  			JBS		Z			; Check Z = 1?
000322: 5067  			JMP	INS_FAIL
000323: 3603  			JBC		N			; Check N = 0?
000324: 5067  			JMP	INS_FAIL
000325: 6000  			MOV		A,@0x00
000326: 0103  			MOV		STATUS,A
000327: 6080  			MOV		A,@0x80		; 0x80-1
000328: 0150  			MOV		0x50,A		; [0x50] = 0x80
000329: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00032A: 1003  			MOV		A,STATUS
00032B: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
00032C: 3A03  			JBS		Z			; Check Z = 1?
00032D: 5067  			JMP	INS_FAIL
00032E: 3603  			JBC		N			; Check N = 0?
00032F: 5067  			JMP	INS_FAIL
000330: 2203  			BC		Z
000331: 1050  			MOV		A,0x50
000332: 6C7F  			XOR		A,@0x7F		; Check Result ?
000333: 3A03  			JBS		Z			; Check Z = 1?
000334: 5067  			JMP	INS_FAIL
000335: 3603  			JBC		N			; Check N = 0?
000336: 5067  			JMP	INS_FAIL
000337: 6012  			MOV		A,@0x12
000338: 015A  			MOV		INST,A
000339: 40DE  			CALL	STATUS_CLEAR	; 0x80+0x7F
00033A: 6080  			MOV		A,@0x80
00033B: 0150  			MOV		0x50,A		; [0x50] = 0x80
00033C: 607F  			MOV		A,@0x7F		; 
00033D: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
00033E: 3003  			JBC		C			; Check C = 0?
00033F: 5067  			JMP	INS_FAIL
000340: 3103  			JBC		DC			; Check DC = 0?
000341: 5067  			JMP	INS_FAIL
000342: 3203  			JBC		Z			; Check Z = 0?
000343: 5067  			JMP	INS_FAIL
000344: 3503  			JBC		OV			; Check OV = 0?
000345: 5067  			JMP	INS_FAIL
000346: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000347: 5067  			JMP	INS_FAIL
000348: 2203  			BC		Z
000349: 2603  			BC		N
00034A: 6CFF  			XOR		A,@0xFF		; Check Result ?
00034B: 3A03  			JBS		Z			; Check Z = 1?
00034C: 5067  			JMP	INS_FAIL
00034D: 3603  			JBC		N			; Check N = 0?
00034E: 5067  			JMP	INS_FAIL
00034F: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
000350: 60FF  			MOV		A,@0xFF
000351: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000352: 6001  			MOV		A,@0x01		; 
000353: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
000354: 3803  			JBS		C			; Check C = 1?
000355: 5067  			JMP	INS_FAIL
000356: 3903  			JBS		DC			; Check DC = 1?
000357: 5067  			JMP	INS_FAIL
000358: 3A03  			JBS		Z			; Check Z = 1?
000359: 5067  			JMP	INS_FAIL
00035A: 3503  			JBC		OV			; Check OV = 0?
00035B: 5067  			JMP	INS_FAIL
00035C: 3603  			JBC		N			; Check N = 0?
00035D: 5067  			JMP	INS_FAIL
00035E: 2203  			BC		Z
00035F: 2603  			BC		N
000360: 6C00  			XOR		A,@0x00		; Check Result ?
000361: 3A03  			JBS		Z			; Check Z = 1?
000362: 5067  			JMP	INS_FAIL
000363: 3603  			JBC		N			; Check N = 0?
000364: 5067  			JMP	INS_FAIL
000365: 40DE  			CALL	STATUS_CLEAR	; 0x7F+0x01
000366: 607F  			MOV		A,@0x7F
000367: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000368: 6001  			MOV		A,@0x01		; 
000369: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
00036A: 3003  			JBC		C			; Check C = 0?
00036B: 5067  			JMP	INS_FAIL
00036C: 3903  			JBS		DC			; Check DC = 1?
00036D: 5067  			JMP	INS_FAIL
00036E: 3203  			JBC		Z			; Check Z = 0?
00036F: 5067  			JMP	INS_FAIL
000370: 3D03  			JBS		OV			; Check OV = 1?
000371: 5067  			JMP	INS_FAIL
000372: 3E03  			JBS		N			; Check N = 1?
000373: 5067  			JMP	INS_FAIL
000374: 2203  			BC		Z
000375: 2603  			BC		N
000376: 6C80  			XOR		A,@0x80		; Check Result ?
000377: 3A03  			JBS		Z			; Check Z = 1?
000378: 5067  			JMP	INS_FAIL
000379: 3603  			JBC		N			; Check N = 0?
00037A: 5067  			JMP	INS_FAIL
00037B: 6013  			MOV		A,@0x13
00037C: 015A  			MOV		INST,A
00037D: 40DE  			CALL	STATUS_CLEAR	; 0x80+0x7F
00037E: 6080  			MOV		A,@0x80
00037F: 0150  			MOV		0x50,A		; [0x50] = 0x80
000380: 607F  			MOV		A,@0x7F		; A = 0x7F
000381: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
000382: 1003  			MOV		A,STATUS
000383: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000384: 3A03  			JBS		Z			; Check Z = 1?
000385: 5067  			JMP	INS_FAIL
000386: 3603  			JBC		N			; Check N = 0?
000387: 5067  			JMP	INS_FAIL
000388: 1050  			MOV		A,0x50
000389: 6CFF  			XOR		A,@0xFF		; Check Result ?
00038A: 3A03  			JBS		Z			; Check Z = 1?
00038B: 5067  			JMP	INS_FAIL
00038C: 3603  			JBC		N			; Check N = 0?
00038D: 5067  			JMP	INS_FAIL
00038E: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
00038F: 60FF  			MOV		A,@0xFF
000390: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000391: 6001  			MOV		A,@0x01		; A = 0x01
000392: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
000393: 1003  			MOV		A,STATUS
000394: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000395: 3A03  			JBS		Z			; Check Z = 1?
000396: 5067  			JMP	INS_FAIL
000397: 3603  			JBC		N			; Check N = 0?
000398: 5067  			JMP	INS_FAIL
000399: 1050  			MOV		A,0x50
00039A: 6C00  			XOR		A,@0x00		; Check Result ?
00039B: 3A03  			JBS		Z			; Check Z = 1?
00039C: 5067  			JMP	INS_FAIL
00039D: 3603  			JBC		N			; Check N = 0?
00039E: 5067  			JMP	INS_FAIL
00039F: 40DE  			CALL	STATUS_CLEAR	;0x7F+0x01
0003A0: 607F  			MOV		A,@0x7F
0003A1: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003A2: 6001  			MOV		A,@0x01		; A = 0x01
0003A3: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
0003A4: 1003  			MOV		A,STATUS
0003A5: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
0003A6: 3A03  			JBS		Z			; Check Z = 1?
0003A7: 5067  			JMP	INS_FAIL
0003A8: 3603  			JBC		N			; Check N = 0?
0003A9: 5067  			JMP	INS_FAIL
0003AA: 1050  			MOV		A,0x50
0003AB: 6C80  			XOR		A,@0x80		; Check Result ?
0003AC: 3A03  			JBS		Z			; Check Z = 1?
0003AD: 5067  			JMP	INS_FAIL
0003AE: 3603  			JBC		N			; Check N = 0?
0003AF: 5067  			JMP	INS_FAIL
0003B0: 6034  			MOV		A,@0x34
0003B1: 015A  			MOV		INST,A
0003B2: 40DE  			CALL	STATUS_CLEAR
0003B3: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003B4: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003B5: 3003  			JBC		C			; Check C = 0?
0003B6: 5067  			JMP	INS_FAIL
0003B7: 3903  			JBS		DC			; Check DC = 1?
0003B8: 5067  			JMP	INS_FAIL
0003B9: 3203  			JBC		Z			; Check Z = 0?
0003BA: 5067  			JMP	INS_FAIL
0003BB: 3D03  			JBS		OV			; Check OV = 1?
0003BC: 5067  			JMP	INS_FAIL
0003BD: 3E03  			JBS		N			; Check N = 1?
0003BE: 5067  			JMP	INS_FAIL
0003BF: 6C80  			XOR		A,@0x80		; Check Result ?
0003C0: 40E1  			CALL	INST_XOR_JUDGE
0003C1: 40DE  			CALL	STATUS_CLEAR
0003C2: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003C3: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003C4: 3803  			JBS		C			; Check C = 1?
0003C5: 5067  			JMP	INS_FAIL
0003C6: 3903  			JBS		DC			; Check DC = 1?
0003C7: 5067  			JMP	INS_FAIL
0003C8: 3A03  			JBS		Z			; Check Z = 1?
0003C9: 5067  			JMP	INS_FAIL
0003CA: 3503  			JBC		OV			; Check OV = 0?
0003CB: 5067  			JMP	INS_FAIL
0003CC: 3603  			JBC		N			; Check N = 0?
0003CD: 5067  			JMP	INS_FAIL
0003CE: 6C00  			XOR		A,@0x00		; Check Result ?
0003CF: 40E1  			CALL	INST_XOR_JUDGE
0003D0: 40DE  			CALL	STATUS_CLEAR
0003D1: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003D2: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003D3: 3003  			JBC		C			; Check C = 0?
0003D4: 5067  			JMP	INS_FAIL
0003D5: 3103  			JBC		DC			; Check DC = 0?
0003D6: 5067  			JMP	INS_FAIL
0003D7: 3203  			JBC		Z			; Check Z = 0?
0003D8: 5067  			JMP	INS_FAIL
0003D9: 3503  			JBC		OV			; Check OV = 0?
0003DA: 5067  			JMP	INS_FAIL
0003DB: 3E03  			JBS		N			; Check N = 1?
0003DC: 5067  			JMP	INS_FAIL
0003DD: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003DE: 40E1  			CALL	INST_XOR_JUDGE
0003DF: 6036  			MOV		A,@0x36
0003E0: 015A  			MOV		INST,A
0003E1: 40DE  			CALL	STATUS_CLEAR
0003E2: 2803  			BS		C			; 0x7F+0x00
0003E3: 607F  			MOV		A,@0x7F		
0003E4: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003E5: 6000  			MOV		A,@0x00		; A = 0x00
0003E6: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003E7: 3003  			JBC		C			; Check C = 0?
0003E8: 5067  			JMP	INS_FAIL
0003E9: 3903  			JBS		DC			; Check DC = 1?
0003EA: 5067  			JMP	INS_FAIL
0003EB: 3203  			JBC		Z			; Check Z = 0?
0003EC: 5067  			JMP	INS_FAIL
0003ED: 3D03  			JBS		OV			; Check OV = 1?
0003EE: 5067  			JMP	INS_FAIL
0003EF: 3E03  			JBS		N			; Check N = 1?
0003F0: 5067  			JMP	INS_FAIL
0003F1: 6C80  			XOR		A,@0x80		; Check Result ?
0003F2: 40E1  			CALL	INST_XOR_JUDGE
0003F3: 40DE  			CALL	STATUS_CLEAR
0003F4: 2803  			BS		C			; 0x80+0x7F
0003F5: 6080  			MOV		A,@0x80
0003F6: 0150  			MOV		0x50,A		; [0x50] = 0x80
0003F7: 607F  			MOV		A,@0x7F		; A = 0x7F
0003F8: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003F9: 3803  			JBS		C			; Check C = 1?
0003FA: 5067  			JMP	INS_FAIL
0003FB: 3903  			JBS		DC			; Check DC = 1?
0003FC: 5067  			JMP	INS_FAIL
0003FD: 3A03  			JBS		Z			; Check Z = 1?
0003FE: 5067  			JMP	INS_FAIL
0003FF: 3503  			JBC		OV			; Check OV = 0?
000400: 5067  			JMP	INS_FAIL
000401: 3603  			JBC		N			; Check N = 0?
000402: 5067  			JMP	INS_FAIL
000403: 6C00  			XOR		A,@0x00		; Check Result ?
000404: 40E1  			CALL	INST_XOR_JUDGE
000405: 6017  			MOV		A,@0x17
000406: 015A  			MOV		INST,A
000407: 40DE  			CALL	STATUS_CLEAR	; 0x7F+0x01
000408: 607F  			MOV		A,@0x7F
000409: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00040A: 1450  			INCA	0x50		; A = [0x50] +1		
00040B: 3003  			JBC		C			; Check C = 0?
00040C: 5067  			JMP	INS_FAIL
00040D: 3903  			JBS		DC			; Check DC = 1?
00040E: 5067  			JMP	INS_FAIL
00040F: 3203  			JBC		Z			; Check Z = 0?
000410: 5067  			JMP	INS_FAIL
000411: 3D03  			JBS		OV			; Check OV = 1?
000412: 5067  			JMP	INS_FAIL
000413: 3E03  			JBS		N			; Check N = 1?
000414: 5067  			JMP	INS_FAIL
000415: 2203  			BC		Z
000416: 2603  			BC		N
000417: 6C80  			XOR		A,@0x80		; Check Result ?
000418: 3A03  			JBS		Z			; Check Z = 1?
000419: 5067  			JMP	INS_FAIL
00041A: 3603  			JBC		N			; Check N = 0?
00041B: 5067  			JMP	INS_FAIL
00041C: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
00041D: 60FF  			MOV		A,@0xFF
00041E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00041F: 1450  			INCA	0x50		; A = [0x50] +1		
000420: 3803  			JBS		C			; Check C = 1?
000421: 5067  			JMP	INS_FAIL
000422: 3903  			JBS		DC			; Check DC = 1?
000423: 5067  			JMP	INS_FAIL
000424: 3A03  			JBS		Z			; Check Z = 1?
000425: 5067  			JMP	INS_FAIL
000426: 3503  			JBC		OV			; Check OV = 0?
000427: 5067  			JMP	INS_FAIL
000428: 3603  			JBC		N			; Check N = 0?
000429: 5067  			JMP	INS_FAIL
00042A: 2203  			BC		Z
00042B: 2603  			BC		N
00042C: 6C00  			XOR		A,@0x00		; Check Result ?
00042D: 3A03  			JBS		Z			; Check Z = 1?
00042E: 5067  			JMP	INS_FAIL
00042F: 3603  			JBC		N			; Check N = 0?
000430: 5067  			JMP	INS_FAIL
000431: 6018  			MOV		A,@0x18
000432: 015A  			MOV		INST,A
000433: 40DE  			CALL 	STATUS_CLEAR	; 0x7F+0x01
000434: 607F  			MOV		A,@0x7F
000435: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000436: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000437: 1003  			MOV		A,STATUS
000438: 6C7A  			XOR		A,@0x7A		; Check Status ?
000439: 3A03  			JBS		Z			; Check Z = 1?
00043A: 5067  			JMP	INS_FAIL
00043B: 3603  			JBC		N			; Check N = 0?
00043C: 5067  			JMP	INS_FAIL
00043D: 1050  			MOV		A,0x50
00043E: 6C80  			XOR		A,@0x80		; Check Result ?
00043F: 3A03  			JBS		Z			; Check Z = 1?
000440: 5067  			JMP	INS_FAIL
000441: 3603  			JBC		N			; Check N = 0?
000442: 5067  			JMP	INS_FAIL
000443: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
000444: 60FF  			MOV		A,@0xFF
000445: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000446: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000447: 1003  			MOV		A,STATUS
000448: 6C1F  			XOR		A,@0x1F		; Check Status ?
000449: 3A03  			JBS		Z			; Check Z = 1?
00044A: 5067  			JMP	INS_FAIL
00044B: 3603  			JBC		N			; Check N = 0?
00044C: 5067  			JMP	INS_FAIL
00044D: 1050  			MOV		A,0x50
00044E: 6C00  			XOR		A,@0x00		; Check Result ?
00044F: 3A03  			JBS		Z			; Check Z = 1?
000450: 5067  			JMP	INS_FAIL
000451: 3603  			JBC		N			; Check N = 0?
000452: 5067  			JMP	INS_FAIL
000453: 6035  			MOV		A,@0x35
000454: 015A  			MOV		INST,A
000455: 40DE  			CALL	STATUS_CLEAR
000456: 6000  			MOV		A,@0x00		; 0x00
000457: 0150  			MOV		0x50,A		; [0x50] = 0x00
000458: 7D50  			NEG		0x50
000459: 1003  			MOV		A,STATUS
00045A: 6C1F  			XOR		A,@0x1F		; Check Status ?
00045B: 40E1  			CALL	INST_XOR_JUDGE
00045C: 1050  			MOV		A,0x50
00045D: 6C00  			XOR		A,@0x00		; Check Result ?
00045E: 40E1  			CALL	INST_XOR_JUDGE
00045F: 40DE  			CALL	STATUS_CLEAR
000460: 6001  			MOV		A,@0x01		; 0x01
000461: 0150  			MOV		0x50,A		; [0x50] = 0x01
000462: 7D50  			NEG		0x50
000463: 1003  			MOV		A,STATUS
000464: 6C58  			XOR		A,@0x58		; Check Status ?
000465: 40E1  			CALL	INST_XOR_JUDGE
000466: 1050  			MOV		A,0x50
000467: 6CFF  			XOR		A,@0xFF		; Check Result ?
000468: 465E  			CALL	INST_XCH
000469: 40DE  			CALL	STATUS_CLEAR
00046A: 6080  			MOV		A,@0x80		; 0x80
00046B: 0150  			MOV		0x50,A		; [0x50] = 0x80
00046C: 7D50  			NEG		0x50
00046D: 1003  			MOV		A,STATUS
00046E: 6C7A  			XOR		A,@0x7A		; Check Status ?
00046F: 40E1  			CALL	INST_XOR_JUDGE
000470: 1050  			MOV		A,0x50
000471: 6C80  			XOR		A,@0x80		; Check Result ?
000472: 40E1  			CALL	INST_XOR_JUDGE
000473: 0012  		RET
000474: 6006  			MOV		A,@0x06
000475: 015A  			MOV		INST,A
000476: 6000  			MOV		A,@0x00
000477: 60FF  			MOV		A,@0xFF
000478: 0104  			MOV		RSR,A		; Start Address
000479: 0084  			BTG		RSR
00047A: 1004  			MOV		A,RSR
00047B: 6CFE  			XOR		A,@0xFE		; Check Result ?
00047C: 3A03  			JBS		Z			; Check Z = 1?
00047D: 5067  			JMP	INS_FAIL
00047E: 3603  			JBC		N			; Check N = 0?
00047F: 5067  			JMP	INS_FAIL
000480: 600E  			MOV		A,@0x0E
000481: 015A  			MOV		INST,A
000482: 6000  			MOV		A,@0x00
000483: 0103  			MOV		STATUS,A
000484: 6000  			MOV		A,@0x00
000485: 0150  			MOV		0x50,A		; [0x50] = 0x00
000486: 6000  			MOV		A,@0x00
000487: 2203  			BC		Z
000488: 0850  			OR		A,0x50		; A = A | [0x50]
000489: 3003  			JBC		C			; Check C = 0?
00048A: 5067  			JMP	INS_FAIL
00048B: 3103  			JBC		DC			; Check DC = 0?
00048C: 5067  			JMP	INS_FAIL
00048D: 3A03  			JBS		Z			; Check Z = 1?
00048E: 5067  			JMP	INS_FAIL
00048F: 3503  			JBC		OV			; Check OV = 0?
000490: 5067  			JMP	INS_FAIL
000491: 3603  			JBC		N			; Check N = 0?
000492: 5067  			JMP	INS_FAIL
000493: 2203  			BC		Z
000494: 6C00  			XOR		A,@0x00		; Check Result ?
000495: 3A03  			JBS		Z			; Check Z = 1?
000496: 5067  			JMP	INS_FAIL
000497: 3603  			JBC		N			; Check N = 0?
000498: 5067  			JMP	INS_FAIL
000499: 6000  			MOV		A,@0x00
00049A: 0103  			MOV		STATUS,A
00049B: 6055  			MOV		A,@0x55
00049C: 0150  			MOV		0x50,A		; [0x50] = 0x55
00049D: 60AA  			MOV		A,@0xAA
00049E: 2203  			BC		Z
00049F: 0850  			OR		A,0x50		; A = A | [0x50]
0004A0: 3003  			JBC		C			; Check C = 0?
0004A1: 5067  			JMP	INS_FAIL
0004A2: 3103  			JBC		DC			; Check DC = 0?
0004A3: 5067  			JMP	INS_FAIL
0004A4: 3203  			JBC		Z			; Check Z = 0?
0004A5: 5067  			JMP	INS_FAIL
0004A6: 3503  			JBC		OV			; Check OV = 0?
0004A7: 5067  			JMP	INS_FAIL
0004A8: 3E03  			JBS		N			; Check N = 1?
0004A9: 5067  			JMP	INS_FAIL
0004AA: 2203  			BC		Z
0004AB: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004AC: 3A03  			JBS		Z			; Check Z = 1?
0004AD: 5067  			JMP	INS_FAIL
0004AE: 3603  			JBC		N			; Check N = 0?
0004AF: 5067  			JMP	INS_FAIL
0004B0: 600F  			MOV		A,@0x0F
0004B1: 015A  			MOV		INST,A
0004B2: 6000  			MOV		A,@0x00
0004B3: 0103  			MOV		STATUS,A
0004B4: 6000  			MOV		A,@0x00
0004B5: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004B6: 6000  			MOV		A,@0x00		; A = 0x00
0004B7: 2203  			BC		Z
0004B8: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0004B9: 1003  			MOV		A,STATUS
0004BA: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004BB: 3A03  			JBS		Z			; Check Z = 1?
0004BC: 5067  			JMP	INS_FAIL
0004BD: 3603  			JBC		N			; Check N = 0?
0004BE: 5067  			JMP	INS_FAIL
0004BF: 1050  			MOV		A,0x50		; A = Result[0x50]
0004C0: 2203  			BC		Z
0004C1: 2603  			BC		N
0004C2: 6C00  			XOR		A,@0x00		; Check Result ?
0004C3: 3A03  			JBS		Z			; Check Z = 1?
0004C4: 5067  			JMP	INS_FAIL
0004C5: 3603  			JBC		N			; Check N = 0?
0004C6: 5067  			JMP	INS_FAIL
0004C7: 6000  			MOV		A,@0x00
0004C8: 0103  			MOV		STATUS,A
0004C9: 6055  			MOV		A,@0x55
0004CA: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004CB: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004CC: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004CD: 1003  			MOV		A,STATUS
0004CE: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004CF: 3A03  			JBS		Z			; Check Z = 1?
0004D0: 5067  			JMP	INS_FAIL
0004D1: 3603  			JBC		N			; Check N = 0?
0004D2: 5067  			JMP	INS_FAIL
0004D3: 1050  			MOV		A,0x50
0004D4: 2203  			BC		Z
0004D5: 2603  			BC		N
0004D6: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004D7: 3A03  			JBS		Z			; Check Z = 1?
0004D8: 5067  			JMP	INS_FAIL
0004D9: 3603  			JBC		N			; Check N = 0?
0004DA: 5067  			JMP	INS_FAIL
0004DB: 6010  			MOV		A,@0x10
0004DC: 015A  			MOV		INST,A
0004DD: 40DE  			CALL	STATUS_CLEAR
0004DE: 6055  			MOV		A,@0x55
0004DF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004E0: 60AA  			MOV		A,@0xAA
0004E1: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
0004E2: 3003  			JBC		C			; Check C = 0?
0004E3: 5067  			JMP	INS_FAIL
0004E4: 3103  			JBC		DC			; Check DC = 0?
0004E5: 5067  			JMP	INS_FAIL
0004E6: 3A03  			JBS		Z			; Check Z = 1?
0004E7: 5067  			JMP	INS_FAIL
0004E8: 3503  			JBC		OV			; Check OV = 0?
0004E9: 5067  			JMP	INS_FAIL
0004EA: 3603  			JBC		N			; Check N = 0?
0004EB: 5067  			JMP	INS_FAIL
0004EC: 6C00  			XOR		A,@0x00		; Check Result ?
0004ED: 3A03  			JBS		Z			; Check Z = 1?
0004EE: 5067  			JMP	INS_FAIL
0004EF: 3603  			JBC		N			; Check N = 0?
0004F0: 5067  			JMP	INS_FAIL
0004F1: 40DE  			CALL	STATUS_CLEAR
0004F2: 60F5  			MOV		A,@0xF5
0004F3: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0004F4: 60FA  			MOV		A,@0xFA
0004F5: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
0004F6: 3003  			JBC		C			; Check C = 0?
0004F7: 5067  			JMP	INS_FAIL
0004F8: 3103  			JBC		DC			; Check DC = 0?
0004F9: 5067  			JMP	INS_FAIL
0004FA: 3203  			JBC		Z			; Check Z = 0?
0004FB: 5067  			JMP	INS_FAIL
0004FC: 3503  			JBC		OV			; Check OV = 0?
0004FD: 5067  			JMP	INS_FAIL
0004FE: 3E03  			JBS		N			; Check N = 1?
0004FF: 5067  			JMP	INS_FAIL
000500: 6CF0  			XOR		A,@0xF0		; Check Result ?
000501: 3A03  			JBS		Z			; Check Z = 1?
000502: 5067  			JMP	INS_FAIL
000503: 3603  			JBC		N			; Check N = 0?
000504: 5067  			JMP	INS_FAIL
000505: 6011  			MOV		A,@0x11
000506: 015A  			MOV		INST,A
000507: 40DE  			CALL	STATUS_CLEAR
000508: 6055  			MOV		A,@0x55
000509: 0150  			MOV		0x50,A		; [0x50] = 0x55
00050A: 60AA  			MOV		A,@0xAA
00050B: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
00050C: 1003  			MOV		A,STATUS
00050D: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
00050E: 3A03  			JBS		Z			; Check Z = 1?
00050F: 5067  			JMP	INS_FAIL
000510: 3603  			JBC		N			; Check N = 0?
000511: 5067  			JMP	INS_FAIL
000512: 2203  			BC		Z
000513: 1050  			MOV		A,0x50
000514: 2203  			BC		Z
000515: 6C00  			XOR		A,@0x00		; Check Result ?
000516: 3A03  			JBS		Z			; Check Z = 1?
000517: 5067  			JMP	INS_FAIL
000518: 3603  			JBC		N			; Check N = 0?
000519: 5067  			JMP	INS_FAIL
00051A: 40DE  			CALL	STATUS_CLEAR
00051B: 60F5  			MOV		A,@0xF5
00051C: 0150  			MOV		0x50,A		; [0x50] = 0xF5
00051D: 60FA  			MOV		A,@0xFA
00051E: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
00051F: 1003  			MOV		A,STATUS
000520: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000521: 3A03  			JBS		Z			; Check Z = 1?
000522: 5067  			JMP	INS_FAIL
000523: 3603  			JBC		N			; Check N = 0?
000524: 5067  			JMP	INS_FAIL
000525: 2203  			BC		Z
000526: 1050  			MOV		A,0x50
000527: 2203  			BC		Z
000528: 6CF0  			XOR		A,@0xF0		; Check Result ?
000529: 3A03  			JBS		Z			; Check Z = 1?
00052A: 5067  			JMP	INS_FAIL
00052B: 3603  			JBC		N			; Check N = 0?
00052C: 5067  			JMP	INS_FAIL
00052D: 6029  			MOV		A,@0x29
00052E: 015A  			MOV		INST,A
00052F: 40DE  			CALL	STATUS_CLEAR
000530: 60AA  			MOV		A,@0xAA
000531: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
000532: 3003  			JBC		C			; Check C = 0?
000533: 5067  			JMP	INS_FAIL
000534: 3103  			JBC		DC			; Check DC = 0?
000535: 5067  			JMP	INS_FAIL
000536: 3A03  			JBS		Z			; Check Z = 1?
000537: 5067  			JMP	INS_FAIL
000538: 3503  			JBC		OV			; Check OV = 0?
000539: 5067  			JMP	INS_FAIL
00053A: 3603  			JBC		N			; Check N = 0?
00053B: 5067  			JMP	INS_FAIL
00053C: 6C00  			XOR		A,@0x00		; Check Result ?
00053D: 3A03  			JBS		Z			; Check Z = 1?
00053E: 5067  			JMP	INS_FAIL
00053F: 3603  			JBC		N			; Check N = 0?
000540: 5067  			JMP	INS_FAIL
000541: 40DE  			CALL	STATUS_CLEAR
000542: 60AA  			MOV		A,@0xAA
000543: 68FF  			AND		A,@0xFF		; A = A & 0xFF
000544: 3003  			JBC		C			; Check C = 0?
000545: 5067  			JMP	INS_FAIL
000546: 3103  			JBC		DC			; Check DC = 0?
000547: 5067  			JMP	INS_FAIL
000548: 3203  			JBC		Z			; Check Z = 0?
000549: 5067  			JMP	INS_FAIL
00054A: 3503  			JBC		OV			; Check OV = 0?
00054B: 5067  			JMP	INS_FAIL
00054C: 3E03  			JBS		N			; Check N = 1?
00054D: 5067  			JMP	INS_FAIL
00054E: 6CAA  			XOR		A,@0xAA		; Check Result ?
00054F: 40E1  			CALL	INST_XOR_JUDGE
000550: 6015  			MOV		A,@0x15
000551: 015A  			MOV		INST,A
000552: 40DE  			CALL	STATUS_CLEAR
000553: 60FF  			MOV		A,@0xFF
000554: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000555: 1250  			COMA	0x50		; A = /R
000556: 3003  			JBC		C			; Check C = 0?
000557: 5067  			JMP	INS_FAIL
000558: 3103  			JBC		DC			; Check DC = 0?
000559: 5067  			JMP	INS_FAIL
00055A: 3A03  			JBS		Z			; Check Z = 1?
00055B: 5067  			JMP	INS_FAIL
00055C: 3503  			JBC		OV			; Check OV = 0?
00055D: 5067  			JMP	INS_FAIL
00055E: 3603  			JBC		N			; Check N = 0?
00055F: 5067  			JMP	INS_FAIL
000560: 6C00  			XOR		A,@0x00		; Check Result ?
000561: 3A03  			JBS		Z			; Check Z = 1?
000562: 5067  			JMP	INS_FAIL
000563: 3603  			JBC		N			; Check N = 0?
000564: 5067  			JMP	INS_FAIL	
000565: 40DE  			CALL	STATUS_CLEAR
000566: 6005  			MOV		A,@0x05
000567: 0150  			MOV		0x50,A		; [0x50] = 0x05
000568: 1250  			COMA	0x50		; A = /R
000569: 3003  			JBC		C			; Check C = 0?
00056A: 5067  			JMP	INS_FAIL
00056B: 3103  			JBC		DC			; Check DC = 0?
00056C: 5067  			JMP	INS_FAIL
00056D: 3203  			JBC		Z			; Check Z = 0?
00056E: 5067  			JMP	INS_FAIL
00056F: 3503  			JBC		OV			; Check OV = 0?
000570: 5067  			JMP	INS_FAIL
000571: 3E03  			JBS		N			; Check N = 1?
000572: 5067  			JMP	INS_FAIL
000573: 6CFA  			XOR		A,@0xFA		; Check Result ?
000574: 3A03  			JBS		Z			; Check Z = 1?
000575: 5067  			JMP	INS_FAIL
000576: 3603  			JBC		N			; Check N = 0?
000577: 5067  			JMP	INS_FAIL
000578: 6016  			MOV		A,@0x16
000579: 015A  			MOV		INST,A
00057A: 40DE  			CALL	STATUS_CLEAR
00057B: 60FF  			MOV		A,@0xFF
00057C: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00057D: 1350  			COM		0x50		; [0x50] = /[0x50]
00057E: 1003  			MOV		A,STATUS
00057F: 6C1C  			XOR		A,@0x1C		; Check Status ?
000580: 3A03  			JBS		Z			; Check Z = 1?
000581: 5067  			JMP	INS_FAIL
000582: 3603  			JBC		N			; Check N = 0?
000583: 5067  			JMP	INS_FAIL
000584: 2203  			BC		Z
000585: 2603  			BC		N
000586: 1050  			MOV		A,0x50
000587: 6C00  			XOR		A,@0x00		; Check Result ?
000588: 3A03  			JBS		Z			; Check Z = 1?
000589: 5067  			JMP	INS_FAIL
00058A: 3603  			JBC		N			; Check N = 0?
00058B: 5067  			JMP	INS_FAIL
00058C: 40DE  			CALL	STATUS_CLEAR
00058D: 6000  			MOV		A,@0x00
00058E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00058F: 1350  			COM		0x50		; [0x50] = /[0x50]
000590: 1003  			MOV		A,STATUS
000591: 6C58  			XOR		A,@0x58		; Check Status ?
000592: 3A03  			JBS		Z			; Check Z = 1?
000593: 5067  			JMP	INS_FAIL
000594: 3603  			JBC		N			; Check N = 0?
000595: 5067  			JMP	INS_FAIL
000596: 2203  			BC		Z
000597: 2603  			BC		N
000598: 1050  			MOV		A,0x50
000599: 6CFF  			XOR		A,@0xFF		; Check Result ?
00059A: 3A03  			JBS		Z			; Check Z = 1?
00059B: 5067  			JMP	INS_FAIL
00059C: 3603  			JBC		N			; Check N = 0?
00059D: 5067  			JMP	INS_FAIL
00059E: 6026  			MOV		A,@0x26
00059F: 015A  			MOV		INST,A
0005A0: 40DE  			CALL	STATUS_CLEAR
0005A1: 60A5  			MOV		A,@0xA5
0005A2: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
0005A3: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005A4: 40E1  			CALL	INST_XOR_JUDGE
0005A5: 0012  		RET
0005A6: 602B  			MOV		A,@0x2B
0005A7: 015A  			MOV		INST,A
0005A8: 40DE  			CALL	STATUS_CLEAR
0005A9: 6055  			MOV		A,@0x55
0005AA: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005AB: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
0005AC: 1003  			MOV		A,STATUS
0005AD: 6C58  			XOR		A,@0x58		; Check Status ?
0005AE: 40E1  			CALL	INST_XOR_JUDGE
0005AF: 1050  			MOV		A,0x50
0005B0: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005B1: 40E1  			CALL	INST_XOR_JUDGE
0005B2: 602A  			MOV		A,@0x2A
0005B3: 015A  			MOV		INST,A
0005B4: 40DE  			CALL 	STATUS_CLEAR
0005B5: 6055  			MOV		A,@0x55
0005B6: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005B7: 6E50  			RRA		0x50		; A = [0x50] >> 1
0005B8: 3003  			JBC		C			; Check C = 0?
0005B9: 5067  			JMP	INS_FAIL
0005BA: 3103  			JBC		DC			; Check DC = 0?
0005BB: 5067  			JMP	INS_FAIL
0005BC: 3203  			JBC		Z			; Check Z = 0?
0005BD: 5067  			JMP	INS_FAIL
0005BE: 3503  			JBC		OV			; Check OV = 0?
0005BF: 5067  			JMP	INS_FAIL
0005C0: 3E03  			JBS		N			; Check N = 1?
0005C1: 5067  			JMP	INS_FAIL
0005C2: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005C3: 40E1  			CALL	INST_XOR_JUDGE
0005C4: 601B  			MOV		A,@0x1B
0005C5: 015A  			MOV		INST,A
0005C6: 40DE  			CALL	STATUS_CLEAR
0005C7: 2803  			BS		C
0005C8: 60AA  			MOV		A,@0xAA
0005C9: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005CA: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005CB: 3003  			JBC		C			; Check C = 0?
0005CC: 5067  			JMP	INS_FAIL
0005CD: 3103  			JBC		DC			; Check DC = 0?
0005CE: 5067  			JMP	INS_FAIL
0005CF: 3203  			JBC		Z			; Check Z = 0?
0005D0: 5067  			JMP	INS_FAIL
0005D1: 3503  			JBC		OV			; Check OV = 0?
0005D2: 5067  			JMP	INS_FAIL
0005D3: 3E03  			JBS		N			; Check N = 1?
0005D4: 5067  			JMP	INS_FAIL
0005D5: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005D6: 40E1  			CALL	INST_XOR_JUDGE
0005D7: 40DE  			CALL	STATUS_CLEAR
0005D8: 6055  			MOV		A,@0x55
0005D9: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005DA: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005DB: 3803  			JBS		C			; Check C = 1?
0005DC: 5067  			JMP	INS_FAIL
0005DD: 3103  			JBC		DC			; Check DC = 0?
0005DE: 5067  			JMP	INS_FAIL
0005DF: 3203  			JBC		Z			; Check Z = 0?
0005E0: 5067  			JMP	INS_FAIL
0005E1: 3503  			JBC		OV			; Check OV = 0?
0005E2: 5067  			JMP	INS_FAIL
0005E3: 3603  			JBC		N			; Check N = 0?
0005E4: 5067  			JMP	INS_FAIL
0005E5: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005E6: 40E1  			CALL	INST_XOR_JUDGE
0005E7: 601C  			MOV		A,@0x1C
0005E8: 015A  			MOV		INST,A
0005E9: 40DE  			CALL	STATUS_CLEAR
0005EA: 2803  			BS		C
0005EB: 60AA  			MOV		A,@0xAA
0005EC: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005ED: 2203  			BC		Z
0005EE: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005EF: 1003  			MOV		A,STATUS
0005F0: 6C58  			XOR		A,@0x58		; Check Status ?
0005F1: 40E1  			CALL	INST_XOR_JUDGE
0005F2: 1050  			MOV		A,0x50
0005F3: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005F4: 40E1  			CALL	INST_XOR_JUDGE
0005F5: 40DE  			CALL	STATUS_CLEAR
0005F6: 6055  			MOV		A,@0x55
0005F7: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005F8: 2203  			BC		Z
0005F9: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005FA: 1003  			MOV		A,STATUS
0005FB: 6C19  			XOR		A,@0x19		; Check Status ?
0005FC: 3A03  			JBS		Z			; Check Z = 1?
0005FD: 5067  			JMP	INS_FAIL
0005FE: 3603  			JBC		N			; Check N = 0?
0005FF: 5067  			JMP	INS_FAIL
000600: 1050  			MOV		A,0x50
000601: 6C2A  			XOR		A,@0x2A		; Check Result ?
000602: 40E1  			CALL	INST_XOR_JUDGE
000603: 601D  			MOV		A,@0x1D
000604: 015A  			MOV		INST,A
000605: 40DE  			CALL STATUS_CLEAR
000606: 2803  			BS		C
000607: 6055  			MOV		A,@0x55
000608: 0150  			MOV		0x50,A		; [0x50] = 0x55
000609: 1A50  			RLCA	0x50		; A = [0x50] << 1
00060A: 3003  			JBC		C			; Check C = 0?
00060B: 5067  			JMP	INS_FAIL
00060C: 3103  			JBC		DC			; Check DC = 0?
00060D: 5067  			JMP	INS_FAIL
00060E: 3203  			JBC		Z			; Check Z = 0?
00060F: 5067  			JMP	INS_FAIL
000610: 3503  			JBC		OV			; Check OV = 0?
000611: 5067  			JMP	INS_FAIL
000612: 3E03  			JBS		N			; Check N = 1?
000613: 5067  			JMP	INS_FAIL
000614: 6CAB  			XOR		A,@0xAB		; Check Result ?
000615: 40E1  			CALL	INST_XOR_JUDGE
000616: 40DE  			CALL	STATUS_CLEAR
000617: 60AA  			MOV		A,@0xAA
000618: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000619: 1A50  			RLCA	0x50		; A = [0x50] << 1
00061A: 3803  			JBS		C			; Check C = 1?
00061B: 5067  			JMP	INS_FAIL
00061C: 3103  			JBC		DC			; Check DC = 0?
00061D: 5067  			JMP	INS_FAIL
00061E: 3203  			JBC		Z			; Check Z = 0?
00061F: 5067  			JMP	INS_FAIL
000620: 3503  			JBC		OV			; Check OV = 0?
000621: 5067  			JMP	INS_FAIL
000622: 3603  			JBC		N			; Check N = 0?
000623: 5067  			JMP	INS_FAIL
000624: 6C54  			XOR		A,@0x54		; Check Result ?
000625: 40E1  			CALL	INST_XOR_JUDGE
000626: 601E  			MOV		A,@0x1E
000627: 015A  			MOV		INST,A
000628: 40DE  			CALL	STATUS_CLEAR
000629: 2803  			BS		C
00062A: 6055  			MOV		A,@0x55
00062B: 0150  			MOV		0x50,A		; [0x50] = 0x55
00062C: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
00062D: 1003  			MOV		A,STATUS
00062E: 6C58  			XOR		A,@0x58		; Check Status ?
00062F: 40E1  			CALL	INST_XOR_JUDGE
000630: 1050  			MOV		A,0x50
000631: 6CAB  			XOR		A,@0xAB		; Check Result ?
000632: 40E1  			CALL	INST_XOR_JUDGE
000633: 40DE  			CALL	STATUS_CLEAR
000634: 60AA  			MOV		A,@0xAA
000635: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000636: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000637: 1003  			MOV		A,STATUS
000638: 6C19  			XOR		A,@0x19		; Check Status ?
000639: 40E1  			CALL	INST_XOR_JUDGE
00063A: 1050  			MOV		A,0x50
00063B: 6C54  			XOR		A,@0x54		; Check Result ?
00063C: 40E1  			CALL	INST_XOR_JUDGE
00063D: 602E  			MOV		A,@0x2E
00063E: 015A  			MOV		INST,A
00063F: 40DE  			CALL	STATUS_CLEAR
000640: 605A  			MOV		A,@0x5A
000641: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000642: 7250  			RLA		0x50		; A = [0x50] << 1
000643: 3003  			JBC		C			; Check C = 0?
000644: 5067  			JMP	INS_FAIL
000645: 3103  			JBC		DC			; Check DC = 0?
000646: 5067  			JMP	INS_FAIL
000647: 3203  			JBC		Z			; Check Z = 0?
000648: 5067  			JMP	INS_FAIL
000649: 3503  			JBC		OV			; Check OV = 0?
00064A: 5067  			JMP	INS_FAIL
00064B: 3E03  			JBS		N			; Check N = 1?
00064C: 5067  			JMP	INS_FAIL
00064D: 6CB4  			XOR		A,@0xB4		; Check Result ?
00064E: 40E1  			CALL	INST_XOR_JUDGE
00064F: 602F  			MOV		A,@0x2F
000650: 015A  			MOV		INST,A
000651: 40DE  			CALL	STATUS_CLEAR
000652: 605A  			MOV		A,@0x5A
000653: 0150  			MOV		0x50,A		; [0x50] = 0xA5
000654: 7350  			RL		0x50		; [0x50] = [0x50] << 1
000655: 1003  			MOV		A,STATUS
000656: 6C58  			XOR		A,@0x58		; Check Status ?
000657: 3A03  			JBS		Z			; Check Z = 1?
000658: 5067  			JMP	INS_FAIL
000659: 3603  			JBC		N			; Check N = 0?
00065A: 5067  			JMP	INS_FAIL
00065B: 1050  			MOV		A,0x50
00065C: 6CB4  			XOR		A,@0xB4		; Check Result ?
00065D: 40E1  			CALL	INST_XOR_JUDGE
00065E: 602D  			MOV		A,@0x2D
00065F: 015A  			MOV		INST,A
000660: 40DE  			CALL	STATUS_CLEAR
000661: 6055  			MOV		A,@0x55
000662: 0150  			MOV		0x50,A		; [0x50] = 0x55
000663: 60AA  			MOV		A,@0xAA
000664: 7150  			XCH		0x50		; [0x50] <-> A
000665: 6C55  			XOR		A,@0x55		; Check Result ?
000666: 3A03  			JBS		Z			; Check Z = 1?
000667: 5067  			JMP	INS_FAIL
000668: 3603  			JBC		N			; Check N = 0?
000669: 5067  			JMP	INS_FAIL
00066A: 1050  			MOV		A,0x50
00066B: 6CAA  			XOR		A,@0xAA		; Check Result ?
00066C: 40E1  			CALL	INST_XOR_JUDGE
00066D: 0012  		RET
00066E: 6007  			MOV		A,@0x07
00066F: 015A  			MOV		INST,A
000670: 40DE  			CALL	STATUS_CLEAR
000671: 60FF  			MOV		A,@0xFF
000672: 0150  			MOV		0x50,A
000673: 1003  			MOV		A,STATUS
000674: 6C18  			XOR		A,@0x18		;At  OCDS
000675: 40E1  			CALL	INST_XOR_JUDGE
000676: 1050  			MOV		A,0x50
000677: 6CFF  			XOR		A,@0xFF		; Check Result ?
000678: 40E1  			CALL	INST_XOR_JUDGE
000679: 6014  			MOV		A,@0x14
00067A: 015A  			MOV		INST,A
00067B: 40DE  			CALL	STATUS_CLEAR
00067C: 6000  			MOV		A,@0x00
00067D: 0150  			MOV		0x50,A		; [0x50] = 0x00		
00067E: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
00067F: 1003  			MOV		A,STATUS
000680: 6C1C  			XOR		A,@0x1C		; Check Status ?
000681: 3A03  			JBS		Z			; Check Z = 1?
000682: 5067  			JMP	INS_FAIL
000683: 3603  			JBC		N			; Check N = 0?
000684: 5067  			JMP	INS_FAIL
000685: 1050  			MOV		A,0x50
000686: 2203  			BC		Z
000687: 6C00  			XOR		A,@0x00		; Check Result ?
000688: 3A03  			JBS		Z			; Check Z = 1?
000689: 5067  			JMP	INS_FAIL
00068A: 3603  			JBC		N			; Check N = 0?
00068B: 5067  			JMP	INS_FAIL
00068C: 40DE  			CALL	STATUS_CLEAR
00068D: 6000  			MOV		A,@0x00
00068E: 0150  			MOV		0x50,A		; [0x50] = 0x00		
00068F: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000690: 2850  			BS		0x50,0
000691: 1050  			MOV		A,0x50
000692: 6C01  			XOR		A,@0x01		; Check Result ?
000693: 40E1  			CALL	INST_XOR_JUDGE
000694: 601F  			MOV		A,@0x1F
000695: 015A  			MOV		INST,A
000696: 40DE  			CALL	STATUS_CLEAR
000697: 605A  			MOV		A,@0x5A
000698: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000699: 1C50  			SWAPA	0x50
00069A: 6CA5  			XOR		A,@0xA5		; Check Result ?
00069B: 40E1  			CALL	INST_XOR_JUDGE
00069C: 6020  			MOV		A,@0x20
00069D: 015A  			MOV		INST,A
00069E: 40DE  			CALL	STATUS_CLEAR
00069F: 605A  			MOV		A,@0x5A
0006A0: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006A1: 1D50  			SWAP	0x50
0006A2: 1050  			MOV		A,0x50
0006A3: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006A4: 40E1  			CALL	INST_XOR_JUDGE
0006A5: 0012  		RET
0006A6: 0012  		RET
0006A7: 0012  		RET
0006A8: 0012  		RET
0006A9: 6004  			MOV		A,@0x04
0006AA: 015A  			MOV		INST,A
0006AB: 0010  			ENI
0006AC: 3F03  			JBS		IT		; Check IT = 1?
0006AD: 5067  			JMP	INS_FAIL
0006AE: 6005  			MOV		A,@0x05
0006AF: 015A  			MOV		INST,A
0006B0: 0011  			DISI
0006B1: 3703  			JBC		IT		; Check IT = 0?
0006B2: 5067  			JMP	INS_FAIL
0006B3: 0012  		RET
0006B4: 6019  	MOV		A,@0x19
0006B5: 015A  	MOV		INST,A
0006B6: 6000  	MOV		A,@0x00
0006B7: 0103  	MOV		STATUS,A
0006B8: 6001  		MOV		A,@0x01
0006B9: 0150  		MOV		0x50,A		; [0x50] = 0x01
0006BA: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006BB: 5067  		JMP	INS_FAIL
0006BC: 6C00  		XOR		A,@0x00		; Check Result ?
0006BD: 3A03  		JBS		Z			; Check Z = 1?
0006BE: 5067  		JMP	INS_FAIL
0006BF: 3603  		JBC		N			; Check N = 0?
0006C0: 5067  		JMP	INS_FAIL
0006C1: 6000  	MOV		A,@0x00
0006C2: 0103  	MOV		STATUS,A
0006C3: 6002  		MOV		A,@0x02
0006C4: 0150  		MOV		0x50,A		; [0x50] = 0x02
0006C5: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006C6: 56C8  		JMP		$+2
0006C7: 5067  		JMP	INS_FAIL
0006C8: 601A  	MOV		A,@0x1A
0006C9: 015A  	MOV		INST,A
0006CA: 6000  	MOV		A,@0x00
0006CB: 0103  	MOV		STATUS,A
0006CC: 6001  		MOV		A,@0x01
0006CD: 0150  		MOV		0x50,A		; [0x50] = 0x01
0006CE: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006CF: 5067  		JMP	INS_FAIL
0006D0: 1050  		MOV		A,0x50
0006D1: 6C00  		XOR		A,@0x00		; Check Result ?
0006D2: 3A03  		JBS		Z			; Check Z = 1?
0006D3: 5067  		JMP	INS_FAIL
0006D4: 3603  		JBC		N			; Check N = 0?
0006D5: 5067  		JMP	INS_FAIL
0006D6: 6000  	MOV		A,@0x00
0006D7: 0103  	MOV		STATUS,A
0006D8: 6002  		MOV		A,@0x02
0006D9: 0150  		MOV		0x50,A		; [0x50] = 0x02
0006DA: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006DB: 56DD  		JMP		$+2
0006DC: 5067  		JMP	INS_FAIL
0006DD: 6021  	MOV		A,@0x21
0006DE: 015A  	MOV		INST,A
0006DF: 6000  	MOV		A,@0x00
0006E0: 0103  	MOV		STATUS,A
0006E1: 60FF  		MOV		A,@0xFF
0006E2: 0150  		MOV		0x50,A
0006E3: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0006E4: 5067  		JMP		INS_FAIL
0006E5: 6C00  		XOR		A,@0x00		; Check Result ?
0006E6: 3A03  		JBS		Z			; Check Z = 1?
0006E7: 5067  		JMP	INS_FAIL
0006E8: 3603  		JBC		N			; Check N = 0?
0006E9: 5067  		JMP	INS_FAIL
0006EA: 6000  	MOV		A,@0x00
0006EB: 0103  	MOV		STATUS,A
0006EC: 6080  		MOV		A,@0x80
0006ED: 0150  		MOV		0x50,A
0006EE: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0006EF: 56F1  		JMP		$+2
0006F0: 5067  		JMP		INS_FAIL
0006F1: 6022  	MOV		A,@0x22
0006F2: 015A  	MOV		INST,A
0006F3: 6000  	MOV		A,@0x00
0006F4: 0103  	MOV		STATUS,A
0006F5: 60FF  		MOV		A,@0xFF
0006F6: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006F7: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006F8: 5067  		JMP		INS_FAIL
0006F9: 1050  		MOV		A,0x50
0006FA: 6C00  		XOR		A,@0x00		; Check Result ?
0006FB: 3A03  		JBS		Z			; Check Z = 1?
0006FC: 5067  		JMP	INS_FAIL
0006FD: 3603  		JBC		N			; Check N = 0?
0006FE: 5067  		JMP	INS_FAIL
0006FF: 6000  	MOV		A,@0x00
000700: 0103  	MOV		STATUS,A
000701: 6080  		MOV		A,@0x80
000702: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000703: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
000704: 5706  		JMP		$+2
000705: 5067  		JMP		INS_FAIL
000706: 6023  	MOV		A,@0x23
000707: 015A  	MOV		INST,A
000708: 6000  	MOV		A,@0x00
000709: 0103  	MOV		STATUS,A
00070A: 605A  		MOV		A,@0x5A
00070B: 0150  		MOV		0x50,A		; [0x50] = 0x5A
00070C: 6150  		JE		0x50		; [0x50] = A?
00070D: 5067  		JMP		INS_FAIL
00070E: 605B  		MOV		A,@0x5B
00070F: 0150  		MOV		0x50,A		; [0x50] = 0x5B
000710: 605C  		MOV		A,@0x5C
000711: 6150  		JE		0x50		; [0x50] = A(0x5C)?
000712: 5714  		JMP		$+2
000713: 5067  		JMP		INS_FAIL
000714: 6024  	MOV		A,@0x24
000715: 015A  	MOV		INST,A
000716: 6000  	MOV		A,@0x00
000717: 0103  	MOV		STATUS,A
000718: 607F  		MOV		A,@0x7F
000719: 0150  		MOV		0x50,A		; [0x50] = 0x7F
00071A: 6000  		MOV		A,@0x00
00071B: 6250  		JGE		0x50		; [0x50] > A ?
00071C: 5067  		JMP		INS_FAIL
00071D: 6000  	MOV		A,@0x00
00071E: 0103  	MOV		STATUS,A
00071F: 60FF  		MOV		A,@0xFF
000720: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000721: 6080  		MOV		A,@0x80
000722: 6250  		JGE		0x50		; [0x50] > A ?
000723: 5067  		JMP		INS_FAIL
000724: 6000  	MOV		A,@0x00
000725: 0103  	MOV		STATUS,A
000726: 6000  		MOV		A,@0x00
000727: 0150  		MOV		0x50,A		; [0x50] = 0x00
000728: 60FF  		MOV		A,@0xFF
000729: 6250  		JGE		0x50		; [0x50] > A(0xFF) ?x
00072A: 572C  		JMP		$+2
00072B: 5067  		JMP		INS_FAIL
00072C: 6025  	MOV		A,@0x25
00072D: 015A  	MOV		INST,A
00072E: 6000  	MOV		A,@0x00
00072F: 0103  	MOV		STATUS,A
000730: 6000  		MOV		A,@0x00
000731: 0150  		MOV		0x50,A		; [0x50] = 0x00
000732: 607F  		MOV		A,@0x7F
000733: 6350  		JLE		0x50		; [0x50] < A ?
000734: 5067  		JMP		INS_FAIL
000735: 6000  	MOV		A,@0x00
000736: 0103  	MOV		STATUS,A
000737: 6080  		MOV		A,@0x80
000738: 0150  		MOV		0x50,A		; [0x50] = 0x80
000739: 60FF  		MOV		A,@0xFF
00073A: 6350  		JLE		0x50		; [0x50] < A ?
00073B: 5067  		JMP		INS_FAIL
00073C: 6000  	MOV		A,@0x00
00073D: 0103  	MOV		STATUS,A
00073E: 60FF  		MOV		A,@0xFF
00073F: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000740: 6000  		MOV		A,@0x00
000741: 6350  		JLE		0x50		; [0x50] < A(0x00) ?x
000742: 5744  		JMP		$+2
000743: 5067  		JMP		INS_FAIL
000744: 6027  	MOV		A,@0x27
000745: 015A  	MOV		INST,A
000746: 6000  	MOV		A,@0x00
000747: 0103  	MOV		STATUS,A
000748: 607F  		MOV		A,@0x7F
000749: 657F  		JE		@0x7F
00074A: 5067  		JMP	INS_FAIL
00074B: 6036  	MOV		A,@0x36
00074C: 015A  	MOV		INST,A
00074D: 6000  	MOV		A,@0x00
00074E: 0103  	MOV		STATUS,A
00074F: 2803  		BS		C
000750: 607F  		MOV		A,@0x7F
000751: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000752: 6000  		MOV		A,@0x00		; A = 0x00
000753: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
000754: 3003  		JBC		C			; Check C = 0?
000755: 5067  		JMP	INS_FAIL
000756: 3903  		JBS		DC			; Check DC = 1?
000757: 5067  		JMP	INS_FAIL
000758: 3203  		JBC		Z			; Check Z = 0?
000759: 5067  		JMP	INS_FAIL
00075A: 3D03  		JBS		OV			; Check OV = 1?
00075B: 5067  		JMP	INS_FAIL
00075C: 3E03  		JBS		N			; Check N = 1?
00075D: 5067  		JMP	INS_FAIL
00075E: 6C80  		XOR		A,@0x80		; Check Result ?
00075F: 3A03  		JBS		Z			; Check Z = 1?
000760: 5067  		JMP	INS_FAIL
000761: 3603  		JBC		N			; Check N = 0?
000762: 5067  		JMP	INS_FAIL
000763: 6000  	MOV		A,@0x00
000764: 0103  	MOV		STATUS,A
000765: 2803  		BS		C
000766: 6080  		MOV		A,@0x80
000767: 0150  		MOV		0x50,A		; [0x50] = 0x80
000768: 607F  		MOV		A,@0x7F		; A = 0x7F
000769: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
00076A: 3803  		JBS		C			; Check C = 1?
00076B: 5067  		JMP	INS_FAIL
00076C: 3903  		JBS		DC			; Check DC = 1?
00076D: 5067  		JMP	INS_FAIL
00076E: 3A03  		JBS		Z			; Check Z = 1?
00076F: 5067  		JMP	INS_FAIL
000770: 3503  		JBC		OV			; Check OV = 0?
000771: 5067  		JMP	INS_FAIL
000772: 3603  		JBC		N			; Check N = 0?
000773: 5067  		JMP	INS_FAIL
000774: 6C00  		XOR		A,@0x00		; Check Result ?
000775: 3A03  		JBS		Z			; Check Z = 1?
000776: 5067  		JMP	INS_FAIL
000777: 3603  		JBC		N			; Check N = 0?
000778: 5067  		JMP	INS_FAIL
000779: 6037  	MOV		A,@0x37
00077A: 015A  	MOV		INST,A
00077B: 6000  	MOV		A,@0x00
00077C: 0103  	MOV		STATUS,A
00077D: 2803  		BS		C
00077E: 607F  		MOV		A,@0x7F
00077F: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000780: 6000  		MOV		A,@0x00		; A = 0x00
000781: 2203  		BC		Z
000782: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
000783: 1003  		MOV		A,STATUS
000784: 6C7A  		XOR		A,@0x7A		; Check Status ?
000785: 3A03  		JBS		Z			; Check Z = 1?
000786: 5067  		JMP	INS_FAIL
000787: 3603  		JBC		N			; Check N = 0?
000788: 5067  		JMP	INS_FAIL
000789: 1050  		MOV		A,0x50
00078A: 6C80  		XOR		A,@0x80		; Check Result ?
00078B: 3A03  		JBS		Z			; Check Z = 1?
00078C: 5067  		JMP	INS_FAIL
00078D: 3603  		JBC		N			; Check N = 0?
00078E: 5067  		JMP	INS_FAIL
00078F: 6000  	MOV		A,@0x00
000790: 0103  	MOV		STATUS,A
000791: 2803  		BS		C
000792: 6080  		MOV		A,@0x80
000793: 0150  		MOV		0x50,A		; [0x50] = 0x80
000794: 607F  		MOV		A,@0x7F		; A = 0x7F
000795: 2203  		BC		Z
000796: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
000797: 1003  		MOV		A,STATUS
000798: 6C1F  		XOR		A,@0x1F		; Check Status ?
000799: 3A03  		JBS		Z			; Check Z = 1?
00079A: 5067  		JMP	INS_FAIL
00079B: 3603  		JBC		N			; Check N = 0?
00079C: 5067  		JMP	INS_FAIL
00079D: 1050  		MOV		A,0x50
00079E: 6C00  		XOR		A,@0x00		; Check Result ?
00079F: 3A03  		JBS		Z			; Check Z = 1?
0007A0: 5067  		JMP	INS_FAIL
0007A1: 3603  		JBC		N			; Check N = 0?
0007A2: 5067  		JMP	INS_FAIL
0007A3: 0000  		NOP
0007A4: 0000  		NOP
0007A5: 0000  		NOP
0007A6: 0000  		NOP
0007A7: 6000  	MOV		A,@0x00
0007A8: 0103  	MOV		STATUS,A
0007A9: 2803  		BS	C
0007AA: 6903  		SJC		@0x03
0007AB: 5063  		JMP	JMP_FAIL
0007AC: 5063  		JMP	JMP_FAIL
0007AD: 5063  		JMP	JMP_FAIL
0007AE: 2003  		BC	C
0007AF: 6A03  		SJNC	bbb
0007B0: 5063  		JMP	JMP_FAIL
0007B1: 5063  		JMP	JMP_FAIL
0007B2: 5063  		JMP	JMP_FAIL
0007B3: 2A03  		BS	Z
0007B4: 6B03  		SJZ		@0x03
0007B5: 5063  		JMP	JMP_FAIL
0007B6: 5063  		JMP	JMP_FAIL
0007B7: 5063  		JMP	JMP_FAIL
0007B8: 0200  		CLRA
0007B9: 6B03  		SJZ		@0x03
0007BA: 5063  		JMP	JMP_FAIL
0007BB: 5063  		JMP	JMP_FAIL
0007BC: 5063  		JMP	JMP_FAIL
0007BD: 57C5  		JMP	IATEST1
0007BE: 57D2  		JMP	IATEST2		; -9
0007BF: 5063  		JMP	JMP_FAIL	; -8
0007C0: 5063  		JMP	JMP_FAIL	; -7
0007C1: 5063  		JMP	JMP_FAIL	; -6
0007C2: 5063  		JMP	JMP_FAIL	; -5
0007C3: 5063  		JMP	JMP_FAIL	; -4
0007C4: 5063  		JMP	JMP_FAIL	; -3
0007C5: 2803  		BS		C		; -2
0007C6: 69F7  		SJC		aaa		; -1
0007C7: 69F7  		SJC		@0xF7	; -1
0007C8: 5063  		JMP	JMP_FAIL
0007C9: 5063  		JMP	JMP_FAIL
0007CA: 5063  		JMP	JMP_FAIL
0007CB: 57DE  		JMP	IATEST3		; -9
0007CC: 5063  		JMP	JMP_FAIL	; -8
0007CD: 5063  		JMP	JMP_FAIL	; -7
0007CE: 5063  		JMP	JMP_FAIL	; -6
0007CF: 5063  		JMP	JMP_FAIL	; -5
0007D0: 5063  		JMP	JMP_FAIL	; -4
0007D1: 5063  		JMP	JMP_FAIL	; -3
0007D2: 2003  		BC		C		; -2
0007D3: 6AF7  		SJNC		@0xF7	; -1
0007D4: 57EF  		JMP	_IPass
0007D5: 57EF  		JMP	_IPass
0007D6: 57EF  		JMP	_IPass
0007D7: 57EA  		JMP	IATEST4		; -9
0007D8: 5063  		JMP	JMP_FAIL	; -8
0007D9: 5063  		JMP	JMP_FAIL	; -7
0007DA: 5063  		JMP	JMP_FAIL	; -6
0007DB: 5063  		JMP	JMP_FAIL	; -5
0007DC: 5063  		JMP	JMP_FAIL	; -4
0007DD: 5063  		JMP	JMP_FAIL	; -3
0007DE: 2A03  		BS		Z		; -2
0007DF: 6BF7  		SJZ		@0xF7	; -1
0007E0: 5063  		JMP	JMP_FAIL
0007E1: 5063  		JMP	JMP_FAIL
0007E2: 5063  		JMP	JMP_FAIL
0007E3: 57EF  		JMP	_IPass		; -9
0007E4: 5063  		JMP	JMP_FAIL	; -8
0007E5: 5063  		JMP	JMP_FAIL	; -7
0007E6: 5063  		JMP	JMP_FAIL	; -6
0007E7: 5063  		JMP	JMP_FAIL	; -5
0007E8: 5063  		JMP	JMP_FAIL	; -4
0007E9: 5063  		JMP	JMP_FAIL	; -3
0007EA: 2203  		BC		Z		; -2
0007EB: 6DF7  		SJNZ	@0xF7	; -1
0007EC: 5063  		JMP	JMP_FAIL
0007ED: 5063  		JMP	JMP_FAIL
0007EE: 5063  		JMP	JMP_FAIL
0007EF: 0000  		NOP
0007F0: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
0007F1: 0104  		MOV		RSR,A
0007F2: 7A40  		GBANK	0
0007F3: 6055  		MOV		A,@0x55
0007F4: 0100  		MOV		IAR,A
0007F5: 1504  		INC		RSR
0007F6: 6000  		MOV		A,@0x00
0007F7: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007F8: 3A03  		JBS		Z
0007F9: 57F3  		JMP		$-6
0007FA: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
0007FB: 0104  		MOV		RSR,A
0007FC: 7A40  		GBANK	0
0007FD: 6055  		MOV		A,@0x55
0007FE: 0D00  		XOR		IAR,A
0007FF: 3A03  		JBS		Z
000800: 5065  		JMP		RAM_FAIL
000801: 1504  		INC		RSR
000802: 6000  		MOV		A,@0x00
000803: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000804: 3A03  		JBS		Z
000805: 57FD  		JMP		$-8
000806: 0012  		RET
000807: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
000808: 0104  		MOV		RSR,A
000809: 7A40  		GBANK	0
00080A: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
00080B: 0100  		MOV		IAR,A
00080C: 1504  		INC		RSR
00080D: 6000  		MOV		A,@0x00
00080E: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
00080F: 3A03  		JBS		Z
000810: 580A  		JMP		$-6
000811: 6080  		MOV		A,@0x80
000812: 0104  		MOV		RSR,A
000813: 7A40  		GBANK	0
000814: 60AA  		MOV		A,@0xAA
000815: 0D00  		XOR		IAR,A
000816: 3A03  		JBS		Z
000817: 5065  		JMP		RAM_FAIL
000818: 1504  		INC		RSR
000819: 6000  		MOV		A,@0x00
00081A: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
00081B: 3A03  		JBS		Z
00081C: 5814  		JMP		$-8
00081D: 0012  		RET
00081E: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
00081F: 0104  		MOV		RSR,A
000820: 7A41  		GBANK	1
000821: 6033  		MOV		A,@0x33		; SRAM(0x33)
000822: 0100  		MOV		IAR,A
000823: 1504  		INC		RSR
000824: 6000  		MOV		A,@0x00
000825: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000826: 3A03  		JBS		Z
000827: 5821  		JMP		$-6
000828: 6080  		MOV		A,@0x80
000829: 0104  		MOV		RSR,A
00082A: 7A41  		GBANK	1
00082B: 6033  		MOV		A,@0x33
00082C: 0D00  		XOR		IAR,A
00082D: 3A03  		JBS		Z
00082E: 5065  		JMP		RAM_FAIL
00082F: 1504  		INC		RSR
000830: 6000  		MOV		A,@0x00
000831: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000832: 3A03  		JBS		Z
000833: 582B  		JMP		$-8
000834: 0012  		RET
000835: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
000836: 0104  		MOV		RSR,A
000837: 7A41  		GBANK	1
000838: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
000839: 0100  		MOV		IAR,A
00083A: 1504  		INC		RSR
00083B: 6000  		MOV		A,@0x00
00083C: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
00083D: 3A03  		JBS		Z
00083E: 5838  		JMP		$-6
00083F: 6080  		MOV		A,@0x80
000840: 0104  		MOV		RSR,A
000841: 7A41  		GBANK	1
000842: 60CC  		MOV		A,@0xCC
000843: 0D00  		XOR		IAR,A
000844: 3A03  		JBS		Z
000845: 5065  		JMP		RAM_FAIL
000846: 1504  		INC		RSR
000847: 6000  		MOV		A,@0x00
000848: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000849: 3A03  		JBS		Z
00084A: 5842  		JMP		$-8
00084B: 0012  		RET
