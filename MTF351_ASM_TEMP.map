****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X4F   , End=0X4F   , Size=1
Start=0X7D2  , End=0XEEF  , Size=1822
Start=0XEF9  , End=0XEFF  , Size=7
Start=0XF5C  , End=0XFFD  , Size=162
----------------------------------------
MTF351          |        ROM Size        
----------------+-----------------------
Total           |  4096 x 16 bits(100.0%)
Used            |  2103 x 16 bits( 51.3%)
Free            |  1993 x 16 bits( 48.7%)
----------------------------------------
****************************************
The Checksum is -- 0x1B20
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 5066  	JMP 	JMP_FAIL	;0x0003
000003: 5066  	JMP 	JMP_FAIL	;0x0004
000004: 5066  	JMP 	JMP_FAIL	;0x0005
000005: 5066  	JMP 	JMP_FAIL	;0x0006
000006: 5066  	JMP 	JMP_FAIL	;0x0007
000007: 5066  	JMP 	JMP_FAIL	;0x0008
000008: 5066  	JMP 	JMP_FAIL	;0x0009
000009: 5066  	JMP 	JMP_FAIL	;0x000A
00000A: 5066  	JMP 	JMP_FAIL	;0x000B
00000B: 5066  	JMP 	JMP_FAIL	;0x000C
00000C: 5066  	JMP 	JMP_FAIL	;0x000D
00000D: 5066  	JMP 	JMP_FAIL	;0x000E
00000E: 5066  	JMP 	JMP_FAIL	;0x000F
00000F: 5066  	JMP 	JMP_FAIL	;0x0010
000010: 5066  	JMP 	JMP_FAIL	;0x0011
000011: 5066  	JMP 	JMP_FAIL	;0x0012
000012: 5066  	JMP 	JMP_FAIL	;0x0013
000013: 5066  	JMP 	JMP_FAIL	;0x0014
000014: 5066  	JMP 	JMP_FAIL	;0x0015
000015: 5066  	JMP 	JMP_FAIL	;0x0016
000016: 5066  	JMP 	JMP_FAIL	;0x0017
000017: 5066  	JMP 	JMP_FAIL	;0x0018
000018: 5066  	JMP 	JMP_FAIL	;0x0019
000019: 5066  	JMP 	JMP_FAIL	;0x001A
00001A: 5066  	JMP 	JMP_FAIL	;0x001B
00001B: 5066  	JMP 	JMP_FAIL	;0x001C
00001C: 5066  	JMP 	JMP_FAIL	;0x001D
00001D: 5066  	JMP 	JMP_FAIL	;0x001E
00001E: 5066  	JMP 	JMP_FAIL	;0x001F
00001F: 5066  	JMP 	JMP_FAIL	;0x0020
000020: 5066  	JMP 	JMP_FAIL	;0x0021
000021: 5066  	JMP 	JMP_FAIL	;0x0022
000022: 5066  	JMP 	JMP_FAIL	;0x0023
000023: 5066  	JMP 	JMP_FAIL	;0x0024
000024: 5066  	JMP 	JMP_FAIL	;0x0025
000025: 5066  	JMP 	JMP_FAIL	;0x0026
000026: 5066  	JMP 	JMP_FAIL	;0x0027
000027: 5066  	JMP 	JMP_FAIL	;0x0028
000028: 5066  	JMP 	JMP_FAIL	;0x0029
000029: 5066  	JMP 	JMP_FAIL	;0x002A
00002A: 5066  	JMP 	JMP_FAIL	;0x002B
00002B: 5066  	JMP 	JMP_FAIL	;0x002C
00002C: 5066  	JMP 	JMP_FAIL	;0x002D
00002D: 5066  	JMP 	JMP_FAIL	;0x002E
00002E: 5066  	JMP 	JMP_FAIL	;0x002F
00002F: 5066  	JMP 	JMP_FAIL	;0x0030
000030: 5066  	JMP 	JMP_FAIL	;0x0031
000031: 5066  	JMP 	JMP_FAIL	;0x0032
000032: 5066  	JMP 	JMP_FAIL	;0x0033
000033: 5066  	JMP 	JMP_FAIL	;0x0034
000034: 5066  	JMP 	JMP_FAIL	;0x0035
000035: 5066  	JMP 	JMP_FAIL	;0x0036
000036: 5066  	JMP 	JMP_FAIL	;0x0037
000037: 5066  	JMP 	JMP_FAIL	;0x0038
000038: 5066  	JMP 	JMP_FAIL	;0x0039
000039: 5066  	JMP 	JMP_FAIL	;0x003A
00003A: 5066  	JMP 	JMP_FAIL	;0x003B
00003B: 5066  	JMP 	JMP_FAIL	;0x003C
00003C: 5066  	JMP 	JMP_FAIL	;0x003D
00003D: 5066  	JMP 	JMP_FAIL	;0x003E
00003E: 5066  	JMP 	JMP_FAIL	;0x003F
00003F: 5066  	JMP 	JMP_FAIL	;0x0040
000040: 5066  	JMP 	JMP_FAIL	;0x0041
000041: 5066  	JMP 	JMP_FAIL	;0x0042
000042: 5066  	JMP 	JMP_FAIL	;0x0043
000043: 5066  	JMP 	JMP_FAIL	;0x0044
000044: 5066  	JMP 	JMP_FAIL	;0x0045
000045: 5066  	JMP 	JMP_FAIL	;0x0046
000046: 5066  	JMP 	JMP_FAIL	;0x0047
000047: 5066  	JMP 	JMP_FAIL	;0x0048
000048: 5066  	JMP 	JMP_FAIL	;0x0049
000049: 5066  	JMP 	JMP_FAIL	;0x004A
00004A: 5066  	JMP 	JMP_FAIL	;0x004B
00004B: 5066  	JMP 	JMP_FAIL	;0x004C
00004C: 5066  	JMP 	JMP_FAIL	;0x004D
00004D: 5066  	JMP 	JMP_FAIL	;0x004E
00004E: 5066  	JMP 	JMP_FAIL	;0x004F
000050: 406F  	CALL	SYS_INIT
000051: 407A  	CALL	GPIO_INIT
000052: 40AA  	CALL	RAM_SHA_INIT
000053: 40B4  	CALL	RAM_IND_INIT
000054: 7A00  	SBANK	0
000055: 40D3  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000056: 447D  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000057: 45AC  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000058: 4674  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
000059: 46AC  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005A: 46AD  	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
00005B: 46EC  	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
00005C: 472B  	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
00005D: 4751  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
00005E: 475C  	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
00005F: 47A5  	CALL	TEST_READ_ROM			;TBRD, TBRDA
000060: 4F00  	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
000061: 4F17  	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
000062: 4F2E  	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
000063: 4F45  	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
000064: 0095  	BTG		P5,1
000065: 5054  	JMP		BACK_GROUND_LOOP
000066: 7A00  	SBANK	0
000067: 2205  	BC		P5,2
000068: 5066  	JMP		JMP_FAIL
000069: 7A00  	SBANK	0
00006A: 2305  	BC		P5,3
00006B: 5069  	JMP		RAM_FAIL
00006C: 7A00  	SBANK	0
00006D: 2405  	BC		P5,4
00006E: 506C  	JMP		INS_FAIL
00006F: 7A00  		SBANK	0
000070: 260E  		BC		IDLE	;SLEEP_MODE
000071: 6000  		MOV		A,@0x00
000072: 0114  		MOV		SFR1,A
000073: 0117  		MOV		SFR4,A
000074: 0119  		MOV		SFR6,A
000075: 7A03  		SBANK	3
000076: 6000  		MOV		A,@0x00
000077: 014C  		MOV		SFR9,A
000078: 014D  		MOV		SFR10,A
000079: 0012  		RET
00007A: 7A00  		SBANK	0
00007B: 0305  		CLR		P5
00007C: 60F0  		MOV		A,@0xF0
00007D: 010B  		MOV		IOCR5,A
00007E: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00007F: 0105  		MOV		P5,A
000080: 0012  		RET
000081: 7A00  		SBANK	0
000082: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000083: 5086  		JMP		$+3
000084: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000085: 0003  		SLEP
000086: 3B03  		JBS		P
000087: 508A  		JMP		$+3
000088: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000089: 0003  		SLEP
00008A: 3B03  		JBS		P
00008B: 508E  		JMP		$+3
00008C: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
00008D: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
00008E: 0003  		SLEP		
00008F: 0012  		RET
000090: 3D05  		JBS		P5,5		; Push, or not
000091: 5093  		JMP		$+2
000092: 5090  		JMP		$-2
000093: 3D05  		JBS		P5,5
000094: 5090  		JMP		KEY_DEBOUNCE
000095: 3D05  		JBS		P5,5
000096: 5090  		JMP		KEY_DEBOUNCE
000097: 3D05  		JBS		P5,5
000098: 5090  		JMP		KEY_DEBOUNCE
000099: 3D05  		JBS		P5,5
00009A: 5090  		JMP		KEY_DEBOUNCE
00009B: 3D05  		JBS		P5,5
00009C: 5090  		JMP		KEY_DEBOUNCE
00009D: 3D05  		JBS		P5,5
00009E: 5090  		JMP		KEY_DEBOUNCE
00009F: 3D05  		JBS		P5,5
0000A0: 5090  		JMP		KEY_DEBOUNCE
0000A1: 3D05  		JBS		P5,5
0000A2: 5090  		JMP		KEY_DEBOUNCE
0000A3: 3D05  		JBS		P5,5
0000A4: 5090  		JMP		KEY_DEBOUNCE
0000A5: 3D05  		JBS		P5,5
0000A6: 50A4  		JMP		$-2
0000A7: 60FF  		MOV		A,@0xFF		; Turn Off all LED
0000A8: 0105  		MOV		P5,A		
0000A9: 0012  		RET
0000AA: 6050  		MOV		A,@0x50
0000AB: 0104  		MOV		RSR,A
0000AC: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
0000AD: 0100  		MOV		IAR,A
0000AE: 1504  		INC		RSR
0000AF: 6080  		MOV		A,@0x80
0000B0: 0D04  		XOR		RSR,A
0000B1: 3A03  		JBS		Z
0000B2: 50AC  		JMP		$-6
0000B3: 0012  		RET
0000B4: 6080  		MOV		A,@0x80
0000B5: 0104  		MOV		RSR,A
0000B6: 7A40  		GBANK	0
0000B7: 60FF  		MOV		A,@0xFF
0000B8: 0100  		MOV		IAR,A
0000B9: 1504  		INC		RSR
0000BA: 6000  		MOV		A,@0x00
0000BB: 0D04  		XOR		RSR,A
0000BC: 3A03  		JBS		Z
0000BD: 50B6  		JMP		RAM_IND_LOOP_0
0000BE: 6080  		MOV		A,@0x80
0000BF: 0104  		MOV		RSR,A
0000C0: 7A41  		GBANK	1
0000C1: 60FF  		MOV		A,@0xFF
0000C2: 0100  		MOV		IAR,A
0000C3: 1504  		INC		RSR
0000C4: 6000  		MOV		A,@0x00
0000C5: 0D04  		XOR		RSR,A
0000C6: 3A03  		JBS		Z
0000C7: 50C0  		JMP		RAM_IND_LOOP_1
0000C8: 6080  		MOV		A,@0x80
0000C9: 0104  		MOV		RSR,A
0000CA: 0012  		RET
0000CB: 6000  		MOV		A,@0x00
0000CC: 0103  		MOV		STATUS,A
0000CD: 0012  		RET
0000CE: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000CF: 506C  		JMP		INS_FAIL
0000D0: 3603  		JBC		N			; IF(N=0) BRANCH
0000D1: 506C  		JMP		INS_FAIL
0000D2: 0012  		RET
0000D3: 6001  			MOV		A,@0x01
0000D4: 015A  			MOV		INST,A
0000D5: 40CB  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000D6: 60AA  			MOV		A,@0xAA
0000D7: 0001  			DAA
0000D8: 3803  			JBS		C			; Check C = 1?
0000D9: 506C  			JMP	INS_FAIL
0000DA: 3103  			JBC		DC			; Check DC = 0?
0000DB: 506C  			JMP	INS_FAIL
0000DC: 3203  			JBC		Z			; Check Z = 0?
0000DD: 506C  			JMP	INS_FAIL
0000DE: 3503  			JBC		OV			; Check OV = 0?
0000DF: 506C  			JMP	INS_FAIL
0000E0: 3603  			JBC		N			; Check N = 0?
0000E1: 506C  			JMP	INS_FAIL
0000E2: 6C10  			XOR		A,@0x10		; Check Result ?
0000E3: 3A03  			JBS		Z			; Check Z = 1?
0000E4: 506C  			JMP	INS_FAIL
0000E5: 3603  			JBC		N			; Check N = 0?
0000E6: 506C  			JMP	INS_FAIL
0000E7: 40CB  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000E8: 6080  			MOV		A,@0x80
0000E9: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000EA: 607F  			MOV		A,@0x7F		; 
0000EB: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000EC: 0001  			DAA
0000ED: 3803  			JBS		C			; Check C = 1?
0000EE: 506C  			JMP	INS_FAIL
0000EF: 3103  			JBC		DC			; Check DC = 0?
0000F0: 506C  			JMP	INS_FAIL
0000F1: 3203  			JBC		Z			; Check Z = 0?
0000F2: 506C  			JMP	INS_FAIL
0000F3: 3503  			JBC		OV			; Check OV = 0?
0000F4: 506C  			JMP	INS_FAIL
0000F5: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
0000F6: 506C  			JMP	INS_FAIL
0000F7: 2203  			BC		Z
0000F8: 2603  			BC		N
0000F9: 6C65  			XOR		A,@0x65		; Check Result ?
0000FA: 3A03  			JBS		Z			; Check Z = 1?
0000FB: 506C  			JMP	INS_FAIL
0000FC: 3603  			JBC		N			; Check N = 0?
0000FD: 506C  			JMP	INS_FAIL
0000FE: 0000  			NOP
0000FF: 6000  			MOV		A,@0x00
000100: 0103  			MOV		STATUS,A
000101: 2803  			BS		C
000102: 6080  			MOV		A,@0x80
000103: 0150  			MOV		0x50,A		; [0x50] = 0x80
000104: 607F  			MOV		A,@0x7F		; 
000105: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000106: 0001  			DAA
000107: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000108: 506C  			JMP	INS_FAIL
000109: 3903  			JBS		DC			; Check DC = 1? / By ADC
00010A: 506C  			JMP	INS_FAIL
00010B: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
00010C: 506C  			JMP	INS_FAIL
00010D: 3503  			JBC		OV			; Check OV = 0?
00010E: 506C  			JMP	INS_FAIL
00010F: 3603  			JBC		N			; Check N = 0?
000110: 506C  			JMP	INS_FAIL
000111: 6C66  			XOR		A,@0x66		; Check Result ?
000112: 3A03  			JBS		Z			; Check Z = 1?
000113: 506C  			JMP	INS_FAIL
000114: 3603  			JBC		N			; Check N = 0?
000115: 506C  			JMP	INS_FAIL
000116: 6000  			MOV		A,@0x00
000117: 0103  			MOV		STATUS,A
000118: 60FF  			MOV		A,@0xFF
000119: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00011A: 607F  			MOV		A,@0x7F		; 
00011B: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
00011C: 0001  			DAA
00011D: 3803  			JBS		C			; Check C = 1? 	/ By SUB
00011E: 506C  			JMP	INS_FAIL
00011F: 3903  			JBS		DC			; Check DC = 1? / By SUB
000120: 506C  			JMP	INS_FAIL
000121: 3203  			JBC		Z			; Check Z = 0?
000122: 506C  			JMP	INS_FAIL
000123: 3503  			JBC		OV			; Check OV = 0?
000124: 506C  			JMP	INS_FAIL
000125: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000126: 506C  			JMP	INS_FAIL
000127: 2203  			BC		Z
000128: 2603  			BC		N
000129: 6CE6  			XOR		A,@0xE6		; Check Result ?
00012A: 3A03  			JBS		Z			; Check Z = 1?
00012B: 506C  			JMP	INS_FAIL
00012C: 3603  			JBC		N			; Check N = 0?
00012D: 506C  			JMP	INS_FAIL
00012E: 6008  			MOV		A,@0x08
00012F: 015A  			MOV		INST,A
000130: 605A  			MOV		A,@0x5A
000131: 6C5A  			XOR		A,@0x5A		; Check Result ?
000132: 3A03  			JBS		Z			; Check Z = 1?
000133: 506C  			JMP	INS_FAIL
000134: 3603  			JBC		N			; Check N = 0?
000135: 506C  			JMP	INS_FAIL
000136: 605A  			MOV		A,@0x5A
000137: 0200  			CLRA
000138: 3A03  			JBS		Z			; Check Z = 1?
000139: 506C  			JMP	INS_FAIL
00013A: 2203  			BC		Z
00013B: 6C00  			XOR		A,@0x00		; Check Result ?
00013C: 3A03  			JBS		Z			; Check Z = 1?
00013D: 506C  			JMP	INS_FAIL
00013E: 3603  			JBC		N			; Check N = 0?
00013F: 506C  			JMP	INS_FAIL
000140: 6009  			MOV		A,@0x09
000141: 015A  			MOV		INST,A
000142: 60AA  			MOV		A,@0xAA
000143: 0150  			MOV		0x50,A
000144: 1050  			MOV		A,0x50
000145: 6CAA  			XOR		A,@0xAA		; Check Result ?
000146: 3A03  			JBS		Z			; Check Z = 1?
000147: 506C  			JMP	INS_FAIL
000148: 3603  			JBC		N			; Check N = 0?
000149: 506C  			JMP	INS_FAIL
00014A: 0350  			CLR		0x50
00014B: 3A03  			JBS		Z			; Check Z = 1?
00014C: 506C  			JMP	INS_FAIL
00014D: 2203  			BC		Z
00014E: 1050  			MOV		A,0x50
00014F: 6C00  			XOR		A,@0x00		; Check Result ?
000150: 3A03  			JBS		Z			; Check Z = 1?
000151: 506C  			JMP	INS_FAIL
000152: 3603  			JBC		N			; Check N = 0?
000153: 506C  			JMP	INS_FAIL
000154: 600A  			MOV		A,@0x0A
000155: 015A  			MOV		INST,A
000156: 6000  			MOV		A,@0x00
000157: 0103  			MOV		STATUS,A
000158: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000159: 0150  			MOV		0x50,A		; [0x50] = 0x02
00015A: 6001  			MOV		A,@0x01
00015B: 0450  			SUB		A,0x50		; A = [0x50] - A
00015C: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
00015D: 506C  			JMP	INS_FAIL
00015E: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00015F: 506C  			JMP	INS_FAIL
000160: 3203  			JBC		Z			; Check Z = 0?
000161: 506C  			JMP	INS_FAIL
000162: 3503  			JBC		OV			; Check OV = 0?
000163: 506C  			JMP	INS_FAIL
000164: 3603  			JBC		N			; Check N = 0?
000165: 506C  			JMP	INS_FAIL
000166: 2203  			BC		Z
000167: 6C01  			XOR		A,@0x01		; Check Result ?
000168: 3A03  			JBS		Z			; Check Z = 1?
000169: 506C  			JMP	INS_FAIL
00016A: 3603  			JBC		N			; Check N = 0?
00016B: 506C  			JMP	INS_FAIL
00016C: 6000  			MOV		A,@0x00
00016D: 0103  			MOV		STATUS,A
00016E: 6002  			MOV		A,@0x02		; SUB(2-2)=0
00016F: 0150  			MOV		0x50,A		; [0x50] = 0x02
000170: 6002  			MOV		A,@0x02
000171: 0450  			SUB		A,0x50		; A = [0x50] - A
000172: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000173: 506C  			JMP	INS_FAIL
000174: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000175: 506C  			JMP	INS_FAIL
000176: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
000177: 506C  			JMP	INS_FAIL
000178: 3503  			JBC		OV			; Check OV = 0?
000179: 506C  			JMP	INS_FAIL
00017A: 3603  			JBC		N			; Check N = 0?
00017B: 506C  			JMP	INS_FAIL
00017C: 2203  			BC		Z
00017D: 6C00  			XOR		A,@0x00		; Check Result ?
00017E: 3A03  			JBS		Z			; Check Z = 1?
00017F: 506C  			JMP	INS_FAIL
000180: 3603  			JBC		N			; Check N = 0?
000181: 506C  			JMP	INS_FAIL
000182: 6000  			MOV		A,@0x00
000183: 0103  			MOV		STATUS,A
000184: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000185: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000186: 607F  			MOV		A,@0x7F
000187: 0450  			SUB		A,0x50		; A = [0x50] - A
000188: 3803  			JBS		C			; Check C = 1?
000189: 506C  			JMP	INS_FAIL
00018A: 3903  			JBS		DC			; Check DC = 1?
00018B: 506C  			JMP	INS_FAIL
00018C: 3203  			JBC		Z			; Check Z = 0?
00018D: 506C  			JMP	INS_FAIL
00018E: 3503  			JBC		OV			; Check OV = 0?
00018F: 506C  			JMP	INS_FAIL
000190: 3E03  			JBS		N			; Check N = 1?
000191: 506C  			JMP	INS_FAIL
000192: 2203  			BC		Z
000193: 2603  			BC		N
000194: 6C80  			XOR		A,@0x80		; Check Result ?
000195: 3A03  			JBS		Z			; Check Z = 1?
000196: 506C  			JMP	INS_FAIL
000197: 3603  			JBC		N			; Check N = 0?
000198: 506C  			JMP	INS_FAIL
000199: 6000  			MOV		A,@0x00
00019A: 0103  			MOV		STATUS,A
00019B: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
00019C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00019D: 607F  			MOV		A,@0x7F
00019E: 0450  			SUB		A,0x50		; A = [0x50] - A
00019F: 3803  			JBS		C			; Check C = 1?
0001A0: 506C  			JMP	INS_FAIL
0001A1: 3103  			JBC		DC			; Check DC = 0?
0001A2: 506C  			JMP	INS_FAIL
0001A3: 3203  			JBC		Z			; Check Z = 0?
0001A4: 506C  			JMP	INS_FAIL
0001A5: 3D03  			JBS		OV			; Check OV = 1?
0001A6: 506C  			JMP	INS_FAIL
0001A7: 3603  			JBC		N			; Check N = 0?
0001A8: 506C  			JMP	INS_FAIL
0001A9: 2203  			BC		Z
0001AA: 2603  			BC		N
0001AB: 6C01  			XOR		A,@0x01		; Check Result ?
0001AC: 3A03  			JBS		Z			; Check Z = 1?
0001AD: 506C  			JMP	INS_FAIL
0001AE: 3603  			JBC		N			; Check N = 0?
0001AF: 506C  			JMP	INS_FAIL
0001B0: 6000  			MOV		A,@0x00
0001B1: 0103  			MOV		STATUS,A
0001B2: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001B3: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001B4: 6003  			MOV		A,@0x03
0001B5: 0450  			SUB		A,0x50		; A = [0x50] - A
0001B6: 3003  			JBC		C			; Check C = 0?
0001B7: 506C  			JMP	INS_FAIL
0001B8: 3103  			JBC		DC			; Check DC = 0?
0001B9: 506C  			JMP	INS_FAIL
0001BA: 3203  			JBC		Z			; Check Z = 0?
0001BB: 506C  			JMP	INS_FAIL
0001BC: 3503  			JBC		OV			; Check OV = 0?
0001BD: 506C  			JMP	INS_FAIL
0001BE: 3E03  			JBS		N			; Check N = 1?
0001BF: 506C  			JMP	INS_FAIL
0001C0: 2203  			BC		Z
0001C1: 2603  			BC		N
0001C2: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001C3: 3A03  			JBS		Z			; Check Z = 1?
0001C4: 506C  			JMP	INS_FAIL
0001C5: 3603  			JBC		N			; Check N = 0?
0001C6: 506C  			JMP	INS_FAIL
0001C7: 600B  			MOV		A,@0x0B
0001C8: 015A  			MOV		INST,A
0001C9: 6000  			MOV		A,@0x00
0001CA: 0103  			MOV		STATUS,A
0001CB: 6002  			MOV		A,@0x02
0001CC: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001CD: 6001  			MOV		A,@0x01
0001CE: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001CF: 1003  			MOV		A,STATUS
0001D0: 6C1B  			XOR		A,@0x1B		; for non reset
0001D1: 40CE  			CALL	INST_XOR_JUDGE
0001D2: 2203  			BC		Z
0001D3: 2603  			BC		N
0001D4: 1050  			MOV		A,0x50
0001D5: 6C01  			XOR		A,@0x01		; Check Result ?
0001D6: 40CE  			CALL	INST_XOR_JUDGE
0001D7: 6000  			MOV		A,@0x00
0001D8: 0103  			MOV		STATUS,A
0001D9: 6002  			MOV		A,@0x02
0001DA: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001DB: 6002  			MOV		A,@0x02
0001DC: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001DD: 1003  			MOV		A,STATUS
0001DE: 6C1F  			XOR		A,@0x1F		; for nono reset
0001DF: 40CE  			CALL	INST_XOR_JUDGE
0001E0: 2203  			BC		Z
0001E1: 2603  			BC		N
0001E2: 1050  			MOV		A,0x50
0001E3: 6C00  			XOR		A,@0x00		; Check Result ?
0001E4: 3A03  			JBS		Z			; Check Z = 1?
0001E5: 506C  			JMP	INS_FAIL
0001E6: 3603  			JBC		N			; Check N = 0?
0001E7: 506C  			JMP	INS_FAIL
0001E8: 6000  			MOV		A,@0x00
0001E9: 0103  			MOV		STATUS,A
0001EA: 6080  			MOV		A,@0x80
0001EB: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001EC: 6001  			MOV		A,@0x01
0001ED: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001EE: 1003  			MOV		A,STATUS
0001EF: 6C39  			XOR		A,@0x39	;; for non reset
0001F0: 40CE  			CALL	INST_XOR_JUDGE
0001F1: 2203  			BC		Z
0001F2: 2603  			BC		N
0001F3: 1050  			MOV		A,0x50
0001F4: 6C7F  			XOR		A,@0x7F		; Check Result ?
0001F5: 40CE  			CALL	INST_XOR_JUDGE
0001F6: 6030  			MOV		A,@0x30
0001F7: 015A  			MOV		INST,A
0001F8: 40CB  			CALL	STATUS_CLEAR
0001F9: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
0001FA: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
0001FB: 3803  			JBS		C			; Check C = 1?
0001FC: 506C  			JMP	INS_FAIL
0001FD: 3903  			JBS		DC			; Check DC = 1?
0001FE: 506C  			JMP	INS_FAIL
0001FF: 3A03  			JBS		Z			; Check Z = 1?
000200: 506C  			JMP	INS_FAIL
000201: 3503  			JBC		OV			; Check OV = 0?
000202: 506C  			JMP	INS_FAIL
000203: 3603  			JBC		N			; Check N = 0?
000204: 506C  			JMP	INS_FAIL
000205: 6C00  			XOR		A,@0x00		; Check Result ?
000206: 40CE  			CALL	INST_XOR_JUDGE
000207: 40CB  			CALL	STATUS_CLEAR
000208: 607F  			MOV		A,@0x7F		; 0x00-0x7F
000209: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
00020A: 3003  			JBC		C			; Check C = 0?
00020B: 506C  			JMP	INS_FAIL
00020C: 3103  			JBC		DC			; Check DC = 0?
00020D: 506C  			JMP	INS_FAIL
00020E: 3203  			JBC		Z			; Check Z = 0?
00020F: 506C  			JMP	INS_FAIL
000210: 3503  			JBC		OV			; Check OV = 0?
000211: 506C  			JMP	INS_FAIL
000212: 3E03  			JBS		N			; Check N = 1?
000213: 506C  			JMP	INS_FAIL
000214: 6C81  			XOR		A,@0x81		; Check Result ?
000215: 40CE  			CALL	INST_XOR_JUDGE
000216: 40CB  			CALL	STATUS_CLEAR
000217: 6001  			MOV		A,@0x01		; 0x80-0x01
000218: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
000219: 3803  			JBS		C			; Check C = 1?
00021A: 506C  			JMP	INS_FAIL
00021B: 3103  			JBC		DC			; Check DC = 0?
00021C: 506C  			JMP	INS_FAIL
00021D: 3203  			JBC		Z			; Check Z = 0?
00021E: 506C  			JMP	INS_FAIL
00021F: 3D03  			JBS		OV			; Check OV = 1?
000220: 506C  			JMP	INS_FAIL
000221: 3603  			JBC		N			; Check N = 0?
000222: 506C  			JMP	INS_FAIL
000223: 6C7F  			XOR		A,@0x7F		; Check Result ?
000224: 40CE  			CALL	INST_XOR_JUDGE
000225: 6031  			MOV		A,@0x31
000226: 015A  			MOV		INST,A
000227: 40CB  			CALL	STATUS_CLEAR
000228: 2003  			BC		C			; B = 1
000229: 6000  			MOV		A,@0x00		;0x00-0xF
00022A: 0150  			MOV		0x50,A		; [0x50] = 0x00
00022B: 60FF  			MOV		A,@0xFF		; A = 0x01
00022C: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00022D: 3003  			JBC		C			; Check C = 0?
00022E: 506C  			JMP	INS_FAIL
00022F: 3103  			JBC		DC			; Check DC = 0?
000230: 506C  			JMP	INS_FAIL
000231: 3A03  			JBS		Z			; Check Z = 1?
000232: 506C  			JMP	INS_FAIL
000233: 3503  			JBC		OV			; Check OV = 0?
000234: 506C  			JMP	INS_FAIL
000235: 3603  			JBC		N			; Check N = 0?
000236: 506C  			JMP	INS_FAIL
000237: 6C00  			XOR		A,@0x00		; Check Result ?
000238: 40CE  			CALL	INST_XOR_JUDGE	
000239: 40CB  			CALL	STATUS_CLEAR
00023A: 2003  			BC		C			; B = 1
00023B: 6000  			MOV		A,@0x00		; 0x00-0x7F
00023C: 0150  			MOV		0x50,A		; [0x50] = 0x00
00023D: 607F  			MOV		A,@0x7F		; A = 0x01
00023E: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00023F: 3003  			JBC		C			; Check C = 0?
000240: 506C  			JMP	INS_FAIL
000241: 3103  			JBC		DC			; Check DC = 0?
000242: 506C  			JMP	INS_FAIL
000243: 3203  			JBC		Z			; Check Z = 0?
000244: 506C  			JMP	INS_FAIL
000245: 3503  			JBC		OV			; Check OV = 0?
000246: 506C  			JMP	INS_FAIL
000247: 3E03  			JBS		N			; Check N = 1?
000248: 506C  			JMP	INS_FAIL
000249: 6C80  			XOR		A,@0x80		; Check Result ?
00024A: 40CE  			CALL	INST_XOR_JUDGE
00024B: 40CB  			CALL	STATUS_CLEAR
00024C: 2003  			BC		C			; B = 1
00024D: 6080  			MOV		A,@0x80		; 0x80-0x01
00024E: 0150  			MOV		0x50,A		; [0x50] = 0x80
00024F: 6001  			MOV		A,@0x01		; A = 0x01
000250: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000251: 3803  			JBS		C			; Check C = 1?
000252: 506C  			JMP	INS_FAIL
000253: 3103  			JBC		DC			; Check DC = 0?
000254: 506C  			JMP	INS_FAIL
000255: 3203  			JBC		Z			; Check Z = 0?
000256: 506C  			JMP	INS_FAIL
000257: 3D03  			JBS		OV			; Check OV = 1?
000258: 506C  			JMP	INS_FAIL
000259: 3603  			JBC		N			; Check N = 0?
00025A: 506C  			JMP	INS_FAIL
00025B: 6C7E  			XOR		A,@0x7E		; Check Result ?
00025C: 40CE  			CALL	INST_XOR_JUDGE
00025D: 6032  			MOV		A,@0x32
00025E: 015A  			MOV		INST,A
00025F: 40CB  			CALL	STATUS_CLEAR
000260: 2003  			BC		C			; B = 1
000261: 6000  			MOV		A,@0x00		; 0x00-0xFF
000262: 0150  			MOV		0x50,A		; [0x50] = 0x00
000263: 60FF  			MOV		A,@0xFF
000264: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000265: 1003  			MOV		A,STATUS
000266: 6C1C  			XOR		A,@0x1C		; Check Status ?
000267: 40CE  			CALL	INST_XOR_JUDGE
000268: 1050  			MOV		A,0x50
000269: 6C00  			XOR		A,@0x00		; Check Result ?
00026A: 40CE  			CALL	INST_XOR_JUDGE
00026B: 40CB  			CALL	STATUS_CLEAR
00026C: 2003  			BC		C			; B = 1
00026D: 6000  			MOV		A,@0x00		; 0x00-0x7F
00026E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00026F: 607F  			MOV		A,@0x7F
000270: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000271: 1003  			MOV		A,STATUS
000272: 6C58  			XOR		A,@0x58		; Check Status ?
000273: 40CE  			CALL	INST_XOR_JUDGE
000274: 1050  			MOV		A,0x50
000275: 6C80  			XOR		A,@0x80		; Check Result ?
000276: 40CE  			CALL	INST_XOR_JUDGE
000277: 40CB  			CALL	STATUS_CLEAR
000278: 2003  			BC		C			; B = 1
000279: 6080  			MOV		A,@0x80		; ,0x80-0x01
00027A: 0150  			MOV		0x50,A		; [0x50] = 0x80
00027B: 6001  			MOV		A,@0x01
00027C: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
00027D: 1003  			MOV		A,STATUS
00027E: 6C39  			XOR		A,@0x39		; Check Status ?
00027F: 40CE  			CALL	INST_XOR_JUDGE
000280: 1050  			MOV		A,0x50
000281: 6C7E  			XOR		A,@0x7E		; Check Result ?
000282: 40CE  			CALL	INST_XOR_JUDGE
000283: 600C  			MOV		A,@0x0C
000284: 015A  			MOV		INST,A
000285: 6000  			MOV		A,@0x00
000286: 0103  			MOV		STATUS,A
000287: 6020  			MOV		A,@0x20		; 0x20-1
000288: 0150  			MOV		0x50,A		; [0x50] = 0x20
000289: 0650  			DECA	0x50		; A = [0x50] - 1
00028A: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00028B: 506C  			JMP	INS_FAIL
00028C: 3103  			JBC		DC			; Check DC = 0?
00028D: 506C  			JMP	INS_FAIL
00028E: 3203  			JBC		Z			; Check Z = 0?
00028F: 506C  			JMP	INS_FAIL
000290: 3503  			JBC		OV			; Check OV = 0?
000291: 506C  			JMP	INS_FAIL
000292: 3603  			JBC		N			; Check N = 0?
000293: 506C  			JMP	INS_FAIL
000294: 6C1F  			XOR		A,@0x1F		; Check Result ?
000295: 3A03  			JBS		Z			; Check Z = 1?
000296: 506C  			JMP	INS_FAIL
000297: 3603  			JBC		N			; Check N = 0?
000298: 506C  			JMP	INS_FAIL
000299: 6000  			MOV		A,@0x00
00029A: 0103  			MOV		STATUS,A
00029B: 6001  			MOV		A,@0x01		; 0x01-1
00029C: 0150  			MOV		0x50,A		; [0x50] = 0x01
00029D: 0650  			DECA	0x50		; A = [0x50] - 1
00029E: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00029F: 506C  			JMP	INS_FAIL
0002A0: 3903  			JBS		DC			; Check DC = 1?
0002A1: 506C  			JMP	INS_FAIL
0002A2: 3A03  			JBS		Z			; Check Z = 1?
0002A3: 506C  			JMP	INS_FAIL
0002A4: 3503  			JBC		OV			; Check OV = 0?
0002A5: 506C  			JMP	INS_FAIL
0002A6: 3603  			JBC		N			; Check N = 0?
0002A7: 506C  			JMP	INS_FAIL
0002A8: 2203  			BC		Z
0002A9: 6C00  			XOR		A,@0x00		; Check Result ?
0002AA: 3A03  			JBS		Z			; Check Z = 1?
0002AB: 506C  			JMP	INS_FAIL
0002AC: 3603  			JBC		N			; Check N = 0?
0002AD: 506C  			JMP	INS_FAIL
0002AE: 6000  			MOV		A,@0x00
0002AF: 0103  			MOV		STATUS,A
0002B0: 6000  			MOV		A,@0x00		; 0x00-1
0002B1: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002B2: 0650  			DECA	0x50		; A = [0x50] - 1
0002B3: 3003  			JBC		C			; Check C = 0?
0002B4: 506C  			JMP	INS_FAIL
0002B5: 3103  			JBC		DC			; Check DC = 0?
0002B6: 506C  			JMP	INS_FAIL
0002B7: 3203  			JBC		Z			; Check Z = 0?
0002B8: 506C  			JMP	INS_FAIL
0002B9: 3503  			JBC		OV			; Check OV = 0?
0002BA: 506C  			JMP	INS_FAIL
0002BB: 3E03  			JBS		N			; Check N = 1?
0002BC: 506C  			JMP	INS_FAIL
0002BD: 2203  			BC		Z
0002BE: 2603  			BC		N
0002BF: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002C0: 3A03  			JBS		Z			; Check Z = 1?
0002C1: 506C  			JMP	INS_FAIL
0002C2: 3603  			JBC		N			; Check N = 0?
0002C3: 506C  			JMP	INS_FAIL
0002C4: 6000  			MOV		A,@0x00
0002C5: 0103  			MOV		STATUS,A
0002C6: 6080  			MOV		A,@0x80		; 0x80-1
0002C7: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002C8: 0650  			DECA	0x50		; A = [0x50] - 1
0002C9: 3803  			JBS		C			; Check C = 1?
0002CA: 506C  			JMP	INS_FAIL
0002CB: 3103  			JBC		DC			; Check DC = 0?
0002CC: 506C  			JMP	INS_FAIL
0002CD: 3203  			JBC		Z			; Check Z = 0?
0002CE: 506C  			JMP	INS_FAIL
0002CF: 3D03  			JBS		OV			; Check OV = 1?
0002D0: 506C  			JMP	INS_FAIL
0002D1: 3603  			JBC		N			; Check N = 0?
0002D2: 506C  			JMP	INS_FAIL
0002D3: 2203  			BC		Z
0002D4: 2603  			BC		N
0002D5: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002D6: 3A03  			JBS		Z			; Check Z = 1?
0002D7: 506C  			JMP	INS_FAIL
0002D8: 3603  			JBC		N			; Check N = 0?
0002D9: 506C  			JMP	INS_FAIL
0002DA: 600D  			MOV		A,@0x0D
0002DB: 015A  			MOV		INST,A
0002DC: 6000  			MOV		A,@0x00
0002DD: 0103  			MOV		STATUS,A
0002DE: 6020  			MOV		A,@0x20		; 0x20-1
0002DF: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002E0: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002E1: 1003  			MOV		A,STATUS
0002E2: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002E3: 3A03  			JBS		Z			; Check Z = 1?
0002E4: 506C  			JMP	INS_FAIL
0002E5: 3603  			JBC		N			; Check N = 0?
0002E6: 506C  			JMP	INS_FAIL
0002E7: 2203  			BC		Z
0002E8: 1050  			MOV		A,0x50
0002E9: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002EA: 3A03  			JBS		Z			; Check Z = 1?
0002EB: 506C  			JMP	INS_FAIL
0002EC: 3603  			JBC		N			; Check N = 0?
0002ED: 506C  			JMP	INS_FAIL
0002EE: 6000  			MOV		A,@0x00
0002EF: 0103  			MOV		STATUS,A
0002F0: 6001  			MOV		A,@0x01		; 0x01-1
0002F1: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002F2: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002F3: 1003  			MOV		A,STATUS
0002F4: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
0002F5: 3A03  			JBS		Z			; Check Z = 1?
0002F6: 506C  			JMP	INS_FAIL
0002F7: 3603  			JBC		N			; Check N = 0?
0002F8: 506C  			JMP	INS_FAIL
0002F9: 2203  			BC		Z
0002FA: 1050  			MOV		A,0x50
0002FB: 6C00  			XOR		A,@0x00		; Check Result ?
0002FC: 3A03  			JBS		Z			; Check Z = 1?
0002FD: 506C  			JMP	INS_FAIL
0002FE: 3603  			JBC		N			; Check N = 0?
0002FF: 506C  			JMP	INS_FAIL
000300: 6000  			MOV		A,@0x00
000301: 0103  			MOV		STATUS,A
000302: 6000  			MOV		A,@0x00		; 0x00-1
000303: 0150  			MOV		0x50,A		; [0x50] = 0x00
000304: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000305: 1003  			MOV		A,STATUS
000306: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000307: 3A03  			JBS		Z			; Check Z = 1?
000308: 506C  			JMP	INS_FAIL
000309: 3603  			JBC		N			; Check N = 0?
00030A: 506C  			JMP	INS_FAIL
00030B: 2203  			BC		Z
00030C: 1050  			MOV		A,0x50
00030D: 6CFF  			XOR		A,@0xFF		; Check Result ?
00030E: 3A03  			JBS		Z			; Check Z = 1?
00030F: 506C  			JMP	INS_FAIL
000310: 3603  			JBC		N			; Check N = 0?
000311: 506C  			JMP	INS_FAIL
000312: 6000  			MOV		A,@0x00
000313: 0103  			MOV		STATUS,A
000314: 6080  			MOV		A,@0x80		; 0x80-1
000315: 0150  			MOV		0x50,A		; [0x50] = 0x80
000316: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000317: 1003  			MOV		A,STATUS
000318: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
000319: 3A03  			JBS		Z			; Check Z = 1?
00031A: 506C  			JMP	INS_FAIL
00031B: 3603  			JBC		N			; Check N = 0?
00031C: 506C  			JMP	INS_FAIL
00031D: 2203  			BC		Z
00031E: 1050  			MOV		A,0x50
00031F: 6C7F  			XOR		A,@0x7F		; Check Result ?
000320: 3A03  			JBS		Z			; Check Z = 1?
000321: 506C  			JMP	INS_FAIL
000322: 3603  			JBC		N			; Check N = 0?
000323: 506C  			JMP	INS_FAIL
000324: 6012  			MOV		A,@0x12
000325: 015A  			MOV		INST,A
000326: 40CB  			CALL	STATUS_CLEAR	; 0x80+0x7F
000327: 6080  			MOV		A,@0x80
000328: 0150  			MOV		0x50,A		; [0x50] = 0x80
000329: 607F  			MOV		A,@0x7F		; 
00032A: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
00032B: 3003  			JBC		C			; Check C = 0?
00032C: 506C  			JMP	INS_FAIL
00032D: 3103  			JBC		DC			; Check DC = 0?
00032E: 506C  			JMP	INS_FAIL
00032F: 3203  			JBC		Z			; Check Z = 0?
000330: 506C  			JMP	INS_FAIL
000331: 3503  			JBC		OV			; Check OV = 0?
000332: 506C  			JMP	INS_FAIL
000333: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000334: 506C  			JMP	INS_FAIL
000335: 2203  			BC		Z
000336: 2603  			BC		N
000337: 6CFF  			XOR		A,@0xFF		; Check Result ?
000338: 3A03  			JBS		Z			; Check Z = 1?
000339: 506C  			JMP	INS_FAIL
00033A: 3603  			JBC		N			; Check N = 0?
00033B: 506C  			JMP	INS_FAIL
00033C: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
00033D: 60FF  			MOV		A,@0xFF
00033E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00033F: 6001  			MOV		A,@0x01		; 
000340: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
000341: 3803  			JBS		C			; Check C = 1?
000342: 506C  			JMP	INS_FAIL
000343: 3903  			JBS		DC			; Check DC = 1?
000344: 506C  			JMP	INS_FAIL
000345: 3A03  			JBS		Z			; Check Z = 1?
000346: 506C  			JMP	INS_FAIL
000347: 3503  			JBC		OV			; Check OV = 0?
000348: 506C  			JMP	INS_FAIL
000349: 3603  			JBC		N			; Check N = 0?
00034A: 506C  			JMP	INS_FAIL
00034B: 2203  			BC		Z
00034C: 2603  			BC		N
00034D: 6C00  			XOR		A,@0x00		; Check Result ?
00034E: 3A03  			JBS		Z			; Check Z = 1?
00034F: 506C  			JMP	INS_FAIL
000350: 3603  			JBC		N			; Check N = 0?
000351: 506C  			JMP	INS_FAIL
000352: 40CB  			CALL	STATUS_CLEAR	; 0x7F+0x01
000353: 607F  			MOV		A,@0x7F
000354: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000355: 6001  			MOV		A,@0x01		; 
000356: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
000357: 3003  			JBC		C			; Check C = 0?
000358: 506C  			JMP	INS_FAIL
000359: 3903  			JBS		DC			; Check DC = 1?
00035A: 506C  			JMP	INS_FAIL
00035B: 3203  			JBC		Z			; Check Z = 0?
00035C: 506C  			JMP	INS_FAIL
00035D: 3D03  			JBS		OV			; Check OV = 1?
00035E: 506C  			JMP	INS_FAIL
00035F: 3E03  			JBS		N			; Check N = 1?
000360: 506C  			JMP	INS_FAIL
000361: 2203  			BC		Z
000362: 2603  			BC		N
000363: 6C80  			XOR		A,@0x80		; Check Result ?
000364: 3A03  			JBS		Z			; Check Z = 1?
000365: 506C  			JMP	INS_FAIL
000366: 3603  			JBC		N			; Check N = 0?
000367: 506C  			JMP	INS_FAIL
000368: 6013  			MOV		A,@0x13
000369: 015A  			MOV		INST,A
00036A: 40CB  			CALL	STATUS_CLEAR	; 0x80+0x7F
00036B: 6080  			MOV		A,@0x80
00036C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00036D: 607F  			MOV		A,@0x7F		; A = 0x7F
00036E: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00036F: 1003  			MOV		A,STATUS
000370: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000371: 3A03  			JBS		Z			; Check Z = 1?
000372: 506C  			JMP	INS_FAIL
000373: 3603  			JBC		N			; Check N = 0?
000374: 506C  			JMP	INS_FAIL
000375: 1050  			MOV		A,0x50
000376: 6CFF  			XOR		A,@0xFF		; Check Result ?
000377: 3A03  			JBS		Z			; Check Z = 1?
000378: 506C  			JMP	INS_FAIL
000379: 3603  			JBC		N			; Check N = 0?
00037A: 506C  			JMP	INS_FAIL
00037B: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
00037C: 60FF  			MOV		A,@0xFF
00037D: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00037E: 6001  			MOV		A,@0x01		; A = 0x01
00037F: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
000380: 1003  			MOV		A,STATUS
000381: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000382: 3A03  			JBS		Z			; Check Z = 1?
000383: 506C  			JMP	INS_FAIL
000384: 3603  			JBC		N			; Check N = 0?
000385: 506C  			JMP	INS_FAIL
000386: 1050  			MOV		A,0x50
000387: 6C00  			XOR		A,@0x00		; Check Result ?
000388: 3A03  			JBS		Z			; Check Z = 1?
000389: 506C  			JMP	INS_FAIL
00038A: 3603  			JBC		N			; Check N = 0?
00038B: 506C  			JMP	INS_FAIL
00038C: 40CB  			CALL	STATUS_CLEAR	;0x7F+0x01
00038D: 607F  			MOV		A,@0x7F
00038E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00038F: 6001  			MOV		A,@0x01		; A = 0x01
000390: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
000391: 1003  			MOV		A,STATUS
000392: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
000393: 3A03  			JBS		Z			; Check Z = 1?
000394: 506C  			JMP	INS_FAIL
000395: 3603  			JBC		N			; Check N = 0?
000396: 506C  			JMP	INS_FAIL
000397: 1050  			MOV		A,0x50
000398: 6C80  			XOR		A,@0x80		; Check Result ?
000399: 3A03  			JBS		Z			; Check Z = 1?
00039A: 506C  			JMP	INS_FAIL
00039B: 3603  			JBC		N			; Check N = 0?
00039C: 506C  			JMP	INS_FAIL
00039D: 6034  			MOV		A,@0x34
00039E: 015A  			MOV		INST,A
00039F: 40CB  			CALL	STATUS_CLEAR
0003A0: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003A1: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003A2: 3003  			JBC		C			; Check C = 0?
0003A3: 506C  			JMP	INS_FAIL
0003A4: 3903  			JBS		DC			; Check DC = 1?
0003A5: 506C  			JMP	INS_FAIL
0003A6: 3203  			JBC		Z			; Check Z = 0?
0003A7: 506C  			JMP	INS_FAIL
0003A8: 3D03  			JBS		OV			; Check OV = 1?
0003A9: 506C  			JMP	INS_FAIL
0003AA: 3E03  			JBS		N			; Check N = 1?
0003AB: 506C  			JMP	INS_FAIL
0003AC: 6C80  			XOR		A,@0x80		; Check Result ?
0003AD: 40CE  			CALL	INST_XOR_JUDGE
0003AE: 40CB  			CALL	STATUS_CLEAR
0003AF: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003B0: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003B1: 3803  			JBS		C			; Check C = 1?
0003B2: 506C  			JMP	INS_FAIL
0003B3: 3903  			JBS		DC			; Check DC = 1?
0003B4: 506C  			JMP	INS_FAIL
0003B5: 3A03  			JBS		Z			; Check Z = 1?
0003B6: 506C  			JMP	INS_FAIL
0003B7: 3503  			JBC		OV			; Check OV = 0?
0003B8: 506C  			JMP	INS_FAIL
0003B9: 3603  			JBC		N			; Check N = 0?
0003BA: 506C  			JMP	INS_FAIL
0003BB: 6C00  			XOR		A,@0x00		; Check Result ?
0003BC: 40CE  			CALL	INST_XOR_JUDGE
0003BD: 40CB  			CALL	STATUS_CLEAR
0003BE: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003BF: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003C0: 3003  			JBC		C			; Check C = 0?
0003C1: 506C  			JMP	INS_FAIL
0003C2: 3103  			JBC		DC			; Check DC = 0?
0003C3: 506C  			JMP	INS_FAIL
0003C4: 3203  			JBC		Z			; Check Z = 0?
0003C5: 506C  			JMP	INS_FAIL
0003C6: 3503  			JBC		OV			; Check OV = 0?
0003C7: 506C  			JMP	INS_FAIL
0003C8: 3E03  			JBS		N			; Check N = 1?
0003C9: 506C  			JMP	INS_FAIL
0003CA: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003CB: 40CE  			CALL	INST_XOR_JUDGE
0003CC: 6036  			MOV		A,@0x36
0003CD: 015A  			MOV		INST,A
0003CE: 40CB  			CALL	STATUS_CLEAR
0003CF: 2803  			BS		C			; 0x7F+0x00
0003D0: 607F  			MOV		A,@0x7F		
0003D1: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003D2: 6000  			MOV		A,@0x00		; A = 0x00
0003D3: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003D4: 3003  			JBC		C			; Check C = 0?
0003D5: 506C  			JMP	INS_FAIL
0003D6: 3903  			JBS		DC			; Check DC = 1?
0003D7: 506C  			JMP	INS_FAIL
0003D8: 3203  			JBC		Z			; Check Z = 0?
0003D9: 506C  			JMP	INS_FAIL
0003DA: 3D03  			JBS		OV			; Check OV = 1?
0003DB: 506C  			JMP	INS_FAIL
0003DC: 3E03  			JBS		N			; Check N = 1?
0003DD: 506C  			JMP	INS_FAIL
0003DE: 6C80  			XOR		A,@0x80		; Check Result ?
0003DF: 40CE  			CALL	INST_XOR_JUDGE
0003E0: 40CB  			CALL	STATUS_CLEAR
0003E1: 2803  			BS		C			; 0x80+0x7F
0003E2: 6080  			MOV		A,@0x80
0003E3: 0150  			MOV		0x50,A		; [0x50] = 0x80
0003E4: 607F  			MOV		A,@0x7F		; A = 0x7F
0003E5: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003E6: 3803  			JBS		C			; Check C = 1?
0003E7: 506C  			JMP	INS_FAIL
0003E8: 3903  			JBS		DC			; Check DC = 1?
0003E9: 506C  			JMP	INS_FAIL
0003EA: 3A03  			JBS		Z			; Check Z = 1?
0003EB: 506C  			JMP	INS_FAIL
0003EC: 3503  			JBC		OV			; Check OV = 0?
0003ED: 506C  			JMP	INS_FAIL
0003EE: 3603  			JBC		N			; Check N = 0?
0003EF: 506C  			JMP	INS_FAIL
0003F0: 6C00  			XOR		A,@0x00		; Check Result ?
0003F1: 40CE  			CALL	INST_XOR_JUDGE
0003F2: 6037  			MOV		A,@0x37
0003F3: 015A  			MOV		INST,A
0003F4: 40CB  			CALL	STATUS_CLEAR
0003F5: 2803  			BS		C			;0x7F+0x00
0003F6: 607F  			MOV		A,@0x7F
0003F7: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003F8: 6000  			MOV		A,@0x00		; A = 0x00
0003F9: 2203  			BC		Z
0003FA: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
0003FB: 1003  			MOV		A,STATUS
0003FC: 6C7A  			XOR		A,@0x7A		; Check Status ?
0003FD: 40CE  			CALL	INST_XOR_JUDGE
0003FE: 1050  			MOV		A,0x50
0003FF: 6C80  			XOR		A,@0x80		; Check Result ?
000400: 40CE  			CALL	INST_XOR_JUDGE
000401: 40CB  			CALL	STATUS_CLEAR
000402: 2803  			BS		C			;0x80+0x7F
000403: 6080  			MOV		A,@0x80
000404: 0150  			MOV		0x50,A		; [0x50] = 0x80
000405: 607F  			MOV		A,@0x7F		; A = 0x7F
000406: 2203  			BC		Z
000407: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000408: 1003  			MOV		A,STATUS
000409: 6C1F  			XOR		A,@0x1F		; Check Status ?
00040A: 40CE  			CALL	INST_XOR_JUDGE
00040B: 1050  			MOV		A,0x50
00040C: 6C00  			XOR		A,@0x00		; Check Result ?
00040D: 40CE  			CALL	INST_XOR_JUDGE
00040E: 6017  			MOV		A,@0x17
00040F: 015A  			MOV		INST,A
000410: 40CB  			CALL	STATUS_CLEAR	; 0x7F+0x01
000411: 607F  			MOV		A,@0x7F
000412: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000413: 1450  			INCA	0x50		; A = [0x50] +1		
000414: 3003  			JBC		C			; Check C = 0?
000415: 506C  			JMP	INS_FAIL
000416: 3903  			JBS		DC			; Check DC = 1?
000417: 506C  			JMP	INS_FAIL
000418: 3203  			JBC		Z			; Check Z = 0?
000419: 506C  			JMP	INS_FAIL
00041A: 3D03  			JBS		OV			; Check OV = 1?
00041B: 506C  			JMP	INS_FAIL
00041C: 3E03  			JBS		N			; Check N = 1?
00041D: 506C  			JMP	INS_FAIL
00041E: 2203  			BC		Z
00041F: 2603  			BC		N
000420: 6C80  			XOR		A,@0x80		; Check Result ?
000421: 3A03  			JBS		Z			; Check Z = 1?
000422: 506C  			JMP	INS_FAIL
000423: 3603  			JBC		N			; Check N = 0?
000424: 506C  			JMP	INS_FAIL
000425: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
000426: 60FF  			MOV		A,@0xFF
000427: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000428: 1450  			INCA	0x50		; A = [0x50] +1		
000429: 3803  			JBS		C			; Check C = 1?
00042A: 506C  			JMP	INS_FAIL
00042B: 3903  			JBS		DC			; Check DC = 1?
00042C: 506C  			JMP	INS_FAIL
00042D: 3A03  			JBS		Z			; Check Z = 1?
00042E: 506C  			JMP	INS_FAIL
00042F: 3503  			JBC		OV			; Check OV = 0?
000430: 506C  			JMP	INS_FAIL
000431: 3603  			JBC		N			; Check N = 0?
000432: 506C  			JMP	INS_FAIL
000433: 2203  			BC		Z
000434: 2603  			BC		N
000435: 6C00  			XOR		A,@0x00		; Check Result ?
000436: 3A03  			JBS		Z			; Check Z = 1?
000437: 506C  			JMP	INS_FAIL
000438: 3603  			JBC		N			; Check N = 0?
000439: 506C  			JMP	INS_FAIL
00043A: 6018  			MOV		A,@0x18
00043B: 015A  			MOV		INST,A
00043C: 40CB  			CALL 	STATUS_CLEAR	; 0x7F+0x01
00043D: 607F  			MOV		A,@0x7F
00043E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00043F: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000440: 1003  			MOV		A,STATUS
000441: 6C7A  			XOR		A,@0x7A		; Check Status ?
000442: 3A03  			JBS		Z			; Check Z = 1?
000443: 506C  			JMP	INS_FAIL
000444: 3603  			JBC		N			; Check N = 0?
000445: 506C  			JMP	INS_FAIL
000446: 1050  			MOV		A,0x50
000447: 6C80  			XOR		A,@0x80		; Check Result ?
000448: 3A03  			JBS		Z			; Check Z = 1?
000449: 506C  			JMP	INS_FAIL
00044A: 3603  			JBC		N			; Check N = 0?
00044B: 506C  			JMP	INS_FAIL
00044C: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
00044D: 60FF  			MOV		A,@0xFF
00044E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00044F: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000450: 1003  			MOV		A,STATUS
000451: 6C1F  			XOR		A,@0x1F		; Check Status ?
000452: 3A03  			JBS		Z			; Check Z = 1?
000453: 506C  			JMP	INS_FAIL
000454: 3603  			JBC		N			; Check N = 0?
000455: 506C  			JMP	INS_FAIL
000456: 1050  			MOV		A,0x50
000457: 6C00  			XOR		A,@0x00		; Check Result ?
000458: 3A03  			JBS		Z			; Check Z = 1?
000459: 506C  			JMP	INS_FAIL
00045A: 3603  			JBC		N			; Check N = 0?
00045B: 506C  			JMP	INS_FAIL
00045C: 6035  			MOV		A,@0x35
00045D: 015A  			MOV		INST,A
00045E: 40CB  			CALL	STATUS_CLEAR
00045F: 6000  			MOV		A,@0x00		; 0x00
000460: 0150  			MOV		0x50,A		; [0x50] = 0x00
000461: 7D50  			NEG		0x50
000462: 1003  			MOV		A,STATUS
000463: 6C1F  			XOR		A,@0x1F		; Check Status ?
000464: 40CE  			CALL	INST_XOR_JUDGE
000465: 1050  			MOV		A,0x50
000466: 6C00  			XOR		A,@0x00		; Check Result ?
000467: 40CE  			CALL	INST_XOR_JUDGE
000468: 40CB  			CALL	STATUS_CLEAR
000469: 6001  			MOV		A,@0x01		; 0x01
00046A: 0150  			MOV		0x50,A		; [0x50] = 0x01
00046B: 7D50  			NEG		0x50
00046C: 1003  			MOV		A,STATUS
00046D: 6C58  			XOR		A,@0x58		; Check Status ?
00046E: 40CE  			CALL	INST_XOR_JUDGE
00046F: 1050  			MOV		A,0x50
000470: 6CFF  			XOR		A,@0xFF		; Check Result ?
000471: 4664  			CALL	INST_XCH
000472: 40CB  			CALL	STATUS_CLEAR
000473: 6080  			MOV		A,@0x80		; 0x80
000474: 0150  			MOV		0x50,A		; [0x50] = 0x80
000475: 7D50  			NEG		0x50
000476: 1003  			MOV		A,STATUS
000477: 6C7A  			XOR		A,@0x7A		; Check Status ?
000478: 40CE  			CALL	INST_XOR_JUDGE
000479: 1050  			MOV		A,0x50
00047A: 6C80  			XOR		A,@0x80		; Check Result ?
00047B: 40CE  			CALL	INST_XOR_JUDGE
00047C: 0012  		RET
00047D: 6006  			MOV		A,@0x06
00047E: 015A  			MOV		INST,A
00047F: 40CB  			CALL	STATUS_CLEAR
000480: 60FF  			MOV		A,@0xFF
000481: 0104  			MOV		RSR,A		; Start Address
000482: 0084  			BTG		RSR
000483: 1004  			MOV		A,RSR
000484: 6CFE  			XOR		A,@0xFE		; Check Result ?
000485: 40CE  			CALL	INST_XOR_JUDGE
000486: 600E  			MOV		A,@0x0E
000487: 015A  			MOV		INST,A
000488: 6000  			MOV		A,@0x00
000489: 0103  			MOV		STATUS,A
00048A: 6000  			MOV		A,@0x00
00048B: 0150  			MOV		0x50,A		; [0x50] = 0x00
00048C: 6000  			MOV		A,@0x00
00048D: 2203  			BC		Z
00048E: 0850  			OR		A,0x50		; A = A | [0x50]
00048F: 3003  			JBC		C			; Check C = 0?
000490: 506C  			JMP	INS_FAIL
000491: 3103  			JBC		DC			; Check DC = 0?
000492: 506C  			JMP	INS_FAIL
000493: 3A03  			JBS		Z			; Check Z = 1?
000494: 506C  			JMP	INS_FAIL
000495: 3503  			JBC		OV			; Check OV = 0?
000496: 506C  			JMP	INS_FAIL
000497: 3603  			JBC		N			; Check N = 0?
000498: 506C  			JMP	INS_FAIL
000499: 2203  			BC		Z
00049A: 6C00  			XOR		A,@0x00		; Check Result ?
00049B: 3A03  			JBS		Z			; Check Z = 1?
00049C: 506C  			JMP	INS_FAIL
00049D: 3603  			JBC		N			; Check N = 0?
00049E: 506C  			JMP	INS_FAIL
00049F: 6000  			MOV		A,@0x00
0004A0: 0103  			MOV		STATUS,A
0004A1: 6055  			MOV		A,@0x55
0004A2: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004A3: 60AA  			MOV		A,@0xAA
0004A4: 2203  			BC		Z
0004A5: 0850  			OR		A,0x50		; A = A | [0x50]
0004A6: 3003  			JBC		C			; Check C = 0?
0004A7: 506C  			JMP	INS_FAIL
0004A8: 3103  			JBC		DC			; Check DC = 0?
0004A9: 506C  			JMP	INS_FAIL
0004AA: 3203  			JBC		Z			; Check Z = 0?
0004AB: 506C  			JMP	INS_FAIL
0004AC: 3503  			JBC		OV			; Check OV = 0?
0004AD: 506C  			JMP	INS_FAIL
0004AE: 3E03  			JBS		N			; Check N = 1?
0004AF: 506C  			JMP	INS_FAIL
0004B0: 2203  			BC		Z
0004B1: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004B2: 3A03  			JBS		Z			; Check Z = 1?
0004B3: 506C  			JMP	INS_FAIL
0004B4: 3603  			JBC		N			; Check N = 0?
0004B5: 506C  			JMP	INS_FAIL
0004B6: 600F  			MOV		A,@0x0F
0004B7: 015A  			MOV		INST,A
0004B8: 6000  			MOV		A,@0x00
0004B9: 0103  			MOV		STATUS,A
0004BA: 6000  			MOV		A,@0x00
0004BB: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004BC: 6000  			MOV		A,@0x00		; A = 0x00
0004BD: 2203  			BC		Z
0004BE: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0004BF: 1003  			MOV		A,STATUS
0004C0: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004C1: 3A03  			JBS		Z			; Check Z = 1?
0004C2: 506C  			JMP	INS_FAIL
0004C3: 3603  			JBC		N			; Check N = 0?
0004C4: 506C  			JMP	INS_FAIL
0004C5: 1050  			MOV		A,0x50		; A = Result[0x50]
0004C6: 2203  			BC		Z
0004C7: 2603  			BC		N
0004C8: 6C00  			XOR		A,@0x00		; Check Result ?
0004C9: 3A03  			JBS		Z			; Check Z = 1?
0004CA: 506C  			JMP	INS_FAIL
0004CB: 3603  			JBC		N			; Check N = 0?
0004CC: 506C  			JMP	INS_FAIL
0004CD: 6000  			MOV		A,@0x00
0004CE: 0103  			MOV		STATUS,A
0004CF: 6055  			MOV		A,@0x55
0004D0: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004D1: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004D2: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004D3: 1003  			MOV		A,STATUS
0004D4: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004D5: 3A03  			JBS		Z			; Check Z = 1?
0004D6: 506C  			JMP	INS_FAIL
0004D7: 3603  			JBC		N			; Check N = 0?
0004D8: 506C  			JMP	INS_FAIL
0004D9: 1050  			MOV		A,0x50
0004DA: 2203  			BC		Z
0004DB: 2603  			BC		N
0004DC: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004DD: 3A03  			JBS		Z			; Check Z = 1?
0004DE: 506C  			JMP	INS_FAIL
0004DF: 3603  			JBC		N			; Check N = 0?
0004E0: 506C  			JMP	INS_FAIL
0004E1: 6010  			MOV		A,@0x10
0004E2: 015A  			MOV		INST,A
0004E3: 40CB  			CALL	STATUS_CLEAR
0004E4: 6055  			MOV		A,@0x55
0004E5: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004E6: 60AA  			MOV		A,@0xAA
0004E7: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
0004E8: 3003  			JBC		C			; Check C = 0?
0004E9: 506C  			JMP	INS_FAIL
0004EA: 3103  			JBC		DC			; Check DC = 0?
0004EB: 506C  			JMP	INS_FAIL
0004EC: 3A03  			JBS		Z			; Check Z = 1?
0004ED: 506C  			JMP	INS_FAIL
0004EE: 3503  			JBC		OV			; Check OV = 0?
0004EF: 506C  			JMP	INS_FAIL
0004F0: 3603  			JBC		N			; Check N = 0?
0004F1: 506C  			JMP	INS_FAIL
0004F2: 6C00  			XOR		A,@0x00		; Check Result ?
0004F3: 3A03  			JBS		Z			; Check Z = 1?
0004F4: 506C  			JMP	INS_FAIL
0004F5: 3603  			JBC		N			; Check N = 0?
0004F6: 506C  			JMP	INS_FAIL
0004F7: 40CB  			CALL	STATUS_CLEAR
0004F8: 60F5  			MOV		A,@0xF5
0004F9: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0004FA: 60FA  			MOV		A,@0xFA
0004FB: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
0004FC: 3003  			JBC		C			; Check C = 0?
0004FD: 506C  			JMP	INS_FAIL
0004FE: 3103  			JBC		DC			; Check DC = 0?
0004FF: 506C  			JMP	INS_FAIL
000500: 3203  			JBC		Z			; Check Z = 0?
000501: 506C  			JMP	INS_FAIL
000502: 3503  			JBC		OV			; Check OV = 0?
000503: 506C  			JMP	INS_FAIL
000504: 3E03  			JBS		N			; Check N = 1?
000505: 506C  			JMP	INS_FAIL
000506: 6CF0  			XOR		A,@0xF0		; Check Result ?
000507: 3A03  			JBS		Z			; Check Z = 1?
000508: 506C  			JMP	INS_FAIL
000509: 3603  			JBC		N			; Check N = 0?
00050A: 506C  			JMP	INS_FAIL
00050B: 6011  			MOV		A,@0x11
00050C: 015A  			MOV		INST,A
00050D: 40CB  			CALL	STATUS_CLEAR
00050E: 6055  			MOV		A,@0x55
00050F: 0150  			MOV		0x50,A		; [0x50] = 0x55
000510: 60AA  			MOV		A,@0xAA
000511: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
000512: 1003  			MOV		A,STATUS
000513: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
000514: 3A03  			JBS		Z			; Check Z = 1?
000515: 506C  			JMP	INS_FAIL
000516: 3603  			JBC		N			; Check N = 0?
000517: 506C  			JMP	INS_FAIL
000518: 2203  			BC		Z
000519: 1050  			MOV		A,0x50
00051A: 2203  			BC		Z
00051B: 6C00  			XOR		A,@0x00		; Check Result ?
00051C: 3A03  			JBS		Z			; Check Z = 1?
00051D: 506C  			JMP	INS_FAIL
00051E: 3603  			JBC		N			; Check N = 0?
00051F: 506C  			JMP	INS_FAIL
000520: 40CB  			CALL	STATUS_CLEAR
000521: 60F5  			MOV		A,@0xF5
000522: 0150  			MOV		0x50,A		; [0x50] = 0xF5
000523: 60FA  			MOV		A,@0xFA
000524: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
000525: 1003  			MOV		A,STATUS
000526: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000527: 3A03  			JBS		Z			; Check Z = 1?
000528: 506C  			JMP	INS_FAIL
000529: 3603  			JBC		N			; Check N = 0?
00052A: 506C  			JMP	INS_FAIL
00052B: 2203  			BC		Z
00052C: 1050  			MOV		A,0x50
00052D: 2203  			BC		Z
00052E: 6CF0  			XOR		A,@0xF0		; Check Result ?
00052F: 3A03  			JBS		Z			; Check Z = 1?
000530: 506C  			JMP	INS_FAIL
000531: 3603  			JBC		N			; Check N = 0?
000532: 506C  			JMP	INS_FAIL
000533: 6029  			MOV		A,@0x29
000534: 015A  			MOV		INST,A
000535: 40CB  			CALL	STATUS_CLEAR
000536: 60AA  			MOV		A,@0xAA
000537: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
000538: 3003  			JBC		C			; Check C = 0?
000539: 506C  			JMP	INS_FAIL
00053A: 3103  			JBC		DC			; Check DC = 0?
00053B: 506C  			JMP	INS_FAIL
00053C: 3A03  			JBS		Z			; Check Z = 1?
00053D: 506C  			JMP	INS_FAIL
00053E: 3503  			JBC		OV			; Check OV = 0?
00053F: 506C  			JMP	INS_FAIL
000540: 3603  			JBC		N			; Check N = 0?
000541: 506C  			JMP	INS_FAIL
000542: 6C00  			XOR		A,@0x00		; Check Result ?
000543: 3A03  			JBS		Z			; Check Z = 1?
000544: 506C  			JMP	INS_FAIL
000545: 3603  			JBC		N			; Check N = 0?
000546: 506C  			JMP	INS_FAIL
000547: 40CB  			CALL	STATUS_CLEAR
000548: 60AA  			MOV		A,@0xAA
000549: 68FF  			AND		A,@0xFF		; A = A & 0xFF
00054A: 3003  			JBC		C			; Check C = 0?
00054B: 506C  			JMP	INS_FAIL
00054C: 3103  			JBC		DC			; Check DC = 0?
00054D: 506C  			JMP	INS_FAIL
00054E: 3203  			JBC		Z			; Check Z = 0?
00054F: 506C  			JMP	INS_FAIL
000550: 3503  			JBC		OV			; Check OV = 0?
000551: 506C  			JMP	INS_FAIL
000552: 3E03  			JBS		N			; Check N = 1?
000553: 506C  			JMP	INS_FAIL
000554: 6CAA  			XOR		A,@0xAA		; Check Result ?
000555: 40CE  			CALL	INST_XOR_JUDGE
000556: 6015  			MOV		A,@0x15
000557: 015A  			MOV		INST,A
000558: 40CB  			CALL	STATUS_CLEAR
000559: 60FF  			MOV		A,@0xFF
00055A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00055B: 1250  			COMA	0x50		; A = /R
00055C: 3003  			JBC		C			; Check C = 0?
00055D: 506C  			JMP	INS_FAIL
00055E: 3103  			JBC		DC			; Check DC = 0?
00055F: 506C  			JMP	INS_FAIL
000560: 3A03  			JBS		Z			; Check Z = 1?
000561: 506C  			JMP	INS_FAIL
000562: 3503  			JBC		OV			; Check OV = 0?
000563: 506C  			JMP	INS_FAIL
000564: 3603  			JBC		N			; Check N = 0?
000565: 506C  			JMP	INS_FAIL
000566: 6C00  			XOR		A,@0x00		; Check Result ?
000567: 3A03  			JBS		Z			; Check Z = 1?
000568: 506C  			JMP	INS_FAIL
000569: 3603  			JBC		N			; Check N = 0?
00056A: 506C  			JMP	INS_FAIL	
00056B: 40CB  			CALL	STATUS_CLEAR
00056C: 6005  			MOV		A,@0x05
00056D: 0150  			MOV		0x50,A		; [0x50] = 0x05
00056E: 1250  			COMA	0x50		; A = /R
00056F: 3003  			JBC		C			; Check C = 0?
000570: 506C  			JMP	INS_FAIL
000571: 3103  			JBC		DC			; Check DC = 0?
000572: 506C  			JMP	INS_FAIL
000573: 3203  			JBC		Z			; Check Z = 0?
000574: 506C  			JMP	INS_FAIL
000575: 3503  			JBC		OV			; Check OV = 0?
000576: 506C  			JMP	INS_FAIL
000577: 3E03  			JBS		N			; Check N = 1?
000578: 506C  			JMP	INS_FAIL
000579: 6CFA  			XOR		A,@0xFA		; Check Result ?
00057A: 3A03  			JBS		Z			; Check Z = 1?
00057B: 506C  			JMP	INS_FAIL
00057C: 3603  			JBC		N			; Check N = 0?
00057D: 506C  			JMP	INS_FAIL
00057E: 6016  			MOV		A,@0x16
00057F: 015A  			MOV		INST,A
000580: 40CB  			CALL	STATUS_CLEAR
000581: 60FF  			MOV		A,@0xFF
000582: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000583: 1350  			COM		0x50		; [0x50] = /[0x50]
000584: 1003  			MOV		A,STATUS
000585: 6C1C  			XOR		A,@0x1C		; Check Status ?
000586: 3A03  			JBS		Z			; Check Z = 1?
000587: 506C  			JMP	INS_FAIL
000588: 3603  			JBC		N			; Check N = 0?
000589: 506C  			JMP	INS_FAIL
00058A: 2203  			BC		Z
00058B: 2603  			BC		N
00058C: 1050  			MOV		A,0x50
00058D: 6C00  			XOR		A,@0x00		; Check Result ?
00058E: 3A03  			JBS		Z			; Check Z = 1?
00058F: 506C  			JMP	INS_FAIL
000590: 3603  			JBC		N			; Check N = 0?
000591: 506C  			JMP	INS_FAIL
000592: 40CB  			CALL	STATUS_CLEAR
000593: 6000  			MOV		A,@0x00
000594: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000595: 1350  			COM		0x50		; [0x50] = /[0x50]
000596: 1003  			MOV		A,STATUS
000597: 6C58  			XOR		A,@0x58		; Check Status ?
000598: 3A03  			JBS		Z			; Check Z = 1?
000599: 506C  			JMP	INS_FAIL
00059A: 3603  			JBC		N			; Check N = 0?
00059B: 506C  			JMP	INS_FAIL
00059C: 2203  			BC		Z
00059D: 2603  			BC		N
00059E: 1050  			MOV		A,0x50
00059F: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005A0: 3A03  			JBS		Z			; Check Z = 1?
0005A1: 506C  			JMP	INS_FAIL
0005A2: 3603  			JBC		N			; Check N = 0?
0005A3: 506C  			JMP	INS_FAIL
0005A4: 6026  			MOV		A,@0x26
0005A5: 015A  			MOV		INST,A
0005A6: 40CB  			CALL	STATUS_CLEAR
0005A7: 60A5  			MOV		A,@0xA5
0005A8: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
0005A9: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005AA: 40CE  			CALL	INST_XOR_JUDGE
0005AB: 0012  		RET
0005AC: 602B  			MOV		A,@0x2B
0005AD: 015A  			MOV		INST,A
0005AE: 40CB  			CALL	STATUS_CLEAR
0005AF: 6055  			MOV		A,@0x55
0005B0: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005B1: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
0005B2: 1003  			MOV		A,STATUS
0005B3: 6C58  			XOR		A,@0x58		; Check Status ?
0005B4: 40CE  			CALL	INST_XOR_JUDGE
0005B5: 1050  			MOV		A,0x50
0005B6: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005B7: 40CE  			CALL	INST_XOR_JUDGE
0005B8: 602A  			MOV		A,@0x2A
0005B9: 015A  			MOV		INST,A
0005BA: 40CB  			CALL 	STATUS_CLEAR
0005BB: 6055  			MOV		A,@0x55
0005BC: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005BD: 6E50  			RRA		0x50		; A = [0x50] >> 1
0005BE: 3003  			JBC		C			; Check C = 0?
0005BF: 506C  			JMP	INS_FAIL
0005C0: 3103  			JBC		DC			; Check DC = 0?
0005C1: 506C  			JMP	INS_FAIL
0005C2: 3203  			JBC		Z			; Check Z = 0?
0005C3: 506C  			JMP	INS_FAIL
0005C4: 3503  			JBC		OV			; Check OV = 0?
0005C5: 506C  			JMP	INS_FAIL
0005C6: 3E03  			JBS		N			; Check N = 1?
0005C7: 506C  			JMP	INS_FAIL
0005C8: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005C9: 40CE  			CALL	INST_XOR_JUDGE
0005CA: 601B  			MOV		A,@0x1B
0005CB: 015A  			MOV		INST,A
0005CC: 40CB  			CALL	STATUS_CLEAR
0005CD: 2803  			BS		C
0005CE: 60AA  			MOV		A,@0xAA
0005CF: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005D0: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005D1: 3003  			JBC		C			; Check C = 0?
0005D2: 506C  			JMP	INS_FAIL
0005D3: 3103  			JBC		DC			; Check DC = 0?
0005D4: 506C  			JMP	INS_FAIL
0005D5: 3203  			JBC		Z			; Check Z = 0?
0005D6: 506C  			JMP	INS_FAIL
0005D7: 3503  			JBC		OV			; Check OV = 0?
0005D8: 506C  			JMP	INS_FAIL
0005D9: 3E03  			JBS		N			; Check N = 1?
0005DA: 506C  			JMP	INS_FAIL
0005DB: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005DC: 40CE  			CALL	INST_XOR_JUDGE
0005DD: 40CB  			CALL	STATUS_CLEAR
0005DE: 6055  			MOV		A,@0x55
0005DF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005E0: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005E1: 3803  			JBS		C			; Check C = 1?
0005E2: 506C  			JMP	INS_FAIL
0005E3: 3103  			JBC		DC			; Check DC = 0?
0005E4: 506C  			JMP	INS_FAIL
0005E5: 3203  			JBC		Z			; Check Z = 0?
0005E6: 506C  			JMP	INS_FAIL
0005E7: 3503  			JBC		OV			; Check OV = 0?
0005E8: 506C  			JMP	INS_FAIL
0005E9: 3603  			JBC		N			; Check N = 0?
0005EA: 506C  			JMP	INS_FAIL
0005EB: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005EC: 40CE  			CALL	INST_XOR_JUDGE
0005ED: 601C  			MOV		A,@0x1C
0005EE: 015A  			MOV		INST,A
0005EF: 40CB  			CALL	STATUS_CLEAR
0005F0: 2803  			BS		C
0005F1: 60AA  			MOV		A,@0xAA
0005F2: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005F3: 2203  			BC		Z
0005F4: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005F5: 1003  			MOV		A,STATUS
0005F6: 6C58  			XOR		A,@0x58		; Check Status ?
0005F7: 40CE  			CALL	INST_XOR_JUDGE
0005F8: 1050  			MOV		A,0x50
0005F9: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005FA: 40CE  			CALL	INST_XOR_JUDGE
0005FB: 40CB  			CALL	STATUS_CLEAR
0005FC: 6055  			MOV		A,@0x55
0005FD: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005FE: 2203  			BC		Z
0005FF: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
000600: 1003  			MOV		A,STATUS
000601: 6C19  			XOR		A,@0x19		; Check Status ?
000602: 3A03  			JBS		Z			; Check Z = 1?
000603: 506C  			JMP	INS_FAIL
000604: 3603  			JBC		N			; Check N = 0?
000605: 506C  			JMP	INS_FAIL
000606: 1050  			MOV		A,0x50
000607: 6C2A  			XOR		A,@0x2A		; Check Result ?
000608: 40CE  			CALL	INST_XOR_JUDGE
000609: 601D  			MOV		A,@0x1D
00060A: 015A  			MOV		INST,A
00060B: 40CB  			CALL STATUS_CLEAR
00060C: 2803  			BS		C
00060D: 6055  			MOV		A,@0x55
00060E: 0150  			MOV		0x50,A		; [0x50] = 0x55
00060F: 1A50  			RLCA	0x50		; A = [0x50] << 1
000610: 3003  			JBC		C			; Check C = 0?
000611: 506C  			JMP	INS_FAIL
000612: 3103  			JBC		DC			; Check DC = 0?
000613: 506C  			JMP	INS_FAIL
000614: 3203  			JBC		Z			; Check Z = 0?
000615: 506C  			JMP	INS_FAIL
000616: 3503  			JBC		OV			; Check OV = 0?
000617: 506C  			JMP	INS_FAIL
000618: 3E03  			JBS		N			; Check N = 1?
000619: 506C  			JMP	INS_FAIL
00061A: 6CAB  			XOR		A,@0xAB		; Check Result ?
00061B: 40CE  			CALL	INST_XOR_JUDGE
00061C: 40CB  			CALL	STATUS_CLEAR
00061D: 60AA  			MOV		A,@0xAA
00061E: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00061F: 1A50  			RLCA	0x50		; A = [0x50] << 1
000620: 3803  			JBS		C			; Check C = 1?
000621: 506C  			JMP	INS_FAIL
000622: 3103  			JBC		DC			; Check DC = 0?
000623: 506C  			JMP	INS_FAIL
000624: 3203  			JBC		Z			; Check Z = 0?
000625: 506C  			JMP	INS_FAIL
000626: 3503  			JBC		OV			; Check OV = 0?
000627: 506C  			JMP	INS_FAIL
000628: 3603  			JBC		N			; Check N = 0?
000629: 506C  			JMP	INS_FAIL
00062A: 6C54  			XOR		A,@0x54		; Check Result ?
00062B: 40CE  			CALL	INST_XOR_JUDGE
00062C: 601E  			MOV		A,@0x1E
00062D: 015A  			MOV		INST,A
00062E: 40CB  			CALL	STATUS_CLEAR
00062F: 2803  			BS		C
000630: 6055  			MOV		A,@0x55
000631: 0150  			MOV		0x50,A		; [0x50] = 0x55
000632: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000633: 1003  			MOV		A,STATUS
000634: 6C58  			XOR		A,@0x58		; Check Status ?
000635: 40CE  			CALL	INST_XOR_JUDGE
000636: 1050  			MOV		A,0x50
000637: 6CAB  			XOR		A,@0xAB		; Check Result ?
000638: 40CE  			CALL	INST_XOR_JUDGE
000639: 40CB  			CALL	STATUS_CLEAR
00063A: 60AA  			MOV		A,@0xAA
00063B: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00063C: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
00063D: 1003  			MOV		A,STATUS
00063E: 6C19  			XOR		A,@0x19		; Check Status ?
00063F: 40CE  			CALL	INST_XOR_JUDGE
000640: 1050  			MOV		A,0x50
000641: 6C54  			XOR		A,@0x54		; Check Result ?
000642: 40CE  			CALL	INST_XOR_JUDGE
000643: 602E  			MOV		A,@0x2E
000644: 015A  			MOV		INST,A
000645: 40CB  			CALL	STATUS_CLEAR
000646: 605A  			MOV		A,@0x5A
000647: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000648: 7250  			RLA		0x50		; A = [0x50] << 1
000649: 3003  			JBC		C			; Check C = 0?
00064A: 506C  			JMP	INS_FAIL
00064B: 3103  			JBC		DC			; Check DC = 0?
00064C: 506C  			JMP	INS_FAIL
00064D: 3203  			JBC		Z			; Check Z = 0?
00064E: 506C  			JMP	INS_FAIL
00064F: 3503  			JBC		OV			; Check OV = 0?
000650: 506C  			JMP	INS_FAIL
000651: 3E03  			JBS		N			; Check N = 1?
000652: 506C  			JMP	INS_FAIL
000653: 6CB4  			XOR		A,@0xB4		; Check Result ?
000654: 40CE  			CALL	INST_XOR_JUDGE
000655: 602F  			MOV		A,@0x2F
000656: 015A  			MOV		INST,A
000657: 40CB  			CALL	STATUS_CLEAR
000658: 605A  			MOV		A,@0x5A
000659: 0150  			MOV		0x50,A		; [0x50] = 0xA5
00065A: 7350  			RL		0x50		; [0x50] = [0x50] << 1
00065B: 1003  			MOV		A,STATUS
00065C: 6C58  			XOR		A,@0x58		; Check Status ?
00065D: 3A03  			JBS		Z			; Check Z = 1?
00065E: 506C  			JMP	INS_FAIL
00065F: 3603  			JBC		N			; Check N = 0?
000660: 506C  			JMP	INS_FAIL
000661: 1050  			MOV		A,0x50
000662: 6CB4  			XOR		A,@0xB4		; Check Result ?
000663: 40CE  			CALL	INST_XOR_JUDGE
000664: 602D  			MOV		A,@0x2D
000665: 015A  			MOV		INST,A
000666: 40CB  			CALL	STATUS_CLEAR
000667: 6055  			MOV		A,@0x55
000668: 0150  			MOV		0x50,A		; [0x50] = 0x55
000669: 60AA  			MOV		A,@0xAA
00066A: 7150  			XCH		0x50		; [0x50] <-> A
00066B: 6C55  			XOR		A,@0x55		; Check Result ?
00066C: 3A03  			JBS		Z			; Check Z = 1?
00066D: 506C  			JMP	INS_FAIL
00066E: 3603  			JBC		N			; Check N = 0?
00066F: 506C  			JMP	INS_FAIL
000670: 1050  			MOV		A,0x50
000671: 6CAA  			XOR		A,@0xAA		; Check Result ?
000672: 40CE  			CALL	INST_XOR_JUDGE
000673: 0012  		RET
000674: 6007  			MOV		A,@0x07
000675: 015A  			MOV		INST,A
000676: 40CB  			CALL	STATUS_CLEAR
000677: 60FF  			MOV		A,@0xFF
000678: 0150  			MOV		0x50,A
000679: 1003  			MOV		A,STATUS
00067A: 6C18  			XOR		A,@0x18		;At  OCDS
00067B: 40CE  			CALL	INST_XOR_JUDGE
00067C: 1050  			MOV		A,0x50
00067D: 6CFF  			XOR		A,@0xFF		; Check Result ?
00067E: 40CE  			CALL	INST_XOR_JUDGE
00067F: 6014  			MOV		A,@0x14
000680: 015A  			MOV		INST,A
000681: 40CB  			CALL	STATUS_CLEAR
000682: 6000  			MOV		A,@0x00
000683: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000684: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000685: 1003  			MOV		A,STATUS
000686: 6C1C  			XOR		A,@0x1C		; Check Status ?
000687: 3A03  			JBS		Z			; Check Z = 1?
000688: 506C  			JMP	INS_FAIL
000689: 3603  			JBC		N			; Check N = 0?
00068A: 506C  			JMP	INS_FAIL
00068B: 1050  			MOV		A,0x50
00068C: 2203  			BC		Z
00068D: 6C00  			XOR		A,@0x00		; Check Result ?
00068E: 3A03  			JBS		Z			; Check Z = 1?
00068F: 506C  			JMP	INS_FAIL
000690: 3603  			JBC		N			; Check N = 0?
000691: 506C  			JMP	INS_FAIL
000692: 40CB  			CALL	STATUS_CLEAR
000693: 6000  			MOV		A,@0x00
000694: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000695: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000696: 2850  			BS		0x50,0
000697: 1050  			MOV		A,0x50
000698: 6C01  			XOR		A,@0x01		; Check Result ?
000699: 40CE  			CALL	INST_XOR_JUDGE
00069A: 601F  			MOV		A,@0x1F
00069B: 015A  			MOV		INST,A
00069C: 40CB  			CALL	STATUS_CLEAR
00069D: 605A  			MOV		A,@0x5A
00069E: 0150  			MOV		0x50,A		; [0x50] = 0x5A
00069F: 1C50  			SWAPA	0x50
0006A0: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006A1: 40CE  			CALL	INST_XOR_JUDGE
0006A2: 6020  			MOV		A,@0x20
0006A3: 015A  			MOV		INST,A
0006A4: 40CB  			CALL	STATUS_CLEAR
0006A5: 605A  			MOV		A,@0x5A
0006A6: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006A7: 1D50  			SWAP	0x50
0006A8: 1050  			MOV		A,0x50
0006A9: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006AA: 40CE  			CALL	INST_XOR_JUDGE
0006AB: 0012  		RET
0006AC: 0012  		RET
0006AD: 601A  			MOV		A,@0x1A
0006AE: 015A  			MOV		INST,A
0006AF: 40CB  			CALL	STATUS_CLEAR
0006B0: 6001  			MOV		A,@0x01
0006B1: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006B2: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006B3: 506C  			JMP		INS_FAIL
0006B4: 1050  			MOV		A,0x50
0006B5: 6C00  			XOR		A,@0x00		; Check Result ?
0006B6: 40CE  			CALL	INST_XOR_JUDGE	
0006B7: 40CB  			CALL	STATUS_CLEAR
0006B8: 6002  			MOV		A,@0x02
0006B9: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006BA: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006BB: 56BD  			JMP		$+2
0006BC: 506C  			JMP		INS_FAIL
0006BD: 6019  			MOV		A,@0x19
0006BE: 015A  			MOV		INST,A
0006BF: 40CB  			CALL	STATUS_CLEAR
0006C0: 6001  			MOV		A,@0x01
0006C1: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006C2: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006C3: 506C  			JMP	INS_FAIL
0006C4: 6C00  			XOR		A,@0x00		; Check Result ?
0006C5: 40CE  			CALL	INST_XOR_JUDGE
0006C6: 40CB  			CALL	STATUS_CLEAR
0006C7: 6002  			MOV		A,@0x02
0006C8: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006C9: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006CA: 56CC  			JMP		$+2
0006CB: 506C  			JMP	INS_FAIL
0006CC: 6021  			MOV		A,@0x21
0006CD: 015A  			MOV		INST,A
0006CE: 40CB  			CALL	STATUS_CLEAR
0006CF: 60FF  			MOV		A,@0xFF
0006D0: 0150  			MOV		0x50,A
0006D1: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006D2: 506C  			JMP		INS_FAIL
0006D3: 6C00  			XOR		A,@0x00		; Check Result ?
0006D4: 40CE  			CALL	INST_XOR_JUDGE
0006D5: 40CB  			CALL	STATUS_CLEAR
0006D6: 6080  			MOV		A,@0x80
0006D7: 0150  			MOV		0x50,A
0006D8: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006D9: 56DB  			JMP		$+2
0006DA: 506C  			JMP		INS_FAIL
0006DB: 6022  			MOV		A,@0x22
0006DC: 015A  			MOV		INST,A
0006DD: 40CB  			CALL	STATUS_CLEAR
0006DE: 60FF  			MOV		A,@0xFF
0006DF: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006E0: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006E1: 506C  			JMP		INS_FAIL
0006E2: 1050  			MOV		A,0x50
0006E3: 6C00  			XOR		A,@0x00		; Check Result ?
0006E4: 40CE  			CALL	INST_XOR_JUDGE
0006E5: 40CB  			CALL	STATUS_CLEAR
0006E6: 6080  			MOV		A,@0x80
0006E7: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006E8: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006E9: 56EB  			JMP		$+2
0006EA: 506C  			JMP		INS_FAIL
0006EB: 0012  		RET
0006EC: 6023  			MOV		A,@0x23
0006ED: 015A  			MOV		INST,A
0006EE: 40CB  			CALL	STATUS_CLEAR
0006EF: 605A  			MOV		A,@0x5A
0006F0: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006F1: 6150  			JE		0x50		; [0x50] = A?
0006F2: 506C  			JMP		INS_FAIL
0006F3: 605B  			MOV		A,@0x5B
0006F4: 0150  			MOV		0x50,A		; [0x50] = 0x5B
0006F5: 605C  			MOV		A,@0x5C
0006F6: 6150  			JE		0x50		; [0x50] = A(0x5C)?
0006F7: 56F9  			JMP		$+2
0006F8: 506C  			JMP		INS_FAIL
0006F9: 6024  			MOV		A,@0x24
0006FA: 015A  			MOV		INST,A
0006FB: 40CB  			CALL	STATUS_CLEAR
0006FC: 607F  			MOV		A,@0x7F
0006FD: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0006FE: 6000  			MOV		A,@0x00
0006FF: 6250  			JGE		0x50		; [0x50] > A ?
000700: 506C  			JMP		INS_FAIL
000701: 40CB  			CALL	STATUS_CLEAR
000702: 60FF  			MOV		A,@0xFF
000703: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000704: 6080  			MOV		A,@0x80
000705: 6250  			JGE		0x50		; [0x50] > A ?
000706: 506C  			JMP		INS_FAIL
000707: 40CB  			CALL	STATUS_CLEAR
000708: 6000  			MOV		A,@0x00
000709: 0150  			MOV		0x50,A		; [0x50] = 0x00
00070A: 60FF  			MOV		A,@0xFF
00070B: 6250  			JGE		0x50		; [0x50] > A(0xFF) ?x
00070C: 570E  			JMP		$+2
00070D: 506C  			JMP		INS_FAIL
00070E: 6025  			MOV		A,@0x25
00070F: 015A  			MOV		INST,A
000710: 40CB  			CALL	STATUS_CLEAR
000711: 6000  			MOV		A,@0x00
000712: 0150  			MOV		0x50,A		; [0x50] = 0x00
000713: 607F  			MOV		A,@0x7F
000714: 6350  			JLE		0x50		; [0x50] < A ?
000715: 506C  			JMP		INS_FAIL
000716: 6000  			MOV		A,@0x00
000717: 0103  			MOV		STATUS,A
000718: 6080  			MOV		A,@0x80
000719: 0150  			MOV		0x50,A		; [0x50] = 0x80
00071A: 60FF  			MOV		A,@0xFF
00071B: 6350  			JLE		0x50		; [0x50] < A ?
00071C: 506C  			JMP		INS_FAIL
00071D: 40CB  			CALL	STATUS_CLEAR
00071E: 60FF  			MOV		A,@0xFF
00071F: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000720: 6000  			MOV		A,@0x00
000721: 6350  			JLE		0x50		; [0x50] < A(0x00) ?x
000722: 5724  			JMP		$+2
000723: 506C  			JMP		INS_FAIL
000724: 6027  			MOV		A,@0x27
000725: 015A  			MOV		INST,A
000726: 40CB  			CALL	STATUS_CLEAR
000727: 607F  			MOV		A,@0x7F
000728: 657F  			JE		@0x7F
000729: 506C  			JMP	INS_FAIL
00072A: 0012  		RET
00072B: 6002  			MOV	A,@0x02
00072C: 015A  			MOV	INST,A
00072D: 40CB  			CALL	STATUS_CLEAR
00072E: 6003  			MOV		A,@0x03
00072F: 0150  			MOV		0x50,A
000730: 47D0  			CALL	CALL_Test
000731: 1050  			MOV		A,0x50
000732: 6C04  			XOR		A,@0x04
000733: 40CE  			CALL	INST_XOR_JUDGE
000734: 6003  			MOV		A,@0x03
000735: 015A  			MOV		INST,A
000736: 40CB  			CALL	STATUS_CLEAR
000737: 6003  			MOV		A,@0x03
000738: 0151  			MOV		0x51,A
000739: 4FFE  			CALL	LCALL_Test
00073A: 1051  			MOV		A,0x51
00073B: 6C04  			XOR		A,@0x04		; Check Result ?
00073C: 40CE  			CALL	INST_XOR_JUDGE
00073D: 602C  			MOV		A,@0x2C
00073E: 015A  			MOV		INST,A
00073F: 40CB  			CALL	STATUS_CLEAR
000740: 6000  			MOV		A,@0x00
000741: 4EF0  			CALL	INST_RETL_TABLE
000742: 6CA1  			XOR		A,@0xA1
000743: 40CE  			CALL	INST_XOR_JUDGE
000744: 6001  			MOV		A,@0x01
000745: 4EF0  			CALL	INST_RETL_TABLE
000746: 6CA2  			XOR		A,@0xA2
000747: 40CE  			CALL	INST_XOR_JUDGE
000748: 6002  			MOV		A,@0x02
000749: 4EF0  			CALL	INST_RETL_TABLE
00074A: 6CA4  			XOR		A,@0xA4
00074B: 40CE  			CALL	INST_XOR_JUDGE
00074C: 6003  			MOV		A,@0x03
00074D: 4EF0  			CALL	INST_RETL_TABLE
00074E: 6CA8  			XOR		A,@0xA8
00074F: 40CE  			CALL	INST_XOR_JUDGE
000750: 0012  		RET
000751: 6004  			MOV		A,@0x04
000752: 015A  			MOV		INST,A
000753: 0010  			ENI
000754: 3F03  			JBS		IT		; Check IT = 1?
000755: 506C  			JMP	INS_FAIL
000756: 6005  			MOV		A,@0x05
000757: 015A  			MOV		INST,A
000758: 0011  			DISI
000759: 3703  			JBC		IT		; Check IT = 0?
00075A: 506C  			JMP	INS_FAIL
00075B: 0012  		RET
00075C: 40CB  		CALL	STATUS_CLEAR
00075D: 2803  		BS	C
00075E: 6903  		SJC		@0x03
00075F: 5066  		JMP		JMP_FAIL
000760: 5066  		JMP		JMP_FAIL
000761: 5066  		JMP		JMP_FAIL
000762: 2003  		BC	C
000763: 6A03  		SJNC	bbb		;@0x03
000764: 5066  		JMP		JMP_FAIL
000765: 5066  		JMP		JMP_FAIL
000766: 5066  		JMP		JMP_FAIL
000767: 2A03  			BS		Z
000768: 6B03  			SJZ		@0x03
000769: 5066  			JMP		JMP_FAIL
00076A: 5066  			JMP		JMP_FAIL
00076B: 5066  			JMP		JMP_FAIL
00076C: 0200  			CLRA
00076D: 6B03  			SJZ		@0x03
00076E: 5066  			JMP		JMP_FAIL
00076F: 5066  			JMP		JMP_FAIL
000770: 5066  			JMP		JMP_FAIL
000771: 5779  		JMP		IATEST1		;JMP back Test as below
000772: 5786  			JMP	IATEST2		; -9
000773: 5066  			JMP	JMP_FAIL	; -8
000774: 5066  			JMP	JMP_FAIL	; -7
000775: 5066  			JMP	JMP_FAIL	; -6
000776: 5066  			JMP	JMP_FAIL	; -5
000777: 5066  			JMP	JMP_FAIL	; -4
000778: 5066  			JMP	JMP_FAIL	; -3
000779: 2803  			BS		C		; -2
00077A: 69F7  			SJC		aaa		; -1
00077B: 69F7  			SJC		@0xF7	; -1
00077C: 5066  			JMP		JMP_FAIL
00077D: 5066  			JMP		JMP_FAIL
00077E: 5066  			JMP		JMP_FAIL
00077F: 5792  			JMP		IATEST3		; -9
000780: 5066  			JMP		JMP_FAIL	; -8
000781: 5066  			JMP		JMP_FAIL	; -7
000782: 5066  			JMP		JMP_FAIL	; -6
000783: 5066  			JMP		JMP_FAIL	; -5
000784: 5066  			JMP		JMP_FAIL	; -4
000785: 5066  			JMP		JMP_FAIL	; -3
000786: 2003  			BC		C		; -2
000787: 6AF7  			SJNC		@0xF7	; -1
000788: 57A3  			JMP		_IPass
000789: 57A3  			JMP		_IPass
00078A: 57A3  			JMP		_IPass
00078B: 579E  			JMP		IATEST4		; -9
00078C: 5066  			JMP		JMP_FAIL	; -8
00078D: 5066  			JMP		JMP_FAIL	; -7
00078E: 5066  			JMP		JMP_FAIL	; -6
00078F: 5066  			JMP		JMP_FAIL	; -5
000790: 5066  			JMP		JMP_FAIL	; -4
000791: 5066  			JMP		JMP_FAIL	; -3
000792: 2A03  			BS		Z		; -2
000793: 6BF7  			SJZ		@0xF7	; -1
000794: 5066  			JMP		JMP_FAIL
000795: 5066  			JMP		JMP_FAIL
000796: 5066  			JMP		JMP_FAIL
000797: 57A3  			JMP		_IPass		; -9
000798: 5066  			JMP		JMP_FAIL	; -8
000799: 5066  			JMP		JMP_FAIL	; -7
00079A: 5066  			JMP		JMP_FAIL	; -6
00079B: 5066  			JMP		JMP_FAIL	; -5
00079C: 5066  			JMP		JMP_FAIL	; -4
00079D: 5066  			JMP		JMP_FAIL	; -3
00079E: 2203  			BC		Z		; -2
00079F: 6DF7  			SJNZ	@0xF7	; -1
0007A0: 5066  			JMP		JMP_FAIL
0007A1: 5066  			JMP		JMP_FAIL
0007A2: 5066  			JMP		JMP_FAIL
0007A3: 0000  				NOP
0007A4: 0012  		RET
0007A5: 6028  			MOV		A,@0x28
0007A6: 015A  			MOV		INST,A
0007A7: 7A01  			SBANK	1
0007A8: 60F1  			MOV		A,@0xF1		;ADDR(0x0EF1)
0007A9: 0145  			MOV		TBPTL,A
0007AA: 600E  			MOV		A,@0x0E
0007AB: 0146  			MOV		TBPTH,A
0007AC: 7A00  			SBANK	0
0007AD: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007AE: 6CA1  			XOR		A,@0xA1
0007AF: 40CE  			CALL	INST_XOR_JUDGE
0007B0: 1050  			MOV		A,0x50
0007B1: 6C70  			XOR		A,@0x70
0007B2: 40CE  			CALL	INST_XOR_JUDGE
0007B3: 7A01  			SBANK	1
0007B4: 1545  			INC		TBPTL		;ADDR(0x0EF2)
0007B5: 7A00  			SBANK	0
0007B6: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007B7: 6CA2  			XOR		A,@0xA2
0007B8: 40CE  			CALL	INST_XOR_JUDGE
0007B9: 1050  			MOV		A,0x50
0007BA: 6C70  			XOR		A,@0x70
0007BB: 40CE  			CALL	INST_XOR_JUDGE
0007BC: 6033  			MOV		A,@0x33
0007BD: 015A  			MOV		INST,A
0007BE: 7A01  			SBANK	1
0007BF: 60F3  			MOV		A,@0xF3		;ADDR(0x0EF3)
0007C0: 0145  			MOV		TBPTL,A
0007C1: 600E  			MOV		A,@0x0E
0007C2: 0146  			MOV		TBPTH,A
0007C3: 7A00  			SBANK	0
0007C4: 7B50  			TBRD	0x50
0007C5: 1050  			MOV		A,0x50
0007C6: 6CA4  			XOR		A,@0xA4
0007C7: 40CE  			CALL	INST_XOR_JUDGE
0007C8: 7A01  			SBANK	1
0007C9: 1545  			INC		TBPTL		;ADDR(0x0EF4)
0007CA: 7A00  			SBANK	0
0007CB: 7B50  			TBRD	0x50
0007CC: 1050  			MOV		A,0x50
0007CD: 6CA8  			XOR		A,@0xA8
0007CE: 40CE  			CALL	INST_XOR_JUDGE
0007CF: 0012  		RET
0007D0: 1550  		INC		0x50
0007D1: 0012  		RET
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000F00: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
000F01: 0104  		MOV		RSR,A
000F02: 7A40  		GBANK	0
000F03: 6055  		MOV		A,@0x55
000F04: 0100  		MOV		IAR,A
000F05: 1504  		INC		RSR
000F06: 6000  		MOV		A,@0x00
000F07: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F08: 3A03  		JBS		Z
000F09: 5F03  		JMP		$-6
000F0A: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
000F0B: 0104  		MOV		RSR,A
000F0C: 7A40  		GBANK	0
000F0D: 6055  		MOV		A,@0x55
000F0E: 0D00  		XOR		IAR,A
000F0F: 3A03  		JBS		Z
000F10: 5069  		JMP		RAM_FAIL
000F11: 1504  		INC		RSR
000F12: 6000  		MOV		A,@0x00
000F13: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F14: 3A03  		JBS		Z
000F15: 5F0D  		JMP		$-8
000F16: 0012  		RET
000F17: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
000F18: 0104  		MOV		RSR,A
000F19: 7A40  		GBANK	0
000F1A: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
000F1B: 0100  		MOV		IAR,A
000F1C: 1504  		INC		RSR
000F1D: 6000  		MOV		A,@0x00
000F1E: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F1F: 3A03  		JBS		Z
000F20: 5F1A  		JMP		$-6
000F21: 6080  		MOV		A,@0x80
000F22: 0104  		MOV		RSR,A
000F23: 7A40  		GBANK	0
000F24: 60AA  		MOV		A,@0xAA
000F25: 0D00  		XOR		IAR,A
000F26: 3A03  		JBS		Z
000F27: 5069  		JMP		RAM_FAIL
000F28: 1504  		INC		RSR
000F29: 6000  		MOV		A,@0x00
000F2A: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F2B: 3A03  		JBS		Z
000F2C: 5F24  		JMP		$-8
000F2D: 0012  		RET
000F2E: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
000F2F: 0104  		MOV		RSR,A
000F30: 7A41  		GBANK	1
000F31: 6033  		MOV		A,@0x33		; SRAM(0x33)
000F32: 0100  		MOV		IAR,A
000F33: 1504  		INC		RSR
000F34: 6000  		MOV		A,@0x00
000F35: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F36: 3A03  		JBS		Z
000F37: 5F31  		JMP		$-6
000F38: 6080  		MOV		A,@0x80
000F39: 0104  		MOV		RSR,A
000F3A: 7A41  		GBANK	1
000F3B: 6033  		MOV		A,@0x33
000F3C: 0D00  		XOR		IAR,A
000F3D: 3A03  		JBS		Z
000F3E: 5069  		JMP		RAM_FAIL
000F3F: 1504  		INC		RSR
000F40: 6000  		MOV		A,@0x00
000F41: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F42: 3A03  		JBS		Z
000F43: 5F3B  		JMP		$-8
000F44: 0012  		RET
000F45: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
000F46: 0104  		MOV		RSR,A
000F47: 7A41  		GBANK	1
000F48: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
000F49: 0100  		MOV		IAR,A
000F4A: 1504  		INC		RSR
000F4B: 6000  		MOV		A,@0x00
000F4C: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F4D: 3A03  		JBS		Z
000F4E: 5F48  		JMP		$-6
000F4F: 6080  		MOV		A,@0x80
000F50: 0104  		MOV		RSR,A
000F51: 7A41  		GBANK	1
000F52: 60CC  		MOV		A,@0xCC
000F53: 0D00  		XOR		IAR,A
000F54: 3A03  		JBS		Z
000F55: 5069  		JMP		RAM_FAIL
000F56: 1504  		INC		RSR
000F57: 6000  		MOV		A,@0x00
000F58: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000F59: 3A03  		JBS		Z
000F5A: 5F52  		JMP		$-8
000F5B: 0012  		RET
000FFE: 1551  		INC		0x51
000FFF: 0012  		RET
