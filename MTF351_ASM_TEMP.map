****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X7E6  , End=0X7FF  , Size=26
Start=0X803  , End=0XEEF  , Size=1773
Start=0XEF9  , End=0XEFF  , Size=7
Start=0XF5C  , End=0XFFD  , Size=162
----------------------------------------
MTF351          |        ROM Size        
----------------+-----------------------
Total           |  4096 x 16 bits(100.0%)
Used            |  2127 x 16 bits( 51.9%)
Free            |  1969 x 16 bits( 48.1%)
----------------------------------------
****************************************
The Checksum is -- 0x5826
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 506E  	JMP 	JMP_FAIL	;0x0002
000003: 506E  	JMP 	JMP_FAIL	;0x0003
000004: 506E  	JMP 	JMP_FAIL	;0x0004
000005: 506E  	JMP 	JMP_FAIL	;0x0005
000006: 506E  	JMP 	JMP_FAIL	;0x0006
000007: 506E  	JMP 	JMP_FAIL	;0x0007
000008: 506E  	JMP 	JMP_FAIL	;0x0008
000009: 506E  	JMP 	JMP_FAIL	;0x0009
00000A: 506E  	JMP 	JMP_FAIL	;0x000A
00000B: 506E  	JMP 	JMP_FAIL	;0x000B
00000C: 506E  	JMP 	JMP_FAIL	;0x000C
00000D: 506E  	JMP 	JMP_FAIL	;0x000D
00000E: 506E  	JMP 	JMP_FAIL	;0x000E
00000F: 506E  	JMP 	JMP_FAIL	;0x000F
000010: 506E  	JMP 	JMP_FAIL	;0x0010
000011: 506E  	JMP 	JMP_FAIL	;0x0011
000012: 506E  	JMP 	JMP_FAIL	;0x0012
000013: 506E  	JMP 	JMP_FAIL	;0x0013
000014: 506E  	JMP 	JMP_FAIL	;0x0014
000015: 506E  	JMP 	JMP_FAIL	;0x0015
000016: 506E  	JMP 	JMP_FAIL	;0x0016
000017: 506E  	JMP 	JMP_FAIL	;0x0017
000018: 506E  	JMP 	JMP_FAIL	;0x0018
000019: 506E  	JMP 	JMP_FAIL	;0x0019
00001A: 506E  	JMP 	JMP_FAIL	;0x001A
00001B: 506E  	JMP 	JMP_FAIL	;0x001B
00001C: 506E  	JMP 	JMP_FAIL	;0x001C
00001D: 506E  	JMP 	JMP_FAIL	;0x001D
00001E: 506E  	JMP 	JMP_FAIL	;0x001E
00001F: 506E  	JMP 	JMP_FAIL	;0x001F
000020: 506E  	JMP 	JMP_FAIL	;0x0020
000021: 506E  	JMP 	JMP_FAIL	;0x0021
000022: 506E  	JMP 	JMP_FAIL	;0x0022
000023: 506E  	JMP 	JMP_FAIL	;0x0023
000024: 506E  	JMP 	JMP_FAIL	;0x0024
000025: 506E  	JMP 	JMP_FAIL	;0x0025
000026: 506E  	JMP 	JMP_FAIL	;0x0026
000027: 506E  	JMP 	JMP_FAIL	;0x0027
000028: 506E  	JMP 	JMP_FAIL	;0x0028
000029: 506E  	JMP 	JMP_FAIL	;0x0029
00002A: 506E  	JMP 	JMP_FAIL	;0x002A
00002B: 506E  	JMP 	JMP_FAIL	;0x002B
00002C: 506E  	JMP 	JMP_FAIL	;0x002C
00002D: 506E  	JMP 	JMP_FAIL	;0x002D
00002E: 506E  	JMP 	JMP_FAIL	;0x002E
00002F: 506E  	JMP 	JMP_FAIL	;0x002F
000030: 506E  	JMP 	JMP_FAIL	;0x0030
000031: 506E  	JMP 	JMP_FAIL	;0x0031
000032: 506E  	JMP 	JMP_FAIL	;0x0032
000033: 506E  	JMP 	JMP_FAIL	;0x0033
000034: 506E  	JMP 	JMP_FAIL	;0x0034
000035: 506E  	JMP 	JMP_FAIL	;0x0035
000036: 506E  	JMP 	JMP_FAIL	;0x0036
000037: 506E  	JMP 	JMP_FAIL	;0x0037
000038: 506E  	JMP 	JMP_FAIL	;0x0038
000039: 506E  	JMP 	JMP_FAIL	;0x0039
00003A: 506E  	JMP 	JMP_FAIL	;0x003A
00003B: 506E  	JMP 	JMP_FAIL	;0x003B
00003C: 506E  	JMP 	JMP_FAIL	;0x003C
00003D: 506E  	JMP 	JMP_FAIL	;0x003D
00003E: 506E  	JMP 	JMP_FAIL	;0x003E
00003F: 506E  	JMP 	JMP_FAIL	;0x003F
000040: 506E  	JMP 	JMP_FAIL	;0x0040
000041: 506E  	JMP 	JMP_FAIL	;0x0041
000042: 506E  	JMP 	JMP_FAIL	;0x0042
000043: 506E  	JMP 	JMP_FAIL	;0x0043
000044: 506E  	JMP 	JMP_FAIL	;0x0044
000045: 506E  	JMP 	JMP_FAIL	;0x0045
000046: 506E  	JMP 	JMP_FAIL	;0x0046
000047: 506E  	JMP 	JMP_FAIL	;0x0047
000048: 506E  	JMP 	JMP_FAIL	;0x0048
000049: 506E  	JMP 	JMP_FAIL	;0x0049
00004A: 506E  	JMP 	JMP_FAIL	;0x004A
00004B: 506E  	JMP 	JMP_FAIL	;0x004B
00004C: 506E  	JMP 	JMP_FAIL	;0x004C
00004D: 506E  	JMP 	JMP_FAIL	;0x004D
00004E: 506E  	JMP 	JMP_FAIL	;0x004E
00004F: 506E  	JMP 	JMP_FAIL	;0x004F
000050: 4080  	CALL	SYS_INIT
000051: 408B  	CALL	GPIO_INIT	
000052: 0003  	SLEP
000053: 0003  	SLEP
000054: 0003  	SLEP
000055: 0003  	SLEP
000056: 40BD  	CALL	RAM_SHA_INIT
000057: 40C7  	CALL	RAM_IND_INIT
000058: 7A00  	SBANK	0
000059: 40E6  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
00005A: 4490  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
00005B: 45BF  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
00005C: 4687  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
00005D: 46BF  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005E: 46C0  	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
00005F: 46FF  	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
000060: 473E  	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
000061: 4765  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
000062: 4770  	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
000063: 47B9  	CALL	TEST_READ_ROM			;TBRD, TBRDA
000064: 4F00  	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
000065: 4F17  	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
000066: 4F2E  	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
000067: 4F45  	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
000068: 0085  	BTG		P5,0
000069: 2105  	BC		P5,1
00006A: 2A05  	BS		P5,2
00006B: 2305  	BC		P5,3
00006C: 2C05  	BS		P5,4	
00006D: 5058  	JMP		BACK_GROUND_LOOP
00006E: 7A00  	SBANK	0
00006F: 2905  	BS		P5,1
000070: 2205  	BC		P5,2
000071: 2B05  	BS		P5,3
000072: 2405  	BC		P5,4
000073: 506E  	JMP		JMP_FAIL
000074: 7A00  	SBANK	0
000075: 2905  	BS		P5,1
000076: 2205  	BC		P5,2
000077: 2B05  	BS		P5,3
000078: 2405  	BC		P5,4
000079: 5074  	JMP		RAM_FAIL
00007A: 7A00  	SBANK	0
00007B: 2905  	BS		P5,1
00007C: 2205  	BC		P5,2
00007D: 2B05  	BS		P5,3
00007E: 2405  	BC		P5,4	
00007F: 507A  	JMP		INS_FAIL
000080: 7A00  		SBANK	0
000081: 260E  		BC		IDLE	;SLEEP_MODE
000082: 6000  		MOV		A,@0x00
000083: 0114  		MOV		SFR1,A
000084: 0117  		MOV		SFR4,A
000085: 0119  		MOV		SFR6,A
000086: 7A03  		SBANK	3
000087: 6000  		MOV		A,@0x00
000088: 014C  		MOV		SFR9,A
000089: 014D  		MOV		SFR10,A
00008A: 0012  		RET
00008B: 7A00  		SBANK	0
00008C: 6000  		MOV		A,@0x00
00008D: 010B  		MOV		IOCR5,A
00008E: 010C  		MOV		IOCR6,A
00008F: 010D  		MOV		IOCR7,A
000090: 0305  		CLR		P5
000091: 0306  		CLR		P6
000092: 0307  		CLR		P7
000093: 0012  		RET
000094: 7A00  		SBANK	0
000095: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000096: 5099  		JMP		$+3
000097: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000098: 0003  		SLEP
000099: 3B03  		JBS		P
00009A: 509D  		JMP		$+3
00009B: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
00009C: 0003  		SLEP
00009D: 3B03  		JBS		P
00009E: 50A1  		JMP		$+3
00009F: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
0000A0: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
0000A1: 0003  		SLEP		
0000A2: 0012  		RET
0000A3: 3D05  		JBS		P5,5		; Push, or not
0000A4: 50A6  		JMP		$+2
0000A5: 50A3  		JMP		$-2
0000A6: 3D05  		JBS		P5,5
0000A7: 50A3  		JMP		KEY_DEBOUNCE
0000A8: 3D05  		JBS		P5,5
0000A9: 50A3  		JMP		KEY_DEBOUNCE
0000AA: 3D05  		JBS		P5,5
0000AB: 50A3  		JMP		KEY_DEBOUNCE
0000AC: 3D05  		JBS		P5,5
0000AD: 50A3  		JMP		KEY_DEBOUNCE
0000AE: 3D05  		JBS		P5,5
0000AF: 50A3  		JMP		KEY_DEBOUNCE
0000B0: 3D05  		JBS		P5,5
0000B1: 50A3  		JMP		KEY_DEBOUNCE
0000B2: 3D05  		JBS		P5,5
0000B3: 50A3  		JMP		KEY_DEBOUNCE
0000B4: 3D05  		JBS		P5,5
0000B5: 50A3  		JMP		KEY_DEBOUNCE
0000B6: 3D05  		JBS		P5,5
0000B7: 50A3  		JMP		KEY_DEBOUNCE
0000B8: 3D05  		JBS		P5,5
0000B9: 50B7  		JMP		$-2
0000BA: 60FF  		MOV		A,@0xFF		; Turn Off all LED
0000BB: 0105  		MOV		P5,A		
0000BC: 0012  		RET
0000BD: 6050  		MOV		A,@0x50
0000BE: 0104  		MOV		RSR,A
0000BF: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
0000C0: 0100  		MOV		IAR,A
0000C1: 1504  		INC		RSR
0000C2: 6080  		MOV		A,@0x80
0000C3: 0C04  		XOR		A,RSR
0000C4: 3A03  		JBS		Z
0000C5: 50BF  		JMP		$-6
0000C6: 0012  		RET
0000C7: 6080  		MOV		A,@0x80
0000C8: 0104  		MOV		RSR,A
0000C9: 7A40  		GBANK	0
0000CA: 60FF  		MOV		A,@0xFF
0000CB: 0100  		MOV		IAR,A
0000CC: 1504  		INC		RSR
0000CD: 6000  		MOV		A,@0x00
0000CE: 0C04  		XOR		A,RSR
0000CF: 3A03  		JBS		Z
0000D0: 50C9  		JMP		RAM_IND_LOOP_0
0000D1: 6080  		MOV		A,@0x80
0000D2: 0104  		MOV		RSR,A
0000D3: 7A41  		GBANK	1
0000D4: 60FF  		MOV		A,@0xFF
0000D5: 0100  		MOV		IAR,A
0000D6: 1504  		INC		RSR
0000D7: 6000  		MOV		A,@0x00
0000D8: 0C04  		XOR		A,RSR
0000D9: 3A03  		JBS		Z
0000DA: 50D3  		JMP		RAM_IND_LOOP_1
0000DB: 6080  		MOV		A,@0x80
0000DC: 0104  		MOV		RSR,A
0000DD: 0012  		RET
0000DE: 6000  		MOV		A,@0x00
0000DF: 0103  		MOV		STATUS,A
0000E0: 0012  		RET
0000E1: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000E2: 507A  		JMP		INS_FAIL
0000E3: 3603  		JBC		N			; IF(N=0) BRANCH
0000E4: 507A  		JMP		INS_FAIL
0000E5: 0012  		RET
0000E6: 6001  			MOV		A,@0x01
0000E7: 015A  			MOV		INST,A
0000E8: 40DE  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000E9: 60AA  			MOV		A,@0xAA
0000EA: 0001  			DAA
0000EB: 3803  			JBS		C			; Check C = 1?
0000EC: 507A  			JMP	INS_FAIL
0000ED: 3103  			JBC		DC			; Check DC = 0?
0000EE: 507A  			JMP	INS_FAIL
0000EF: 3203  			JBC		Z			; Check Z = 0?
0000F0: 507A  			JMP	INS_FAIL
0000F1: 3503  			JBC		OV			; Check OV = 0?
0000F2: 507A  			JMP	INS_FAIL
0000F3: 3603  			JBC		N			; Check N = 0?
0000F4: 507A  			JMP	INS_FAIL
0000F5: 6C10  			XOR		A,@0x10		; Check Result ?
0000F6: 3A03  			JBS		Z			; Check Z = 1?
0000F7: 507A  			JMP	INS_FAIL
0000F8: 3603  			JBC		N			; Check N = 0?
0000F9: 507A  			JMP	INS_FAIL
0000FA: 40DE  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000FB: 6080  			MOV		A,@0x80
0000FC: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000FD: 607F  			MOV		A,@0x7F		; 
0000FE: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000FF: 0001  			DAA
000100: 3803  			JBS		C			; Check C = 1?
000101: 507A  			JMP	INS_FAIL
000102: 3103  			JBC		DC			; Check DC = 0?
000103: 507A  			JMP	INS_FAIL
000104: 3203  			JBC		Z			; Check Z = 0?
000105: 507A  			JMP	INS_FAIL
000106: 3503  			JBC		OV			; Check OV = 0?
000107: 507A  			JMP	INS_FAIL
000108: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000109: 507A  			JMP	INS_FAIL
00010A: 2203  			BC		Z
00010B: 2603  			BC		N
00010C: 6C65  			XOR		A,@0x65		; Check Result ?
00010D: 3A03  			JBS		Z			; Check Z = 1?
00010E: 507A  			JMP	INS_FAIL
00010F: 3603  			JBC		N			; Check N = 0?
000110: 507A  			JMP	INS_FAIL
000111: 0000  			NOP
000112: 6000  			MOV		A,@0x00
000113: 0103  			MOV		STATUS,A
000114: 2803  			BS		C
000115: 6080  			MOV		A,@0x80
000116: 0150  			MOV		0x50,A		; [0x50] = 0x80
000117: 607F  			MOV		A,@0x7F		; 
000118: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000119: 0001  			DAA
00011A: 3803  			JBS		C			; Check C = 1? 	/ By ADC
00011B: 507A  			JMP	INS_FAIL
00011C: 3903  			JBS		DC			; Check DC = 1? / By ADC
00011D: 507A  			JMP	INS_FAIL
00011E: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
00011F: 507A  			JMP	INS_FAIL
000120: 3503  			JBC		OV			; Check OV = 0?
000121: 507A  			JMP	INS_FAIL
000122: 3603  			JBC		N			; Check N = 0?
000123: 507A  			JMP	INS_FAIL
000124: 6C66  			XOR		A,@0x66		; Check Result ?
000125: 3A03  			JBS		Z			; Check Z = 1?
000126: 507A  			JMP	INS_FAIL
000127: 3603  			JBC		N			; Check N = 0?
000128: 507A  			JMP	INS_FAIL
000129: 6000  			MOV		A,@0x00
00012A: 0103  			MOV		STATUS,A
00012B: 60FF  			MOV		A,@0xFF
00012C: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00012D: 607F  			MOV		A,@0x7F		; 
00012E: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
00012F: 0001  			DAA
000130: 3803  			JBS		C			; Check C = 1? 	/ By SUB
000131: 507A  			JMP	INS_FAIL
000132: 3903  			JBS		DC			; Check DC = 1? / By SUB
000133: 507A  			JMP	INS_FAIL
000134: 3203  			JBC		Z			; Check Z = 0?
000135: 507A  			JMP	INS_FAIL
000136: 3503  			JBC		OV			; Check OV = 0?
000137: 507A  			JMP	INS_FAIL
000138: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000139: 507A  			JMP	INS_FAIL
00013A: 2203  			BC		Z
00013B: 2603  			BC		N
00013C: 6CE6  			XOR		A,@0xE6		; Check Result ?
00013D: 3A03  			JBS		Z			; Check Z = 1?
00013E: 507A  			JMP	INS_FAIL
00013F: 3603  			JBC		N			; Check N = 0?
000140: 507A  			JMP	INS_FAIL
000141: 6008  			MOV		A,@0x08
000142: 015A  			MOV		INST,A
000143: 605A  			MOV		A,@0x5A
000144: 6C5A  			XOR		A,@0x5A		; Check Result ?
000145: 3A03  			JBS		Z			; Check Z = 1?
000146: 507A  			JMP	INS_FAIL
000147: 3603  			JBC		N			; Check N = 0?
000148: 507A  			JMP	INS_FAIL
000149: 605A  			MOV		A,@0x5A
00014A: 0200  			CLRA
00014B: 3A03  			JBS		Z			; Check Z = 1?
00014C: 507A  			JMP	INS_FAIL
00014D: 2203  			BC		Z
00014E: 6C00  			XOR		A,@0x00		; Check Result ?
00014F: 3A03  			JBS		Z			; Check Z = 1?
000150: 507A  			JMP	INS_FAIL
000151: 3603  			JBC		N			; Check N = 0?
000152: 507A  			JMP	INS_FAIL
000153: 6009  			MOV		A,@0x09
000154: 015A  			MOV		INST,A
000155: 60AA  			MOV		A,@0xAA
000156: 0150  			MOV		0x50,A
000157: 1050  			MOV		A,0x50
000158: 6CAA  			XOR		A,@0xAA		; Check Result ?
000159: 3A03  			JBS		Z			; Check Z = 1?
00015A: 507A  			JMP	INS_FAIL
00015B: 3603  			JBC		N			; Check N = 0?
00015C: 507A  			JMP	INS_FAIL
00015D: 0350  			CLR		0x50
00015E: 3A03  			JBS		Z			; Check Z = 1?
00015F: 507A  			JMP	INS_FAIL
000160: 2203  			BC		Z
000161: 1050  			MOV		A,0x50
000162: 6C00  			XOR		A,@0x00		; Check Result ?
000163: 3A03  			JBS		Z			; Check Z = 1?
000164: 507A  			JMP	INS_FAIL
000165: 3603  			JBC		N			; Check N = 0?
000166: 507A  			JMP	INS_FAIL
000167: 600A  			MOV		A,@0x0A
000168: 015A  			MOV		INST,A
000169: 6000  			MOV		A,@0x00
00016A: 0103  			MOV		STATUS,A
00016B: 6002  			MOV		A,@0x02		; SUB(2-1)=1
00016C: 0150  			MOV		0x50,A		; [0x50] = 0x02
00016D: 6001  			MOV		A,@0x01
00016E: 0450  			SUB		A,0x50		; A = [0x50] - A
00016F: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
000170: 507A  			JMP	INS_FAIL
000171: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000172: 507A  			JMP	INS_FAIL
000173: 3203  			JBC		Z			; Check Z = 0?
000174: 507A  			JMP	INS_FAIL
000175: 3503  			JBC		OV			; Check OV = 0?
000176: 507A  			JMP	INS_FAIL
000177: 3603  			JBC		N			; Check N = 0?
000178: 507A  			JMP	INS_FAIL
000179: 2203  			BC		Z
00017A: 6C01  			XOR		A,@0x01		; Check Result ?
00017B: 3A03  			JBS		Z			; Check Z = 1?
00017C: 507A  			JMP	INS_FAIL
00017D: 3603  			JBC		N			; Check N = 0?
00017E: 507A  			JMP	INS_FAIL
00017F: 6000  			MOV		A,@0x00
000180: 0103  			MOV		STATUS,A
000181: 6002  			MOV		A,@0x02		; SUB(2-2)=0
000182: 0150  			MOV		0x50,A		; [0x50] = 0x02
000183: 6002  			MOV		A,@0x02
000184: 0450  			SUB		A,0x50		; A = [0x50] - A
000185: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000186: 507A  			JMP	INS_FAIL
000187: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000188: 507A  			JMP	INS_FAIL
000189: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
00018A: 507A  			JMP	INS_FAIL
00018B: 3503  			JBC		OV			; Check OV = 0?
00018C: 507A  			JMP	INS_FAIL
00018D: 3603  			JBC		N			; Check N = 0?
00018E: 507A  			JMP	INS_FAIL
00018F: 2203  			BC		Z
000190: 6C00  			XOR		A,@0x00		; Check Result ?
000191: 3A03  			JBS		Z			; Check Z = 1?
000192: 507A  			JMP	INS_FAIL
000193: 3603  			JBC		N			; Check N = 0?
000194: 507A  			JMP	INS_FAIL
000195: 6000  			MOV		A,@0x00
000196: 0103  			MOV		STATUS,A
000197: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000198: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000199: 607F  			MOV		A,@0x7F
00019A: 0450  			SUB		A,0x50		; A = [0x50] - A
00019B: 3803  			JBS		C			; Check C = 1?
00019C: 507A  			JMP	INS_FAIL
00019D: 3903  			JBS		DC			; Check DC = 1?
00019E: 507A  			JMP	INS_FAIL
00019F: 3203  			JBC		Z			; Check Z = 0?
0001A0: 507A  			JMP	INS_FAIL
0001A1: 3503  			JBC		OV			; Check OV = 0?
0001A2: 507A  			JMP	INS_FAIL
0001A3: 3E03  			JBS		N			; Check N = 1?
0001A4: 507A  			JMP	INS_FAIL
0001A5: 2203  			BC		Z
0001A6: 2603  			BC		N
0001A7: 6C80  			XOR		A,@0x80		; Check Result ?
0001A8: 3A03  			JBS		Z			; Check Z = 1?
0001A9: 507A  			JMP	INS_FAIL
0001AA: 3603  			JBC		N			; Check N = 0?
0001AB: 507A  			JMP	INS_FAIL
0001AC: 6000  			MOV		A,@0x00
0001AD: 0103  			MOV		STATUS,A
0001AE: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001AF: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001B0: 607F  			MOV		A,@0x7F
0001B1: 0450  			SUB		A,0x50		; A = [0x50] - A
0001B2: 3803  			JBS		C			; Check C = 1?
0001B3: 507A  			JMP	INS_FAIL
0001B4: 3103  			JBC		DC			; Check DC = 0?
0001B5: 507A  			JMP	INS_FAIL
0001B6: 3203  			JBC		Z			; Check Z = 0?
0001B7: 507A  			JMP	INS_FAIL
0001B8: 3D03  			JBS		OV			; Check OV = 1?
0001B9: 507A  			JMP	INS_FAIL
0001BA: 3603  			JBC		N			; Check N = 0?
0001BB: 507A  			JMP	INS_FAIL
0001BC: 2203  			BC		Z
0001BD: 2603  			BC		N
0001BE: 6C01  			XOR		A,@0x01		; Check Result ?
0001BF: 3A03  			JBS		Z			; Check Z = 1?
0001C0: 507A  			JMP	INS_FAIL
0001C1: 3603  			JBC		N			; Check N = 0?
0001C2: 507A  			JMP	INS_FAIL
0001C3: 6000  			MOV		A,@0x00
0001C4: 0103  			MOV		STATUS,A
0001C5: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001C6: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001C7: 6003  			MOV		A,@0x03
0001C8: 0450  			SUB		A,0x50		; A = [0x50] - A
0001C9: 3003  			JBC		C			; Check C = 0?
0001CA: 507A  			JMP	INS_FAIL
0001CB: 3103  			JBC		DC			; Check DC = 0?
0001CC: 507A  			JMP	INS_FAIL
0001CD: 3203  			JBC		Z			; Check Z = 0?
0001CE: 507A  			JMP	INS_FAIL
0001CF: 3503  			JBC		OV			; Check OV = 0?
0001D0: 507A  			JMP	INS_FAIL
0001D1: 3E03  			JBS		N			; Check N = 1?
0001D2: 507A  			JMP	INS_FAIL
0001D3: 2203  			BC		Z
0001D4: 2603  			BC		N
0001D5: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001D6: 3A03  			JBS		Z			; Check Z = 1?
0001D7: 507A  			JMP	INS_FAIL
0001D8: 3603  			JBC		N			; Check N = 0?
0001D9: 507A  			JMP	INS_FAIL
0001DA: 600B  			MOV		A,@0x0B
0001DB: 015A  			MOV		INST,A
0001DC: 6000  			MOV		A,@0x00
0001DD: 0103  			MOV		STATUS,A
0001DE: 6002  			MOV		A,@0x02
0001DF: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001E0: 6001  			MOV		A,@0x01
0001E1: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001E2: 1003  			MOV		A,STATUS
0001E3: 6C1B  			XOR		A,@0x1B		; for non reset
0001E4: 40E1  			CALL	INST_XOR_JUDGE
0001E5: 2203  			BC		Z
0001E6: 2603  			BC		N
0001E7: 1050  			MOV		A,0x50
0001E8: 6C01  			XOR		A,@0x01		; Check Result ?
0001E9: 40E1  			CALL	INST_XOR_JUDGE
0001EA: 6000  			MOV		A,@0x00
0001EB: 0103  			MOV		STATUS,A
0001EC: 6002  			MOV		A,@0x02
0001ED: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001EE: 6002  			MOV		A,@0x02
0001EF: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001F0: 1003  			MOV		A,STATUS
0001F1: 6C1F  			XOR		A,@0x1F		; for nono reset
0001F2: 40E1  			CALL	INST_XOR_JUDGE
0001F3: 2203  			BC		Z
0001F4: 2603  			BC		N
0001F5: 1050  			MOV		A,0x50
0001F6: 6C00  			XOR		A,@0x00		; Check Result ?
0001F7: 3A03  			JBS		Z			; Check Z = 1?
0001F8: 507A  			JMP	INS_FAIL
0001F9: 3603  			JBC		N			; Check N = 0?
0001FA: 507A  			JMP	INS_FAIL
0001FB: 6000  			MOV		A,@0x00
0001FC: 0103  			MOV		STATUS,A
0001FD: 6080  			MOV		A,@0x80
0001FE: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001FF: 6001  			MOV		A,@0x01
000200: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
000201: 1003  			MOV		A,STATUS
000202: 6C39  			XOR		A,@0x39	;; for non reset
000203: 40E1  			CALL	INST_XOR_JUDGE
000204: 2203  			BC		Z
000205: 2603  			BC		N
000206: 1050  			MOV		A,0x50
000207: 6C7F  			XOR		A,@0x7F		; Check Result ?
000208: 40E1  			CALL	INST_XOR_JUDGE
000209: 6030  			MOV		A,@0x30
00020A: 015A  			MOV		INST,A
00020B: 40DE  			CALL	STATUS_CLEAR
00020C: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
00020D: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
00020E: 3803  			JBS		C			; Check C = 1?
00020F: 507A  			JMP	INS_FAIL
000210: 3903  			JBS		DC			; Check DC = 1?
000211: 507A  			JMP	INS_FAIL
000212: 3A03  			JBS		Z			; Check Z = 1?
000213: 507A  			JMP	INS_FAIL
000214: 3503  			JBC		OV			; Check OV = 0?
000215: 507A  			JMP	INS_FAIL
000216: 3603  			JBC		N			; Check N = 0?
000217: 507A  			JMP	INS_FAIL
000218: 6C00  			XOR		A,@0x00		; Check Result ?
000219: 40E1  			CALL	INST_XOR_JUDGE
00021A: 40DE  			CALL	STATUS_CLEAR
00021B: 607F  			MOV		A,@0x7F		; 0x00-0x7F
00021C: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
00021D: 3003  			JBC		C			; Check C = 0?
00021E: 507A  			JMP	INS_FAIL
00021F: 3103  			JBC		DC			; Check DC = 0?
000220: 507A  			JMP	INS_FAIL
000221: 3203  			JBC		Z			; Check Z = 0?
000222: 507A  			JMP	INS_FAIL
000223: 3503  			JBC		OV			; Check OV = 0?
000224: 507A  			JMP	INS_FAIL
000225: 3E03  			JBS		N			; Check N = 1?
000226: 507A  			JMP	INS_FAIL
000227: 6C81  			XOR		A,@0x81		; Check Result ?
000228: 40E1  			CALL	INST_XOR_JUDGE
000229: 40DE  			CALL	STATUS_CLEAR
00022A: 6001  			MOV		A,@0x01		; 0x80-0x01
00022B: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
00022C: 3803  			JBS		C			; Check C = 1?
00022D: 507A  			JMP	INS_FAIL
00022E: 3103  			JBC		DC			; Check DC = 0?
00022F: 507A  			JMP	INS_FAIL
000230: 3203  			JBC		Z			; Check Z = 0?
000231: 507A  			JMP	INS_FAIL
000232: 3D03  			JBS		OV			; Check OV = 1?
000233: 507A  			JMP	INS_FAIL
000234: 3603  			JBC		N			; Check N = 0?
000235: 507A  			JMP	INS_FAIL
000236: 6C7F  			XOR		A,@0x7F		; Check Result ?
000237: 40E1  			CALL	INST_XOR_JUDGE
000238: 6031  			MOV		A,@0x31
000239: 015A  			MOV		INST,A
00023A: 40DE  			CALL	STATUS_CLEAR
00023B: 2003  			BC		C			; B = 1
00023C: 6000  			MOV		A,@0x00		;0x00-0xF
00023D: 0150  			MOV		0x50,A		; [0x50] = 0x00
00023E: 60FF  			MOV		A,@0xFF		; A = 0x01
00023F: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000240: 3003  			JBC		C			; Check C = 0?
000241: 507A  			JMP	INS_FAIL
000242: 3103  			JBC		DC			; Check DC = 0?
000243: 507A  			JMP	INS_FAIL
000244: 3A03  			JBS		Z			; Check Z = 1?
000245: 507A  			JMP	INS_FAIL
000246: 3503  			JBC		OV			; Check OV = 0?
000247: 507A  			JMP	INS_FAIL
000248: 3603  			JBC		N			; Check N = 0?
000249: 507A  			JMP	INS_FAIL
00024A: 6C00  			XOR		A,@0x00		; Check Result ?
00024B: 40E1  			CALL	INST_XOR_JUDGE	
00024C: 40DE  			CALL	STATUS_CLEAR
00024D: 2003  			BC		C			; B = 1
00024E: 6000  			MOV		A,@0x00		; 0x00-0x7F
00024F: 0150  			MOV		0x50,A		; [0x50] = 0x00
000250: 607F  			MOV		A,@0x7F		; A = 0x01
000251: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000252: 3003  			JBC		C			; Check C = 0?
000253: 507A  			JMP	INS_FAIL
000254: 3103  			JBC		DC			; Check DC = 0?
000255: 507A  			JMP	INS_FAIL
000256: 3203  			JBC		Z			; Check Z = 0?
000257: 507A  			JMP	INS_FAIL
000258: 3503  			JBC		OV			; Check OV = 0?
000259: 507A  			JMP	INS_FAIL
00025A: 3E03  			JBS		N			; Check N = 1?
00025B: 507A  			JMP	INS_FAIL
00025C: 6C80  			XOR		A,@0x80		; Check Result ?
00025D: 40E1  			CALL	INST_XOR_JUDGE
00025E: 40DE  			CALL	STATUS_CLEAR
00025F: 2003  			BC		C			; B = 1
000260: 6080  			MOV		A,@0x80		; 0x80-0x01
000261: 0150  			MOV		0x50,A		; [0x50] = 0x80
000262: 6001  			MOV		A,@0x01		; A = 0x01
000263: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000264: 3803  			JBS		C			; Check C = 1?
000265: 507A  			JMP	INS_FAIL
000266: 3103  			JBC		DC			; Check DC = 0?
000267: 507A  			JMP	INS_FAIL
000268: 3203  			JBC		Z			; Check Z = 0?
000269: 507A  			JMP	INS_FAIL
00026A: 3D03  			JBS		OV			; Check OV = 1?
00026B: 507A  			JMP	INS_FAIL
00026C: 3603  			JBC		N			; Check N = 0?
00026D: 507A  			JMP	INS_FAIL
00026E: 6C7E  			XOR		A,@0x7E		; Check Result ?
00026F: 40E1  			CALL	INST_XOR_JUDGE
000270: 6032  			MOV		A,@0x32
000271: 015A  			MOV		INST,A
000272: 40DE  			CALL	STATUS_CLEAR
000273: 2003  			BC		C			; B = 1
000274: 6000  			MOV		A,@0x00		; 0x00-0xFF
000275: 0150  			MOV		0x50,A		; [0x50] = 0x00
000276: 60FF  			MOV		A,@0xFF
000277: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000278: 1003  			MOV		A,STATUS
000279: 6C1C  			XOR		A,@0x1C		; Check Status ?
00027A: 40E1  			CALL	INST_XOR_JUDGE
00027B: 1050  			MOV		A,0x50
00027C: 6C00  			XOR		A,@0x00		; Check Result ?
00027D: 40E1  			CALL	INST_XOR_JUDGE
00027E: 40DE  			CALL	STATUS_CLEAR
00027F: 2003  			BC		C			; B = 1
000280: 6000  			MOV		A,@0x00		; 0x00-0x7F
000281: 0150  			MOV		0x50,A		; [0x50] = 0x00
000282: 607F  			MOV		A,@0x7F
000283: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000284: 1003  			MOV		A,STATUS
000285: 6C58  			XOR		A,@0x58		; Check Status ?
000286: 40E1  			CALL	INST_XOR_JUDGE
000287: 1050  			MOV		A,0x50
000288: 6C80  			XOR		A,@0x80		; Check Result ?
000289: 40E1  			CALL	INST_XOR_JUDGE
00028A: 40DE  			CALL	STATUS_CLEAR
00028B: 2003  			BC		C			; B = 1
00028C: 6080  			MOV		A,@0x80		; ,0x80-0x01
00028D: 0150  			MOV		0x50,A		; [0x50] = 0x80
00028E: 6001  			MOV		A,@0x01
00028F: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000290: 1003  			MOV		A,STATUS
000291: 6C39  			XOR		A,@0x39		; Check Status ?
000292: 40E1  			CALL	INST_XOR_JUDGE
000293: 1050  			MOV		A,0x50
000294: 6C7E  			XOR		A,@0x7E		; Check Result ?
000295: 40E1  			CALL	INST_XOR_JUDGE
000296: 600C  			MOV		A,@0x0C
000297: 015A  			MOV		INST,A
000298: 6000  			MOV		A,@0x00
000299: 0103  			MOV		STATUS,A
00029A: 6020  			MOV		A,@0x20		; 0x20-1
00029B: 0150  			MOV		0x50,A		; [0x50] = 0x20
00029C: 0650  			DECA	0x50		; A = [0x50] - 1
00029D: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00029E: 507A  			JMP	INS_FAIL
00029F: 3103  			JBC		DC			; Check DC = 0?
0002A0: 507A  			JMP	INS_FAIL
0002A1: 3203  			JBC		Z			; Check Z = 0?
0002A2: 507A  			JMP	INS_FAIL
0002A3: 3503  			JBC		OV			; Check OV = 0?
0002A4: 507A  			JMP	INS_FAIL
0002A5: 3603  			JBC		N			; Check N = 0?
0002A6: 507A  			JMP	INS_FAIL
0002A7: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002A8: 3A03  			JBS		Z			; Check Z = 1?
0002A9: 507A  			JMP	INS_FAIL
0002AA: 3603  			JBC		N			; Check N = 0?
0002AB: 507A  			JMP	INS_FAIL
0002AC: 6000  			MOV		A,@0x00
0002AD: 0103  			MOV		STATUS,A
0002AE: 6001  			MOV		A,@0x01		; 0x01-1
0002AF: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002B0: 0650  			DECA	0x50		; A = [0x50] - 1
0002B1: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002B2: 507A  			JMP	INS_FAIL
0002B3: 3903  			JBS		DC			; Check DC = 1?
0002B4: 507A  			JMP	INS_FAIL
0002B5: 3A03  			JBS		Z			; Check Z = 1?
0002B6: 507A  			JMP	INS_FAIL
0002B7: 3503  			JBC		OV			; Check OV = 0?
0002B8: 507A  			JMP	INS_FAIL
0002B9: 3603  			JBC		N			; Check N = 0?
0002BA: 507A  			JMP	INS_FAIL
0002BB: 2203  			BC		Z
0002BC: 6C00  			XOR		A,@0x00		; Check Result ?
0002BD: 3A03  			JBS		Z			; Check Z = 1?
0002BE: 507A  			JMP	INS_FAIL
0002BF: 3603  			JBC		N			; Check N = 0?
0002C0: 507A  			JMP	INS_FAIL
0002C1: 6000  			MOV		A,@0x00
0002C2: 0103  			MOV		STATUS,A
0002C3: 6000  			MOV		A,@0x00		; 0x00-1
0002C4: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002C5: 0650  			DECA	0x50		; A = [0x50] - 1
0002C6: 3003  			JBC		C			; Check C = 0?
0002C7: 507A  			JMP	INS_FAIL
0002C8: 3103  			JBC		DC			; Check DC = 0?
0002C9: 507A  			JMP	INS_FAIL
0002CA: 3203  			JBC		Z			; Check Z = 0?
0002CB: 507A  			JMP	INS_FAIL
0002CC: 3503  			JBC		OV			; Check OV = 0?
0002CD: 507A  			JMP	INS_FAIL
0002CE: 3E03  			JBS		N			; Check N = 1?
0002CF: 507A  			JMP	INS_FAIL
0002D0: 2203  			BC		Z
0002D1: 2603  			BC		N
0002D2: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002D3: 3A03  			JBS		Z			; Check Z = 1?
0002D4: 507A  			JMP	INS_FAIL
0002D5: 3603  			JBC		N			; Check N = 0?
0002D6: 507A  			JMP	INS_FAIL
0002D7: 6000  			MOV		A,@0x00
0002D8: 0103  			MOV		STATUS,A
0002D9: 6080  			MOV		A,@0x80		; 0x80-1
0002DA: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002DB: 0650  			DECA	0x50		; A = [0x50] - 1
0002DC: 3803  			JBS		C			; Check C = 1?
0002DD: 507A  			JMP	INS_FAIL
0002DE: 3103  			JBC		DC			; Check DC = 0?
0002DF: 507A  			JMP	INS_FAIL
0002E0: 3203  			JBC		Z			; Check Z = 0?
0002E1: 507A  			JMP	INS_FAIL
0002E2: 3D03  			JBS		OV			; Check OV = 1?
0002E3: 507A  			JMP	INS_FAIL
0002E4: 3603  			JBC		N			; Check N = 0?
0002E5: 507A  			JMP	INS_FAIL
0002E6: 2203  			BC		Z
0002E7: 2603  			BC		N
0002E8: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002E9: 3A03  			JBS		Z			; Check Z = 1?
0002EA: 507A  			JMP	INS_FAIL
0002EB: 3603  			JBC		N			; Check N = 0?
0002EC: 507A  			JMP	INS_FAIL
0002ED: 600D  			MOV		A,@0x0D
0002EE: 015A  			MOV		INST,A
0002EF: 6000  			MOV		A,@0x00
0002F0: 0103  			MOV		STATUS,A
0002F1: 6020  			MOV		A,@0x20		; 0x20-1
0002F2: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002F3: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002F4: 1003  			MOV		A,STATUS
0002F5: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002F6: 3A03  			JBS		Z			; Check Z = 1?
0002F7: 507A  			JMP	INS_FAIL
0002F8: 3603  			JBC		N			; Check N = 0?
0002F9: 507A  			JMP	INS_FAIL
0002FA: 2203  			BC		Z
0002FB: 1050  			MOV		A,0x50
0002FC: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002FD: 3A03  			JBS		Z			; Check Z = 1?
0002FE: 507A  			JMP	INS_FAIL
0002FF: 3603  			JBC		N			; Check N = 0?
000300: 507A  			JMP	INS_FAIL
000301: 6000  			MOV		A,@0x00
000302: 0103  			MOV		STATUS,A
000303: 6001  			MOV		A,@0x01		; 0x01-1
000304: 0150  			MOV		0x50,A		; [0x50] = 0x01
000305: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000306: 1003  			MOV		A,STATUS
000307: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000308: 3A03  			JBS		Z			; Check Z = 1?
000309: 507A  			JMP	INS_FAIL
00030A: 3603  			JBC		N			; Check N = 0?
00030B: 507A  			JMP	INS_FAIL
00030C: 2203  			BC		Z
00030D: 1050  			MOV		A,0x50
00030E: 6C00  			XOR		A,@0x00		; Check Result ?
00030F: 3A03  			JBS		Z			; Check Z = 1?
000310: 507A  			JMP	INS_FAIL
000311: 3603  			JBC		N			; Check N = 0?
000312: 507A  			JMP	INS_FAIL
000313: 6000  			MOV		A,@0x00
000314: 0103  			MOV		STATUS,A
000315: 6000  			MOV		A,@0x00		; 0x00-1
000316: 0150  			MOV		0x50,A		; [0x50] = 0x00
000317: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000318: 1003  			MOV		A,STATUS
000319: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00031A: 3A03  			JBS		Z			; Check Z = 1?
00031B: 507A  			JMP	INS_FAIL
00031C: 3603  			JBC		N			; Check N = 0?
00031D: 507A  			JMP	INS_FAIL
00031E: 2203  			BC		Z
00031F: 1050  			MOV		A,0x50
000320: 6CFF  			XOR		A,@0xFF		; Check Result ?
000321: 3A03  			JBS		Z			; Check Z = 1?
000322: 507A  			JMP	INS_FAIL
000323: 3603  			JBC		N			; Check N = 0?
000324: 507A  			JMP	INS_FAIL
000325: 6000  			MOV		A,@0x00
000326: 0103  			MOV		STATUS,A
000327: 6080  			MOV		A,@0x80		; 0x80-1
000328: 0150  			MOV		0x50,A		; [0x50] = 0x80
000329: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00032A: 1003  			MOV		A,STATUS
00032B: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
00032C: 3A03  			JBS		Z			; Check Z = 1?
00032D: 507A  			JMP	INS_FAIL
00032E: 3603  			JBC		N			; Check N = 0?
00032F: 507A  			JMP	INS_FAIL
000330: 2203  			BC		Z
000331: 1050  			MOV		A,0x50
000332: 6C7F  			XOR		A,@0x7F		; Check Result ?
000333: 3A03  			JBS		Z			; Check Z = 1?
000334: 507A  			JMP	INS_FAIL
000335: 3603  			JBC		N			; Check N = 0?
000336: 507A  			JMP	INS_FAIL
000337: 6012  			MOV		A,@0x12
000338: 015A  			MOV		INST,A
000339: 40DE  			CALL	STATUS_CLEAR	; 0x80+0x7F
00033A: 6080  			MOV		A,@0x80
00033B: 0150  			MOV		0x50,A		; [0x50] = 0x80
00033C: 607F  			MOV		A,@0x7F		; 
00033D: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
00033E: 3003  			JBC		C			; Check C = 0?
00033F: 507A  			JMP	INS_FAIL
000340: 3103  			JBC		DC			; Check DC = 0?
000341: 507A  			JMP	INS_FAIL
000342: 3203  			JBC		Z			; Check Z = 0?
000343: 507A  			JMP	INS_FAIL
000344: 3503  			JBC		OV			; Check OV = 0?
000345: 507A  			JMP	INS_FAIL
000346: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000347: 507A  			JMP	INS_FAIL
000348: 2203  			BC		Z
000349: 2603  			BC		N
00034A: 6CFF  			XOR		A,@0xFF		; Check Result ?
00034B: 3A03  			JBS		Z			; Check Z = 1?
00034C: 507A  			JMP	INS_FAIL
00034D: 3603  			JBC		N			; Check N = 0?
00034E: 507A  			JMP	INS_FAIL
00034F: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
000350: 60FF  			MOV		A,@0xFF
000351: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000352: 6001  			MOV		A,@0x01		; 
000353: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
000354: 3803  			JBS		C			; Check C = 1?
000355: 507A  			JMP	INS_FAIL
000356: 3903  			JBS		DC			; Check DC = 1?
000357: 507A  			JMP	INS_FAIL
000358: 3A03  			JBS		Z			; Check Z = 1?
000359: 507A  			JMP	INS_FAIL
00035A: 3503  			JBC		OV			; Check OV = 0?
00035B: 507A  			JMP	INS_FAIL
00035C: 3603  			JBC		N			; Check N = 0?
00035D: 507A  			JMP	INS_FAIL
00035E: 2203  			BC		Z
00035F: 2603  			BC		N
000360: 6C00  			XOR		A,@0x00		; Check Result ?
000361: 3A03  			JBS		Z			; Check Z = 1?
000362: 507A  			JMP	INS_FAIL
000363: 3603  			JBC		N			; Check N = 0?
000364: 507A  			JMP	INS_FAIL
000365: 40DE  			CALL	STATUS_CLEAR	; 0x7F+0x01
000366: 607F  			MOV		A,@0x7F
000367: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000368: 6001  			MOV		A,@0x01		; 
000369: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
00036A: 3003  			JBC		C			; Check C = 0?
00036B: 507A  			JMP	INS_FAIL
00036C: 3903  			JBS		DC			; Check DC = 1?
00036D: 507A  			JMP	INS_FAIL
00036E: 3203  			JBC		Z			; Check Z = 0?
00036F: 507A  			JMP	INS_FAIL
000370: 3D03  			JBS		OV			; Check OV = 1?
000371: 507A  			JMP	INS_FAIL
000372: 3E03  			JBS		N			; Check N = 1?
000373: 507A  			JMP	INS_FAIL
000374: 2203  			BC		Z
000375: 2603  			BC		N
000376: 6C80  			XOR		A,@0x80		; Check Result ?
000377: 3A03  			JBS		Z			; Check Z = 1?
000378: 507A  			JMP	INS_FAIL
000379: 3603  			JBC		N			; Check N = 0?
00037A: 507A  			JMP	INS_FAIL
00037B: 6013  			MOV		A,@0x13
00037C: 015A  			MOV		INST,A
00037D: 40DE  			CALL	STATUS_CLEAR	; 0x80+0x7F
00037E: 6080  			MOV		A,@0x80
00037F: 0150  			MOV		0x50,A		; [0x50] = 0x80
000380: 607F  			MOV		A,@0x7F		; A = 0x7F
000381: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
000382: 1003  			MOV		A,STATUS
000383: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000384: 3A03  			JBS		Z			; Check Z = 1?
000385: 507A  			JMP	INS_FAIL
000386: 3603  			JBC		N			; Check N = 0?
000387: 507A  			JMP	INS_FAIL
000388: 1050  			MOV		A,0x50
000389: 6CFF  			XOR		A,@0xFF		; Check Result ?
00038A: 3A03  			JBS		Z			; Check Z = 1?
00038B: 507A  			JMP	INS_FAIL
00038C: 3603  			JBC		N			; Check N = 0?
00038D: 507A  			JMP	INS_FAIL
00038E: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
00038F: 60FF  			MOV		A,@0xFF
000390: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000391: 6001  			MOV		A,@0x01		; A = 0x01
000392: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
000393: 1003  			MOV		A,STATUS
000394: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000395: 3A03  			JBS		Z			; Check Z = 1?
000396: 507A  			JMP	INS_FAIL
000397: 3603  			JBC		N			; Check N = 0?
000398: 507A  			JMP	INS_FAIL
000399: 1050  			MOV		A,0x50
00039A: 6C00  			XOR		A,@0x00		; Check Result ?
00039B: 3A03  			JBS		Z			; Check Z = 1?
00039C: 507A  			JMP	INS_FAIL
00039D: 3603  			JBC		N			; Check N = 0?
00039E: 507A  			JMP	INS_FAIL
00039F: 40DE  			CALL	STATUS_CLEAR	;0x7F+0x01
0003A0: 607F  			MOV		A,@0x7F
0003A1: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003A2: 6001  			MOV		A,@0x01		; A = 0x01
0003A3: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
0003A4: 1003  			MOV		A,STATUS
0003A5: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
0003A6: 3A03  			JBS		Z			; Check Z = 1?
0003A7: 507A  			JMP	INS_FAIL
0003A8: 3603  			JBC		N			; Check N = 0?
0003A9: 507A  			JMP	INS_FAIL
0003AA: 1050  			MOV		A,0x50
0003AB: 6C80  			XOR		A,@0x80		; Check Result ?
0003AC: 3A03  			JBS		Z			; Check Z = 1?
0003AD: 507A  			JMP	INS_FAIL
0003AE: 3603  			JBC		N			; Check N = 0?
0003AF: 507A  			JMP	INS_FAIL
0003B0: 6034  			MOV		A,@0x34
0003B1: 015A  			MOV		INST,A
0003B2: 40DE  			CALL	STATUS_CLEAR
0003B3: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003B4: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003B5: 3003  			JBC		C			; Check C = 0?
0003B6: 507A  			JMP	INS_FAIL
0003B7: 3903  			JBS		DC			; Check DC = 1?
0003B8: 507A  			JMP	INS_FAIL
0003B9: 3203  			JBC		Z			; Check Z = 0?
0003BA: 507A  			JMP	INS_FAIL
0003BB: 3D03  			JBS		OV			; Check OV = 1?
0003BC: 507A  			JMP	INS_FAIL
0003BD: 3E03  			JBS		N			; Check N = 1?
0003BE: 507A  			JMP	INS_FAIL
0003BF: 6C80  			XOR		A,@0x80		; Check Result ?
0003C0: 40E1  			CALL	INST_XOR_JUDGE
0003C1: 40DE  			CALL	STATUS_CLEAR
0003C2: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003C3: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003C4: 3803  			JBS		C			; Check C = 1?
0003C5: 507A  			JMP	INS_FAIL
0003C6: 3903  			JBS		DC			; Check DC = 1?
0003C7: 507A  			JMP	INS_FAIL
0003C8: 3A03  			JBS		Z			; Check Z = 1?
0003C9: 507A  			JMP	INS_FAIL
0003CA: 3503  			JBC		OV			; Check OV = 0?
0003CB: 507A  			JMP	INS_FAIL
0003CC: 3603  			JBC		N			; Check N = 0?
0003CD: 507A  			JMP	INS_FAIL
0003CE: 6C00  			XOR		A,@0x00		; Check Result ?
0003CF: 40E1  			CALL	INST_XOR_JUDGE
0003D0: 40DE  			CALL	STATUS_CLEAR
0003D1: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003D2: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003D3: 3003  			JBC		C			; Check C = 0?
0003D4: 507A  			JMP	INS_FAIL
0003D5: 3103  			JBC		DC			; Check DC = 0?
0003D6: 507A  			JMP	INS_FAIL
0003D7: 3203  			JBC		Z			; Check Z = 0?
0003D8: 507A  			JMP	INS_FAIL
0003D9: 3503  			JBC		OV			; Check OV = 0?
0003DA: 507A  			JMP	INS_FAIL
0003DB: 3E03  			JBS		N			; Check N = 1?
0003DC: 507A  			JMP	INS_FAIL
0003DD: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003DE: 40E1  			CALL	INST_XOR_JUDGE
0003DF: 6036  			MOV		A,@0x36
0003E0: 015A  			MOV		INST,A
0003E1: 40DE  			CALL	STATUS_CLEAR
0003E2: 2803  			BS		C			; 0x7F+0x00
0003E3: 607F  			MOV		A,@0x7F		
0003E4: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003E5: 6000  			MOV		A,@0x00		; A = 0x00
0003E6: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003E7: 3003  			JBC		C			; Check C = 0?
0003E8: 507A  			JMP	INS_FAIL
0003E9: 3903  			JBS		DC			; Check DC = 1?
0003EA: 507A  			JMP	INS_FAIL
0003EB: 3203  			JBC		Z			; Check Z = 0?
0003EC: 507A  			JMP	INS_FAIL
0003ED: 3D03  			JBS		OV			; Check OV = 1?
0003EE: 507A  			JMP	INS_FAIL
0003EF: 3E03  			JBS		N			; Check N = 1?
0003F0: 507A  			JMP	INS_FAIL
0003F1: 6C80  			XOR		A,@0x80		; Check Result ?
0003F2: 40E1  			CALL	INST_XOR_JUDGE
0003F3: 40DE  			CALL	STATUS_CLEAR
0003F4: 2803  			BS		C			; 0x80+0x7F
0003F5: 6080  			MOV		A,@0x80
0003F6: 0150  			MOV		0x50,A		; [0x50] = 0x80
0003F7: 607F  			MOV		A,@0x7F		; A = 0x7F
0003F8: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003F9: 3803  			JBS		C			; Check C = 1?
0003FA: 507A  			JMP	INS_FAIL
0003FB: 3903  			JBS		DC			; Check DC = 1?
0003FC: 507A  			JMP	INS_FAIL
0003FD: 3A03  			JBS		Z			; Check Z = 1?
0003FE: 507A  			JMP	INS_FAIL
0003FF: 3503  			JBC		OV			; Check OV = 0?
000400: 507A  			JMP	INS_FAIL
000401: 3603  			JBC		N			; Check N = 0?
000402: 507A  			JMP	INS_FAIL
000403: 6C00  			XOR		A,@0x00		; Check Result ?
000404: 40E1  			CALL	INST_XOR_JUDGE
000405: 6037  			MOV		A,@0x37
000406: 015A  			MOV		INST,A
000407: 40DE  			CALL	STATUS_CLEAR
000408: 2803  			BS		C			;0x7F+0x00
000409: 607F  			MOV		A,@0x7F
00040A: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00040B: 6000  			MOV		A,@0x00		; A = 0x00
00040C: 2203  			BC		Z
00040D: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
00040E: 1003  			MOV		A,STATUS
00040F: 6C7A  			XOR		A,@0x7A		; Check Status ?
000410: 40E1  			CALL	INST_XOR_JUDGE
000411: 1050  			MOV		A,0x50
000412: 6C80  			XOR		A,@0x80		; Check Result ?
000413: 40E1  			CALL	INST_XOR_JUDGE
000414: 40DE  			CALL	STATUS_CLEAR
000415: 2803  			BS		C			;0x80+0x7F
000416: 6080  			MOV		A,@0x80
000417: 0150  			MOV		0x50,A		; [0x50] = 0x80
000418: 607F  			MOV		A,@0x7F		; A = 0x7F
000419: 2203  			BC		Z
00041A: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
00041B: 1003  			MOV		A,STATUS
00041C: 6C1F  			XOR		A,@0x1F		; Check Status ?
00041D: 40E1  			CALL	INST_XOR_JUDGE
00041E: 1050  			MOV		A,0x50
00041F: 6C00  			XOR		A,@0x00		; Check Result ?
000420: 40E1  			CALL	INST_XOR_JUDGE
000421: 6017  			MOV		A,@0x17
000422: 015A  			MOV		INST,A
000423: 40DE  			CALL	STATUS_CLEAR	; 0x7F+0x01
000424: 607F  			MOV		A,@0x7F
000425: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000426: 1450  			INCA	0x50		; A = [0x50] +1		
000427: 3003  			JBC		C			; Check C = 0?
000428: 507A  			JMP	INS_FAIL
000429: 3903  			JBS		DC			; Check DC = 1?
00042A: 507A  			JMP	INS_FAIL
00042B: 3203  			JBC		Z			; Check Z = 0?
00042C: 507A  			JMP	INS_FAIL
00042D: 3D03  			JBS		OV			; Check OV = 1?
00042E: 507A  			JMP	INS_FAIL
00042F: 3E03  			JBS		N			; Check N = 1?
000430: 507A  			JMP	INS_FAIL
000431: 2203  			BC		Z
000432: 2603  			BC		N
000433: 6C80  			XOR		A,@0x80		; Check Result ?
000434: 3A03  			JBS		Z			; Check Z = 1?
000435: 507A  			JMP	INS_FAIL
000436: 3603  			JBC		N			; Check N = 0?
000437: 507A  			JMP	INS_FAIL
000438: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
000439: 60FF  			MOV		A,@0xFF
00043A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00043B: 1450  			INCA	0x50		; A = [0x50] +1		
00043C: 3803  			JBS		C			; Check C = 1?
00043D: 507A  			JMP	INS_FAIL
00043E: 3903  			JBS		DC			; Check DC = 1?
00043F: 507A  			JMP	INS_FAIL
000440: 3A03  			JBS		Z			; Check Z = 1?
000441: 507A  			JMP	INS_FAIL
000442: 3503  			JBC		OV			; Check OV = 0?
000443: 507A  			JMP	INS_FAIL
000444: 3603  			JBC		N			; Check N = 0?
000445: 507A  			JMP	INS_FAIL
000446: 2203  			BC		Z
000447: 2603  			BC		N
000448: 6C00  			XOR		A,@0x00		; Check Result ?
000449: 3A03  			JBS		Z			; Check Z = 1?
00044A: 507A  			JMP	INS_FAIL
00044B: 3603  			JBC		N			; Check N = 0?
00044C: 507A  			JMP	INS_FAIL
00044D: 6018  			MOV		A,@0x18
00044E: 015A  			MOV		INST,A
00044F: 40DE  			CALL 	STATUS_CLEAR	; 0x7F+0x01
000450: 607F  			MOV		A,@0x7F
000451: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000452: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000453: 1003  			MOV		A,STATUS
000454: 6C7A  			XOR		A,@0x7A		; Check Status ?
000455: 3A03  			JBS		Z			; Check Z = 1?
000456: 507A  			JMP	INS_FAIL
000457: 3603  			JBC		N			; Check N = 0?
000458: 507A  			JMP	INS_FAIL
000459: 1050  			MOV		A,0x50
00045A: 6C80  			XOR		A,@0x80		; Check Result ?
00045B: 3A03  			JBS		Z			; Check Z = 1?
00045C: 507A  			JMP	INS_FAIL
00045D: 3603  			JBC		N			; Check N = 0?
00045E: 507A  			JMP	INS_FAIL
00045F: 40DE  			CALL	STATUS_CLEAR	; 0xFF+0x01
000460: 60FF  			MOV		A,@0xFF
000461: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000462: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000463: 1003  			MOV		A,STATUS
000464: 6C1F  			XOR		A,@0x1F		; Check Status ?
000465: 3A03  			JBS		Z			; Check Z = 1?
000466: 507A  			JMP	INS_FAIL
000467: 3603  			JBC		N			; Check N = 0?
000468: 507A  			JMP	INS_FAIL
000469: 1050  			MOV		A,0x50
00046A: 6C00  			XOR		A,@0x00		; Check Result ?
00046B: 3A03  			JBS		Z			; Check Z = 1?
00046C: 507A  			JMP	INS_FAIL
00046D: 3603  			JBC		N			; Check N = 0?
00046E: 507A  			JMP	INS_FAIL
00046F: 6035  			MOV		A,@0x35
000470: 015A  			MOV		INST,A
000471: 40DE  			CALL	STATUS_CLEAR
000472: 6000  			MOV		A,@0x00		; 0x00
000473: 0150  			MOV		0x50,A		; [0x50] = 0x00
000474: 7D50  			NEG		0x50
000475: 1003  			MOV		A,STATUS
000476: 6C1F  			XOR		A,@0x1F		; Check Status ?
000477: 40E1  			CALL	INST_XOR_JUDGE
000478: 1050  			MOV		A,0x50
000479: 6C00  			XOR		A,@0x00		; Check Result ?
00047A: 40E1  			CALL	INST_XOR_JUDGE
00047B: 40DE  			CALL	STATUS_CLEAR
00047C: 6001  			MOV		A,@0x01		; 0x01
00047D: 0150  			MOV		0x50,A		; [0x50] = 0x01
00047E: 7D50  			NEG		0x50
00047F: 1003  			MOV		A,STATUS
000480: 6C58  			XOR		A,@0x58		; Check Status ?
000481: 40E1  			CALL	INST_XOR_JUDGE
000482: 1050  			MOV		A,0x50
000483: 6CFF  			XOR		A,@0xFF		; Check Result ?
000484: 4677  			CALL	INST_XCH
000485: 40DE  			CALL	STATUS_CLEAR
000486: 6080  			MOV		A,@0x80		; 0x80
000487: 0150  			MOV		0x50,A		; [0x50] = 0x80
000488: 7D50  			NEG		0x50
000489: 1003  			MOV		A,STATUS
00048A: 6C7A  			XOR		A,@0x7A		; Check Status ?
00048B: 40E1  			CALL	INST_XOR_JUDGE
00048C: 1050  			MOV		A,0x50
00048D: 6C80  			XOR		A,@0x80		; Check Result ?
00048E: 40E1  			CALL	INST_XOR_JUDGE
00048F: 0012  		RET
000490: 6006  			MOV		A,@0x06
000491: 015A  			MOV		INST,A
000492: 40DE  			CALL	STATUS_CLEAR
000493: 60FF  			MOV		A,@0xFF
000494: 0104  			MOV		RSR,A		; Start Address
000495: 0084  			BTG		RSR
000496: 1004  			MOV		A,RSR
000497: 6CFE  			XOR		A,@0xFE		; Check Result ?
000498: 40E1  			CALL	INST_XOR_JUDGE
000499: 600E  			MOV		A,@0x0E
00049A: 015A  			MOV		INST,A
00049B: 6000  			MOV		A,@0x00
00049C: 0103  			MOV		STATUS,A
00049D: 6000  			MOV		A,@0x00
00049E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00049F: 6000  			MOV		A,@0x00
0004A0: 2203  			BC		Z
0004A1: 0850  			OR		A,0x50		; A = A | [0x50]
0004A2: 3003  			JBC		C			; Check C = 0?
0004A3: 507A  			JMP	INS_FAIL
0004A4: 3103  			JBC		DC			; Check DC = 0?
0004A5: 507A  			JMP	INS_FAIL
0004A6: 3A03  			JBS		Z			; Check Z = 1?
0004A7: 507A  			JMP	INS_FAIL
0004A8: 3503  			JBC		OV			; Check OV = 0?
0004A9: 507A  			JMP	INS_FAIL
0004AA: 3603  			JBC		N			; Check N = 0?
0004AB: 507A  			JMP	INS_FAIL
0004AC: 2203  			BC		Z
0004AD: 6C00  			XOR		A,@0x00		; Check Result ?
0004AE: 3A03  			JBS		Z			; Check Z = 1?
0004AF: 507A  			JMP	INS_FAIL
0004B0: 3603  			JBC		N			; Check N = 0?
0004B1: 507A  			JMP	INS_FAIL
0004B2: 6000  			MOV		A,@0x00
0004B3: 0103  			MOV		STATUS,A
0004B4: 6055  			MOV		A,@0x55
0004B5: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004B6: 60AA  			MOV		A,@0xAA
0004B7: 2203  			BC		Z
0004B8: 0850  			OR		A,0x50		; A = A | [0x50]
0004B9: 3003  			JBC		C			; Check C = 0?
0004BA: 507A  			JMP	INS_FAIL
0004BB: 3103  			JBC		DC			; Check DC = 0?
0004BC: 507A  			JMP	INS_FAIL
0004BD: 3203  			JBC		Z			; Check Z = 0?
0004BE: 507A  			JMP	INS_FAIL
0004BF: 3503  			JBC		OV			; Check OV = 0?
0004C0: 507A  			JMP	INS_FAIL
0004C1: 3E03  			JBS		N			; Check N = 1?
0004C2: 507A  			JMP	INS_FAIL
0004C3: 2203  			BC		Z
0004C4: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004C5: 3A03  			JBS		Z			; Check Z = 1?
0004C6: 507A  			JMP	INS_FAIL
0004C7: 3603  			JBC		N			; Check N = 0?
0004C8: 507A  			JMP	INS_FAIL
0004C9: 600F  			MOV		A,@0x0F
0004CA: 015A  			MOV		INST,A
0004CB: 6000  			MOV		A,@0x00
0004CC: 0103  			MOV		STATUS,A
0004CD: 6000  			MOV		A,@0x00
0004CE: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004CF: 6000  			MOV		A,@0x00		; A = 0x00
0004D0: 2203  			BC		Z
0004D1: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0004D2: 1003  			MOV		A,STATUS
0004D3: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004D4: 3A03  			JBS		Z			; Check Z = 1?
0004D5: 507A  			JMP	INS_FAIL
0004D6: 3603  			JBC		N			; Check N = 0?
0004D7: 507A  			JMP	INS_FAIL
0004D8: 1050  			MOV		A,0x50		; A = Result[0x50]
0004D9: 2203  			BC		Z
0004DA: 2603  			BC		N
0004DB: 6C00  			XOR		A,@0x00		; Check Result ?
0004DC: 3A03  			JBS		Z			; Check Z = 1?
0004DD: 507A  			JMP	INS_FAIL
0004DE: 3603  			JBC		N			; Check N = 0?
0004DF: 507A  			JMP	INS_FAIL
0004E0: 6000  			MOV		A,@0x00
0004E1: 0103  			MOV		STATUS,A
0004E2: 6055  			MOV		A,@0x55
0004E3: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004E4: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004E5: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004E6: 1003  			MOV		A,STATUS
0004E7: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004E8: 3A03  			JBS		Z			; Check Z = 1?
0004E9: 507A  			JMP	INS_FAIL
0004EA: 3603  			JBC		N			; Check N = 0?
0004EB: 507A  			JMP	INS_FAIL
0004EC: 1050  			MOV		A,0x50
0004ED: 2203  			BC		Z
0004EE: 2603  			BC		N
0004EF: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004F0: 3A03  			JBS		Z			; Check Z = 1?
0004F1: 507A  			JMP	INS_FAIL
0004F2: 3603  			JBC		N			; Check N = 0?
0004F3: 507A  			JMP	INS_FAIL
0004F4: 6010  			MOV		A,@0x10
0004F5: 015A  			MOV		INST,A
0004F6: 40DE  			CALL	STATUS_CLEAR
0004F7: 6055  			MOV		A,@0x55
0004F8: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004F9: 60AA  			MOV		A,@0xAA
0004FA: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
0004FB: 3003  			JBC		C			; Check C = 0?
0004FC: 507A  			JMP	INS_FAIL
0004FD: 3103  			JBC		DC			; Check DC = 0?
0004FE: 507A  			JMP	INS_FAIL
0004FF: 3A03  			JBS		Z			; Check Z = 1?
000500: 507A  			JMP	INS_FAIL
000501: 3503  			JBC		OV			; Check OV = 0?
000502: 507A  			JMP	INS_FAIL
000503: 3603  			JBC		N			; Check N = 0?
000504: 507A  			JMP	INS_FAIL
000505: 6C00  			XOR		A,@0x00		; Check Result ?
000506: 3A03  			JBS		Z			; Check Z = 1?
000507: 507A  			JMP	INS_FAIL
000508: 3603  			JBC		N			; Check N = 0?
000509: 507A  			JMP	INS_FAIL
00050A: 40DE  			CALL	STATUS_CLEAR
00050B: 60F5  			MOV		A,@0xF5
00050C: 0150  			MOV		0x50,A		; [0x50] = 0xF5
00050D: 60FA  			MOV		A,@0xFA
00050E: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
00050F: 3003  			JBC		C			; Check C = 0?
000510: 507A  			JMP	INS_FAIL
000511: 3103  			JBC		DC			; Check DC = 0?
000512: 507A  			JMP	INS_FAIL
000513: 3203  			JBC		Z			; Check Z = 0?
000514: 507A  			JMP	INS_FAIL
000515: 3503  			JBC		OV			; Check OV = 0?
000516: 507A  			JMP	INS_FAIL
000517: 3E03  			JBS		N			; Check N = 1?
000518: 507A  			JMP	INS_FAIL
000519: 6CF0  			XOR		A,@0xF0		; Check Result ?
00051A: 3A03  			JBS		Z			; Check Z = 1?
00051B: 507A  			JMP	INS_FAIL
00051C: 3603  			JBC		N			; Check N = 0?
00051D: 507A  			JMP	INS_FAIL
00051E: 6011  			MOV		A,@0x11
00051F: 015A  			MOV		INST,A
000520: 40DE  			CALL	STATUS_CLEAR
000521: 6055  			MOV		A,@0x55
000522: 0150  			MOV		0x50,A		; [0x50] = 0x55
000523: 60AA  			MOV		A,@0xAA
000524: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
000525: 1003  			MOV		A,STATUS
000526: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
000527: 3A03  			JBS		Z			; Check Z = 1?
000528: 507A  			JMP	INS_FAIL
000529: 3603  			JBC		N			; Check N = 0?
00052A: 507A  			JMP	INS_FAIL
00052B: 2203  			BC		Z
00052C: 1050  			MOV		A,0x50
00052D: 2203  			BC		Z
00052E: 6C00  			XOR		A,@0x00		; Check Result ?
00052F: 3A03  			JBS		Z			; Check Z = 1?
000530: 507A  			JMP	INS_FAIL
000531: 3603  			JBC		N			; Check N = 0?
000532: 507A  			JMP	INS_FAIL
000533: 40DE  			CALL	STATUS_CLEAR
000534: 60F5  			MOV		A,@0xF5
000535: 0150  			MOV		0x50,A		; [0x50] = 0xF5
000536: 60FA  			MOV		A,@0xFA
000537: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
000538: 1003  			MOV		A,STATUS
000539: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00053A: 3A03  			JBS		Z			; Check Z = 1?
00053B: 507A  			JMP	INS_FAIL
00053C: 3603  			JBC		N			; Check N = 0?
00053D: 507A  			JMP	INS_FAIL
00053E: 2203  			BC		Z
00053F: 1050  			MOV		A,0x50
000540: 2203  			BC		Z
000541: 6CF0  			XOR		A,@0xF0		; Check Result ?
000542: 3A03  			JBS		Z			; Check Z = 1?
000543: 507A  			JMP	INS_FAIL
000544: 3603  			JBC		N			; Check N = 0?
000545: 507A  			JMP	INS_FAIL
000546: 6029  			MOV		A,@0x29
000547: 015A  			MOV		INST,A
000548: 40DE  			CALL	STATUS_CLEAR
000549: 60AA  			MOV		A,@0xAA
00054A: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
00054B: 3003  			JBC		C			; Check C = 0?
00054C: 507A  			JMP	INS_FAIL
00054D: 3103  			JBC		DC			; Check DC = 0?
00054E: 507A  			JMP	INS_FAIL
00054F: 3A03  			JBS		Z			; Check Z = 1?
000550: 507A  			JMP	INS_FAIL
000551: 3503  			JBC		OV			; Check OV = 0?
000552: 507A  			JMP	INS_FAIL
000553: 3603  			JBC		N			; Check N = 0?
000554: 507A  			JMP	INS_FAIL
000555: 6C00  			XOR		A,@0x00		; Check Result ?
000556: 3A03  			JBS		Z			; Check Z = 1?
000557: 507A  			JMP	INS_FAIL
000558: 3603  			JBC		N			; Check N = 0?
000559: 507A  			JMP	INS_FAIL
00055A: 40DE  			CALL	STATUS_CLEAR
00055B: 60AA  			MOV		A,@0xAA
00055C: 68FF  			AND		A,@0xFF		; A = A & 0xFF
00055D: 3003  			JBC		C			; Check C = 0?
00055E: 507A  			JMP	INS_FAIL
00055F: 3103  			JBC		DC			; Check DC = 0?
000560: 507A  			JMP	INS_FAIL
000561: 3203  			JBC		Z			; Check Z = 0?
000562: 507A  			JMP	INS_FAIL
000563: 3503  			JBC		OV			; Check OV = 0?
000564: 507A  			JMP	INS_FAIL
000565: 3E03  			JBS		N			; Check N = 1?
000566: 507A  			JMP	INS_FAIL
000567: 6CAA  			XOR		A,@0xAA		; Check Result ?
000568: 40E1  			CALL	INST_XOR_JUDGE
000569: 6015  			MOV		A,@0x15
00056A: 015A  			MOV		INST,A
00056B: 40DE  			CALL	STATUS_CLEAR
00056C: 60FF  			MOV		A,@0xFF
00056D: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00056E: 1250  			COMA	0x50		; A = /R
00056F: 3003  			JBC		C			; Check C = 0?
000570: 507A  			JMP	INS_FAIL
000571: 3103  			JBC		DC			; Check DC = 0?
000572: 507A  			JMP	INS_FAIL
000573: 3A03  			JBS		Z			; Check Z = 1?
000574: 507A  			JMP	INS_FAIL
000575: 3503  			JBC		OV			; Check OV = 0?
000576: 507A  			JMP	INS_FAIL
000577: 3603  			JBC		N			; Check N = 0?
000578: 507A  			JMP	INS_FAIL
000579: 6C00  			XOR		A,@0x00		; Check Result ?
00057A: 3A03  			JBS		Z			; Check Z = 1?
00057B: 507A  			JMP	INS_FAIL
00057C: 3603  			JBC		N			; Check N = 0?
00057D: 507A  			JMP	INS_FAIL	
00057E: 40DE  			CALL	STATUS_CLEAR
00057F: 6005  			MOV		A,@0x05
000580: 0150  			MOV		0x50,A		; [0x50] = 0x05
000581: 1250  			COMA	0x50		; A = /R
000582: 3003  			JBC		C			; Check C = 0?
000583: 507A  			JMP	INS_FAIL
000584: 3103  			JBC		DC			; Check DC = 0?
000585: 507A  			JMP	INS_FAIL
000586: 3203  			JBC		Z			; Check Z = 0?
000587: 507A  			JMP	INS_FAIL
000588: 3503  			JBC		OV			; Check OV = 0?
000589: 507A  			JMP	INS_FAIL
00058A: 3E03  			JBS		N			; Check N = 1?
00058B: 507A  			JMP	INS_FAIL
00058C: 6CFA  			XOR		A,@0xFA		; Check Result ?
00058D: 3A03  			JBS		Z			; Check Z = 1?
00058E: 507A  			JMP	INS_FAIL
00058F: 3603  			JBC		N			; Check N = 0?
000590: 507A  			JMP	INS_FAIL
000591: 6016  			MOV		A,@0x16
000592: 015A  			MOV		INST,A
000593: 40DE  			CALL	STATUS_CLEAR
000594: 60FF  			MOV		A,@0xFF
000595: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000596: 1350  			COM		0x50		; [0x50] = /[0x50]
000597: 1003  			MOV		A,STATUS
000598: 6C1C  			XOR		A,@0x1C		; Check Status ?
000599: 3A03  			JBS		Z			; Check Z = 1?
00059A: 507A  			JMP	INS_FAIL
00059B: 3603  			JBC		N			; Check N = 0?
00059C: 507A  			JMP	INS_FAIL
00059D: 2203  			BC		Z
00059E: 2603  			BC		N
00059F: 1050  			MOV		A,0x50
0005A0: 6C00  			XOR		A,@0x00		; Check Result ?
0005A1: 3A03  			JBS		Z			; Check Z = 1?
0005A2: 507A  			JMP	INS_FAIL
0005A3: 3603  			JBC		N			; Check N = 0?
0005A4: 507A  			JMP	INS_FAIL
0005A5: 40DE  			CALL	STATUS_CLEAR
0005A6: 6000  			MOV		A,@0x00
0005A7: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0005A8: 1350  			COM		0x50		; [0x50] = /[0x50]
0005A9: 1003  			MOV		A,STATUS
0005AA: 6C58  			XOR		A,@0x58		; Check Status ?
0005AB: 3A03  			JBS		Z			; Check Z = 1?
0005AC: 507A  			JMP	INS_FAIL
0005AD: 3603  			JBC		N			; Check N = 0?
0005AE: 507A  			JMP	INS_FAIL
0005AF: 2203  			BC		Z
0005B0: 2603  			BC		N
0005B1: 1050  			MOV		A,0x50
0005B2: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005B3: 3A03  			JBS		Z			; Check Z = 1?
0005B4: 507A  			JMP	INS_FAIL
0005B5: 3603  			JBC		N			; Check N = 0?
0005B6: 507A  			JMP	INS_FAIL
0005B7: 6026  			MOV		A,@0x26
0005B8: 015A  			MOV		INST,A
0005B9: 40DE  			CALL	STATUS_CLEAR
0005BA: 60A5  			MOV		A,@0xA5
0005BB: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
0005BC: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005BD: 40E1  			CALL	INST_XOR_JUDGE
0005BE: 0012  		RET
0005BF: 602B  			MOV		A,@0x2B
0005C0: 015A  			MOV		INST,A
0005C1: 40DE  			CALL	STATUS_CLEAR
0005C2: 6055  			MOV		A,@0x55
0005C3: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005C4: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
0005C5: 1003  			MOV		A,STATUS
0005C6: 6C58  			XOR		A,@0x58		; Check Status ?
0005C7: 40E1  			CALL	INST_XOR_JUDGE
0005C8: 1050  			MOV		A,0x50
0005C9: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005CA: 40E1  			CALL	INST_XOR_JUDGE
0005CB: 602A  			MOV		A,@0x2A
0005CC: 015A  			MOV		INST,A
0005CD: 40DE  			CALL 	STATUS_CLEAR
0005CE: 6055  			MOV		A,@0x55
0005CF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005D0: 6E50  			RRA		0x50		; A = [0x50] >> 1
0005D1: 3003  			JBC		C			; Check C = 0?
0005D2: 507A  			JMP	INS_FAIL
0005D3: 3103  			JBC		DC			; Check DC = 0?
0005D4: 507A  			JMP	INS_FAIL
0005D5: 3203  			JBC		Z			; Check Z = 0?
0005D6: 507A  			JMP	INS_FAIL
0005D7: 3503  			JBC		OV			; Check OV = 0?
0005D8: 507A  			JMP	INS_FAIL
0005D9: 3E03  			JBS		N			; Check N = 1?
0005DA: 507A  			JMP	INS_FAIL
0005DB: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005DC: 40E1  			CALL	INST_XOR_JUDGE
0005DD: 601B  			MOV		A,@0x1B
0005DE: 015A  			MOV		INST,A
0005DF: 40DE  			CALL	STATUS_CLEAR
0005E0: 2803  			BS		C
0005E1: 60AA  			MOV		A,@0xAA
0005E2: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005E3: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005E4: 3003  			JBC		C			; Check C = 0?
0005E5: 507A  			JMP	INS_FAIL
0005E6: 3103  			JBC		DC			; Check DC = 0?
0005E7: 507A  			JMP	INS_FAIL
0005E8: 3203  			JBC		Z			; Check Z = 0?
0005E9: 507A  			JMP	INS_FAIL
0005EA: 3503  			JBC		OV			; Check OV = 0?
0005EB: 507A  			JMP	INS_FAIL
0005EC: 3E03  			JBS		N			; Check N = 1?
0005ED: 507A  			JMP	INS_FAIL
0005EE: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005EF: 40E1  			CALL	INST_XOR_JUDGE
0005F0: 40DE  			CALL	STATUS_CLEAR
0005F1: 6055  			MOV		A,@0x55
0005F2: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005F3: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005F4: 3803  			JBS		C			; Check C = 1?
0005F5: 507A  			JMP	INS_FAIL
0005F6: 3103  			JBC		DC			; Check DC = 0?
0005F7: 507A  			JMP	INS_FAIL
0005F8: 3203  			JBC		Z			; Check Z = 0?
0005F9: 507A  			JMP	INS_FAIL
0005FA: 3503  			JBC		OV			; Check OV = 0?
0005FB: 507A  			JMP	INS_FAIL
0005FC: 3603  			JBC		N			; Check N = 0?
0005FD: 507A  			JMP	INS_FAIL
0005FE: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005FF: 40E1  			CALL	INST_XOR_JUDGE
000600: 601C  			MOV		A,@0x1C
000601: 015A  			MOV		INST,A
000602: 40DE  			CALL	STATUS_CLEAR
000603: 2803  			BS		C
000604: 60AA  			MOV		A,@0xAA
000605: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000606: 2203  			BC		Z
000607: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
000608: 1003  			MOV		A,STATUS
000609: 6C58  			XOR		A,@0x58		; Check Status ?
00060A: 40E1  			CALL	INST_XOR_JUDGE
00060B: 1050  			MOV		A,0x50
00060C: 6CD5  			XOR		A,@0xD5		; Check Result ?
00060D: 40E1  			CALL	INST_XOR_JUDGE
00060E: 40DE  			CALL	STATUS_CLEAR
00060F: 6055  			MOV		A,@0x55
000610: 0150  			MOV		0x50,A		; [0x50] = 0x55
000611: 2203  			BC		Z
000612: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
000613: 1003  			MOV		A,STATUS
000614: 6C19  			XOR		A,@0x19		; Check Status ?
000615: 3A03  			JBS		Z			; Check Z = 1?
000616: 507A  			JMP	INS_FAIL
000617: 3603  			JBC		N			; Check N = 0?
000618: 507A  			JMP	INS_FAIL
000619: 1050  			MOV		A,0x50
00061A: 6C2A  			XOR		A,@0x2A		; Check Result ?
00061B: 40E1  			CALL	INST_XOR_JUDGE
00061C: 601D  			MOV		A,@0x1D
00061D: 015A  			MOV		INST,A
00061E: 40DE  			CALL STATUS_CLEAR
00061F: 2803  			BS		C
000620: 6055  			MOV		A,@0x55
000621: 0150  			MOV		0x50,A		; [0x50] = 0x55
000622: 1A50  			RLCA	0x50		; A = [0x50] << 1
000623: 3003  			JBC		C			; Check C = 0?
000624: 507A  			JMP	INS_FAIL
000625: 3103  			JBC		DC			; Check DC = 0?
000626: 507A  			JMP	INS_FAIL
000627: 3203  			JBC		Z			; Check Z = 0?
000628: 507A  			JMP	INS_FAIL
000629: 3503  			JBC		OV			; Check OV = 0?
00062A: 507A  			JMP	INS_FAIL
00062B: 3E03  			JBS		N			; Check N = 1?
00062C: 507A  			JMP	INS_FAIL
00062D: 6CAB  			XOR		A,@0xAB		; Check Result ?
00062E: 40E1  			CALL	INST_XOR_JUDGE
00062F: 40DE  			CALL	STATUS_CLEAR
000630: 60AA  			MOV		A,@0xAA
000631: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000632: 1A50  			RLCA	0x50		; A = [0x50] << 1
000633: 3803  			JBS		C			; Check C = 1?
000634: 507A  			JMP	INS_FAIL
000635: 3103  			JBC		DC			; Check DC = 0?
000636: 507A  			JMP	INS_FAIL
000637: 3203  			JBC		Z			; Check Z = 0?
000638: 507A  			JMP	INS_FAIL
000639: 3503  			JBC		OV			; Check OV = 0?
00063A: 507A  			JMP	INS_FAIL
00063B: 3603  			JBC		N			; Check N = 0?
00063C: 507A  			JMP	INS_FAIL
00063D: 6C54  			XOR		A,@0x54		; Check Result ?
00063E: 40E1  			CALL	INST_XOR_JUDGE
00063F: 601E  			MOV		A,@0x1E
000640: 015A  			MOV		INST,A
000641: 40DE  			CALL	STATUS_CLEAR
000642: 2803  			BS		C
000643: 6055  			MOV		A,@0x55
000644: 0150  			MOV		0x50,A		; [0x50] = 0x55
000645: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000646: 1003  			MOV		A,STATUS
000647: 6C58  			XOR		A,@0x58		; Check Status ?
000648: 40E1  			CALL	INST_XOR_JUDGE
000649: 1050  			MOV		A,0x50
00064A: 6CAB  			XOR		A,@0xAB		; Check Result ?
00064B: 40E1  			CALL	INST_XOR_JUDGE
00064C: 40DE  			CALL	STATUS_CLEAR
00064D: 60AA  			MOV		A,@0xAA
00064E: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00064F: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000650: 1003  			MOV		A,STATUS
000651: 6C19  			XOR		A,@0x19		; Check Status ?
000652: 40E1  			CALL	INST_XOR_JUDGE
000653: 1050  			MOV		A,0x50
000654: 6C54  			XOR		A,@0x54		; Check Result ?
000655: 40E1  			CALL	INST_XOR_JUDGE
000656: 602E  			MOV		A,@0x2E
000657: 015A  			MOV		INST,A
000658: 40DE  			CALL	STATUS_CLEAR
000659: 605A  			MOV		A,@0x5A
00065A: 0150  			MOV		0x50,A		; [0x50] = 0x5A
00065B: 7250  			RLA		0x50		; A = [0x50] << 1
00065C: 3003  			JBC		C			; Check C = 0?
00065D: 507A  			JMP	INS_FAIL
00065E: 3103  			JBC		DC			; Check DC = 0?
00065F: 507A  			JMP	INS_FAIL
000660: 3203  			JBC		Z			; Check Z = 0?
000661: 507A  			JMP	INS_FAIL
000662: 3503  			JBC		OV			; Check OV = 0?
000663: 507A  			JMP	INS_FAIL
000664: 3E03  			JBS		N			; Check N = 1?
000665: 507A  			JMP	INS_FAIL
000666: 6CB4  			XOR		A,@0xB4		; Check Result ?
000667: 40E1  			CALL	INST_XOR_JUDGE
000668: 602F  			MOV		A,@0x2F
000669: 015A  			MOV		INST,A
00066A: 40DE  			CALL	STATUS_CLEAR
00066B: 605A  			MOV		A,@0x5A
00066C: 0150  			MOV		0x50,A		; [0x50] = 0xA5
00066D: 7350  			RL		0x50		; [0x50] = [0x50] << 1
00066E: 1003  			MOV		A,STATUS
00066F: 6C58  			XOR		A,@0x58		; Check Status ?
000670: 3A03  			JBS		Z			; Check Z = 1?
000671: 507A  			JMP	INS_FAIL
000672: 3603  			JBC		N			; Check N = 0?
000673: 507A  			JMP	INS_FAIL
000674: 1050  			MOV		A,0x50
000675: 6CB4  			XOR		A,@0xB4		; Check Result ?
000676: 40E1  			CALL	INST_XOR_JUDGE
000677: 602D  			MOV		A,@0x2D
000678: 015A  			MOV		INST,A
000679: 40DE  			CALL	STATUS_CLEAR
00067A: 6055  			MOV		A,@0x55
00067B: 0150  			MOV		0x50,A		; [0x50] = 0x55
00067C: 60AA  			MOV		A,@0xAA
00067D: 7150  			XCH		0x50		; [0x50] <-> A
00067E: 6C55  			XOR		A,@0x55		; Check Result ?
00067F: 3A03  			JBS		Z			; Check Z = 1?
000680: 507A  			JMP	INS_FAIL
000681: 3603  			JBC		N			; Check N = 0?
000682: 507A  			JMP	INS_FAIL
000683: 1050  			MOV		A,0x50
000684: 6CAA  			XOR		A,@0xAA		; Check Result ?
000685: 40E1  			CALL	INST_XOR_JUDGE
000686: 0012  		RET
000687: 6007  			MOV		A,@0x07
000688: 015A  			MOV		INST,A
000689: 40DE  			CALL	STATUS_CLEAR
00068A: 60FF  			MOV		A,@0xFF
00068B: 0150  			MOV		0x50,A
00068C: 1003  			MOV		A,STATUS
00068D: 6C18  			XOR		A,@0x18		;At  OCDS
00068E: 40E1  			CALL	INST_XOR_JUDGE
00068F: 1050  			MOV		A,0x50
000690: 6CFF  			XOR		A,@0xFF		; Check Result ?
000691: 40E1  			CALL	INST_XOR_JUDGE
000692: 6014  			MOV		A,@0x14
000693: 015A  			MOV		INST,A
000694: 40DE  			CALL	STATUS_CLEAR
000695: 6000  			MOV		A,@0x00
000696: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000697: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000698: 1003  			MOV		A,STATUS
000699: 6C1C  			XOR		A,@0x1C		; Check Status ?
00069A: 3A03  			JBS		Z			; Check Z = 1?
00069B: 507A  			JMP	INS_FAIL
00069C: 3603  			JBC		N			; Check N = 0?
00069D: 507A  			JMP	INS_FAIL
00069E: 1050  			MOV		A,0x50
00069F: 2203  			BC		Z
0006A0: 6C00  			XOR		A,@0x00		; Check Result ?
0006A1: 3A03  			JBS		Z			; Check Z = 1?
0006A2: 507A  			JMP	INS_FAIL
0006A3: 3603  			JBC		N			; Check N = 0?
0006A4: 507A  			JMP	INS_FAIL
0006A5: 40DE  			CALL	STATUS_CLEAR
0006A6: 6000  			MOV		A,@0x00
0006A7: 0150  			MOV		0x50,A		; [0x50] = 0x00		
0006A8: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
0006A9: 2850  			BS		0x50,0
0006AA: 1050  			MOV		A,0x50
0006AB: 6C01  			XOR		A,@0x01		; Check Result ?
0006AC: 40E1  			CALL	INST_XOR_JUDGE
0006AD: 601F  			MOV		A,@0x1F
0006AE: 015A  			MOV		INST,A
0006AF: 40DE  			CALL	STATUS_CLEAR
0006B0: 605A  			MOV		A,@0x5A
0006B1: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006B2: 1C50  			SWAPA	0x50
0006B3: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006B4: 40E1  			CALL	INST_XOR_JUDGE
0006B5: 6020  			MOV		A,@0x20
0006B6: 015A  			MOV		INST,A
0006B7: 40DE  			CALL	STATUS_CLEAR
0006B8: 605A  			MOV		A,@0x5A
0006B9: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006BA: 1D50  			SWAP	0x50
0006BB: 1050  			MOV		A,0x50
0006BC: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006BD: 40E1  			CALL	INST_XOR_JUDGE
0006BE: 0012  		RET
0006BF: 0012  		RET
0006C0: 601A  			MOV		A,@0x1A
0006C1: 015A  			MOV		INST,A
0006C2: 40DE  			CALL	STATUS_CLEAR
0006C3: 6001  			MOV		A,@0x01
0006C4: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006C5: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006C6: 507A  			JMP		INS_FAIL
0006C7: 1050  			MOV		A,0x50
0006C8: 6C00  			XOR		A,@0x00		; Check Result ?
0006C9: 40E1  			CALL	INST_XOR_JUDGE	
0006CA: 40DE  			CALL	STATUS_CLEAR
0006CB: 6002  			MOV		A,@0x02
0006CC: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006CD: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006CE: 56D0  			JMP		$+2
0006CF: 507A  			JMP		INS_FAIL
0006D0: 6019  			MOV		A,@0x19
0006D1: 015A  			MOV		INST,A
0006D2: 40DE  			CALL	STATUS_CLEAR
0006D3: 6001  			MOV		A,@0x01
0006D4: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006D5: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006D6: 507A  			JMP	INS_FAIL
0006D7: 6C00  			XOR		A,@0x00		; Check Result ?
0006D8: 40E1  			CALL	INST_XOR_JUDGE
0006D9: 40DE  			CALL	STATUS_CLEAR
0006DA: 6002  			MOV		A,@0x02
0006DB: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006DC: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006DD: 56DF  			JMP		$+2
0006DE: 507A  			JMP	INS_FAIL
0006DF: 6021  			MOV		A,@0x21
0006E0: 015A  			MOV		INST,A
0006E1: 40DE  			CALL	STATUS_CLEAR
0006E2: 60FF  			MOV		A,@0xFF
0006E3: 0150  			MOV		0x50,A
0006E4: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006E5: 507A  			JMP		INS_FAIL
0006E6: 6C00  			XOR		A,@0x00		; Check Result ?
0006E7: 40E1  			CALL	INST_XOR_JUDGE
0006E8: 40DE  			CALL	STATUS_CLEAR
0006E9: 6080  			MOV		A,@0x80
0006EA: 0150  			MOV		0x50,A
0006EB: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006EC: 56EE  			JMP		$+2
0006ED: 507A  			JMP		INS_FAIL
0006EE: 6022  			MOV		A,@0x22
0006EF: 015A  			MOV		INST,A
0006F0: 40DE  			CALL	STATUS_CLEAR
0006F1: 60FF  			MOV		A,@0xFF
0006F2: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006F3: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006F4: 507A  			JMP		INS_FAIL
0006F5: 1050  			MOV		A,0x50
0006F6: 6C00  			XOR		A,@0x00		; Check Result ?
0006F7: 40E1  			CALL	INST_XOR_JUDGE
0006F8: 40DE  			CALL	STATUS_CLEAR
0006F9: 6080  			MOV		A,@0x80
0006FA: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006FB: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006FC: 56FE  			JMP		$+2
0006FD: 507A  			JMP		INS_FAIL
0006FE: 0012  		RET
0006FF: 6023  			MOV		A,@0x23
000700: 015A  			MOV		INST,A
000701: 40DE  			CALL	STATUS_CLEAR
000702: 605A  			MOV		A,@0x5A
000703: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000704: 6150  			JE		0x50		; [0x50] = A?
000705: 507A  			JMP		INS_FAIL
000706: 605B  			MOV		A,@0x5B
000707: 0150  			MOV		0x50,A		; [0x50] = 0x5B
000708: 605C  			MOV		A,@0x5C
000709: 6150  			JE		0x50		; [0x50] = A(0x5C)?
00070A: 570C  			JMP		$+2
00070B: 507A  			JMP		INS_FAIL
00070C: 6024  			MOV		A,@0x24
00070D: 015A  			MOV		INST,A
00070E: 40DE  			CALL	STATUS_CLEAR
00070F: 607F  			MOV		A,@0x7F
000710: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000711: 6000  			MOV		A,@0x00
000712: 6250  			JGE		0x50		; [0x50] > A ?
000713: 507A  			JMP		INS_FAIL
000714: 40DE  			CALL	STATUS_CLEAR
000715: 60FF  			MOV		A,@0xFF
000716: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000717: 6080  			MOV		A,@0x80
000718: 6250  			JGE		0x50		; [0x50] > A ?
000719: 507A  			JMP		INS_FAIL
00071A: 40DE  			CALL	STATUS_CLEAR
00071B: 6000  			MOV		A,@0x00
00071C: 0150  			MOV		0x50,A		; [0x50] = 0x00
00071D: 60FF  			MOV		A,@0xFF
00071E: 6250  			JGE		0x50		; [0x50] > A(0xFF) ?x
00071F: 5721  			JMP		$+2
000720: 507A  			JMP		INS_FAIL
000721: 6025  			MOV		A,@0x25
000722: 015A  			MOV		INST,A
000723: 40DE  			CALL	STATUS_CLEAR
000724: 6000  			MOV		A,@0x00
000725: 0150  			MOV		0x50,A		; [0x50] = 0x00
000726: 607F  			MOV		A,@0x7F
000727: 6350  			JLE		0x50		; [0x50] < A ?
000728: 507A  			JMP		INS_FAIL
000729: 6000  			MOV		A,@0x00
00072A: 0103  			MOV		STATUS,A
00072B: 6080  			MOV		A,@0x80
00072C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00072D: 60FF  			MOV		A,@0xFF
00072E: 6350  			JLE		0x50		; [0x50] < A ?
00072F: 507A  			JMP		INS_FAIL
000730: 40DE  			CALL	STATUS_CLEAR
000731: 60FF  			MOV		A,@0xFF
000732: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000733: 6000  			MOV		A,@0x00
000734: 6350  			JLE		0x50		; [0x50] < A(0x00) ?x
000735: 5737  			JMP		$+2
000736: 507A  			JMP		INS_FAIL
000737: 6027  			MOV		A,@0x27
000738: 015A  			MOV		INST,A
000739: 40DE  			CALL	STATUS_CLEAR
00073A: 607F  			MOV		A,@0x7F
00073B: 657F  			JE		@0x7F
00073C: 507A  			JMP	INS_FAIL
00073D: 0012  		RET
00073E: 6002  			MOV	A,@0x02
00073F: 015A  			MOV	INST,A
000740: 40DE  			CALL	STATUS_CLEAR
000741: 6003  			MOV		A,@0x03
000742: 0150  			MOV		0x50,A
000743: 47E4  			CALL	CALL_Test
000744: 1050  			MOV		A,0x50
000745: 6C04  			XOR		A,@0x04
000746: 40E1  			CALL	INST_XOR_JUDGE
000747: 6003  			MOV		A,@0x03
000748: 015A  			MOV		INST,A
000749: 40DE  			CALL	STATUS_CLEAR
00074A: 6003  			MOV		A,@0x03
00074B: 0151  			MOV		0x51,A
00074C: 7A80 0FFE  			LCALL	LCALL_Test
00074E: 1051  			MOV		A,0x51
00074F: 6C04  			XOR		A,@0x04		; Check Result ?
000750: 40E1  			CALL	INST_XOR_JUDGE
000751: 602C  			MOV		A,@0x2C
000752: 015A  			MOV		INST,A
000753: 40DE  			CALL	STATUS_CLEAR
000754: 6000  			MOV		A,@0x00
000755: 4EF0  			CALL	INST_RETL_TABLE
000756: 6CA1  			XOR		A,@0xA1
000757: 40E1  			CALL	INST_XOR_JUDGE
000758: 6001  			MOV		A,@0x01
000759: 4EF0  			CALL	INST_RETL_TABLE
00075A: 6CA2  			XOR		A,@0xA2
00075B: 40E1  			CALL	INST_XOR_JUDGE
00075C: 6002  			MOV		A,@0x02
00075D: 4EF0  			CALL	INST_RETL_TABLE
00075E: 6CA4  			XOR		A,@0xA4
00075F: 40E1  			CALL	INST_XOR_JUDGE
000760: 6003  			MOV		A,@0x03
000761: 4EF0  			CALL	INST_RETL_TABLE
000762: 6CA8  			XOR		A,@0xA8
000763: 40E1  			CALL	INST_XOR_JUDGE
000764: 0012  		RET
000765: 6004  			MOV		A,@0x04
000766: 015A  			MOV		INST,A
000767: 0010  			ENI
000768: 3F03  			JBS		IT		; Check IT = 1?
000769: 507A  			JMP	INS_FAIL
00076A: 6005  			MOV		A,@0x05
00076B: 015A  			MOV		INST,A
00076C: 0011  			DISI
00076D: 3703  			JBC		IT		; Check IT = 0?
00076E: 507A  			JMP	INS_FAIL
00076F: 0012  		RET
000770: 40DE  		CALL	STATUS_CLEAR
000771: 2803  		BS	C
000772: 6903  		SJC		@0x03
000773: 506E  		JMP		JMP_FAIL
000774: 506E  		JMP		JMP_FAIL
000775: 506E  		JMP		JMP_FAIL
000776: 2003  		BC	C
000777: 6A03  		SJNC	bbb		;@0x03
000778: 506E  		JMP		JMP_FAIL
000779: 506E  		JMP		JMP_FAIL
00077A: 506E  		JMP		JMP_FAIL
00077B: 2A03  			BS		Z
00077C: 6B03  			SJZ		@0x03
00077D: 506E  			JMP		JMP_FAIL
00077E: 506E  			JMP		JMP_FAIL
00077F: 506E  			JMP		JMP_FAIL
000780: 0200  			CLRA
000781: 6B03  			SJZ		@0x03
000782: 506E  			JMP		JMP_FAIL
000783: 506E  			JMP		JMP_FAIL
000784: 506E  			JMP		JMP_FAIL
000785: 578D  		JMP		IATEST1		;JMP back Test as below
000786: 579A  			JMP	IATEST2		; -9
000787: 506E  			JMP	JMP_FAIL	; -8
000788: 506E  			JMP	JMP_FAIL	; -7
000789: 506E  			JMP	JMP_FAIL	; -6
00078A: 506E  			JMP	JMP_FAIL	; -5
00078B: 506E  			JMP	JMP_FAIL	; -4
00078C: 506E  			JMP	JMP_FAIL	; -3
00078D: 2803  			BS		C		; -2
00078E: 69F7  			SJC		aaa		; -1
00078F: 69F7  			SJC		@0xF7	; -1
000790: 506E  			JMP		JMP_FAIL
000791: 506E  			JMP		JMP_FAIL
000792: 506E  			JMP		JMP_FAIL
000793: 57A6  			JMP		IATEST3		; -9
000794: 506E  			JMP		JMP_FAIL	; -8
000795: 506E  			JMP		JMP_FAIL	; -7
000796: 506E  			JMP		JMP_FAIL	; -6
000797: 506E  			JMP		JMP_FAIL	; -5
000798: 506E  			JMP		JMP_FAIL	; -4
000799: 506E  			JMP		JMP_FAIL	; -3
00079A: 2003  			BC		C		; -2
00079B: 6AF7  			SJNC		@0xF7	; -1
00079C: 57B7  			JMP		_IPass
00079D: 57B7  			JMP		_IPass
00079E: 57B7  			JMP		_IPass
00079F: 57B2  			JMP		IATEST4		; -9
0007A0: 506E  			JMP		JMP_FAIL	; -8
0007A1: 506E  			JMP		JMP_FAIL	; -7
0007A2: 506E  			JMP		JMP_FAIL	; -6
0007A3: 506E  			JMP		JMP_FAIL	; -5
0007A4: 506E  			JMP		JMP_FAIL	; -4
0007A5: 506E  			JMP		JMP_FAIL	; -3
0007A6: 2A03  			BS		Z		; -2
0007A7: 6BF7  			SJZ		@0xF7	; -1
0007A8: 506E  			JMP		JMP_FAIL
0007A9: 506E  			JMP		JMP_FAIL
0007AA: 506E  			JMP		JMP_FAIL
0007AB: 57B7  			JMP		_IPass		; -9
0007AC: 506E  			JMP		JMP_FAIL	; -8
0007AD: 506E  			JMP		JMP_FAIL	; -7
0007AE: 506E  			JMP		JMP_FAIL	; -6
0007AF: 506E  			JMP		JMP_FAIL	; -5
0007B0: 506E  			JMP		JMP_FAIL	; -4
0007B1: 506E  			JMP		JMP_FAIL	; -3
0007B2: 2203  			BC		Z		; -2
0007B3: 6DF7  			SJNZ	@0xF7	; -1
0007B4: 506E  			JMP		JMP_FAIL
0007B5: 506E  			JMP		JMP_FAIL
0007B6: 506E  			JMP		JMP_FAIL
0007B7: 0000  				NOP
0007B8: 0012  		RET
0007B9: 6028  			MOV		A,@0x28
0007BA: 015A  			MOV		INST,A
0007BB: 7A01  			SBANK	1
0007BC: 60F1  			MOV		A,@0xF1		;ADDR(0x0EF1)
0007BD: 0145  			MOV		TBPTL,A
0007BE: 600E  			MOV		A,@0x0E
0007BF: 0146  			MOV		TBPTH,A
0007C0: 7A00  			SBANK	0
0007C1: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007C2: 6CA1  			XOR		A,@0xA1
0007C3: 40E1  			CALL	INST_XOR_JUDGE
0007C4: 1050  			MOV		A,0x50
0007C5: 6C70  			XOR		A,@0x70
0007C6: 40E1  			CALL	INST_XOR_JUDGE
0007C7: 7A01  			SBANK	1
0007C8: 1545  			INC		TBPTL		;ADDR(0x0EF2)
0007C9: 7A00  			SBANK	0
0007CA: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007CB: 6CA2  			XOR		A,@0xA2
0007CC: 40E1  			CALL	INST_XOR_JUDGE
0007CD: 1050  			MOV		A,0x50
0007CE: 6C70  			XOR		A,@0x70
0007CF: 40E1  			CALL	INST_XOR_JUDGE
0007D0: 6033  			MOV		A,@0x33
0007D1: 015A  			MOV		INST,A
0007D2: 7A01  			SBANK	1
0007D3: 60F3  			MOV		A,@0xF3		;ADDR(0x0EF3)
0007D4: 0145  			MOV		TBPTL,A
0007D5: 600E  			MOV		A,@0x0E
0007D6: 0146  			MOV		TBPTH,A
0007D7: 7A00  			SBANK	0
0007D8: 7B50  			TBRD	0x50
0007D9: 1050  			MOV		A,0x50
0007DA: 6CA4  			XOR		A,@0xA4
0007DB: 40E1  			CALL	INST_XOR_JUDGE
0007DC: 7A01  			SBANK	1
0007DD: 1545  			INC		TBPTL		;ADDR(0x0EF4)
0007DE: 7A00  			SBANK	0
0007DF: 7B50  			TBRD	0x50
0007E0: 1050  			MOV		A,0x50
0007E1: 6CA8  			XOR		A,@0xA8
0007E2: 40E1  			CALL	INST_XOR_JUDGE
0007E3: 0012  		RET
0007E4: 1550  		INC		0x50
0007E5: 0012  		RET
000800: 506E  	JMP		JMP_FAIL
000801: 506E  	JMP		JMP_FAIL
000802: 506E  	JMP		JMP_FAIL
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000F00: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
000F01: 0104  		MOV		RSR,A
000F02: 7A40  		GBANK	0
000F03: 6055  		MOV		A,@0x55
000F04: 0100  		MOV		IAR,A
000F05: 1504  		INC		RSR
000F06: 6000  		MOV		A,@0x00
000F07: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F08: 3A03  		JBS		Z
000F09: 5F03  		JMP		$-6
000F0A: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
000F0B: 0104  		MOV		RSR,A
000F0C: 7A40  		GBANK	0
000F0D: 6055  		MOV		A,@0x55
000F0E: 0D00  		XOR		IAR,A
000F0F: 3A03  		JBS		Z
000F10: 5074  		JMP		RAM_FAIL
000F11: 1504  		INC		RSR
000F12: 6000  		MOV		A,@0x00
000F13: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F14: 3A03  		JBS		Z
000F15: 5F0D  		JMP		$-8
000F16: 0012  		RET
000F17: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
000F18: 0104  		MOV		RSR,A
000F19: 7A40  		GBANK	0
000F1A: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
000F1B: 0100  		MOV		IAR,A
000F1C: 1504  		INC		RSR
000F1D: 6000  		MOV		A,@0x00
000F1E: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F1F: 3A03  		JBS		Z
000F20: 5F1A  		JMP		$-6
000F21: 6080  		MOV		A,@0x80
000F22: 0104  		MOV		RSR,A
000F23: 7A40  		GBANK	0
000F24: 60AA  		MOV		A,@0xAA
000F25: 0D00  		XOR		IAR,A
000F26: 3A03  		JBS		Z
000F27: 5074  		JMP		RAM_FAIL
000F28: 1504  		INC		RSR
000F29: 6000  		MOV		A,@0x00
000F2A: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F2B: 3A03  		JBS		Z
000F2C: 5F24  		JMP		$-8
000F2D: 0012  		RET
000F2E: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
000F2F: 0104  		MOV		RSR,A
000F30: 7A41  		GBANK	1
000F31: 6033  		MOV		A,@0x33		; SRAM(0x33)
000F32: 0100  		MOV		IAR,A
000F33: 1504  		INC		RSR
000F34: 6000  		MOV		A,@0x00
000F35: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F36: 3A03  		JBS		Z
000F37: 5F31  		JMP		$-6
000F38: 6080  		MOV		A,@0x80
000F39: 0104  		MOV		RSR,A
000F3A: 7A41  		GBANK	1
000F3B: 6033  		MOV		A,@0x33
000F3C: 0D00  		XOR		IAR,A
000F3D: 3A03  		JBS		Z
000F3E: 5074  		JMP		RAM_FAIL
000F3F: 1504  		INC		RSR
000F40: 6000  		MOV		A,@0x00
000F41: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F42: 3A03  		JBS		Z
000F43: 5F3B  		JMP		$-8
000F44: 0012  		RET
000F45: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
000F46: 0104  		MOV		RSR,A
000F47: 7A41  		GBANK	1
000F48: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
000F49: 0100  		MOV		IAR,A
000F4A: 1504  		INC		RSR
000F4B: 6000  		MOV		A,@0x00
000F4C: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F4D: 3A03  		JBS		Z
000F4E: 5F48  		JMP		$-6
000F4F: 6080  		MOV		A,@0x80
000F50: 0104  		MOV		RSR,A
000F51: 7A41  		GBANK	1
000F52: 60CC  		MOV		A,@0xCC
000F53: 0D00  		XOR		IAR,A
000F54: 3A03  		JBS		Z
000F55: 5074  		JMP		RAM_FAIL
000F56: 1504  		INC		RSR
000F57: 6000  		MOV		A,@0x00
000F58: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F59: 3A03  		JBS		Z
000F5A: 5F52  		JMP		$-8
000F5B: 0012  		RET
000FFE: 1551  		INC		0x51
000FFF: 0012  		RET
