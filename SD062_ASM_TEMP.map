****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X22   , End=0X4F   , Size=46
Start=0X816  , End=0XEEF  , Size=1754
Start=0XEF9  , End=0XEFF  , Size=7
Start=0XF5C  , End=0XFFF  , Size=164
Start=0X1002 , End=0X17FF , Size=2046
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  2126 x 15 bits( 34.6%)
Free            |  4018 x 15 bits( 65.4%)
----------------------------------------
****************************************
The Checksum is -- 0x9785
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 5068  	JMP 	JMP_FAIL	;0x0030
000003: 5068  	JMP 	JMP_FAIL	;0x0031
000004: 5068  	JMP 	JMP_FAIL	;0x0032
000005: 5068  	JMP 	JMP_FAIL	;0x0033
000006: 5068  	JMP 	JMP_FAIL	;0x0034
000007: 5068  	JMP 	JMP_FAIL	;0x0035
000008: 5068  	JMP 	JMP_FAIL	;0x0036
000009: 5068  	JMP 	JMP_FAIL	;0x0037
00000A: 5068  	JMP 	JMP_FAIL	;0x0038
00000B: 5068  	JMP 	JMP_FAIL	;0x0039
00000C: 5068  	JMP 	JMP_FAIL	;0x003A
00000D: 5068  	JMP 	JMP_FAIL	;0x003B
00000E: 5068  	JMP 	JMP_FAIL	;0x003C
00000F: 5068  	JMP 	JMP_FAIL	;0x003D
000010: 5068  	JMP 	JMP_FAIL	;0x003E
000011: 5068  	JMP 	JMP_FAIL	;0x003F
000012: 5068  	JMP 	JMP_FAIL	;0x0040
000013: 5068  	JMP 	JMP_FAIL	;0x0041
000014: 5068  	JMP 	JMP_FAIL	;0x0042
000015: 5068  	JMP 	JMP_FAIL	;0x0043
000016: 5068  	JMP 	JMP_FAIL	;0x0044
000017: 5068  	JMP 	JMP_FAIL	;0x0045
000018: 5068  	JMP 	JMP_FAIL	;0x0046
000019: 5068  	JMP 	JMP_FAIL	;0x0047
00001A: 5068  	JMP 	JMP_FAIL	;0x0048
00001B: 5068  	JMP 	JMP_FAIL	;0x0049
00001C: 5068  	JMP 	JMP_FAIL	;0x004A
00001D: 5068  	JMP 	JMP_FAIL	;0x004B
00001E: 5068  	JMP 	JMP_FAIL	;0x004C
00001F: 5068  	JMP 	JMP_FAIL	;0x004D
000020: 5068  	JMP 	JMP_FAIL	;0x004E
000021: 5068  	JMP 	JMP_FAIL	;0x004F
000050: 4071  	CALL	SYS_INIT
000051: 4076  	CALL	GPIO_INIT
000052: 40A6  	CALL	RAM_SHA_INIT
000053: 40B0  	CALL	RAM_IND_INIT
000054: 40D9  	CALL	EEPROM_INIT
000055: 7A00  	SBANK	0
000056: 47ED  	CALL	TEST_STACK
000057: 40EF  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000058: 4499  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000059: 45C8  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
00005A: 4690  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
00005B: 46C8  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005C: 46C9  	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
00005D: 4708  	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
00005E: 4747  	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
00005F: 476E  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
000060: 4779  	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
000061: 47C2  	CALL	TEST_READ_ROM			;TBRD, TBRDA
000062: 4F00  	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
000063: 4F17  	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
000064: 4F2E  	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
000065: 4F45  	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
000066: 0095  	BTG		P5,1
000067: 5055  	JMP		BACK_GROUND_LOOP
000068: 7A00  	SBANK	0
000069: 2205  	BC		P5,2
00006A: 5068  	JMP		JMP_FAIL
00006B: 7A00  	SBANK	0
00006C: 2305  	BC		P5,3
00006D: 506B  	JMP		RAM_FAIL
00006E: 7A00  	SBANK	0
00006F: 2405  	BC		P5,4
000070: 506E  	JMP		INS_FAIL
000071: 7A00  		SBANK	0
000072: 260E  		BC		IDLE	;SLEEP_MODE
000073: 6000  		MOV		A,@0x00
000074: 0114  		MOV		SFR1,A
000075: 0012  		RET
000076: 7A00  		SBANK	0
000077: 0305  		CLR		P5
000078: 60F0  		MOV		A,@0xF0
000079: 010B  		MOV		IOCR5,A
00007A: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00007B: 0105  		MOV		P5,A
00007C: 0012  		RET
00007D: 7A00  		SBANK	0
00007E: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
00007F: 5082  		JMP		$+3
000080: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000081: 0003  		SLEP
000082: 3B03  		JBS		P
000083: 5086  		JMP		$+3
000084: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000085: 0003  		SLEP
000086: 3B03  		JBS		P
000087: 508A  		JMP		$+3
000088: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000089: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
00008A: 0003  		SLEP		
00008B: 0012  		RET
00008C: 3D05  		JBS		P5,5		; Push, or not
00008D: 508F  		JMP		$+2
00008E: 508C  		JMP		$-2
00008F: 3D05  		JBS		P5,5
000090: 508C  		JMP		KEY_DEBOUNCE
000091: 3D05  		JBS		P5,5
000092: 508C  		JMP		KEY_DEBOUNCE
000093: 3D05  		JBS		P5,5
000094: 508C  		JMP		KEY_DEBOUNCE
000095: 3D05  		JBS		P5,5
000096: 508C  		JMP		KEY_DEBOUNCE
000097: 3D05  		JBS		P5,5
000098: 508C  		JMP		KEY_DEBOUNCE
000099: 3D05  		JBS		P5,5
00009A: 508C  		JMP		KEY_DEBOUNCE
00009B: 3D05  		JBS		P5,5
00009C: 508C  		JMP		KEY_DEBOUNCE
00009D: 3D05  		JBS		P5,5
00009E: 508C  		JMP		KEY_DEBOUNCE
00009F: 3D05  		JBS		P5,5
0000A0: 508C  		JMP		KEY_DEBOUNCE
0000A1: 3D05  		JBS		P5,5
0000A2: 50A0  		JMP		$-2
0000A3: 60FF  		MOV		A,@0xFF		; Turn Off all LED
0000A4: 0105  		MOV		P5,A		
0000A5: 0012  		RET
0000A6: 6050  		MOV		A,@0x50
0000A7: 0104  		MOV		RSR,A
0000A8: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
0000A9: 0100  		MOV		IAR,A
0000AA: 1504  		INC		RSR
0000AB: 6080  		MOV		A,@0x80
0000AC: 0C04  		XOR		A,RSR
0000AD: 3A03  		JBS		Z
0000AE: 50A8  		JMP		$-6
0000AF: 0012  		RET
0000B0: 6080  		MOV		A,@0x80
0000B1: 0104  		MOV		RSR,A
0000B2: 7A40  		GBANK	0
0000B3: 60FF  		MOV		A,@0xFF
0000B4: 0100  		MOV		IAR,A
0000B5: 1504  		INC		RSR
0000B6: 6000  		MOV		A,@0x00
0000B7: 0C04  		XOR		A,RSR
0000B8: 3A03  		JBS		Z
0000B9: 50B2  		JMP		RAM_IND_LOOP_0
0000BA: 6080  		MOV		A,@0x80
0000BB: 0104  		MOV		RSR,A
0000BC: 7A41  		GBANK	1
0000BD: 60FF  		MOV		A,@0xFF
0000BE: 0100  		MOV		IAR,A
0000BF: 1504  		INC		RSR
0000C0: 6000  		MOV		A,@0x00
0000C1: 0C04  		XOR		A,RSR
0000C2: 3A03  		JBS		Z
0000C3: 50BC  		JMP		RAM_IND_LOOP_1
0000C4: 6080  		MOV		A,@0x80
0000C5: 0104  		MOV		RSR,A
0000C6: 7A42  		GBANK	2
0000C7: 60FF  		MOV		A,@0xFF
0000C8: 0100  		MOV		IAR,A
0000C9: 1504  		INC		RSR
0000CA: 6000  		MOV		A,@0x00
0000CB: 0C04  		XOR		A,RSR
0000CC: 3A03  		JBS		Z
0000CD: 50C6  		JMP		RAM_IND_LOOP_2
0000CE: 6080  		MOV		A,@0x80
0000CF: 0104  		MOV		RSR,A
0000D0: 7A43  		GBANK	3
0000D1: 60FF  		MOV		A,@0xFF
0000D2: 0100  		MOV		IAR,A
0000D3: 1504  		INC		RSR
0000D4: 6000  		MOV		A,@0x00
0000D5: 0C04  		XOR		A,RSR
0000D6: 3A03  		JBS		Z
0000D7: 50D0  		JMP		RAM_IND_LOOP_3
0000D8: 0012  		RET
0000D9: 6080  		MOV		A,@0x80
0000DA: 0141  		MOV		EECR2,A
0000DB: 1000  		MOV		A,0x00
0000DC: 0150  		MOV		TMP50,A
0000DD: 1050  		MOV		A,TMP50
0000DE: 0142  		MOV		EERA,A
0000DF: 60FF  		MOV		A,@0xFF
0000E0: 0143  		MOV		EERD,A
0000E1: 1550  		INC		TMP50
0000E2: 1080  		MOV		A,0x80
0000E3: 0C50  		XOR		A,TMP50
0000E4: 3A03  		JBS		Z
0000E5: 50DD  		JMP		EEPROM_INIT_LOOP
0000E6: 0012  		RET
0000E7: 6000  		MOV		A,@0x00
0000E8: 0103  		MOV		STATUS,A
0000E9: 0012  		RET
0000EA: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000EB: 506E  		JMP		INS_FAIL
0000EC: 3603  		JBC		N			; IF(N=0) BRANCH
0000ED: 506E  		JMP		INS_FAIL
0000EE: 0012  		RET
0000EF: 6001  			MOV		A,@0x01
0000F0: 015A  			MOV		INST,A
0000F1: 40E7  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000F2: 60AA  			MOV		A,@0xAA
0000F3: 0001  			DAA
0000F4: 3803  			JBS		C			; Check C = 1?
0000F5: 506E  			JMP	INS_FAIL
0000F6: 3103  			JBC		DC			; Check DC = 0?
0000F7: 506E  			JMP	INS_FAIL
0000F8: 3203  			JBC		Z			; Check Z = 0?
0000F9: 506E  			JMP	INS_FAIL
0000FA: 3503  			JBC		OV			; Check OV = 0?
0000FB: 506E  			JMP	INS_FAIL
0000FC: 3603  			JBC		N			; Check N = 0?
0000FD: 506E  			JMP	INS_FAIL
0000FE: 6C10  			XOR		A,@0x10		; Check Result ?
0000FF: 3A03  			JBS		Z			; Check Z = 1?
000100: 506E  			JMP	INS_FAIL
000101: 3603  			JBC		N			; Check N = 0?
000102: 506E  			JMP	INS_FAIL
000103: 40E7  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
000104: 6080  			MOV		A,@0x80
000105: 0150  			MOV		0x50,A		; [0x50] = 0x80
000106: 607F  			MOV		A,@0x7F		; 
000107: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
000108: 0001  			DAA
000109: 3803  			JBS		C			; Check C = 1?
00010A: 506E  			JMP	INS_FAIL
00010B: 3103  			JBC		DC			; Check DC = 0?
00010C: 506E  			JMP	INS_FAIL
00010D: 3203  			JBC		Z			; Check Z = 0?
00010E: 506E  			JMP	INS_FAIL
00010F: 3503  			JBC		OV			; Check OV = 0?
000110: 506E  			JMP	INS_FAIL
000111: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000112: 506E  			JMP	INS_FAIL
000113: 2203  			BC		Z
000114: 2603  			BC		N
000115: 6C65  			XOR		A,@0x65		; Check Result ?
000116: 3A03  			JBS		Z			; Check Z = 1?
000117: 506E  			JMP	INS_FAIL
000118: 3603  			JBC		N			; Check N = 0?
000119: 506E  			JMP	INS_FAIL
00011A: 0000  			NOP
00011B: 6000  			MOV		A,@0x00
00011C: 0103  			MOV		STATUS,A
00011D: 2803  			BS		C
00011E: 6080  			MOV		A,@0x80
00011F: 0150  			MOV		0x50,A		; [0x50] = 0x80
000120: 607F  			MOV		A,@0x7F		; 
000121: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000122: 0001  			DAA
000123: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000124: 506E  			JMP	INS_FAIL
000125: 3903  			JBS		DC			; Check DC = 1? / By ADC
000126: 506E  			JMP	INS_FAIL
000127: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
000128: 506E  			JMP	INS_FAIL
000129: 3503  			JBC		OV			; Check OV = 0?
00012A: 506E  			JMP	INS_FAIL
00012B: 3603  			JBC		N			; Check N = 0?
00012C: 506E  			JMP	INS_FAIL
00012D: 6C66  			XOR		A,@0x66		; Check Result ?
00012E: 3A03  			JBS		Z			; Check Z = 1?
00012F: 506E  			JMP	INS_FAIL
000130: 3603  			JBC		N			; Check N = 0?
000131: 506E  			JMP	INS_FAIL
000132: 6000  			MOV		A,@0x00
000133: 0103  			MOV		STATUS,A
000134: 60FF  			MOV		A,@0xFF
000135: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000136: 607F  			MOV		A,@0x7F		; 
000137: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
000138: 0001  			DAA
000139: 3803  			JBS		C			; Check C = 1? 	/ By SUB
00013A: 506E  			JMP	INS_FAIL
00013B: 3903  			JBS		DC			; Check DC = 1? / By SUB
00013C: 506E  			JMP	INS_FAIL
00013D: 3203  			JBC		Z			; Check Z = 0?
00013E: 506E  			JMP	INS_FAIL
00013F: 3503  			JBC		OV			; Check OV = 0?
000140: 506E  			JMP	INS_FAIL
000141: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000142: 506E  			JMP	INS_FAIL
000143: 2203  			BC		Z
000144: 2603  			BC		N
000145: 6CE6  			XOR		A,@0xE6		; Check Result ?
000146: 3A03  			JBS		Z			; Check Z = 1?
000147: 506E  			JMP	INS_FAIL
000148: 3603  			JBC		N			; Check N = 0?
000149: 506E  			JMP	INS_FAIL
00014A: 6008  			MOV		A,@0x08
00014B: 015A  			MOV		INST,A
00014C: 605A  			MOV		A,@0x5A
00014D: 6C5A  			XOR		A,@0x5A		; Check Result ?
00014E: 3A03  			JBS		Z			; Check Z = 1?
00014F: 506E  			JMP	INS_FAIL
000150: 3603  			JBC		N			; Check N = 0?
000151: 506E  			JMP	INS_FAIL
000152: 605A  			MOV		A,@0x5A
000153: 0200  			CLRA
000154: 3A03  			JBS		Z			; Check Z = 1?
000155: 506E  			JMP	INS_FAIL
000156: 2203  			BC		Z
000157: 6C00  			XOR		A,@0x00		; Check Result ?
000158: 3A03  			JBS		Z			; Check Z = 1?
000159: 506E  			JMP	INS_FAIL
00015A: 3603  			JBC		N			; Check N = 0?
00015B: 506E  			JMP	INS_FAIL
00015C: 6009  			MOV		A,@0x09
00015D: 015A  			MOV		INST,A
00015E: 60AA  			MOV		A,@0xAA
00015F: 0150  			MOV		0x50,A
000160: 1050  			MOV		A,0x50
000161: 6CAA  			XOR		A,@0xAA		; Check Result ?
000162: 3A03  			JBS		Z			; Check Z = 1?
000163: 506E  			JMP	INS_FAIL
000164: 3603  			JBC		N			; Check N = 0?
000165: 506E  			JMP	INS_FAIL
000166: 0350  			CLR		0x50
000167: 3A03  			JBS		Z			; Check Z = 1?
000168: 506E  			JMP	INS_FAIL
000169: 2203  			BC		Z
00016A: 1050  			MOV		A,0x50
00016B: 6C00  			XOR		A,@0x00		; Check Result ?
00016C: 3A03  			JBS		Z			; Check Z = 1?
00016D: 506E  			JMP	INS_FAIL
00016E: 3603  			JBC		N			; Check N = 0?
00016F: 506E  			JMP	INS_FAIL
000170: 600A  			MOV		A,@0x0A
000171: 015A  			MOV		INST,A
000172: 6000  			MOV		A,@0x00
000173: 0103  			MOV		STATUS,A
000174: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000175: 0150  			MOV		0x50,A		; [0x50] = 0x02
000176: 6001  			MOV		A,@0x01
000177: 0450  			SUB		A,0x50		; A = [0x50] - A
000178: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
000179: 506E  			JMP	INS_FAIL
00017A: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00017B: 506E  			JMP	INS_FAIL
00017C: 3203  			JBC		Z			; Check Z = 0?
00017D: 506E  			JMP	INS_FAIL
00017E: 3503  			JBC		OV			; Check OV = 0?
00017F: 506E  			JMP	INS_FAIL
000180: 3603  			JBC		N			; Check N = 0?
000181: 506E  			JMP	INS_FAIL
000182: 2203  			BC		Z
000183: 6C01  			XOR		A,@0x01		; Check Result ?
000184: 3A03  			JBS		Z			; Check Z = 1?
000185: 506E  			JMP	INS_FAIL
000186: 3603  			JBC		N			; Check N = 0?
000187: 506E  			JMP	INS_FAIL
000188: 6000  			MOV		A,@0x00
000189: 0103  			MOV		STATUS,A
00018A: 6002  			MOV		A,@0x02		; SUB(2-2)=0
00018B: 0150  			MOV		0x50,A		; [0x50] = 0x02
00018C: 6002  			MOV		A,@0x02
00018D: 0450  			SUB		A,0x50		; A = [0x50] - A
00018E: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00018F: 506E  			JMP	INS_FAIL
000190: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000191: 506E  			JMP	INS_FAIL
000192: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
000193: 506E  			JMP	INS_FAIL
000194: 3503  			JBC		OV			; Check OV = 0?
000195: 506E  			JMP	INS_FAIL
000196: 3603  			JBC		N			; Check N = 0?
000197: 506E  			JMP	INS_FAIL
000198: 2203  			BC		Z
000199: 6C00  			XOR		A,@0x00		; Check Result ?
00019A: 3A03  			JBS		Z			; Check Z = 1?
00019B: 506E  			JMP	INS_FAIL
00019C: 3603  			JBC		N			; Check N = 0?
00019D: 506E  			JMP	INS_FAIL
00019E: 6000  			MOV		A,@0x00
00019F: 0103  			MOV		STATUS,A
0001A0: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
0001A1: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0001A2: 607F  			MOV		A,@0x7F
0001A3: 0450  			SUB		A,0x50		; A = [0x50] - A
0001A4: 3803  			JBS		C			; Check C = 1?
0001A5: 506E  			JMP	INS_FAIL
0001A6: 3903  			JBS		DC			; Check DC = 1?
0001A7: 506E  			JMP	INS_FAIL
0001A8: 3203  			JBC		Z			; Check Z = 0?
0001A9: 506E  			JMP	INS_FAIL
0001AA: 3503  			JBC		OV			; Check OV = 0?
0001AB: 506E  			JMP	INS_FAIL
0001AC: 3E03  			JBS		N			; Check N = 1?
0001AD: 506E  			JMP	INS_FAIL
0001AE: 2203  			BC		Z
0001AF: 2603  			BC		N
0001B0: 6C80  			XOR		A,@0x80		; Check Result ?
0001B1: 3A03  			JBS		Z			; Check Z = 1?
0001B2: 506E  			JMP	INS_FAIL
0001B3: 3603  			JBC		N			; Check N = 0?
0001B4: 506E  			JMP	INS_FAIL
0001B5: 6000  			MOV		A,@0x00
0001B6: 0103  			MOV		STATUS,A
0001B7: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001B8: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001B9: 607F  			MOV		A,@0x7F
0001BA: 0450  			SUB		A,0x50		; A = [0x50] - A
0001BB: 3803  			JBS		C			; Check C = 1?
0001BC: 506E  			JMP	INS_FAIL
0001BD: 3103  			JBC		DC			; Check DC = 0?
0001BE: 506E  			JMP	INS_FAIL
0001BF: 3203  			JBC		Z			; Check Z = 0?
0001C0: 506E  			JMP	INS_FAIL
0001C1: 3D03  			JBS		OV			; Check OV = 1?
0001C2: 506E  			JMP	INS_FAIL
0001C3: 3603  			JBC		N			; Check N = 0?
0001C4: 506E  			JMP	INS_FAIL
0001C5: 2203  			BC		Z
0001C6: 2603  			BC		N
0001C7: 6C01  			XOR		A,@0x01		; Check Result ?
0001C8: 3A03  			JBS		Z			; Check Z = 1?
0001C9: 506E  			JMP	INS_FAIL
0001CA: 3603  			JBC		N			; Check N = 0?
0001CB: 506E  			JMP	INS_FAIL
0001CC: 6000  			MOV		A,@0x00
0001CD: 0103  			MOV		STATUS,A
0001CE: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001CF: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001D0: 6003  			MOV		A,@0x03
0001D1: 0450  			SUB		A,0x50		; A = [0x50] - A
0001D2: 3003  			JBC		C			; Check C = 0?
0001D3: 506E  			JMP	INS_FAIL
0001D4: 3103  			JBC		DC			; Check DC = 0?
0001D5: 506E  			JMP	INS_FAIL
0001D6: 3203  			JBC		Z			; Check Z = 0?
0001D7: 506E  			JMP	INS_FAIL
0001D8: 3503  			JBC		OV			; Check OV = 0?
0001D9: 506E  			JMP	INS_FAIL
0001DA: 3E03  			JBS		N			; Check N = 1?
0001DB: 506E  			JMP	INS_FAIL
0001DC: 2203  			BC		Z
0001DD: 2603  			BC		N
0001DE: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001DF: 3A03  			JBS		Z			; Check Z = 1?
0001E0: 506E  			JMP	INS_FAIL
0001E1: 3603  			JBC		N			; Check N = 0?
0001E2: 506E  			JMP	INS_FAIL
0001E3: 600B  			MOV		A,@0x0B
0001E4: 015A  			MOV		INST,A
0001E5: 6000  			MOV		A,@0x00
0001E6: 0103  			MOV		STATUS,A
0001E7: 6002  			MOV		A,@0x02
0001E8: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001E9: 6001  			MOV		A,@0x01
0001EA: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001EB: 1003  			MOV		A,STATUS
0001EC: 6C1B  			XOR		A,@0x1B		; for non reset
0001ED: 40EA  			CALL	INST_XOR_JUDGE
0001EE: 2203  			BC		Z
0001EF: 2603  			BC		N
0001F0: 1050  			MOV		A,0x50
0001F1: 6C01  			XOR		A,@0x01		; Check Result ?
0001F2: 40EA  			CALL	INST_XOR_JUDGE
0001F3: 6000  			MOV		A,@0x00
0001F4: 0103  			MOV		STATUS,A
0001F5: 6002  			MOV		A,@0x02
0001F6: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001F7: 6002  			MOV		A,@0x02
0001F8: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001F9: 1003  			MOV		A,STATUS
0001FA: 6C1F  			XOR		A,@0x1F		; for nono reset
0001FB: 40EA  			CALL	INST_XOR_JUDGE
0001FC: 2203  			BC		Z
0001FD: 2603  			BC		N
0001FE: 1050  			MOV		A,0x50
0001FF: 6C00  			XOR		A,@0x00		; Check Result ?
000200: 3A03  			JBS		Z			; Check Z = 1?
000201: 506E  			JMP	INS_FAIL
000202: 3603  			JBC		N			; Check N = 0?
000203: 506E  			JMP	INS_FAIL
000204: 6000  			MOV		A,@0x00
000205: 0103  			MOV		STATUS,A
000206: 6080  			MOV		A,@0x80
000207: 0150  			MOV		0x50,A		; [0x50] = 0x80
000208: 6001  			MOV		A,@0x01
000209: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
00020A: 1003  			MOV		A,STATUS
00020B: 6C39  			XOR		A,@0x39	;; for non reset
00020C: 40EA  			CALL	INST_XOR_JUDGE
00020D: 2203  			BC		Z
00020E: 2603  			BC		N
00020F: 1050  			MOV		A,0x50
000210: 6C7F  			XOR		A,@0x7F		; Check Result ?
000211: 40EA  			CALL	INST_XOR_JUDGE
000212: 6030  			MOV		A,@0x30
000213: 015A  			MOV		INST,A
000214: 40E7  			CALL	STATUS_CLEAR
000215: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
000216: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
000217: 3803  			JBS		C			; Check C = 1?
000218: 506E  			JMP	INS_FAIL
000219: 3903  			JBS		DC			; Check DC = 1?
00021A: 506E  			JMP	INS_FAIL
00021B: 3A03  			JBS		Z			; Check Z = 1?
00021C: 506E  			JMP	INS_FAIL
00021D: 3503  			JBC		OV			; Check OV = 0?
00021E: 506E  			JMP	INS_FAIL
00021F: 3603  			JBC		N			; Check N = 0?
000220: 506E  			JMP	INS_FAIL
000221: 6C00  			XOR		A,@0x00		; Check Result ?
000222: 40EA  			CALL	INST_XOR_JUDGE
000223: 40E7  			CALL	STATUS_CLEAR
000224: 607F  			MOV		A,@0x7F		; 0x00-0x7F
000225: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
000226: 3003  			JBC		C			; Check C = 0?
000227: 506E  			JMP	INS_FAIL
000228: 3103  			JBC		DC			; Check DC = 0?
000229: 506E  			JMP	INS_FAIL
00022A: 3203  			JBC		Z			; Check Z = 0?
00022B: 506E  			JMP	INS_FAIL
00022C: 3503  			JBC		OV			; Check OV = 0?
00022D: 506E  			JMP	INS_FAIL
00022E: 3E03  			JBS		N			; Check N = 1?
00022F: 506E  			JMP	INS_FAIL
000230: 6C81  			XOR		A,@0x81		; Check Result ?
000231: 40EA  			CALL	INST_XOR_JUDGE
000232: 40E7  			CALL	STATUS_CLEAR
000233: 6001  			MOV		A,@0x01		; 0x80-0x01
000234: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
000235: 3803  			JBS		C			; Check C = 1?
000236: 506E  			JMP	INS_FAIL
000237: 3103  			JBC		DC			; Check DC = 0?
000238: 506E  			JMP	INS_FAIL
000239: 3203  			JBC		Z			; Check Z = 0?
00023A: 506E  			JMP	INS_FAIL
00023B: 3D03  			JBS		OV			; Check OV = 1?
00023C: 506E  			JMP	INS_FAIL
00023D: 3603  			JBC		N			; Check N = 0?
00023E: 506E  			JMP	INS_FAIL
00023F: 6C7F  			XOR		A,@0x7F		; Check Result ?
000240: 40EA  			CALL	INST_XOR_JUDGE
000241: 6031  			MOV		A,@0x31
000242: 015A  			MOV		INST,A
000243: 40E7  			CALL	STATUS_CLEAR
000244: 2003  			BC		C			; B = 1
000245: 6000  			MOV		A,@0x00		;0x00-0xF
000246: 0150  			MOV		0x50,A		; [0x50] = 0x00
000247: 60FF  			MOV		A,@0xFF		; A = 0x01
000248: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000249: 3003  			JBC		C			; Check C = 0?
00024A: 506E  			JMP	INS_FAIL
00024B: 3103  			JBC		DC			; Check DC = 0?
00024C: 506E  			JMP	INS_FAIL
00024D: 3A03  			JBS		Z			; Check Z = 1?
00024E: 506E  			JMP	INS_FAIL
00024F: 3503  			JBC		OV			; Check OV = 0?
000250: 506E  			JMP	INS_FAIL
000251: 3603  			JBC		N			; Check N = 0?
000252: 506E  			JMP	INS_FAIL
000253: 6C00  			XOR		A,@0x00		; Check Result ?
000254: 40EA  			CALL	INST_XOR_JUDGE	
000255: 40E7  			CALL	STATUS_CLEAR
000256: 2003  			BC		C			; B = 1
000257: 6000  			MOV		A,@0x00		; 0x00-0x7F
000258: 0150  			MOV		0x50,A		; [0x50] = 0x00
000259: 607F  			MOV		A,@0x7F		; A = 0x01
00025A: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00025B: 3003  			JBC		C			; Check C = 0?
00025C: 506E  			JMP	INS_FAIL
00025D: 3103  			JBC		DC			; Check DC = 0?
00025E: 506E  			JMP	INS_FAIL
00025F: 3203  			JBC		Z			; Check Z = 0?
000260: 506E  			JMP	INS_FAIL
000261: 3503  			JBC		OV			; Check OV = 0?
000262: 506E  			JMP	INS_FAIL
000263: 3E03  			JBS		N			; Check N = 1?
000264: 506E  			JMP	INS_FAIL
000265: 6C80  			XOR		A,@0x80		; Check Result ?
000266: 40EA  			CALL	INST_XOR_JUDGE
000267: 40E7  			CALL	STATUS_CLEAR
000268: 2003  			BC		C			; B = 1
000269: 6080  			MOV		A,@0x80		; 0x80-0x01
00026A: 0150  			MOV		0x50,A		; [0x50] = 0x80
00026B: 6001  			MOV		A,@0x01		; A = 0x01
00026C: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00026D: 3803  			JBS		C			; Check C = 1?
00026E: 506E  			JMP	INS_FAIL
00026F: 3103  			JBC		DC			; Check DC = 0?
000270: 506E  			JMP	INS_FAIL
000271: 3203  			JBC		Z			; Check Z = 0?
000272: 506E  			JMP	INS_FAIL
000273: 3D03  			JBS		OV			; Check OV = 1?
000274: 506E  			JMP	INS_FAIL
000275: 3603  			JBC		N			; Check N = 0?
000276: 506E  			JMP	INS_FAIL
000277: 6C7E  			XOR		A,@0x7E		; Check Result ?
000278: 40EA  			CALL	INST_XOR_JUDGE
000279: 6032  			MOV		A,@0x32
00027A: 015A  			MOV		INST,A
00027B: 40E7  			CALL	STATUS_CLEAR
00027C: 2003  			BC		C			; B = 1
00027D: 6000  			MOV		A,@0x00		; 0x00-0xFF
00027E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00027F: 60FF  			MOV		A,@0xFF
000280: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000281: 1003  			MOV		A,STATUS
000282: 6C1C  			XOR		A,@0x1C		; Check Status ?
000283: 40EA  			CALL	INST_XOR_JUDGE
000284: 1050  			MOV		A,0x50
000285: 6C00  			XOR		A,@0x00		; Check Result ?
000286: 40EA  			CALL	INST_XOR_JUDGE
000287: 40E7  			CALL	STATUS_CLEAR
000288: 2003  			BC		C			; B = 1
000289: 6000  			MOV		A,@0x00		; 0x00-0x7F
00028A: 0150  			MOV		0x50,A		; [0x50] = 0x00
00028B: 607F  			MOV		A,@0x7F
00028C: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
00028D: 1003  			MOV		A,STATUS
00028E: 6C58  			XOR		A,@0x58		; Check Status ?
00028F: 40EA  			CALL	INST_XOR_JUDGE
000290: 1050  			MOV		A,0x50
000291: 6C80  			XOR		A,@0x80		; Check Result ?
000292: 40EA  			CALL	INST_XOR_JUDGE
000293: 40E7  			CALL	STATUS_CLEAR
000294: 2003  			BC		C			; B = 1
000295: 6080  			MOV		A,@0x80		; ,0x80-0x01
000296: 0150  			MOV		0x50,A		; [0x50] = 0x80
000297: 6001  			MOV		A,@0x01
000298: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000299: 1003  			MOV		A,STATUS
00029A: 6C39  			XOR		A,@0x39		; Check Status ?
00029B: 40EA  			CALL	INST_XOR_JUDGE
00029C: 1050  			MOV		A,0x50
00029D: 6C7E  			XOR		A,@0x7E		; Check Result ?
00029E: 40EA  			CALL	INST_XOR_JUDGE
00029F: 600C  			MOV		A,@0x0C
0002A0: 015A  			MOV		INST,A
0002A1: 6000  			MOV		A,@0x00
0002A2: 0103  			MOV		STATUS,A
0002A3: 6020  			MOV		A,@0x20		; 0x20-1
0002A4: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002A5: 0650  			DECA	0x50		; A = [0x50] - 1
0002A6: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002A7: 506E  			JMP	INS_FAIL
0002A8: 3103  			JBC		DC			; Check DC = 0?
0002A9: 506E  			JMP	INS_FAIL
0002AA: 3203  			JBC		Z			; Check Z = 0?
0002AB: 506E  			JMP	INS_FAIL
0002AC: 3503  			JBC		OV			; Check OV = 0?
0002AD: 506E  			JMP	INS_FAIL
0002AE: 3603  			JBC		N			; Check N = 0?
0002AF: 506E  			JMP	INS_FAIL
0002B0: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002B1: 3A03  			JBS		Z			; Check Z = 1?
0002B2: 506E  			JMP	INS_FAIL
0002B3: 3603  			JBC		N			; Check N = 0?
0002B4: 506E  			JMP	INS_FAIL
0002B5: 6000  			MOV		A,@0x00
0002B6: 0103  			MOV		STATUS,A
0002B7: 6001  			MOV		A,@0x01		; 0x01-1
0002B8: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002B9: 0650  			DECA	0x50		; A = [0x50] - 1
0002BA: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002BB: 506E  			JMP	INS_FAIL
0002BC: 3903  			JBS		DC			; Check DC = 1?
0002BD: 506E  			JMP	INS_FAIL
0002BE: 3A03  			JBS		Z			; Check Z = 1?
0002BF: 506E  			JMP	INS_FAIL
0002C0: 3503  			JBC		OV			; Check OV = 0?
0002C1: 506E  			JMP	INS_FAIL
0002C2: 3603  			JBC		N			; Check N = 0?
0002C3: 506E  			JMP	INS_FAIL
0002C4: 2203  			BC		Z
0002C5: 6C00  			XOR		A,@0x00		; Check Result ?
0002C6: 3A03  			JBS		Z			; Check Z = 1?
0002C7: 506E  			JMP	INS_FAIL
0002C8: 3603  			JBC		N			; Check N = 0?
0002C9: 506E  			JMP	INS_FAIL
0002CA: 6000  			MOV		A,@0x00
0002CB: 0103  			MOV		STATUS,A
0002CC: 6000  			MOV		A,@0x00		; 0x00-1
0002CD: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002CE: 0650  			DECA	0x50		; A = [0x50] - 1
0002CF: 3003  			JBC		C			; Check C = 0?
0002D0: 506E  			JMP	INS_FAIL
0002D1: 3103  			JBC		DC			; Check DC = 0?
0002D2: 506E  			JMP	INS_FAIL
0002D3: 3203  			JBC		Z			; Check Z = 0?
0002D4: 506E  			JMP	INS_FAIL
0002D5: 3503  			JBC		OV			; Check OV = 0?
0002D6: 506E  			JMP	INS_FAIL
0002D7: 3E03  			JBS		N			; Check N = 1?
0002D8: 506E  			JMP	INS_FAIL
0002D9: 2203  			BC		Z
0002DA: 2603  			BC		N
0002DB: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002DC: 3A03  			JBS		Z			; Check Z = 1?
0002DD: 506E  			JMP	INS_FAIL
0002DE: 3603  			JBC		N			; Check N = 0?
0002DF: 506E  			JMP	INS_FAIL
0002E0: 6000  			MOV		A,@0x00
0002E1: 0103  			MOV		STATUS,A
0002E2: 6080  			MOV		A,@0x80		; 0x80-1
0002E3: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002E4: 0650  			DECA	0x50		; A = [0x50] - 1
0002E5: 3803  			JBS		C			; Check C = 1?
0002E6: 506E  			JMP	INS_FAIL
0002E7: 3103  			JBC		DC			; Check DC = 0?
0002E8: 506E  			JMP	INS_FAIL
0002E9: 3203  			JBC		Z			; Check Z = 0?
0002EA: 506E  			JMP	INS_FAIL
0002EB: 3D03  			JBS		OV			; Check OV = 1?
0002EC: 506E  			JMP	INS_FAIL
0002ED: 3603  			JBC		N			; Check N = 0?
0002EE: 506E  			JMP	INS_FAIL
0002EF: 2203  			BC		Z
0002F0: 2603  			BC		N
0002F1: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002F2: 3A03  			JBS		Z			; Check Z = 1?
0002F3: 506E  			JMP	INS_FAIL
0002F4: 3603  			JBC		N			; Check N = 0?
0002F5: 506E  			JMP	INS_FAIL
0002F6: 600D  			MOV		A,@0x0D
0002F7: 015A  			MOV		INST,A
0002F8: 6000  			MOV		A,@0x00
0002F9: 0103  			MOV		STATUS,A
0002FA: 6020  			MOV		A,@0x20		; 0x20-1
0002FB: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002FC: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002FD: 1003  			MOV		A,STATUS
0002FE: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002FF: 3A03  			JBS		Z			; Check Z = 1?
000300: 506E  			JMP	INS_FAIL
000301: 3603  			JBC		N			; Check N = 0?
000302: 506E  			JMP	INS_FAIL
000303: 2203  			BC		Z
000304: 1050  			MOV		A,0x50
000305: 6C1F  			XOR		A,@0x1F		; Check Result ?
000306: 3A03  			JBS		Z			; Check Z = 1?
000307: 506E  			JMP	INS_FAIL
000308: 3603  			JBC		N			; Check N = 0?
000309: 506E  			JMP	INS_FAIL
00030A: 6000  			MOV		A,@0x00
00030B: 0103  			MOV		STATUS,A
00030C: 6001  			MOV		A,@0x01		; 0x01-1
00030D: 0150  			MOV		0x50,A		; [0x50] = 0x01
00030E: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00030F: 1003  			MOV		A,STATUS
000310: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000311: 3A03  			JBS		Z			; Check Z = 1?
000312: 506E  			JMP	INS_FAIL
000313: 3603  			JBC		N			; Check N = 0?
000314: 506E  			JMP	INS_FAIL
000315: 2203  			BC		Z
000316: 1050  			MOV		A,0x50
000317: 6C00  			XOR		A,@0x00		; Check Result ?
000318: 3A03  			JBS		Z			; Check Z = 1?
000319: 506E  			JMP	INS_FAIL
00031A: 3603  			JBC		N			; Check N = 0?
00031B: 506E  			JMP	INS_FAIL
00031C: 6000  			MOV		A,@0x00
00031D: 0103  			MOV		STATUS,A
00031E: 6000  			MOV		A,@0x00		; 0x00-1
00031F: 0150  			MOV		0x50,A		; [0x50] = 0x00
000320: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000321: 1003  			MOV		A,STATUS
000322: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000323: 3A03  			JBS		Z			; Check Z = 1?
000324: 506E  			JMP	INS_FAIL
000325: 3603  			JBC		N			; Check N = 0?
000326: 506E  			JMP	INS_FAIL
000327: 2203  			BC		Z
000328: 1050  			MOV		A,0x50
000329: 6CFF  			XOR		A,@0xFF		; Check Result ?
00032A: 3A03  			JBS		Z			; Check Z = 1?
00032B: 506E  			JMP	INS_FAIL
00032C: 3603  			JBC		N			; Check N = 0?
00032D: 506E  			JMP	INS_FAIL
00032E: 6000  			MOV		A,@0x00
00032F: 0103  			MOV		STATUS,A
000330: 6080  			MOV		A,@0x80		; 0x80-1
000331: 0150  			MOV		0x50,A		; [0x50] = 0x80
000332: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000333: 1003  			MOV		A,STATUS
000334: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
000335: 3A03  			JBS		Z			; Check Z = 1?
000336: 506E  			JMP	INS_FAIL
000337: 3603  			JBC		N			; Check N = 0?
000338: 506E  			JMP	INS_FAIL
000339: 2203  			BC		Z
00033A: 1050  			MOV		A,0x50
00033B: 6C7F  			XOR		A,@0x7F		; Check Result ?
00033C: 3A03  			JBS		Z			; Check Z = 1?
00033D: 506E  			JMP	INS_FAIL
00033E: 3603  			JBC		N			; Check N = 0?
00033F: 506E  			JMP	INS_FAIL
000340: 6012  			MOV		A,@0x12
000341: 015A  			MOV		INST,A
000342: 40E7  			CALL	STATUS_CLEAR	; 0x80+0x7F
000343: 6080  			MOV		A,@0x80
000344: 0150  			MOV		0x50,A		; [0x50] = 0x80
000345: 607F  			MOV		A,@0x7F		; 
000346: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
000347: 3003  			JBC		C			; Check C = 0?
000348: 506E  			JMP	INS_FAIL
000349: 3103  			JBC		DC			; Check DC = 0?
00034A: 506E  			JMP	INS_FAIL
00034B: 3203  			JBC		Z			; Check Z = 0?
00034C: 506E  			JMP	INS_FAIL
00034D: 3503  			JBC		OV			; Check OV = 0?
00034E: 506E  			JMP	INS_FAIL
00034F: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000350: 506E  			JMP	INS_FAIL
000351: 2203  			BC		Z
000352: 2603  			BC		N
000353: 6CFF  			XOR		A,@0xFF		; Check Result ?
000354: 3A03  			JBS		Z			; Check Z = 1?
000355: 506E  			JMP	INS_FAIL
000356: 3603  			JBC		N			; Check N = 0?
000357: 506E  			JMP	INS_FAIL
000358: 40E7  			CALL	STATUS_CLEAR	; 0xFF+0x01
000359: 60FF  			MOV		A,@0xFF
00035A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00035B: 6001  			MOV		A,@0x01		; 
00035C: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
00035D: 3803  			JBS		C			; Check C = 1?
00035E: 506E  			JMP	INS_FAIL
00035F: 3903  			JBS		DC			; Check DC = 1?
000360: 506E  			JMP	INS_FAIL
000361: 3A03  			JBS		Z			; Check Z = 1?
000362: 506E  			JMP	INS_FAIL
000363: 3503  			JBC		OV			; Check OV = 0?
000364: 506E  			JMP	INS_FAIL
000365: 3603  			JBC		N			; Check N = 0?
000366: 506E  			JMP	INS_FAIL
000367: 2203  			BC		Z
000368: 2603  			BC		N
000369: 6C00  			XOR		A,@0x00		; Check Result ?
00036A: 3A03  			JBS		Z			; Check Z = 1?
00036B: 506E  			JMP	INS_FAIL
00036C: 3603  			JBC		N			; Check N = 0?
00036D: 506E  			JMP	INS_FAIL
00036E: 40E7  			CALL	STATUS_CLEAR	; 0x7F+0x01
00036F: 607F  			MOV		A,@0x7F
000370: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000371: 6001  			MOV		A,@0x01		; 
000372: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
000373: 3003  			JBC		C			; Check C = 0?
000374: 506E  			JMP	INS_FAIL
000375: 3903  			JBS		DC			; Check DC = 1?
000376: 506E  			JMP	INS_FAIL
000377: 3203  			JBC		Z			; Check Z = 0?
000378: 506E  			JMP	INS_FAIL
000379: 3D03  			JBS		OV			; Check OV = 1?
00037A: 506E  			JMP	INS_FAIL
00037B: 3E03  			JBS		N			; Check N = 1?
00037C: 506E  			JMP	INS_FAIL
00037D: 2203  			BC		Z
00037E: 2603  			BC		N
00037F: 6C80  			XOR		A,@0x80		; Check Result ?
000380: 3A03  			JBS		Z			; Check Z = 1?
000381: 506E  			JMP	INS_FAIL
000382: 3603  			JBC		N			; Check N = 0?
000383: 506E  			JMP	INS_FAIL
000384: 6013  			MOV		A,@0x13
000385: 015A  			MOV		INST,A
000386: 40E7  			CALL	STATUS_CLEAR	; 0x80+0x7F
000387: 6080  			MOV		A,@0x80
000388: 0150  			MOV		0x50,A		; [0x50] = 0x80
000389: 607F  			MOV		A,@0x7F		; A = 0x7F
00038A: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00038B: 1003  			MOV		A,STATUS
00038C: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00038D: 3A03  			JBS		Z			; Check Z = 1?
00038E: 506E  			JMP	INS_FAIL
00038F: 3603  			JBC		N			; Check N = 0?
000390: 506E  			JMP	INS_FAIL
000391: 1050  			MOV		A,0x50
000392: 6CFF  			XOR		A,@0xFF		; Check Result ?
000393: 3A03  			JBS		Z			; Check Z = 1?
000394: 506E  			JMP	INS_FAIL
000395: 3603  			JBC		N			; Check N = 0?
000396: 506E  			JMP	INS_FAIL
000397: 40E7  			CALL	STATUS_CLEAR	; 0xFF+0x01
000398: 60FF  			MOV		A,@0xFF
000399: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00039A: 6001  			MOV		A,@0x01		; A = 0x01
00039B: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
00039C: 1003  			MOV		A,STATUS
00039D: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
00039E: 3A03  			JBS		Z			; Check Z = 1?
00039F: 506E  			JMP	INS_FAIL
0003A0: 3603  			JBC		N			; Check N = 0?
0003A1: 506E  			JMP	INS_FAIL
0003A2: 1050  			MOV		A,0x50
0003A3: 6C00  			XOR		A,@0x00		; Check Result ?
0003A4: 3A03  			JBS		Z			; Check Z = 1?
0003A5: 506E  			JMP	INS_FAIL
0003A6: 3603  			JBC		N			; Check N = 0?
0003A7: 506E  			JMP	INS_FAIL
0003A8: 40E7  			CALL	STATUS_CLEAR	;0x7F+0x01
0003A9: 607F  			MOV		A,@0x7F
0003AA: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003AB: 6001  			MOV		A,@0x01		; A = 0x01
0003AC: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
0003AD: 1003  			MOV		A,STATUS
0003AE: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
0003AF: 3A03  			JBS		Z			; Check Z = 1?
0003B0: 506E  			JMP	INS_FAIL
0003B1: 3603  			JBC		N			; Check N = 0?
0003B2: 506E  			JMP	INS_FAIL
0003B3: 1050  			MOV		A,0x50
0003B4: 6C80  			XOR		A,@0x80		; Check Result ?
0003B5: 3A03  			JBS		Z			; Check Z = 1?
0003B6: 506E  			JMP	INS_FAIL
0003B7: 3603  			JBC		N			; Check N = 0?
0003B8: 506E  			JMP	INS_FAIL
0003B9: 6034  			MOV		A,@0x34
0003BA: 015A  			MOV		INST,A
0003BB: 40E7  			CALL	STATUS_CLEAR
0003BC: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003BD: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003BE: 3003  			JBC		C			; Check C = 0?
0003BF: 506E  			JMP	INS_FAIL
0003C0: 3903  			JBS		DC			; Check DC = 1?
0003C1: 506E  			JMP	INS_FAIL
0003C2: 3203  			JBC		Z			; Check Z = 0?
0003C3: 506E  			JMP	INS_FAIL
0003C4: 3D03  			JBS		OV			; Check OV = 1?
0003C5: 506E  			JMP	INS_FAIL
0003C6: 3E03  			JBS		N			; Check N = 1?
0003C7: 506E  			JMP	INS_FAIL
0003C8: 6C80  			XOR		A,@0x80		; Check Result ?
0003C9: 40EA  			CALL	INST_XOR_JUDGE
0003CA: 40E7  			CALL	STATUS_CLEAR
0003CB: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003CC: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003CD: 3803  			JBS		C			; Check C = 1?
0003CE: 506E  			JMP	INS_FAIL
0003CF: 3903  			JBS		DC			; Check DC = 1?
0003D0: 506E  			JMP	INS_FAIL
0003D1: 3A03  			JBS		Z			; Check Z = 1?
0003D2: 506E  			JMP	INS_FAIL
0003D3: 3503  			JBC		OV			; Check OV = 0?
0003D4: 506E  			JMP	INS_FAIL
0003D5: 3603  			JBC		N			; Check N = 0?
0003D6: 506E  			JMP	INS_FAIL
0003D7: 6C00  			XOR		A,@0x00		; Check Result ?
0003D8: 40EA  			CALL	INST_XOR_JUDGE
0003D9: 40E7  			CALL	STATUS_CLEAR
0003DA: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003DB: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003DC: 3003  			JBC		C			; Check C = 0?
0003DD: 506E  			JMP	INS_FAIL
0003DE: 3103  			JBC		DC			; Check DC = 0?
0003DF: 506E  			JMP	INS_FAIL
0003E0: 3203  			JBC		Z			; Check Z = 0?
0003E1: 506E  			JMP	INS_FAIL
0003E2: 3503  			JBC		OV			; Check OV = 0?
0003E3: 506E  			JMP	INS_FAIL
0003E4: 3E03  			JBS		N			; Check N = 1?
0003E5: 506E  			JMP	INS_FAIL
0003E6: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003E7: 40EA  			CALL	INST_XOR_JUDGE
0003E8: 6036  			MOV		A,@0x36
0003E9: 015A  			MOV		INST,A
0003EA: 40E7  			CALL	STATUS_CLEAR
0003EB: 2803  			BS		C			; 0x7F+0x00
0003EC: 607F  			MOV		A,@0x7F		
0003ED: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003EE: 6000  			MOV		A,@0x00		; A = 0x00
0003EF: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003F0: 3003  			JBC		C			; Check C = 0?
0003F1: 506E  			JMP	INS_FAIL
0003F2: 3903  			JBS		DC			; Check DC = 1?
0003F3: 506E  			JMP	INS_FAIL
0003F4: 3203  			JBC		Z			; Check Z = 0?
0003F5: 506E  			JMP	INS_FAIL
0003F6: 3D03  			JBS		OV			; Check OV = 1?
0003F7: 506E  			JMP	INS_FAIL
0003F8: 3E03  			JBS		N			; Check N = 1?
0003F9: 506E  			JMP	INS_FAIL
0003FA: 6C80  			XOR		A,@0x80		; Check Result ?
0003FB: 40EA  			CALL	INST_XOR_JUDGE
0003FC: 40E7  			CALL	STATUS_CLEAR
0003FD: 2803  			BS		C			; 0x80+0x7F
0003FE: 6080  			MOV		A,@0x80
0003FF: 0150  			MOV		0x50,A		; [0x50] = 0x80
000400: 607F  			MOV		A,@0x7F		; A = 0x7F
000401: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
000402: 3803  			JBS		C			; Check C = 1?
000403: 506E  			JMP	INS_FAIL
000404: 3903  			JBS		DC			; Check DC = 1?
000405: 506E  			JMP	INS_FAIL
000406: 3A03  			JBS		Z			; Check Z = 1?
000407: 506E  			JMP	INS_FAIL
000408: 3503  			JBC		OV			; Check OV = 0?
000409: 506E  			JMP	INS_FAIL
00040A: 3603  			JBC		N			; Check N = 0?
00040B: 506E  			JMP	INS_FAIL
00040C: 6C00  			XOR		A,@0x00		; Check Result ?
00040D: 40EA  			CALL	INST_XOR_JUDGE
00040E: 6037  			MOV		A,@0x37
00040F: 015A  			MOV		INST,A
000410: 40E7  			CALL	STATUS_CLEAR
000411: 2803  			BS		C			;0x7F+0x00
000412: 607F  			MOV		A,@0x7F
000413: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000414: 6000  			MOV		A,@0x00		; A = 0x00
000415: 2203  			BC		Z
000416: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000417: 1003  			MOV		A,STATUS
000418: 6C7A  			XOR		A,@0x7A		; Check Status ?
000419: 40EA  			CALL	INST_XOR_JUDGE
00041A: 1050  			MOV		A,0x50
00041B: 6C80  			XOR		A,@0x80		; Check Result ?
00041C: 40EA  			CALL	INST_XOR_JUDGE
00041D: 40E7  			CALL	STATUS_CLEAR
00041E: 2803  			BS		C			;0x80+0x7F
00041F: 6080  			MOV		A,@0x80
000420: 0150  			MOV		0x50,A		; [0x50] = 0x80
000421: 607F  			MOV		A,@0x7F		; A = 0x7F
000422: 2203  			BC		Z
000423: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000424: 1003  			MOV		A,STATUS
000425: 6C1F  			XOR		A,@0x1F		; Check Status ?
000426: 40EA  			CALL	INST_XOR_JUDGE
000427: 1050  			MOV		A,0x50
000428: 6C00  			XOR		A,@0x00		; Check Result ?
000429: 40EA  			CALL	INST_XOR_JUDGE
00042A: 6017  			MOV		A,@0x17
00042B: 015A  			MOV		INST,A
00042C: 40E7  			CALL	STATUS_CLEAR	; 0x7F+0x01
00042D: 607F  			MOV		A,@0x7F
00042E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00042F: 1450  			INCA	0x50		; A = [0x50] +1		
000430: 3003  			JBC		C			; Check C = 0?
000431: 506E  			JMP	INS_FAIL
000432: 3903  			JBS		DC			; Check DC = 1?
000433: 506E  			JMP	INS_FAIL
000434: 3203  			JBC		Z			; Check Z = 0?
000435: 506E  			JMP	INS_FAIL
000436: 3D03  			JBS		OV			; Check OV = 1?
000437: 506E  			JMP	INS_FAIL
000438: 3E03  			JBS		N			; Check N = 1?
000439: 506E  			JMP	INS_FAIL
00043A: 2203  			BC		Z
00043B: 2603  			BC		N
00043C: 6C80  			XOR		A,@0x80		; Check Result ?
00043D: 3A03  			JBS		Z			; Check Z = 1?
00043E: 506E  			JMP	INS_FAIL
00043F: 3603  			JBC		N			; Check N = 0?
000440: 506E  			JMP	INS_FAIL
000441: 40E7  			CALL	STATUS_CLEAR	; 0xFF+0x01
000442: 60FF  			MOV		A,@0xFF
000443: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000444: 1450  			INCA	0x50		; A = [0x50] +1		
000445: 3803  			JBS		C			; Check C = 1?
000446: 506E  			JMP	INS_FAIL
000447: 3903  			JBS		DC			; Check DC = 1?
000448: 506E  			JMP	INS_FAIL
000449: 3A03  			JBS		Z			; Check Z = 1?
00044A: 506E  			JMP	INS_FAIL
00044B: 3503  			JBC		OV			; Check OV = 0?
00044C: 506E  			JMP	INS_FAIL
00044D: 3603  			JBC		N			; Check N = 0?
00044E: 506E  			JMP	INS_FAIL
00044F: 2203  			BC		Z
000450: 2603  			BC		N
000451: 6C00  			XOR		A,@0x00		; Check Result ?
000452: 3A03  			JBS		Z			; Check Z = 1?
000453: 506E  			JMP	INS_FAIL
000454: 3603  			JBC		N			; Check N = 0?
000455: 506E  			JMP	INS_FAIL
000456: 6018  			MOV		A,@0x18
000457: 015A  			MOV		INST,A
000458: 40E7  			CALL 	STATUS_CLEAR	; 0x7F+0x01
000459: 607F  			MOV		A,@0x7F
00045A: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00045B: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00045C: 1003  			MOV		A,STATUS
00045D: 6C7A  			XOR		A,@0x7A		; Check Status ?
00045E: 3A03  			JBS		Z			; Check Z = 1?
00045F: 506E  			JMP	INS_FAIL
000460: 3603  			JBC		N			; Check N = 0?
000461: 506E  			JMP	INS_FAIL
000462: 1050  			MOV		A,0x50
000463: 6C80  			XOR		A,@0x80		; Check Result ?
000464: 3A03  			JBS		Z			; Check Z = 1?
000465: 506E  			JMP	INS_FAIL
000466: 3603  			JBC		N			; Check N = 0?
000467: 506E  			JMP	INS_FAIL
000468: 40E7  			CALL	STATUS_CLEAR	; 0xFF+0x01
000469: 60FF  			MOV		A,@0xFF
00046A: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00046B: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00046C: 1003  			MOV		A,STATUS
00046D: 6C1F  			XOR		A,@0x1F		; Check Status ?
00046E: 3A03  			JBS		Z			; Check Z = 1?
00046F: 506E  			JMP	INS_FAIL
000470: 3603  			JBC		N			; Check N = 0?
000471: 506E  			JMP	INS_FAIL
000472: 1050  			MOV		A,0x50
000473: 6C00  			XOR		A,@0x00		; Check Result ?
000474: 3A03  			JBS		Z			; Check Z = 1?
000475: 506E  			JMP	INS_FAIL
000476: 3603  			JBC		N			; Check N = 0?
000477: 506E  			JMP	INS_FAIL
000478: 6035  			MOV		A,@0x35
000479: 015A  			MOV		INST,A
00047A: 40E7  			CALL	STATUS_CLEAR
00047B: 6000  			MOV		A,@0x00		; 0x00
00047C: 0150  			MOV		0x50,A		; [0x50] = 0x00
00047D: 7D50  			NEG		0x50
00047E: 1003  			MOV		A,STATUS
00047F: 6C1F  			XOR		A,@0x1F		; Check Status ?
000480: 40EA  			CALL	INST_XOR_JUDGE
000481: 1050  			MOV		A,0x50
000482: 6C00  			XOR		A,@0x00		; Check Result ?
000483: 40EA  			CALL	INST_XOR_JUDGE
000484: 40E7  			CALL	STATUS_CLEAR
000485: 6001  			MOV		A,@0x01		; 0x01
000486: 0150  			MOV		0x50,A		; [0x50] = 0x01
000487: 7D50  			NEG		0x50
000488: 1003  			MOV		A,STATUS
000489: 6C58  			XOR		A,@0x58		; Check Status ?
00048A: 40EA  			CALL	INST_XOR_JUDGE
00048B: 1050  			MOV		A,0x50
00048C: 6CFF  			XOR		A,@0xFF		; Check Result ?
00048D: 4680  			CALL	INST_XCH
00048E: 40E7  			CALL	STATUS_CLEAR
00048F: 6080  			MOV		A,@0x80		; 0x80
000490: 0150  			MOV		0x50,A		; [0x50] = 0x80
000491: 7D50  			NEG		0x50
000492: 1003  			MOV		A,STATUS
000493: 6C7A  			XOR		A,@0x7A		; Check Status ?
000494: 40EA  			CALL	INST_XOR_JUDGE
000495: 1050  			MOV		A,0x50
000496: 6C80  			XOR		A,@0x80		; Check Result ?
000497: 40EA  			CALL	INST_XOR_JUDGE
000498: 0012  		RET
000499: 6006  			MOV		A,@0x06
00049A: 015A  			MOV		INST,A
00049B: 40E7  			CALL	STATUS_CLEAR
00049C: 60FF  			MOV		A,@0xFF
00049D: 0104  			MOV		RSR,A		; Start Address
00049E: 0084  			BTG		RSR
00049F: 1004  			MOV		A,RSR
0004A0: 6CFE  			XOR		A,@0xFE		; Check Result ?
0004A1: 40EA  			CALL	INST_XOR_JUDGE
0004A2: 600E  			MOV		A,@0x0E
0004A3: 015A  			MOV		INST,A
0004A4: 6000  			MOV		A,@0x00
0004A5: 0103  			MOV		STATUS,A
0004A6: 6000  			MOV		A,@0x00
0004A7: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004A8: 6000  			MOV		A,@0x00
0004A9: 2203  			BC		Z
0004AA: 0850  			OR		A,0x50		; A = A | [0x50]
0004AB: 3003  			JBC		C			; Check C = 0?
0004AC: 506E  			JMP	INS_FAIL
0004AD: 3103  			JBC		DC			; Check DC = 0?
0004AE: 506E  			JMP	INS_FAIL
0004AF: 3A03  			JBS		Z			; Check Z = 1?
0004B0: 506E  			JMP	INS_FAIL
0004B1: 3503  			JBC		OV			; Check OV = 0?
0004B2: 506E  			JMP	INS_FAIL
0004B3: 3603  			JBC		N			; Check N = 0?
0004B4: 506E  			JMP	INS_FAIL
0004B5: 2203  			BC		Z
0004B6: 6C00  			XOR		A,@0x00		; Check Result ?
0004B7: 3A03  			JBS		Z			; Check Z = 1?
0004B8: 506E  			JMP	INS_FAIL
0004B9: 3603  			JBC		N			; Check N = 0?
0004BA: 506E  			JMP	INS_FAIL
0004BB: 6000  			MOV		A,@0x00
0004BC: 0103  			MOV		STATUS,A
0004BD: 6055  			MOV		A,@0x55
0004BE: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004BF: 60AA  			MOV		A,@0xAA
0004C0: 2203  			BC		Z
0004C1: 0850  			OR		A,0x50		; A = A | [0x50]
0004C2: 3003  			JBC		C			; Check C = 0?
0004C3: 506E  			JMP	INS_FAIL
0004C4: 3103  			JBC		DC			; Check DC = 0?
0004C5: 506E  			JMP	INS_FAIL
0004C6: 3203  			JBC		Z			; Check Z = 0?
0004C7: 506E  			JMP	INS_FAIL
0004C8: 3503  			JBC		OV			; Check OV = 0?
0004C9: 506E  			JMP	INS_FAIL
0004CA: 3E03  			JBS		N			; Check N = 1?
0004CB: 506E  			JMP	INS_FAIL
0004CC: 2203  			BC		Z
0004CD: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004CE: 3A03  			JBS		Z			; Check Z = 1?
0004CF: 506E  			JMP	INS_FAIL
0004D0: 3603  			JBC		N			; Check N = 0?
0004D1: 506E  			JMP	INS_FAIL
0004D2: 600F  			MOV		A,@0x0F
0004D3: 015A  			MOV		INST,A
0004D4: 6000  			MOV		A,@0x00
0004D5: 0103  			MOV		STATUS,A
0004D6: 6000  			MOV		A,@0x00
0004D7: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004D8: 6000  			MOV		A,@0x00		; A = 0x00
0004D9: 2203  			BC		Z
0004DA: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0004DB: 1003  			MOV		A,STATUS
0004DC: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004DD: 3A03  			JBS		Z			; Check Z = 1?
0004DE: 506E  			JMP	INS_FAIL
0004DF: 3603  			JBC		N			; Check N = 0?
0004E0: 506E  			JMP	INS_FAIL
0004E1: 1050  			MOV		A,0x50		; A = Result[0x50]
0004E2: 2203  			BC		Z
0004E3: 2603  			BC		N
0004E4: 6C00  			XOR		A,@0x00		; Check Result ?
0004E5: 3A03  			JBS		Z			; Check Z = 1?
0004E6: 506E  			JMP	INS_FAIL
0004E7: 3603  			JBC		N			; Check N = 0?
0004E8: 506E  			JMP	INS_FAIL
0004E9: 6000  			MOV		A,@0x00
0004EA: 0103  			MOV		STATUS,A
0004EB: 6055  			MOV		A,@0x55
0004EC: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004ED: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004EE: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004EF: 1003  			MOV		A,STATUS
0004F0: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004F1: 3A03  			JBS		Z			; Check Z = 1?
0004F2: 506E  			JMP	INS_FAIL
0004F3: 3603  			JBC		N			; Check N = 0?
0004F4: 506E  			JMP	INS_FAIL
0004F5: 1050  			MOV		A,0x50
0004F6: 2203  			BC		Z
0004F7: 2603  			BC		N
0004F8: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004F9: 3A03  			JBS		Z			; Check Z = 1?
0004FA: 506E  			JMP	INS_FAIL
0004FB: 3603  			JBC		N			; Check N = 0?
0004FC: 506E  			JMP	INS_FAIL
0004FD: 6010  			MOV		A,@0x10
0004FE: 015A  			MOV		INST,A
0004FF: 40E7  			CALL	STATUS_CLEAR
000500: 6055  			MOV		A,@0x55
000501: 0150  			MOV		0x50,A		; [0x50] = 0x55
000502: 60AA  			MOV		A,@0xAA
000503: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
000504: 3003  			JBC		C			; Check C = 0?
000505: 506E  			JMP	INS_FAIL
000506: 3103  			JBC		DC			; Check DC = 0?
000507: 506E  			JMP	INS_FAIL
000508: 3A03  			JBS		Z			; Check Z = 1?
000509: 506E  			JMP	INS_FAIL
00050A: 3503  			JBC		OV			; Check OV = 0?
00050B: 506E  			JMP	INS_FAIL
00050C: 3603  			JBC		N			; Check N = 0?
00050D: 506E  			JMP	INS_FAIL
00050E: 6C00  			XOR		A,@0x00		; Check Result ?
00050F: 3A03  			JBS		Z			; Check Z = 1?
000510: 506E  			JMP	INS_FAIL
000511: 3603  			JBC		N			; Check N = 0?
000512: 506E  			JMP	INS_FAIL
000513: 40E7  			CALL	STATUS_CLEAR
000514: 60F5  			MOV		A,@0xF5
000515: 0150  			MOV		0x50,A		; [0x50] = 0xF5
000516: 60FA  			MOV		A,@0xFA
000517: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
000518: 3003  			JBC		C			; Check C = 0?
000519: 506E  			JMP	INS_FAIL
00051A: 3103  			JBC		DC			; Check DC = 0?
00051B: 506E  			JMP	INS_FAIL
00051C: 3203  			JBC		Z			; Check Z = 0?
00051D: 506E  			JMP	INS_FAIL
00051E: 3503  			JBC		OV			; Check OV = 0?
00051F: 506E  			JMP	INS_FAIL
000520: 3E03  			JBS		N			; Check N = 1?
000521: 506E  			JMP	INS_FAIL
000522: 6CF0  			XOR		A,@0xF0		; Check Result ?
000523: 3A03  			JBS		Z			; Check Z = 1?
000524: 506E  			JMP	INS_FAIL
000525: 3603  			JBC		N			; Check N = 0?
000526: 506E  			JMP	INS_FAIL
000527: 6011  			MOV		A,@0x11
000528: 015A  			MOV		INST,A
000529: 40E7  			CALL	STATUS_CLEAR
00052A: 6055  			MOV		A,@0x55
00052B: 0150  			MOV		0x50,A		; [0x50] = 0x55
00052C: 60AA  			MOV		A,@0xAA
00052D: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
00052E: 1003  			MOV		A,STATUS
00052F: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
000530: 3A03  			JBS		Z			; Check Z = 1?
000531: 506E  			JMP	INS_FAIL
000532: 3603  			JBC		N			; Check N = 0?
000533: 506E  			JMP	INS_FAIL
000534: 2203  			BC		Z
000535: 1050  			MOV		A,0x50
000536: 2203  			BC		Z
000537: 6C00  			XOR		A,@0x00		; Check Result ?
000538: 3A03  			JBS		Z			; Check Z = 1?
000539: 506E  			JMP	INS_FAIL
00053A: 3603  			JBC		N			; Check N = 0?
00053B: 506E  			JMP	INS_FAIL
00053C: 40E7  			CALL	STATUS_CLEAR
00053D: 60F5  			MOV		A,@0xF5
00053E: 0150  			MOV		0x50,A		; [0x50] = 0xF5
00053F: 60FA  			MOV		A,@0xFA
000540: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
000541: 1003  			MOV		A,STATUS
000542: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000543: 3A03  			JBS		Z			; Check Z = 1?
000544: 506E  			JMP	INS_FAIL
000545: 3603  			JBC		N			; Check N = 0?
000546: 506E  			JMP	INS_FAIL
000547: 2203  			BC		Z
000548: 1050  			MOV		A,0x50
000549: 2203  			BC		Z
00054A: 6CF0  			XOR		A,@0xF0		; Check Result ?
00054B: 3A03  			JBS		Z			; Check Z = 1?
00054C: 506E  			JMP	INS_FAIL
00054D: 3603  			JBC		N			; Check N = 0?
00054E: 506E  			JMP	INS_FAIL
00054F: 6029  			MOV		A,@0x29
000550: 015A  			MOV		INST,A
000551: 40E7  			CALL	STATUS_CLEAR
000552: 60AA  			MOV		A,@0xAA
000553: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
000554: 3003  			JBC		C			; Check C = 0?
000555: 506E  			JMP	INS_FAIL
000556: 3103  			JBC		DC			; Check DC = 0?
000557: 506E  			JMP	INS_FAIL
000558: 3A03  			JBS		Z			; Check Z = 1?
000559: 506E  			JMP	INS_FAIL
00055A: 3503  			JBC		OV			; Check OV = 0?
00055B: 506E  			JMP	INS_FAIL
00055C: 3603  			JBC		N			; Check N = 0?
00055D: 506E  			JMP	INS_FAIL
00055E: 6C00  			XOR		A,@0x00		; Check Result ?
00055F: 3A03  			JBS		Z			; Check Z = 1?
000560: 506E  			JMP	INS_FAIL
000561: 3603  			JBC		N			; Check N = 0?
000562: 506E  			JMP	INS_FAIL
000563: 40E7  			CALL	STATUS_CLEAR
000564: 60AA  			MOV		A,@0xAA
000565: 68FF  			AND		A,@0xFF		; A = A & 0xFF
000566: 3003  			JBC		C			; Check C = 0?
000567: 506E  			JMP	INS_FAIL
000568: 3103  			JBC		DC			; Check DC = 0?
000569: 506E  			JMP	INS_FAIL
00056A: 3203  			JBC		Z			; Check Z = 0?
00056B: 506E  			JMP	INS_FAIL
00056C: 3503  			JBC		OV			; Check OV = 0?
00056D: 506E  			JMP	INS_FAIL
00056E: 3E03  			JBS		N			; Check N = 1?
00056F: 506E  			JMP	INS_FAIL
000570: 6CAA  			XOR		A,@0xAA		; Check Result ?
000571: 40EA  			CALL	INST_XOR_JUDGE
000572: 6015  			MOV		A,@0x15
000573: 015A  			MOV		INST,A
000574: 40E7  			CALL	STATUS_CLEAR
000575: 60FF  			MOV		A,@0xFF
000576: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000577: 1250  			COMA	0x50		; A = /R
000578: 3003  			JBC		C			; Check C = 0?
000579: 506E  			JMP	INS_FAIL
00057A: 3103  			JBC		DC			; Check DC = 0?
00057B: 506E  			JMP	INS_FAIL
00057C: 3A03  			JBS		Z			; Check Z = 1?
00057D: 506E  			JMP	INS_FAIL
00057E: 3503  			JBC		OV			; Check OV = 0?
00057F: 506E  			JMP	INS_FAIL
000580: 3603  			JBC		N			; Check N = 0?
000581: 506E  			JMP	INS_FAIL
000582: 6C00  			XOR		A,@0x00		; Check Result ?
000583: 3A03  			JBS		Z			; Check Z = 1?
000584: 506E  			JMP	INS_FAIL
000585: 3603  			JBC		N			; Check N = 0?
000586: 506E  			JMP	INS_FAIL	
000587: 40E7  			CALL	STATUS_CLEAR
000588: 6005  			MOV		A,@0x05
000589: 0150  			MOV		0x50,A		; [0x50] = 0x05
00058A: 1250  			COMA	0x50		; A = /R
00058B: 3003  			JBC		C			; Check C = 0?
00058C: 506E  			JMP	INS_FAIL
00058D: 3103  			JBC		DC			; Check DC = 0?
00058E: 506E  			JMP	INS_FAIL
00058F: 3203  			JBC		Z			; Check Z = 0?
000590: 506E  			JMP	INS_FAIL
000591: 3503  			JBC		OV			; Check OV = 0?
000592: 506E  			JMP	INS_FAIL
000593: 3E03  			JBS		N			; Check N = 1?
000594: 506E  			JMP	INS_FAIL
000595: 6CFA  			XOR		A,@0xFA		; Check Result ?
000596: 3A03  			JBS		Z			; Check Z = 1?
000597: 506E  			JMP	INS_FAIL
000598: 3603  			JBC		N			; Check N = 0?
000599: 506E  			JMP	INS_FAIL
00059A: 6016  			MOV		A,@0x16
00059B: 015A  			MOV		INST,A
00059C: 40E7  			CALL	STATUS_CLEAR
00059D: 60FF  			MOV		A,@0xFF
00059E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00059F: 1350  			COM		0x50		; [0x50] = /[0x50]
0005A0: 1003  			MOV		A,STATUS
0005A1: 6C1C  			XOR		A,@0x1C		; Check Status ?
0005A2: 3A03  			JBS		Z			; Check Z = 1?
0005A3: 506E  			JMP	INS_FAIL
0005A4: 3603  			JBC		N			; Check N = 0?
0005A5: 506E  			JMP	INS_FAIL
0005A6: 2203  			BC		Z
0005A7: 2603  			BC		N
0005A8: 1050  			MOV		A,0x50
0005A9: 6C00  			XOR		A,@0x00		; Check Result ?
0005AA: 3A03  			JBS		Z			; Check Z = 1?
0005AB: 506E  			JMP	INS_FAIL
0005AC: 3603  			JBC		N			; Check N = 0?
0005AD: 506E  			JMP	INS_FAIL
0005AE: 40E7  			CALL	STATUS_CLEAR
0005AF: 6000  			MOV		A,@0x00
0005B0: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0005B1: 1350  			COM		0x50		; [0x50] = /[0x50]
0005B2: 1003  			MOV		A,STATUS
0005B3: 6C58  			XOR		A,@0x58		; Check Status ?
0005B4: 3A03  			JBS		Z			; Check Z = 1?
0005B5: 506E  			JMP	INS_FAIL
0005B6: 3603  			JBC		N			; Check N = 0?
0005B7: 506E  			JMP	INS_FAIL
0005B8: 2203  			BC		Z
0005B9: 2603  			BC		N
0005BA: 1050  			MOV		A,0x50
0005BB: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005BC: 3A03  			JBS		Z			; Check Z = 1?
0005BD: 506E  			JMP	INS_FAIL
0005BE: 3603  			JBC		N			; Check N = 0?
0005BF: 506E  			JMP	INS_FAIL
0005C0: 6026  			MOV		A,@0x26
0005C1: 015A  			MOV		INST,A
0005C2: 40E7  			CALL	STATUS_CLEAR
0005C3: 60A5  			MOV		A,@0xA5
0005C4: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
0005C5: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005C6: 40EA  			CALL	INST_XOR_JUDGE
0005C7: 0012  		RET
0005C8: 602B  			MOV		A,@0x2B
0005C9: 015A  			MOV		INST,A
0005CA: 40E7  			CALL	STATUS_CLEAR
0005CB: 6055  			MOV		A,@0x55
0005CC: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005CD: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
0005CE: 1003  			MOV		A,STATUS
0005CF: 6C58  			XOR		A,@0x58		; Check Status ?
0005D0: 40EA  			CALL	INST_XOR_JUDGE
0005D1: 1050  			MOV		A,0x50
0005D2: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005D3: 40EA  			CALL	INST_XOR_JUDGE
0005D4: 602A  			MOV		A,@0x2A
0005D5: 015A  			MOV		INST,A
0005D6: 40E7  			CALL 	STATUS_CLEAR
0005D7: 6055  			MOV		A,@0x55
0005D8: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005D9: 6E50  			RRA		0x50		; A = [0x50] >> 1
0005DA: 3003  			JBC		C			; Check C = 0?
0005DB: 506E  			JMP	INS_FAIL
0005DC: 3103  			JBC		DC			; Check DC = 0?
0005DD: 506E  			JMP	INS_FAIL
0005DE: 3203  			JBC		Z			; Check Z = 0?
0005DF: 506E  			JMP	INS_FAIL
0005E0: 3503  			JBC		OV			; Check OV = 0?
0005E1: 506E  			JMP	INS_FAIL
0005E2: 3E03  			JBS		N			; Check N = 1?
0005E3: 506E  			JMP	INS_FAIL
0005E4: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005E5: 40EA  			CALL	INST_XOR_JUDGE
0005E6: 601B  			MOV		A,@0x1B
0005E7: 015A  			MOV		INST,A
0005E8: 40E7  			CALL	STATUS_CLEAR
0005E9: 2803  			BS		C
0005EA: 60AA  			MOV		A,@0xAA
0005EB: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005EC: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005ED: 3003  			JBC		C			; Check C = 0?
0005EE: 506E  			JMP	INS_FAIL
0005EF: 3103  			JBC		DC			; Check DC = 0?
0005F0: 506E  			JMP	INS_FAIL
0005F1: 3203  			JBC		Z			; Check Z = 0?
0005F2: 506E  			JMP	INS_FAIL
0005F3: 3503  			JBC		OV			; Check OV = 0?
0005F4: 506E  			JMP	INS_FAIL
0005F5: 3E03  			JBS		N			; Check N = 1?
0005F6: 506E  			JMP	INS_FAIL
0005F7: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005F8: 40EA  			CALL	INST_XOR_JUDGE
0005F9: 40E7  			CALL	STATUS_CLEAR
0005FA: 6055  			MOV		A,@0x55
0005FB: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005FC: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005FD: 3803  			JBS		C			; Check C = 1?
0005FE: 506E  			JMP	INS_FAIL
0005FF: 3103  			JBC		DC			; Check DC = 0?
000600: 506E  			JMP	INS_FAIL
000601: 3203  			JBC		Z			; Check Z = 0?
000602: 506E  			JMP	INS_FAIL
000603: 3503  			JBC		OV			; Check OV = 0?
000604: 506E  			JMP	INS_FAIL
000605: 3603  			JBC		N			; Check N = 0?
000606: 506E  			JMP	INS_FAIL
000607: 6C2A  			XOR		A,@0x2A		; Check Result ?
000608: 40EA  			CALL	INST_XOR_JUDGE
000609: 601C  			MOV		A,@0x1C
00060A: 015A  			MOV		INST,A
00060B: 40E7  			CALL	STATUS_CLEAR
00060C: 2803  			BS		C
00060D: 60AA  			MOV		A,@0xAA
00060E: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00060F: 2203  			BC		Z
000610: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
000611: 1003  			MOV		A,STATUS
000612: 6C58  			XOR		A,@0x58		; Check Status ?
000613: 40EA  			CALL	INST_XOR_JUDGE
000614: 1050  			MOV		A,0x50
000615: 6CD5  			XOR		A,@0xD5		; Check Result ?
000616: 40EA  			CALL	INST_XOR_JUDGE
000617: 40E7  			CALL	STATUS_CLEAR
000618: 6055  			MOV		A,@0x55
000619: 0150  			MOV		0x50,A		; [0x50] = 0x55
00061A: 2203  			BC		Z
00061B: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
00061C: 1003  			MOV		A,STATUS
00061D: 6C19  			XOR		A,@0x19		; Check Status ?
00061E: 3A03  			JBS		Z			; Check Z = 1?
00061F: 506E  			JMP	INS_FAIL
000620: 3603  			JBC		N			; Check N = 0?
000621: 506E  			JMP	INS_FAIL
000622: 1050  			MOV		A,0x50
000623: 6C2A  			XOR		A,@0x2A		; Check Result ?
000624: 40EA  			CALL	INST_XOR_JUDGE
000625: 601D  			MOV		A,@0x1D
000626: 015A  			MOV		INST,A
000627: 40E7  			CALL STATUS_CLEAR
000628: 2803  			BS		C
000629: 6055  			MOV		A,@0x55
00062A: 0150  			MOV		0x50,A		; [0x50] = 0x55
00062B: 1A50  			RLCA	0x50		; A = [0x50] << 1
00062C: 3003  			JBC		C			; Check C = 0?
00062D: 506E  			JMP	INS_FAIL
00062E: 3103  			JBC		DC			; Check DC = 0?
00062F: 506E  			JMP	INS_FAIL
000630: 3203  			JBC		Z			; Check Z = 0?
000631: 506E  			JMP	INS_FAIL
000632: 3503  			JBC		OV			; Check OV = 0?
000633: 506E  			JMP	INS_FAIL
000634: 3E03  			JBS		N			; Check N = 1?
000635: 506E  			JMP	INS_FAIL
000636: 6CAB  			XOR		A,@0xAB		; Check Result ?
000637: 40EA  			CALL	INST_XOR_JUDGE
000638: 40E7  			CALL	STATUS_CLEAR
000639: 60AA  			MOV		A,@0xAA
00063A: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00063B: 1A50  			RLCA	0x50		; A = [0x50] << 1
00063C: 3803  			JBS		C			; Check C = 1?
00063D: 506E  			JMP	INS_FAIL
00063E: 3103  			JBC		DC			; Check DC = 0?
00063F: 506E  			JMP	INS_FAIL
000640: 3203  			JBC		Z			; Check Z = 0?
000641: 506E  			JMP	INS_FAIL
000642: 3503  			JBC		OV			; Check OV = 0?
000643: 506E  			JMP	INS_FAIL
000644: 3603  			JBC		N			; Check N = 0?
000645: 506E  			JMP	INS_FAIL
000646: 6C54  			XOR		A,@0x54		; Check Result ?
000647: 40EA  			CALL	INST_XOR_JUDGE
000648: 601E  			MOV		A,@0x1E
000649: 015A  			MOV		INST,A
00064A: 40E7  			CALL	STATUS_CLEAR
00064B: 2803  			BS		C
00064C: 6055  			MOV		A,@0x55
00064D: 0150  			MOV		0x50,A		; [0x50] = 0x55
00064E: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
00064F: 1003  			MOV		A,STATUS
000650: 6C58  			XOR		A,@0x58		; Check Status ?
000651: 40EA  			CALL	INST_XOR_JUDGE
000652: 1050  			MOV		A,0x50
000653: 6CAB  			XOR		A,@0xAB		; Check Result ?
000654: 40EA  			CALL	INST_XOR_JUDGE
000655: 40E7  			CALL	STATUS_CLEAR
000656: 60AA  			MOV		A,@0xAA
000657: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000658: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000659: 1003  			MOV		A,STATUS
00065A: 6C19  			XOR		A,@0x19		; Check Status ?
00065B: 40EA  			CALL	INST_XOR_JUDGE
00065C: 1050  			MOV		A,0x50
00065D: 6C54  			XOR		A,@0x54		; Check Result ?
00065E: 40EA  			CALL	INST_XOR_JUDGE
00065F: 602E  			MOV		A,@0x2E
000660: 015A  			MOV		INST,A
000661: 40E7  			CALL	STATUS_CLEAR
000662: 605A  			MOV		A,@0x5A
000663: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000664: 7250  			RLA		0x50		; A = [0x50] << 1
000665: 3003  			JBC		C			; Check C = 0?
000666: 506E  			JMP	INS_FAIL
000667: 3103  			JBC		DC			; Check DC = 0?
000668: 506E  			JMP	INS_FAIL
000669: 3203  			JBC		Z			; Check Z = 0?
00066A: 506E  			JMP	INS_FAIL
00066B: 3503  			JBC		OV			; Check OV = 0?
00066C: 506E  			JMP	INS_FAIL
00066D: 3E03  			JBS		N			; Check N = 1?
00066E: 506E  			JMP	INS_FAIL
00066F: 6CB4  			XOR		A,@0xB4		; Check Result ?
000670: 40EA  			CALL	INST_XOR_JUDGE
000671: 602F  			MOV		A,@0x2F
000672: 015A  			MOV		INST,A
000673: 40E7  			CALL	STATUS_CLEAR
000674: 605A  			MOV		A,@0x5A
000675: 0150  			MOV		0x50,A		; [0x50] = 0xA5
000676: 7350  			RL		0x50		; [0x50] = [0x50] << 1
000677: 1003  			MOV		A,STATUS
000678: 6C58  			XOR		A,@0x58		; Check Status ?
000679: 3A03  			JBS		Z			; Check Z = 1?
00067A: 506E  			JMP	INS_FAIL
00067B: 3603  			JBC		N			; Check N = 0?
00067C: 506E  			JMP	INS_FAIL
00067D: 1050  			MOV		A,0x50
00067E: 6CB4  			XOR		A,@0xB4		; Check Result ?
00067F: 40EA  			CALL	INST_XOR_JUDGE
000680: 602D  			MOV		A,@0x2D
000681: 015A  			MOV		INST,A
000682: 40E7  			CALL	STATUS_CLEAR
000683: 6055  			MOV		A,@0x55
000684: 0150  			MOV		0x50,A		; [0x50] = 0x55
000685: 60AA  			MOV		A,@0xAA
000686: 7150  			XCH		0x50		; [0x50] <-> A
000687: 6C55  			XOR		A,@0x55		; Check Result ?
000688: 3A03  			JBS		Z			; Check Z = 1?
000689: 506E  			JMP	INS_FAIL
00068A: 3603  			JBC		N			; Check N = 0?
00068B: 506E  			JMP	INS_FAIL
00068C: 1050  			MOV		A,0x50
00068D: 6CAA  			XOR		A,@0xAA		; Check Result ?
00068E: 40EA  			CALL	INST_XOR_JUDGE
00068F: 0012  		RET
000690: 6007  			MOV		A,@0x07
000691: 015A  			MOV		INST,A
000692: 40E7  			CALL	STATUS_CLEAR
000693: 60FF  			MOV		A,@0xFF
000694: 0150  			MOV		0x50,A
000695: 1003  			MOV		A,STATUS
000696: 6C18  			XOR		A,@0x18		;At  OCDS
000697: 40EA  			CALL	INST_XOR_JUDGE
000698: 1050  			MOV		A,0x50
000699: 6CFF  			XOR		A,@0xFF		; Check Result ?
00069A: 40EA  			CALL	INST_XOR_JUDGE
00069B: 6014  			MOV		A,@0x14
00069C: 015A  			MOV		INST,A
00069D: 40E7  			CALL	STATUS_CLEAR
00069E: 6000  			MOV		A,@0x00
00069F: 0150  			MOV		0x50,A		; [0x50] = 0x00		
0006A0: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
0006A1: 1003  			MOV		A,STATUS
0006A2: 6C1C  			XOR		A,@0x1C		; Check Status ?
0006A3: 3A03  			JBS		Z			; Check Z = 1?
0006A4: 506E  			JMP	INS_FAIL
0006A5: 3603  			JBC		N			; Check N = 0?
0006A6: 506E  			JMP	INS_FAIL
0006A7: 1050  			MOV		A,0x50
0006A8: 2203  			BC		Z
0006A9: 6C00  			XOR		A,@0x00		; Check Result ?
0006AA: 3A03  			JBS		Z			; Check Z = 1?
0006AB: 506E  			JMP	INS_FAIL
0006AC: 3603  			JBC		N			; Check N = 0?
0006AD: 506E  			JMP	INS_FAIL
0006AE: 40E7  			CALL	STATUS_CLEAR
0006AF: 6000  			MOV		A,@0x00
0006B0: 0150  			MOV		0x50,A		; [0x50] = 0x00		
0006B1: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
0006B2: 2850  			BS		0x50,0
0006B3: 1050  			MOV		A,0x50
0006B4: 6C01  			XOR		A,@0x01		; Check Result ?
0006B5: 40EA  			CALL	INST_XOR_JUDGE
0006B6: 601F  			MOV		A,@0x1F
0006B7: 015A  			MOV		INST,A
0006B8: 40E7  			CALL	STATUS_CLEAR
0006B9: 605A  			MOV		A,@0x5A
0006BA: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006BB: 1C50  			SWAPA	0x50
0006BC: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006BD: 40EA  			CALL	INST_XOR_JUDGE
0006BE: 6020  			MOV		A,@0x20
0006BF: 015A  			MOV		INST,A
0006C0: 40E7  			CALL	STATUS_CLEAR
0006C1: 605A  			MOV		A,@0x5A
0006C2: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006C3: 1D50  			SWAP	0x50
0006C4: 1050  			MOV		A,0x50
0006C5: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006C6: 40EA  			CALL	INST_XOR_JUDGE
0006C7: 0012  		RET
0006C8: 0012  		RET
0006C9: 601A  			MOV		A,@0x1A
0006CA: 015A  			MOV		INST,A
0006CB: 40E7  			CALL	STATUS_CLEAR
0006CC: 6001  			MOV		A,@0x01
0006CD: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006CE: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006CF: 506E  			JMP		INS_FAIL
0006D0: 1050  			MOV		A,0x50
0006D1: 6C00  			XOR		A,@0x00		; Check Result ?
0006D2: 40EA  			CALL	INST_XOR_JUDGE	
0006D3: 40E7  			CALL	STATUS_CLEAR
0006D4: 6002  			MOV		A,@0x02
0006D5: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006D6: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006D7: 56D9  			JMP		$+2
0006D8: 506E  			JMP		INS_FAIL
0006D9: 6019  			MOV		A,@0x19
0006DA: 015A  			MOV		INST,A
0006DB: 40E7  			CALL	STATUS_CLEAR
0006DC: 6001  			MOV		A,@0x01
0006DD: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006DE: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006DF: 506E  			JMP	INS_FAIL
0006E0: 6C00  			XOR		A,@0x00		; Check Result ?
0006E1: 40EA  			CALL	INST_XOR_JUDGE
0006E2: 40E7  			CALL	STATUS_CLEAR
0006E3: 6002  			MOV		A,@0x02
0006E4: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006E5: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006E6: 56E8  			JMP		$+2
0006E7: 506E  			JMP	INS_FAIL
0006E8: 6021  			MOV		A,@0x21
0006E9: 015A  			MOV		INST,A
0006EA: 40E7  			CALL	STATUS_CLEAR
0006EB: 60FF  			MOV		A,@0xFF
0006EC: 0150  			MOV		0x50,A
0006ED: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006EE: 506E  			JMP		INS_FAIL
0006EF: 6C00  			XOR		A,@0x00		; Check Result ?
0006F0: 40EA  			CALL	INST_XOR_JUDGE
0006F1: 40E7  			CALL	STATUS_CLEAR
0006F2: 6080  			MOV		A,@0x80
0006F3: 0150  			MOV		0x50,A
0006F4: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006F5: 56F7  			JMP		$+2
0006F6: 506E  			JMP		INS_FAIL
0006F7: 6022  			MOV		A,@0x22
0006F8: 015A  			MOV		INST,A
0006F9: 40E7  			CALL	STATUS_CLEAR
0006FA: 60FF  			MOV		A,@0xFF
0006FB: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006FC: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006FD: 506E  			JMP		INS_FAIL
0006FE: 1050  			MOV		A,0x50
0006FF: 6C00  			XOR		A,@0x00		; Check Result ?
000700: 40EA  			CALL	INST_XOR_JUDGE
000701: 40E7  			CALL	STATUS_CLEAR
000702: 6080  			MOV		A,@0x80
000703: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000704: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
000705: 5707  			JMP		$+2
000706: 506E  			JMP		INS_FAIL
000707: 0012  		RET
000708: 6023  			MOV		A,@0x23
000709: 015A  			MOV		INST,A
00070A: 40E7  			CALL	STATUS_CLEAR
00070B: 605A  			MOV		A,@0x5A
00070C: 0150  			MOV		0x50,A		; [0x50] = 0x5A
00070D: 6150  			JE		0x50		; [0x50] = A?
00070E: 506E  			JMP		INS_FAIL
00070F: 605B  			MOV		A,@0x5B
000710: 0150  			MOV		0x50,A		; [0x50] = 0x5B
000711: 605C  			MOV		A,@0x5C
000712: 6150  			JE		0x50		; [0x50] = A(0x5C)?
000713: 5715  			JMP		$+2
000714: 506E  			JMP		INS_FAIL
000715: 6024  			MOV		A,@0x24
000716: 015A  			MOV		INST,A
000717: 40E7  			CALL	STATUS_CLEAR
000718: 607F  			MOV		A,@0x7F
000719: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00071A: 6000  			MOV		A,@0x00
00071B: 6250  			JGE		0x50		; [0x50] > A ?
00071C: 506E  			JMP		INS_FAIL
00071D: 40E7  			CALL	STATUS_CLEAR
00071E: 60FF  			MOV		A,@0xFF
00071F: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000720: 6080  			MOV		A,@0x80
000721: 6250  			JGE		0x50		; [0x50] > A ?
000722: 506E  			JMP		INS_FAIL
000723: 40E7  			CALL	STATUS_CLEAR
000724: 6000  			MOV		A,@0x00
000725: 0150  			MOV		0x50,A		; [0x50] = 0x00
000726: 60FF  			MOV		A,@0xFF
000727: 6250  			JGE		0x50		; [0x50] > A(0xFF) ?x
000728: 572A  			JMP		$+2
000729: 506E  			JMP		INS_FAIL
00072A: 6025  			MOV		A,@0x25
00072B: 015A  			MOV		INST,A
00072C: 40E7  			CALL	STATUS_CLEAR
00072D: 6000  			MOV		A,@0x00
00072E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00072F: 607F  			MOV		A,@0x7F
000730: 6350  			JLE		0x50		; [0x50] < A ?
000731: 506E  			JMP		INS_FAIL
000732: 6000  			MOV		A,@0x00
000733: 0103  			MOV		STATUS,A
000734: 6080  			MOV		A,@0x80
000735: 0150  			MOV		0x50,A		; [0x50] = 0x80
000736: 60FF  			MOV		A,@0xFF
000737: 6350  			JLE		0x50		; [0x50] < A ?
000738: 506E  			JMP		INS_FAIL
000739: 40E7  			CALL	STATUS_CLEAR
00073A: 60FF  			MOV		A,@0xFF
00073B: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00073C: 6000  			MOV		A,@0x00
00073D: 6350  			JLE		0x50		; [0x50] < A(0x00) ?x
00073E: 5740  			JMP		$+2
00073F: 506E  			JMP		INS_FAIL
000740: 6027  			MOV		A,@0x27
000741: 015A  			MOV		INST,A
000742: 40E7  			CALL	STATUS_CLEAR
000743: 607F  			MOV		A,@0x7F
000744: 657F  			JE		@0x7F
000745: 506E  			JMP	INS_FAIL
000746: 0012  		RET
000747: 6002  			MOV	A,@0x02
000748: 015A  			MOV	INST,A
000749: 40E7  			CALL	STATUS_CLEAR
00074A: 6003  			MOV		A,@0x03
00074B: 0150  			MOV		0x50,A
00074C: 4814  			CALL	CALL_Test
00074D: 1050  			MOV		A,0x50
00074E: 6C04  			XOR		A,@0x04
00074F: 40EA  			CALL	INST_XOR_JUDGE
000750: 6003  			MOV		A,@0x03
000751: 015A  			MOV		INST,A
000752: 40E7  			CALL	STATUS_CLEAR
000753: 6003  			MOV		A,@0x03
000754: 0151  			MOV		0x51,A
000755: 7A80 1000  			LCALL	LCALL_Test
000757: 1051  			MOV		A,0x51
000758: 6C04  			XOR		A,@0x04		; Check Result ?
000759: 40EA  			CALL	INST_XOR_JUDGE
00075A: 602C  			MOV		A,@0x2C
00075B: 015A  			MOV		INST,A
00075C: 40E7  			CALL	STATUS_CLEAR
00075D: 6000  			MOV		A,@0x00
00075E: 4EF0  			CALL	INST_RETL_TABLE
00075F: 6CA1  			XOR		A,@0xA1
000760: 40EA  			CALL	INST_XOR_JUDGE
000761: 6001  			MOV		A,@0x01
000762: 4EF0  			CALL	INST_RETL_TABLE
000763: 6CA2  			XOR		A,@0xA2
000764: 40EA  			CALL	INST_XOR_JUDGE
000765: 6002  			MOV		A,@0x02
000766: 4EF0  			CALL	INST_RETL_TABLE
000767: 6CA4  			XOR		A,@0xA4
000768: 40EA  			CALL	INST_XOR_JUDGE
000769: 6003  			MOV		A,@0x03
00076A: 4EF0  			CALL	INST_RETL_TABLE
00076B: 6CA8  			XOR		A,@0xA8
00076C: 40EA  			CALL	INST_XOR_JUDGE
00076D: 0012  		RET
00076E: 6004  			MOV		A,@0x04
00076F: 015A  			MOV		INST,A
000770: 0010  			ENI
000771: 3F03  			JBS		IT		; Check IT = 1?
000772: 506E  			JMP	INS_FAIL
000773: 6005  			MOV		A,@0x05
000774: 015A  			MOV		INST,A
000775: 0011  			DISI
000776: 3703  			JBC		IT		; Check IT = 0?
000777: 506E  			JMP	INS_FAIL
000778: 0012  		RET
000779: 40E7  		CALL	STATUS_CLEAR
00077A: 2803  		BS	C
00077B: 6903  		SJC		@0x03
00077C: 5068  		JMP		JMP_FAIL
00077D: 5068  		JMP		JMP_FAIL
00077E: 5068  		JMP		JMP_FAIL
00077F: 2003  		BC	C
000780: 6A03  		SJNC	bbb		;@0x03
000781: 5068  		JMP		JMP_FAIL
000782: 5068  		JMP		JMP_FAIL
000783: 5068  		JMP		JMP_FAIL
000784: 2A03  			BS		Z
000785: 6B03  			SJZ		@0x03
000786: 5068  			JMP		JMP_FAIL
000787: 5068  			JMP		JMP_FAIL
000788: 5068  			JMP		JMP_FAIL
000789: 0200  			CLRA
00078A: 6B03  			SJZ		@0x03
00078B: 5068  			JMP		JMP_FAIL
00078C: 5068  			JMP		JMP_FAIL
00078D: 5068  			JMP		JMP_FAIL
00078E: 5796  		JMP		IATEST1		;JMP back Test as below
00078F: 57A3  			JMP	IATEST2		; -9
000790: 5068  			JMP	JMP_FAIL	; -8
000791: 5068  			JMP	JMP_FAIL	; -7
000792: 5068  			JMP	JMP_FAIL	; -6
000793: 5068  			JMP	JMP_FAIL	; -5
000794: 5068  			JMP	JMP_FAIL	; -4
000795: 5068  			JMP	JMP_FAIL	; -3
000796: 2803  			BS		C		; -2
000797: 69F7  			SJC		aaa		; -1
000798: 69F7  			SJC		@0xF7	; -1
000799: 5068  			JMP		JMP_FAIL
00079A: 5068  			JMP		JMP_FAIL
00079B: 5068  			JMP		JMP_FAIL
00079C: 57AF  			JMP		IATEST3		; -9
00079D: 5068  			JMP		JMP_FAIL	; -8
00079E: 5068  			JMP		JMP_FAIL	; -7
00079F: 5068  			JMP		JMP_FAIL	; -6
0007A0: 5068  			JMP		JMP_FAIL	; -5
0007A1: 5068  			JMP		JMP_FAIL	; -4
0007A2: 5068  			JMP		JMP_FAIL	; -3
0007A3: 2003  			BC		C		; -2
0007A4: 6AF7  			SJNC		@0xF7	; -1
0007A5: 57C0  			JMP		_IPass
0007A6: 57C0  			JMP		_IPass
0007A7: 57C0  			JMP		_IPass
0007A8: 57BB  			JMP		IATEST4		; -9
0007A9: 5068  			JMP		JMP_FAIL	; -8
0007AA: 5068  			JMP		JMP_FAIL	; -7
0007AB: 5068  			JMP		JMP_FAIL	; -6
0007AC: 5068  			JMP		JMP_FAIL	; -5
0007AD: 5068  			JMP		JMP_FAIL	; -4
0007AE: 5068  			JMP		JMP_FAIL	; -3
0007AF: 2A03  			BS		Z		; -2
0007B0: 6BF7  			SJZ		@0xF7	; -1
0007B1: 5068  			JMP		JMP_FAIL
0007B2: 5068  			JMP		JMP_FAIL
0007B3: 5068  			JMP		JMP_FAIL
0007B4: 57C0  			JMP		_IPass		; -9
0007B5: 5068  			JMP		JMP_FAIL	; -8
0007B6: 5068  			JMP		JMP_FAIL	; -7
0007B7: 5068  			JMP		JMP_FAIL	; -6
0007B8: 5068  			JMP		JMP_FAIL	; -5
0007B9: 5068  			JMP		JMP_FAIL	; -4
0007BA: 5068  			JMP		JMP_FAIL	; -3
0007BB: 2203  			BC		Z		; -2
0007BC: 6DF7  			SJNZ	@0xF7	; -1
0007BD: 5068  			JMP		JMP_FAIL
0007BE: 5068  			JMP		JMP_FAIL
0007BF: 5068  			JMP		JMP_FAIL
0007C0: 0000  				NOP
0007C1: 0012  		RET
0007C2: 6028  			MOV		A,@0x28
0007C3: 015A  			MOV		INST,A
0007C4: 7A01  			SBANK	1
0007C5: 60F1  			MOV		A,@0xF1		;ADDR(0x0EF1)
0007C6: 0145  			MOV		TBPTL,A
0007C7: 600E  			MOV		A,@0x0E
0007C8: 0146  			MOV		TBPTH,A
0007C9: 7A00  			SBANK	0
0007CA: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007CB: 6CA1  			XOR		A,@0xA1
0007CC: 40EA  			CALL	INST_XOR_JUDGE
0007CD: 1050  			MOV		A,0x50
0007CE: 6C70  			XOR		A,@0x70
0007CF: 40EA  			CALL	INST_XOR_JUDGE
0007D0: 7A01  			SBANK	1
0007D1: 1545  			INC		TBPTL		;ADDR(0x0EF2)
0007D2: 7A00  			SBANK	0
0007D3: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007D4: 6CA2  			XOR		A,@0xA2
0007D5: 40EA  			CALL	INST_XOR_JUDGE
0007D6: 1050  			MOV		A,0x50
0007D7: 6C70  			XOR		A,@0x70
0007D8: 40EA  			CALL	INST_XOR_JUDGE
0007D9: 6033  			MOV		A,@0x33
0007DA: 015A  			MOV		INST,A
0007DB: 7A01  			SBANK	1
0007DC: 60F3  			MOV		A,@0xF3		;ADDR(0x0EF3)
0007DD: 0145  			MOV		TBPTL,A
0007DE: 600E  			MOV		A,@0x0E
0007DF: 0146  			MOV		TBPTH,A
0007E0: 7A00  			SBANK	0
0007E1: 7B50  			TBRD	0x50
0007E2: 1050  			MOV		A,0x50
0007E3: 6CA4  			XOR		A,@0xA4
0007E4: 40EA  			CALL	INST_XOR_JUDGE
0007E5: 7A01  			SBANK	1
0007E6: 1545  			INC		TBPTL		;ADDR(0x0EF4)
0007E7: 7A00  			SBANK	0
0007E8: 7B50  			TBRD	0x50
0007E9: 1050  			MOV		A,0x50
0007EA: 6CA8  			XOR		A,@0xA8
0007EB: 40EA  			CALL	INST_XOR_JUDGE
0007EC: 0012  		RET
0007ED: 7A01  		SBANK	1
0007EE: 1047  		MOV		A,STKMON
0007EF: 6C01  		XOR		A,@0x01
0007F0: 40EA  		CALL	INST_XOR_JUDGE
0007F1: 47F3  		CALL	STACK1
0007F2: 0012  		RET
0007F3: 1047  		MOV		A,STKMON
0007F4: 6C02  		XOR		A,@0x02
0007F5: 40EA  		CALL	INST_XOR_JUDGE
0007F6: 47F8  		CALL	STACK2
0007F7: 0012  		RET
0007F8: 1047  		MOV		A,STKMON
0007F9: 6C03  		XOR		A,@0x03
0007FA: 40EA  		CALL	INST_XOR_JUDGE
0007FB: 47FD  		CALL	STACK3
0007FC: 0012  		RET
0007FD: 1047  		MOV		A,STKMON
0007FE: 6C04  		XOR		A,@0x04
0007FF: 40EA  		CALL	INST_XOR_JUDGE
000800: 4802  		CALL	STACK4
000801: 0012  		RET
000802: 1047  		MOV		A,STKMON
000803: 6C05  		XOR		A,@0x05
000804: 40EA  		CALL	INST_XOR_JUDGE
000805: 4807  		CALL	STACK5
000806: 0012  		RET
000807: 1047  		MOV		A,STKMON
000808: 6C06  		XOR		A,@0x06
000809: 40EA  		CALL	INST_XOR_JUDGE
00080A: 480C  		CALL	STACK6
00080B: 0012  		RET
00080C: 1047  		MOV		A,STKMON
00080D: 6C07  		XOR		A,@0x07
00080E: 40EA  		CALL	INST_XOR_JUDGE
00080F: 4811  		CALL	STACK7
000810: 0012  		RET
000811: 0000  		NOP
000812: 40EA  		CALL	INST_XOR_JUDGE
000813: 0012  		RET
000814: 1550  		INC		0x50
000815: 0012  		RET
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000F00: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
000F01: 0104  		MOV		RSR,A
000F02: 7A40  		GBANK	0
000F03: 6055  		MOV		A,@0x55
000F04: 0100  		MOV		IAR,A
000F05: 1504  		INC		RSR
000F06: 6000  		MOV		A,@0x00
000F07: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F08: 3A03  		JBS		Z
000F09: 5F03  		JMP		$-6
000F0A: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
000F0B: 0104  		MOV		RSR,A
000F0C: 7A40  		GBANK	0
000F0D: 6055  		MOV		A,@0x55
000F0E: 0D00  		XOR		IAR,A
000F0F: 3A03  		JBS		Z
000F10: 506B  		JMP		RAM_FAIL
000F11: 1504  		INC		RSR
000F12: 6000  		MOV		A,@0x00
000F13: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F14: 3A03  		JBS		Z
000F15: 5F0D  		JMP		$-8
000F16: 0012  		RET
000F17: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
000F18: 0104  		MOV		RSR,A
000F19: 7A40  		GBANK	0
000F1A: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
000F1B: 0100  		MOV		IAR,A
000F1C: 1504  		INC		RSR
000F1D: 6000  		MOV		A,@0x00
000F1E: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F1F: 3A03  		JBS		Z
000F20: 5F1A  		JMP		$-6
000F21: 6080  		MOV		A,@0x80
000F22: 0104  		MOV		RSR,A
000F23: 7A40  		GBANK	0
000F24: 60AA  		MOV		A,@0xAA
000F25: 0D00  		XOR		IAR,A
000F26: 3A03  		JBS		Z
000F27: 506B  		JMP		RAM_FAIL
000F28: 1504  		INC		RSR
000F29: 6000  		MOV		A,@0x00
000F2A: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F2B: 3A03  		JBS		Z
000F2C: 5F24  		JMP		$-8
000F2D: 0012  		RET
000F2E: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
000F2F: 0104  		MOV		RSR,A
000F30: 7A41  		GBANK	1
000F31: 6033  		MOV		A,@0x33		; SRAM(0x33)
000F32: 0100  		MOV		IAR,A
000F33: 1504  		INC		RSR
000F34: 6000  		MOV		A,@0x00
000F35: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F36: 3A03  		JBS		Z
000F37: 5F31  		JMP		$-6
000F38: 6080  		MOV		A,@0x80
000F39: 0104  		MOV		RSR,A
000F3A: 7A41  		GBANK	1
000F3B: 6033  		MOV		A,@0x33
000F3C: 0D00  		XOR		IAR,A
000F3D: 3A03  		JBS		Z
000F3E: 506B  		JMP		RAM_FAIL
000F3F: 1504  		INC		RSR
000F40: 6000  		MOV		A,@0x00
000F41: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F42: 3A03  		JBS		Z
000F43: 5F3B  		JMP		$-8
000F44: 0012  		RET
000F45: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
000F46: 0104  		MOV		RSR,A
000F47: 7A41  		GBANK	1
000F48: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
000F49: 0100  		MOV		IAR,A
000F4A: 1504  		INC		RSR
000F4B: 6000  		MOV		A,@0x00
000F4C: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F4D: 3A03  		JBS		Z
000F4E: 5F48  		JMP		$-6
000F4F: 6080  		MOV		A,@0x80
000F50: 0104  		MOV		RSR,A
000F51: 7A41  		GBANK	1
000F52: 60CC  		MOV		A,@0xCC
000F53: 0D00  		XOR		IAR,A
000F54: 3A03  		JBS		Z
000F55: 506B  		JMP		RAM_FAIL
000F56: 1504  		INC		RSR
000F57: 6000  		MOV		A,@0x00
000F58: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F59: 3A03  		JBS		Z
000F5A: 5F52  		JMP		$-8
000F5B: 0012  		RET
001000: 1551  		INC		0x51
001001: 0012  		RET
