****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X3    , End=0X3    , Size=1
Start=0X5    , End=0X9    , Size=5
Start=0XB    , End=0XD    , Size=3
Start=0XF    , End=0XF    , Size=1
Start=0X11   , End=0X13   , Size=3
Start=0X15   , End=0X15   , Size=1
Start=0X17   , End=0X17   , Size=1
Start=0X19   , End=0X23   , Size=11
Start=0X25   , End=0X25   , Size=1
Start=0X27   , End=0X29   , Size=3
Start=0X2B   , End=0X2B   , Size=1
Start=0X2D   , End=0X39   , Size=13
Start=0X3B   , End=0X3B   , Size=1
Start=0X3D   , End=0X3D   , Size=1
Start=0X3F   , End=0X3F   , Size=1
Start=0X41   , End=0X41   , Size=1
Start=0X43   , End=0X43   , Size=1
Start=0X4F   , End=0X4F   , Size=1
Start=0X7A4  , End=0XEEF  , Size=1868
Start=0XF38  , End=0X17FF , Size=2248
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  1977 x 15 bits( 32.2%)
Free            |  4167 x 15 bits( 67.8%)
----------------------------------------
****************************************
The Checksum is -- 0x587F
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 5EF9  		JMP	_Int_EXINT
000004: 5EFD  		JMP	_Int_ICINT
00000A: 5F00  		JMP	_Int_CMP1INT
00000E: 5F05  		JMP	_Int_CMP2INT
000010: 5F0A  		JMP	_Int_ADINT
000014: 5F0F  		JMP	_Int_PWMPAINT
000016: 5F11  		JMP	_Int_PWMDAINT
000018: 5F13  		JMP	_Int_CMP3INT
000024: 5F18  		JMP	_Int_PWMPBINT
000026: 5F1A  		JMP	_Int_PWMDBINT
00002A: 5F1C  		JMP	_Int_PWMPCINT
00002C: 5F1E  		JMP	_Int_PWMDCINT
00003A: 5F20  		JMP	_Int_SHINT
00003C: 5F25  		JMP	_Int_TM1INT
00003E: 5F29  		JMP	_Int_TM2INT
000040: 5F2D  		JMP	_Int_TM1OFINT
000042: 5F32  		JMP	_Int_TXTMINT
000044: 5F36  		JMP	_Int_AFPWMINT
000045: 5796  	JMP JMP_FAIL	;0x0046
000046: 5796  	JMP JMP_FAIL	;0x0047
000047: 5796  	JMP JMP_FAIL	;0x0048
000048: 5796  	JMP JMP_FAIL	;0x0049
000049: 5796  	JMP JMP_FAIL	;0x004A
00004A: 5796  	JMP JMP_FAIL	;0x004B
00004B: 5796  	JMP JMP_FAIL	;0x004C
00004C: 5796  	JMP JMP_FAIL	;0x004D
00004D: 5796  	JMP JMP_FAIL	;0x004E
00004E: 5796  	JMP JMP_FAIL	;0x004F
000050: 7A00  	SDxxx_SYS_INIT
000051: 2F0E      BS		CPUS
000052: 2E0E      BS		IDLE
000053: 7A00  	SDxxx_GPIO_INIT
000054: 0305  	CLR		P5
000055: 600F  	MOV		A,@0x0F
000056: 010B  	MOV		IOCR5,A
000057: 6000  	SDxxx_EFT_TES_JMP
000058: 0103          MOV		STATUS,A
000059: 0350          CLR 	0x50
00005A: 1550          INC 	0x50                ;[0x50] = 0x01
00005B: 505D          JMP 	$+2
00005C: 5796          JMP 	JMP_FAIL
00005D: 1550          INC 	0x50                ;[0x50] = 0x02
00005E: 5060          JMP 	$+2
00005F: 5796          JMP 	JMP_FAIL
000060: 1550          INC 	0x50                ;[0x50] = 0x03
000061: 5063          JMP 	$+2
000062: 5796          JMP 	JMP_FAIL
000063: 1550          INC 	0x50                ;[0x50] = 0x04
000064: 5066          JMP 	$+2
000065: 5796          JMP 	JMP_FAIL
000066: 1550          INC 	0x50                ;[0x50] = 0x05
000067: 5069          JMP 	$+2
000068: 5796          JMP 	JMP_FAIL
000069: 1550          INC 	0x50                ;[0x50] = 0x06
00006A: 506C          JMP 	$+2
00006B: 5796          JMP 	JMP_FAIL
00006C: 1550          INC 	0x50                ;[0x50] = 0x07
00006D: 506F          JMP 	$+2
00006E: 5796          JMP 	JMP_FAIL
00006F: 1550          INC 	0x50                ;[0x50] = 0x08
000070: 5072          JMP 	$+2
000071: 5796          JMP 	JMP_FAIL
000072: 1550          INC 	0x50                ;[0x50] = 0x09
000073: 5075          JMP 	$+2
000074: 5796          JMP 	JMP_FAIL
000075: 1550          INC 	0x50                ;[0x50] = 0x0A
000076: 5078          JMP 	$+2
000077: 5796          JMP 	JMP_FAIL
000078: 1550          INC 	0x50                ;[0x50] = 0x0B
000079: 507B          JMP 	$+2
00007A: 5796          JMP 	JMP_FAIL
00007B: 1550          INC 	0x50                ;[0x50] = 0x0C
00007C: 507E          JMP 	$+2
00007D: 5796          JMP 	JMP_FAIL
00007E: 1550          INC 	0x50                ;[0x50] = 0x0D
00007F: 5081          JMP 	$+2
000080: 5796          JMP 	JMP_FAIL
000081: 1550          INC 	0x50                ;[0x50] = 0x0E
000082: 5084          JMP 	$+2
000083: 5796          JMP 	JMP_FAIL
000084: 1550          INC 	0x50                ;[0x50] = 0x0F
000085: 5087          JMP 	$+2
000086: 5796          JMP 	JMP_FAIL
000087: 1550          INC 	0x50
000088: 508A          JMP 	$+2                ;[0x50] = 0x10
000089: 5796          JMP 	JMP_FAIL
00008A: 6010          MOV 	A,@0x10
00008B: 0D50          XOR 	0x50,A				;[0x50] = 0x10 ?
00008C: 3A03          JBS		Z			; Check Z = 1?
00008D: 5796          JMP	JMP_FAIL
00008E: 3603          JBC		N			; Check N = 0?
00008F: 5796          JMP	JMP_FAIL
000090: 7A00  	SDxxx_WDT_SET
000091: 6088  	MOV		A,@0x88
000092: 0121  	MOV		WDTCR,A
000093: 7A00  	SDxxx_RAM_SHA_INIT
000094: 6050      MOV		A,@0x50     ;Write Start
000095: 0104      MOV		RSR,A
000096: 60FF      MOV		A,@0xFF		;RAM_SHA_LOOP
000097: 0100      MOV		IAR,A
000098: 1504      INC		RSR
000099: 6080      MOV		A,@0x80
00009A: 0C04      XOR		A,RSR
00009B: 3A03      JBS		Z
00009C: 5096      JMP		$-6
00009D: 6050      MOV		A,@0x50     ;Read Back Start
00009E: 0104      MOV		RSR,A
00009F: 60FF      MOV		A,@0xFF
0000A0: 0C00      XOR		A,IAR
0000A1: 3A03      JBS		Z
0000A2: 579A      JMP		RAM_FAIL
0000A3: 1504      INC		RSR
0000A4: 6080      MOV		A,@0x80
0000A5: 0C04      XOR		A,RSR
0000A6: 3A03      JBS		Z
0000A7: 509F      JMP		$-8
0000A8: 6080  	SDxxx_RAM_IND_INIT 0
0000A9: 0104      MOV		RSR,A
0000AA: 7A40      GBANK	RAM_BANK
0000AB: 60FF      MOV		A,@0xFF
0000AC: 0100      MOV		IAR,A
0000AD: 1504      INC		RSR
0000AE: 6000      MOV		A,@0x00
0000AF: 0C04      XOR		A,RSR
0000B0: 3A03      JBS		Z
0000B1: 50AA      JMP		$-7
0000B2: 7A00  	SBANK	0
0000B3: 7A01  	SDxxx_EFT_STACK
0000B4: 1047  		MOV		A,STKMON
0000B5: 6C00  		XOR		A,@0x00
0000B6: 479C  		CALL	INST_XOR_JUDGE
0000B7: 40B9  		CALL	STACK1
0000B8: 50D9  		JMP		TEST_STACK_END
0000B9: 1047  		MOV		A,STKMON
0000BA: 6C01  		XOR		A,@0x01
0000BB: 479C  		CALL	INST_XOR_JUDGE
0000BC: 40BE  		CALL	STACK2
0000BD: 0012  		RET
0000BE: 1047  		MOV		A,STKMON
0000BF: 6C02  		XOR		A,@0x02
0000C0: 479C  		CALL	INST_XOR_JUDGE
0000C1: 40C3  		CALL	STACK3
0000C2: 0012  		RET
0000C3: 1047  		MOV		A,STKMON
0000C4: 6C03  		XOR		A,@0x03
0000C5: 479C  		CALL	INST_XOR_JUDGE
0000C6: 40C8  		CALL	STACK4
0000C7: 0012  		RET
0000C8: 1047  		MOV		A,STKMON
0000C9: 6C04  		XOR		A,@0x04
0000CA: 479C  		CALL	INST_XOR_JUDGE
0000CB: 40CD  		CALL	STACK5
0000CC: 0012  		RET
0000CD: 1047  		MOV		A,STKMON
0000CE: 6C05  		XOR		A,@0x05
0000CF: 479C  		CALL	INST_XOR_JUDGE
0000D0: 40D2  		CALL	STACK6
0000D1: 0012  		RET
0000D2: 1047  		MOV		A,STKMON
0000D3: 6C06  		XOR		A,@0x06
0000D4: 479C  		CALL	INST_XOR_JUDGE
0000D5: 40D7  		CALL	STACK7
0000D6: 0012  		RET
0000D7: 0000  		NOP
0000D8: 0012  		RET
0000D9: 0000  		NOP
0000DA: 47A1  	SDxxx_EFT_INST_ARITHEMATIC
0000DB: 60AA          MOV		A,@0xAA
0000DC: 0001          DAA
0000DD: 3803          JBS		C			; Check C = 1?
0000DE: 5798          JMP	INS_FAIL
0000DF: 3103          JBC		DC			; Check DC = 0?
0000E0: 5798          JMP	INS_FAIL
0000E1: 3203          JBC		Z			; Check Z = 0?
0000E2: 5798          JMP	INS_FAIL
0000E3: 3503          JBC		OV			; Check OV = 0?
0000E4: 5798          JMP	INS_FAIL
0000E5: 3603          JBC		N			; Check N = 0?
0000E6: 5798          JMP	INS_FAIL
0000E7: 6C10          XOR		A,@0x10		; Check Result ?
0000E8: 3A03          JBS		Z			; Check Z = 1?
0000E9: 5798          JMP	INS_FAIL
0000EA: 3603          JBC		N			; Check N = 0?
0000EB: 5798          JMP	INS_FAIL
0000EC: 47A1          CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000ED: 6080          MOV		A,@0x80
0000EE: 0150          MOV		0x50,A		; [0x50] = 0x80
0000EF: 607F          MOV		A,@0x7F		; 
0000F0: 0E50          ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000F1: 0001          DAA
0000F2: 3803          JBS		C			; Check C = 1?
0000F3: 5798          JMP	INS_FAIL
0000F4: 3103          JBC		DC			; Check DC = 0?
0000F5: 5798          JMP	INS_FAIL
0000F6: 3203          JBC		Z			; Check Z = 0?
0000F7: 5798          JMP	INS_FAIL
0000F8: 3503          JBC		OV			; Check OV = 0?
0000F9: 5798          JMP	INS_FAIL
0000FA: 3E03          JBS		N			; Check N = 1?	; Result is Negative
0000FB: 5798          JMP	INS_FAIL
0000FC: 2203          BC		Z
0000FD: 2603          BC		N
0000FE: 6C65          XOR		A,@0x65		; Check Result ?
0000FF: 3A03          JBS		Z			; Check Z = 1?
000100: 5798          JMP	INS_FAIL
000101: 3603          JBC		N			; Check N = 0?
000102: 5798          JMP	INS_FAIL
000103: 0000          NOP
000104: 6000          MOV		A,@0x00
000105: 0103          MOV		STATUS,A
000106: 2803          BS		C
000107: 6080          MOV		A,@0x80
000108: 0150          MOV		0x50,A		; [0x50] = 0x80
000109: 607F          MOV		A,@0x7F		; 
00010A: 7E50          ADC		A,0x50		; A = 0x7F + 0x80
00010B: 0001          DAA
00010C: 3803          JBS		C			; Check C = 1? 	/ By ADC
00010D: 5798          JMP	INS_FAIL
00010E: 3903          JBS		DC			; Check DC = 1? / By ADC
00010F: 5798          JMP	INS_FAIL
000110: 3A03          JBS		Z			; Check Z = 1? 	/ By ADC
000111: 5798          JMP	INS_FAIL
000112: 3503          JBC		OV			; Check OV = 0?
000113: 5798          JMP	INS_FAIL
000114: 3603          JBC		N			; Check N = 0?
000115: 5798          JMP	INS_FAIL
000116: 6C66          XOR		A,@0x66		; Check Result ?
000117: 3A03          JBS		Z			; Check Z = 1?
000118: 5798          JMP	INS_FAIL
000119: 3603          JBC		N			; Check N = 0?
00011A: 5798          JMP	INS_FAIL
00011B: 6000          MOV		A,@0x00
00011C: 0103          MOV		STATUS,A
00011D: 60FF          MOV		A,@0xFF
00011E: 0150          MOV		0x50,A		; [0x50] = 0xFF
00011F: 607F          MOV		A,@0x7F		; 
000120: 0450          SUB		A,0x50		; A = 0xFF - 0x7F
000121: 0001          DAA
000122: 3803          JBS		C			; Check C = 1? 	/ By SUB
000123: 5798          JMP	INS_FAIL
000124: 3903          JBS		DC			; Check DC = 1? / By SUB
000125: 5798          JMP	INS_FAIL
000126: 3203          JBC		Z			; Check Z = 0?
000127: 5798          JMP	INS_FAIL
000128: 3503          JBC		OV			; Check OV = 0?
000129: 5798          JMP	INS_FAIL
00012A: 3E03          JBS		N			; Check N = 1?	; Result is Negative
00012B: 5798          JMP	INS_FAIL
00012C: 2203          BC		Z
00012D: 2603          BC		N
00012E: 6CE6          XOR		A,@0xE6		; Check Result ?
00012F: 3A03          JBS		Z			; Check Z = 1?
000130: 5798          JMP	INS_FAIL
000131: 3603          JBC		N			; Check N = 0?
000132: 5798          JMP	INS_FAIL
000133: 605A          MOV		A,@0x5A
000134: 6C5A          XOR		A,@0x5A		; Check Result ?
000135: 3A03          JBS		Z			; Check Z = 1?
000136: 5798          JMP	INS_FAIL
000137: 3603          JBC		N			; Check N = 0?
000138: 5798          JMP	INS_FAIL
000139: 605A          MOV		A,@0x5A
00013A: 0200          CLRA
00013B: 3A03          JBS		Z			; Check Z = 1?
00013C: 5798          JMP	INS_FAIL
00013D: 2203          BC		Z
00013E: 6C00          XOR		A,@0x00		; Check Result ?
00013F: 3A03          JBS		Z			; Check Z = 1?
000140: 5798          JMP	INS_FAIL
000141: 3603          JBC		N			; Check N = 0?
000142: 5798          JMP	INS_FAIL
000143: 60AA          MOV		A,@0xAA
000144: 0150          MOV		0x50,A
000145: 1050          MOV		A,0x50
000146: 6CAA          XOR		A,@0xAA		; Check Result ?
000147: 3A03          JBS		Z			; Check Z = 1?
000148: 5798          JMP	INS_FAIL
000149: 3603          JBC		N			; Check N = 0?
00014A: 5798          JMP	INS_FAIL
00014B: 0350          CLR		0x50
00014C: 3A03          JBS		Z			; Check Z = 1?
00014D: 5798          JMP	INS_FAIL
00014E: 2203          BC		Z
00014F: 1050          MOV		A,0x50
000150: 6C00          XOR		A,@0x00		; Check Result ?
000151: 3A03          JBS		Z			; Check Z = 1?
000152: 5798          JMP	INS_FAIL
000153: 3603          JBC		N			; Check N = 0?
000154: 5798          JMP	INS_FAIL
000155: 6000          MOV		A,@0x00
000156: 0103          MOV		STATUS,A
000157: 6002          MOV		A,@0x02		; SUB(2-1)=1
000158: 0150          MOV		0x50,A		; [0x50] = 0x02
000159: 6001          MOV		A,@0x01
00015A: 0450          SUB		A,0x50		; A = [0x50] - A
00015B: 3803          JBS		C			; Check C = 1? 	; Resulet is Positive
00015C: 5798          JMP	INS_FAIL
00015D: 3903          JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00015E: 5798          JMP	INS_FAIL
00015F: 3203          JBC		Z			; Check Z = 0?
000160: 5798          JMP	INS_FAIL
000161: 3503          JBC		OV			; Check OV = 0?
000162: 5798          JMP	INS_FAIL
000163: 3603          JBC		N			; Check N = 0?
000164: 5798          JMP	INS_FAIL
000165: 2203          BC		Z
000166: 6C01          XOR		A,@0x01		; Check Result ?
000167: 3A03          JBS		Z			; Check Z = 1?
000168: 5798          JMP	INS_FAIL
000169: 3603          JBC		N			; Check N = 0?
00016A: 5798          JMP	INS_FAIL
00016B: 6000          MOV		A,@0x00
00016C: 0103          MOV		STATUS,A
00016D: 6002          MOV		A,@0x02		; SUB(2-2)=0
00016E: 0150          MOV		0x50,A		; [0x50] = 0x02
00016F: 6002          MOV		A,@0x02
000170: 0450          SUB		A,0x50		; A = [0x50] - A
000171: 3803          JBS		C			; Check C = 1?	; Result is Positive
000172: 5798          JMP	INS_FAIL
000173: 3903          JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000174: 5798          JMP	INS_FAIL
000175: 3A03          JBS		Z			; Check Z = 1?	; Result is Zero
000176: 5798          JMP	INS_FAIL
000177: 3503          JBC		OV			; Check OV = 0?
000178: 5798          JMP	INS_FAIL
000179: 3603          JBC		N			; Check N = 0?
00017A: 5798          JMP	INS_FAIL
00017B: 2203          BC		Z
00017C: 6C00          XOR		A,@0x00		; Check Result ?
00017D: 3A03          JBS		Z			; Check Z = 1?
00017E: 5798          JMP	INS_FAIL
00017F: 3603          JBC		N			; Check N = 0?
000180: 5798          JMP	INS_FAIL
000181: 6000          MOV		A,@0x00
000182: 0103          MOV		STATUS,A
000183: 60FF          MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000184: 0150          MOV		0x50,A		; [0x50] = 0xFF
000185: 607F          MOV		A,@0x7F
000186: 0450          SUB		A,0x50		; A = [0x50] - A
000187: 3803          JBS		C			; Check C = 1?
000188: 5798          JMP	INS_FAIL
000189: 3903          JBS		DC			; Check DC = 1?
00018A: 5798          JMP	INS_FAIL
00018B: 3203          JBC		Z			; Check Z = 0?
00018C: 5798          JMP	INS_FAIL
00018D: 3503          JBC		OV			; Check OV = 0?
00018E: 5798          JMP	INS_FAIL
00018F: 3E03          JBS		N			; Check N = 1?
000190: 5798          JMP	INS_FAIL
000191: 2203          BC		Z
000192: 2603          BC		N
000193: 6C80          XOR		A,@0x80		; Check Result ?
000194: 3A03          JBS		Z			; Check Z = 1?
000195: 5798          JMP	INS_FAIL
000196: 3603          JBC		N			; Check N = 0?
000197: 5798          JMP	INS_FAIL
000198: 6000          MOV		A,@0x00
000199: 0103          MOV		STATUS,A
00019A: 6080          MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
00019B: 0150          MOV		0x50,A		; [0x50] = 0x80
00019C: 607F          MOV		A,@0x7F
00019D: 0450          SUB		A,0x50		; A = [0x50] - A
00019E: 3803          JBS		C			; Check C = 1?
00019F: 5798          JMP	INS_FAIL
0001A0: 3103          JBC		DC			; Check DC = 0?
0001A1: 5798          JMP	INS_FAIL
0001A2: 3203          JBC		Z			; Check Z = 0?
0001A3: 5798          JMP	INS_FAIL
0001A4: 3D03          JBS		OV			; Check OV = 1?
0001A5: 5798          JMP	INS_FAIL
0001A6: 3603          JBC		N			; Check N = 0?
0001A7: 5798          JMP	INS_FAIL
0001A8: 2203          BC		Z
0001A9: 2603          BC		N
0001AA: 6C01          XOR		A,@0x01		; Check Result ?
0001AB: 3A03          JBS		Z			; Check Z = 1?
0001AC: 5798          JMP	INS_FAIL
0001AD: 3603          JBC		N			; Check N = 0?
0001AE: 5798          JMP	INS_FAIL
0001AF: 6000          MOV		A,@0x00
0001B0: 0103          MOV		STATUS,A
0001B1: 6001          MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001B2: 0150          MOV		0x50,A		; [0x50] = 0x01
0001B3: 6003          MOV		A,@0x03
0001B4: 0450          SUB		A,0x50		; A = [0x50] - A
0001B5: 3003          JBC		C			; Check C = 0?
0001B6: 5798          JMP	INS_FAIL
0001B7: 3103          JBC		DC			; Check DC = 0?
0001B8: 5798          JMP	INS_FAIL
0001B9: 3203          JBC		Z			; Check Z = 0?
0001BA: 5798          JMP	INS_FAIL
0001BB: 3503          JBC		OV			; Check OV = 0?
0001BC: 5798          JMP	INS_FAIL
0001BD: 3E03          JBS		N			; Check N = 1?
0001BE: 5798          JMP	INS_FAIL
0001BF: 2203          BC		Z
0001C0: 2603          BC		N
0001C1: 6CFE          XOR		A,@0xFE		; Check Result ?
0001C2: 3A03          JBS		Z			; Check Z = 1?
0001C3: 5798          JMP	INS_FAIL
0001C4: 3603          JBC		N			; Check N = 0?
0001C5: 5798          JMP	INS_FAIL
0001C6: 6000          MOV		A,@0x00
0001C7: 0103          MOV		STATUS,A
0001C8: 6002          MOV		A,@0x02
0001C9: 0150          MOV		0x50,A		; [0x50] = 0x02
0001CA: 6001          MOV		A,@0x01
0001CB: 0550          SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001CC: 1003          MOV		A,STATUS
0001CD: 6C1B          XOR		A,@0x1B		; for non reset
0001CE: 479C          CALL	INST_XOR_JUDGE
0001CF: 2203          BC		Z
0001D0: 2603          BC		N
0001D1: 1050          MOV		A,0x50
0001D2: 6C01          XOR		A,@0x01		; Check Result ?
0001D3: 479C          CALL	INST_XOR_JUDGE
0001D4: 6000          MOV		A,@0x00
0001D5: 0103          MOV		STATUS,A
0001D6: 6002          MOV		A,@0x02
0001D7: 0150          MOV		0x50,A		; [0x50] = 0x02
0001D8: 6002          MOV		A,@0x02
0001D9: 0550          SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001DA: 1003          MOV		A,STATUS
0001DB: 6C1F          XOR		A,@0x1F		; for nono reset
0001DC: 479C          CALL	INST_XOR_JUDGE
0001DD: 2203          BC		Z
0001DE: 2603          BC		N
0001DF: 1050          MOV		A,0x50
0001E0: 6C00          XOR		A,@0x00		; Check Result ?
0001E1: 3A03          JBS		Z			; Check Z = 1?
0001E2: 5798          JMP	INS_FAIL
0001E3: 3603          JBC		N			; Check N = 0?
0001E4: 5798          JMP	INS_FAIL
0001E5: 6000          MOV		A,@0x00
0001E6: 0103          MOV		STATUS,A
0001E7: 6080          MOV		A,@0x80
0001E8: 0150          MOV		0x50,A		; [0x50] = 0x80
0001E9: 6001          MOV		A,@0x01
0001EA: 0550          SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001EB: 1003          MOV		A,STATUS
0001EC: 6C39          XOR		A,@0x39	;; for non reset
0001ED: 479C          CALL	INST_XOR_JUDGE
0001EE: 2203          BC		Z
0001EF: 2603          BC		N
0001F0: 1050          MOV		A,0x50
0001F1: 6C7F          XOR		A,@0x7F		; Check Result ?
0001F2: 479C          CALL	INST_XOR_JUDGE
0001F3: 47A1          CALL	STATUS_CLEAR
0001F4: 60FF          MOV		A,@0xFF		; 0xFF-0xFF
0001F5: 74FF          SUB		A,@0xFF		; A = 0xFF - 0xFF
0001F6: 3803          JBS		C			; Check C = 1?
0001F7: 5798          JMP	INS_FAIL
0001F8: 3903          JBS		DC			; Check DC = 1?
0001F9: 5798          JMP	INS_FAIL
0001FA: 3A03          JBS		Z			; Check Z = 1?
0001FB: 5798          JMP	INS_FAIL
0001FC: 3503          JBC		OV			; Check OV = 0?
0001FD: 5798          JMP	INS_FAIL
0001FE: 3603          JBC		N			; Check N = 0?
0001FF: 5798          JMP	INS_FAIL
000200: 6C00          XOR		A,@0x00		; Check Result ?
000201: 479C          CALL	INST_XOR_JUDGE
000202: 47A1          CALL	STATUS_CLEAR
000203: 607F          MOV		A,@0x7F		; 0x00-0x7F
000204: 7400          SUB		A,@0x00		; A = 0x00 - 0x7F
000205: 3003          JBC		C			; Check C = 0?
000206: 5798          JMP	INS_FAIL
000207: 3103          JBC		DC			; Check DC = 0?
000208: 5798          JMP	INS_FAIL
000209: 3203          JBC		Z			; Check Z = 0?
00020A: 5798          JMP	INS_FAIL
00020B: 3503          JBC		OV			; Check OV = 0?
00020C: 5798          JMP	INS_FAIL
00020D: 3E03          JBS		N			; Check N = 1?
00020E: 5798          JMP	INS_FAIL
00020F: 6C81          XOR		A,@0x81		; Check Result ?
000210: 479C          CALL	INST_XOR_JUDGE
000211: 47A1          CALL	STATUS_CLEAR
000212: 6001          MOV		A,@0x01		; 0x80-0x01
000213: 7480          SUB		A,@0x80		; A = 0x80 - 0x01
000214: 3803          JBS		C			; Check C = 1?
000215: 5798          JMP	INS_FAIL
000216: 3103          JBC		DC			; Check DC = 0?
000217: 5798          JMP	INS_FAIL
000218: 3203          JBC		Z			; Check Z = 0?
000219: 5798          JMP	INS_FAIL
00021A: 3D03          JBS		OV			; Check OV = 1?
00021B: 5798          JMP	INS_FAIL
00021C: 3603          JBC		N			; Check N = 0?
00021D: 5798          JMP	INS_FAIL
00021E: 6C7F          XOR		A,@0x7F		; Check Result ?
00021F: 479C          CALL	INST_XOR_JUDGE
000220: 47A1          CALL	STATUS_CLEAR
000221: 2003          BC		C			; B = 1
000222: 6000          MOV		A,@0x00		;0x00-0xF
000223: 0150          MOV		0x50,A		; [0x50] = 0x00
000224: 60FF          MOV		A,@0xFF		; A = 0x01
000225: 7850          SUBB	A,0x50		; A = [0x50] - A - B
000226: 3003          JBC		C			; Check C = 0?
000227: 5798          JMP	INS_FAIL
000228: 3103          JBC		DC			; Check DC = 0?
000229: 5798          JMP	INS_FAIL
00022A: 3A03          JBS		Z			; Check Z = 1?
00022B: 5798          JMP	INS_FAIL
00022C: 3503          JBC		OV			; Check OV = 0?
00022D: 5798          JMP	INS_FAIL
00022E: 3603          JBC		N			; Check N = 0?
00022F: 5798          JMP	INS_FAIL
000230: 6C00          XOR		A,@0x00		; Check Result ?
000231: 479C          CALL	INST_XOR_JUDGE	
000232: 47A1          CALL	STATUS_CLEAR
000233: 2003          BC		C			; B = 1
000234: 6000          MOV		A,@0x00		; 0x00-0x7F
000235: 0150          MOV		0x50,A		; [0x50] = 0x00
000236: 607F          MOV		A,@0x7F		; A = 0x01
000237: 7850          SUBB	A,0x50		; A = [0x50] - A - B
000238: 3003          JBC		C			; Check C = 0?
000239: 5798          JMP	INS_FAIL
00023A: 3103          JBC		DC			; Check DC = 0?
00023B: 5798          JMP	INS_FAIL
00023C: 3203          JBC		Z			; Check Z = 0?
00023D: 5798          JMP	INS_FAIL
00023E: 3503          JBC		OV			; Check OV = 0?
00023F: 5798          JMP	INS_FAIL
000240: 3E03          JBS		N			; Check N = 1?
000241: 5798          JMP	INS_FAIL
000242: 6C80          XOR		A,@0x80		; Check Result ?
000243: 479C          CALL	INST_XOR_JUDGE
000244: 47A1          CALL	STATUS_CLEAR
000245: 2003          BC		C			; B = 1
000246: 6080          MOV		A,@0x80		; 0x80-0x01
000247: 0150          MOV		0x50,A		; [0x50] = 0x80
000248: 6001          MOV		A,@0x01		; A = 0x01
000249: 7850          SUBB	A,0x50		; A = [0x50] - A - B
00024A: 3803          JBS		C			; Check C = 1?
00024B: 5798          JMP	INS_FAIL
00024C: 3103          JBC		DC			; Check DC = 0?
00024D: 5798          JMP	INS_FAIL
00024E: 3203          JBC		Z			; Check Z = 0?
00024F: 5798          JMP	INS_FAIL
000250: 3D03          JBS		OV			; Check OV = 1?
000251: 5798          JMP	INS_FAIL
000252: 3603          JBC		N			; Check N = 0?
000253: 5798          JMP	INS_FAIL
000254: 6C7E          XOR		A,@0x7E		; Check Result ?
000255: 479C          CALL	INST_XOR_JUDGE
000256: 47A1          CALL	STATUS_CLEAR
000257: 2003          BC		C			; B = 1
000258: 6000          MOV		A,@0x00		; 0x00-0xFF
000259: 0150          MOV		0x50,A		; [0x50] = 0x00
00025A: 60FF          MOV		A,@0xFF
00025B: 7950          SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
00025C: 1003          MOV		A,STATUS
00025D: 6C1C          XOR		A,@0x1C		; Check Status ?
00025E: 479C          CALL	INST_XOR_JUDGE
00025F: 1050          MOV		A,0x50
000260: 6C00          XOR		A,@0x00		; Check Result ?
000261: 479C          CALL	INST_XOR_JUDGE
000262: 47A1          CALL	STATUS_CLEAR
000263: 2003          BC		C			; B = 1
000264: 6000          MOV		A,@0x00		; 0x00-0x7F
000265: 0150          MOV		0x50,A		; [0x50] = 0x00
000266: 607F          MOV		A,@0x7F
000267: 7950          SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000268: 1003          MOV		A,STATUS
000269: 6C58          XOR		A,@0x58		; Check Status ?
00026A: 479C          CALL	INST_XOR_JUDGE
00026B: 1050          MOV		A,0x50
00026C: 6C80          XOR		A,@0x80		; Check Result ?
00026D: 479C          CALL	INST_XOR_JUDGE
00026E: 47A1          CALL	STATUS_CLEAR
00026F: 2003          BC		C			; B = 1
000270: 6080          MOV		A,@0x80		; ,0x80-0x01
000271: 0150          MOV		0x50,A		; [0x50] = 0x80
000272: 6001          MOV		A,@0x01
000273: 7950          SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000274: 1003          MOV		A,STATUS
000275: 6C39          XOR		A,@0x39		; Check Status ?
000276: 479C          CALL	INST_XOR_JUDGE
000277: 1050          MOV		A,0x50
000278: 6C7E          XOR		A,@0x7E		; Check Result ?
000279: 479C          CALL	INST_XOR_JUDGE
00027A: 6000          MOV		A,@0x00
00027B: 0103          MOV		STATUS,A
00027C: 6020          MOV		A,@0x20		; 0x20-1
00027D: 0150          MOV		0x50,A		; [0x50] = 0x20
00027E: 0650          DECA	0x50		; A = [0x50] - 1
00027F: 3803          JBS		C			; Check C = 1?	; Result is Positive
000280: 5798          JMP	INS_FAIL
000281: 3103          JBC		DC			; Check DC = 0?
000282: 5798          JMP	INS_FAIL
000283: 3203          JBC		Z			; Check Z = 0?
000284: 5798          JMP	INS_FAIL
000285: 3503          JBC		OV			; Check OV = 0?
000286: 5798          JMP	INS_FAIL
000287: 3603          JBC		N			; Check N = 0?
000288: 5798          JMP	INS_FAIL
000289: 6C1F          XOR		A,@0x1F		; Check Result ?
00028A: 3A03          JBS		Z			; Check Z = 1?
00028B: 5798          JMP	INS_FAIL
00028C: 3603          JBC		N			; Check N = 0?
00028D: 5798          JMP	INS_FAIL
00028E: 6000          MOV		A,@0x00
00028F: 0103          MOV		STATUS,A
000290: 6001          MOV		A,@0x01		; 0x01-1
000291: 0150          MOV		0x50,A		; [0x50] = 0x01
000292: 0650          DECA	0x50		; A = [0x50] - 1
000293: 3803          JBS		C			; Check C = 1?	; Result is Positive
000294: 5798          JMP	INS_FAIL
000295: 3903          JBS		DC			; Check DC = 1?
000296: 5798          JMP	INS_FAIL
000297: 3A03          JBS		Z			; Check Z = 1?
000298: 5798          JMP	INS_FAIL
000299: 3503          JBC		OV			; Check OV = 0?
00029A: 5798          JMP	INS_FAIL
00029B: 3603          JBC		N			; Check N = 0?
00029C: 5798          JMP	INS_FAIL
00029D: 2203          BC		Z
00029E: 6C00          XOR		A,@0x00		; Check Result ?
00029F: 3A03          JBS		Z			; Check Z = 1?
0002A0: 5798          JMP	INS_FAIL
0002A1: 3603          JBC		N			; Check N = 0?
0002A2: 5798          JMP	INS_FAIL
0002A3: 6000          MOV		A,@0x00
0002A4: 0103          MOV		STATUS,A
0002A5: 6000          MOV		A,@0x00		; 0x00-1
0002A6: 0150          MOV		0x50,A		; [0x50] = 0x00
0002A7: 0650          DECA	0x50		; A = [0x50] - 1
0002A8: 3003          JBC		C			; Check C = 0?
0002A9: 5798          JMP	INS_FAIL
0002AA: 3103          JBC		DC			; Check DC = 0?
0002AB: 5798          JMP	INS_FAIL
0002AC: 3203          JBC		Z			; Check Z = 0?
0002AD: 5798          JMP	INS_FAIL
0002AE: 3503          JBC		OV			; Check OV = 0?
0002AF: 5798          JMP	INS_FAIL
0002B0: 3E03          JBS		N			; Check N = 1?
0002B1: 5798          JMP	INS_FAIL
0002B2: 2203          BC		Z
0002B3: 2603          BC		N
0002B4: 6CFF          XOR		A,@0xFF		; Check Result ?
0002B5: 3A03          JBS		Z			; Check Z = 1?
0002B6: 5798          JMP	INS_FAIL
0002B7: 3603          JBC		N			; Check N = 0?
0002B8: 5798          JMP	INS_FAIL
0002B9: 6000          MOV		A,@0x00
0002BA: 0103          MOV		STATUS,A
0002BB: 6080          MOV		A,@0x80		; 0x80-1
0002BC: 0150          MOV		0x50,A		; [0x50] = 0x80
0002BD: 0650          DECA	0x50		; A = [0x50] - 1
0002BE: 3803          JBS		C			; Check C = 1?
0002BF: 5798          JMP	INS_FAIL
0002C0: 3103          JBC		DC			; Check DC = 0?
0002C1: 5798          JMP	INS_FAIL
0002C2: 3203          JBC		Z			; Check Z = 0?
0002C3: 5798          JMP	INS_FAIL
0002C4: 3D03          JBS		OV			; Check OV = 1?
0002C5: 5798          JMP	INS_FAIL
0002C6: 3603          JBC		N			; Check N = 0?
0002C7: 5798          JMP	INS_FAIL
0002C8: 2203          BC		Z
0002C9: 2603          BC		N
0002CA: 6C7F          XOR		A,@0x7F		; Check Result ?
0002CB: 3A03          JBS		Z			; Check Z = 1?
0002CC: 5798          JMP	INS_FAIL
0002CD: 3603          JBC		N			; Check N = 0?
0002CE: 5798          JMP	INS_FAIL
0002CF: 6000          MOV		A,@0x00
0002D0: 0103          MOV		STATUS,A
0002D1: 6020          MOV		A,@0x20		; 0x20-1
0002D2: 0150          MOV		0x50,A		; [0x50] = 0x20
0002D3: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002D4: 1003          MOV		A,STATUS
0002D5: 6C19          XOR		A,@0x19		; Check Status ? for non rest
0002D6: 3A03          JBS		Z			; Check Z = 1?
0002D7: 5798          JMP	INS_FAIL
0002D8: 3603          JBC		N			; Check N = 0?
0002D9: 5798          JMP	INS_FAIL
0002DA: 2203          BC		Z
0002DB: 1050          MOV		A,0x50
0002DC: 6C1F          XOR		A,@0x1F		; Check Result ?
0002DD: 3A03          JBS		Z			; Check Z = 1?
0002DE: 5798          JMP	INS_FAIL
0002DF: 3603          JBC		N			; Check N = 0?
0002E0: 5798          JMP	INS_FAIL
0002E1: 6000          MOV		A,@0x00
0002E2: 0103          MOV		STATUS,A
0002E3: 6001          MOV		A,@0x01		; 0x01-1
0002E4: 0150          MOV		0x50,A		; [0x50] = 0x01
0002E5: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002E6: 1003          MOV		A,STATUS
0002E7: 6C1F          XOR		A,@0x1F		; Check Status ? for non reset
0002E8: 3A03          JBS		Z			; Check Z = 1?
0002E9: 5798          JMP	INS_FAIL
0002EA: 3603          JBC		N			; Check N = 0?
0002EB: 5798          JMP	INS_FAIL
0002EC: 2203          BC		Z
0002ED: 1050          MOV		A,0x50
0002EE: 6C00          XOR		A,@0x00		; Check Result ?
0002EF: 3A03          JBS		Z			; Check Z = 1?
0002F0: 5798          JMP	INS_FAIL
0002F1: 3603          JBC		N			; Check N = 0?
0002F2: 5798          JMP	INS_FAIL
0002F3: 6000          MOV		A,@0x00
0002F4: 0103          MOV		STATUS,A
0002F5: 6000          MOV		A,@0x00		; 0x00-1
0002F6: 0150          MOV		0x50,A		; [0x50] = 0x00
0002F7: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002F8: 1003          MOV		A,STATUS
0002F9: 6C58          XOR		A,@0x58		; Check Status ? for non reset
0002FA: 3A03          JBS		Z			; Check Z = 1?
0002FB: 5798          JMP	INS_FAIL
0002FC: 3603          JBC		N			; Check N = 0?
0002FD: 5798          JMP	INS_FAIL
0002FE: 2203          BC		Z
0002FF: 1050          MOV		A,0x50
000300: 6CFF          XOR		A,@0xFF		; Check Result ?
000301: 3A03          JBS		Z			; Check Z = 1?
000302: 5798          JMP	INS_FAIL
000303: 3603          JBC		N			; Check N = 0?
000304: 5798          JMP	INS_FAIL
000305: 6000          MOV		A,@0x00
000306: 0103          MOV		STATUS,A
000307: 6080          MOV		A,@0x80		; 0x80-1
000308: 0150          MOV		0x50,A		; [0x50] = 0x80
000309: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
00030A: 1003          MOV		A,STATUS
00030B: 6C39          XOR		A,@0x39		; Check Status ? for non reset
00030C: 3A03          JBS		Z			; Check Z = 1?
00030D: 5798          JMP	INS_FAIL
00030E: 3603          JBC		N			; Check N = 0?
00030F: 5798          JMP	INS_FAIL
000310: 2203          BC		Z
000311: 1050          MOV		A,0x50
000312: 6C7F          XOR		A,@0x7F		; Check Result ?
000313: 3A03          JBS		Z			; Check Z = 1?
000314: 5798          JMP	INS_FAIL
000315: 3603          JBC		N			; Check N = 0?
000316: 5798          JMP	INS_FAIL
000317: 47A1          CALL	STATUS_CLEAR	; 0x80+0x7F
000318: 6080          MOV		A,@0x80
000319: 0150          MOV		0x50,A		; [0x50] = 0x80
00031A: 607F          MOV		A,@0x7F		; 
00031B: 0E50          ADD		A,0x50		; A = 0x7F + 0x80
00031C: 3003          JBC		C			; Check C = 0?
00031D: 5798          JMP	INS_FAIL
00031E: 3103          JBC		DC			; Check DC = 0?
00031F: 5798          JMP	INS_FAIL
000320: 3203          JBC		Z			; Check Z = 0?
000321: 5798          JMP	INS_FAIL
000322: 3503          JBC		OV			; Check OV = 0?
000323: 5798          JMP	INS_FAIL
000324: 3E03          JBS		N			; Check N = 1?	; Result is Negative
000325: 5798          JMP	INS_FAIL
000326: 2203          BC		Z
000327: 2603          BC		N
000328: 6CFF          XOR		A,@0xFF		; Check Result ?
000329: 3A03          JBS		Z			; Check Z = 1?
00032A: 5798          JMP	INS_FAIL
00032B: 3603          JBC		N			; Check N = 0?
00032C: 5798          JMP	INS_FAIL
00032D: 47A1          CALL	STATUS_CLEAR	; 0xFF+0x01
00032E: 60FF          MOV		A,@0xFF
00032F: 0150          MOV		0x50,A		; [0x50] = 0xFF
000330: 6001          MOV		A,@0x01		; 
000331: 0E50          ADD		A,0x50		; A = 0x01 + 0xFF
000332: 3803          JBS		C			; Check C = 1?
000333: 5798          JMP	INS_FAIL
000334: 3903          JBS		DC			; Check DC = 1?
000335: 5798          JMP	INS_FAIL
000336: 3A03          JBS		Z			; Check Z = 1?
000337: 5798          JMP	INS_FAIL
000338: 3503          JBC		OV			; Check OV = 0?
000339: 5798          JMP	INS_FAIL
00033A: 3603          JBC		N			; Check N = 0?
00033B: 5798          JMP	INS_FAIL
00033C: 2203          BC		Z
00033D: 2603          BC		N
00033E: 6C00          XOR		A,@0x00		; Check Result ?
00033F: 3A03          JBS		Z			; Check Z = 1?
000340: 5798          JMP	INS_FAIL
000341: 3603          JBC		N			; Check N = 0?
000342: 5798          JMP	INS_FAIL
000343: 47A1          CALL	STATUS_CLEAR	; 0x7F+0x01
000344: 607F          MOV		A,@0x7F
000345: 0150          MOV		0x50,A		; [0x50] = 0x7F
000346: 6001          MOV		A,@0x01		; 
000347: 0E50          ADD		A,0x50		; A = 0x01 + 0x7F
000348: 3003          JBC		C			; Check C = 0?
000349: 5798          JMP	INS_FAIL
00034A: 3903          JBS		DC			; Check DC = 1?
00034B: 5798          JMP	INS_FAIL
00034C: 3203          JBC		Z			; Check Z = 0?
00034D: 5798          JMP	INS_FAIL
00034E: 3D03          JBS		OV			; Check OV = 1?
00034F: 5798          JMP	INS_FAIL
000350: 3E03          JBS		N			; Check N = 1?
000351: 5798          JMP	INS_FAIL
000352: 2203          BC		Z
000353: 2603          BC		N
000354: 6C80          XOR		A,@0x80		; Check Result ?
000355: 3A03          JBS		Z			; Check Z = 1?
000356: 5798          JMP	INS_FAIL
000357: 3603          JBC		N			; Check N = 0?
000358: 5798          JMP	INS_FAIL
000359: 47A1          CALL	STATUS_CLEAR	; 0x80+0x7F
00035A: 6080          MOV		A,@0x80
00035B: 0150          MOV		0x50,A		; [0x50] = 0x80
00035C: 607F          MOV		A,@0x7F		; A = 0x7F
00035D: 0F50          ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00035E: 1003          MOV		A,STATUS
00035F: 6C58          XOR		A,@0x58		; Check Status ? for non reset
000360: 3A03          JBS		Z			; Check Z = 1?
000361: 5798          JMP	INS_FAIL
000362: 3603          JBC		N			; Check N = 0?
000363: 5798          JMP	INS_FAIL
000364: 1050          MOV		A,0x50
000365: 6CFF          XOR		A,@0xFF		; Check Result ?
000366: 3A03          JBS		Z			; Check Z = 1?
000367: 5798          JMP	INS_FAIL
000368: 3603          JBC		N			; Check N = 0?
000369: 5798          JMP	INS_FAIL
00036A: 47A1          CALL	STATUS_CLEAR	; 0xFF+0x01
00036B: 60FF          MOV		A,@0xFF
00036C: 0150          MOV		0x50,A		; [0x50] = 0xFF
00036D: 6001          MOV		A,@0x01		; A = 0x01
00036E: 0F50          ADD		0x50,A		; [0x50] = 0xFF + 0x01
00036F: 1003          MOV		A,STATUS
000370: 6C1F          XOR		A,@0x1F		; Check Status ? for non reset
000371: 3A03          JBS		Z			; Check Z = 1?
000372: 5798          JMP	INS_FAIL
000373: 3603          JBC		N			; Check N = 0?
000374: 5798          JMP	INS_FAIL
000375: 1050          MOV		A,0x50
000376: 6C00          XOR		A,@0x00		; Check Result ?
000377: 3A03          JBS		Z			; Check Z = 1?
000378: 5798          JMP	INS_FAIL
000379: 3603          JBC		N			; Check N = 0?
00037A: 5798          JMP	INS_FAIL
00037B: 47A1          CALL	STATUS_CLEAR	;0x7F+0x01
00037C: 607F          MOV		A,@0x7F
00037D: 0150          MOV		0x50,A		; [0x50] = 0x7F
00037E: 6001          MOV		A,@0x01		; A = 0x01
00037F: 0F50          ADD		0x50,A		; [0x50] = 0x7F + 0x01
000380: 1003          MOV		A,STATUS
000381: 6C7A          XOR		A,@0x7A		; Check Status ? for non reset
000382: 3A03          JBS		Z			; Check Z = 1?
000383: 5798          JMP	INS_FAIL
000384: 3603          JBC		N			; Check N = 0?
000385: 5798          JMP	INS_FAIL
000386: 1050          MOV		A,0x50
000387: 6C80          XOR		A,@0x80		; Check Result ?
000388: 3A03          JBS		Z			; Check Z = 1?
000389: 5798          JMP	INS_FAIL
00038A: 3603          JBC		N			; Check N = 0?
00038B: 5798          JMP	INS_FAIL
00038C: 47A1          CALL	STATUS_CLEAR
00038D: 607F          MOV		A,@0x7F		;0x7F+0x01
00038E: 7C01          ADD		A,@0x01		; A = 0x01 + A
00038F: 3003          JBC		C			; Check C = 0?
000390: 5798          JMP	INS_FAIL
000391: 3903          JBS		DC			; Check DC = 1?
000392: 5798          JMP	INS_FAIL
000393: 3203          JBC		Z			; Check Z = 0?
000394: 5798          JMP	INS_FAIL
000395: 3D03          JBS		OV			; Check OV = 1?
000396: 5798          JMP	INS_FAIL
000397: 3E03          JBS		N			; Check N = 1?
000398: 5798          JMP	INS_FAIL
000399: 6C80          XOR		A,@0x80		; Check Result ?
00039A: 479C          CALL	INST_XOR_JUDGE
00039B: 47A1          CALL	STATUS_CLEAR
00039C: 60FF          MOV		A,@0xFF		;0xFF+0x01
00039D: 7C01          ADD		A,@0x01		; A = 0x01 + A
00039E: 3803          JBS		C			; Check C = 1?
00039F: 5798          JMP	INS_FAIL
0003A0: 3903          JBS		DC			; Check DC = 1?
0003A1: 5798          JMP	INS_FAIL
0003A2: 3A03          JBS		Z			; Check Z = 1?
0003A3: 5798          JMP	INS_FAIL
0003A4: 3503          JBC		OV			; Check OV = 0?
0003A5: 5798          JMP	INS_FAIL
0003A6: 3603          JBC		N			; Check N = 0?
0003A7: 5798          JMP	INS_FAIL
0003A8: 6C00          XOR		A,@0x00		; Check Result ?
0003A9: 479C          CALL	INST_XOR_JUDGE
0003AA: 47A1          CALL	STATUS_CLEAR
0003AB: 607F          MOV		A,@0x7F		; 0x80+0x7F
0003AC: 7C80          ADD		A,@0x80		; A = 0x80 + A
0003AD: 3003          JBC		C			; Check C = 0?
0003AE: 5798          JMP	INS_FAIL
0003AF: 3103          JBC		DC			; Check DC = 0?
0003B0: 5798          JMP	INS_FAIL
0003B1: 3203          JBC		Z			; Check Z = 0?
0003B2: 5798          JMP	INS_FAIL
0003B3: 3503          JBC		OV			; Check OV = 0?
0003B4: 5798          JMP	INS_FAIL
0003B5: 3E03          JBS		N			; Check N = 1?
0003B6: 5798          JMP	INS_FAIL
0003B7: 6CFF          XOR		A,@0xFF		; Check Result ?
0003B8: 479C          CALL	INST_XOR_JUDGE
0003B9: 47A1          CALL	STATUS_CLEAR
0003BA: 2803          BS		C			; 0x7F+0x00
0003BB: 607F          MOV		A,@0x7F		
0003BC: 0150          MOV		0x50,A		; [0x50] = 0x7F
0003BD: 6000          MOV		A,@0x00		; A = 0x00
0003BE: 7E50          ADC		A,0x50		; A = A + [0x50] + C
0003BF: 3003          JBC		C			; Check C = 0?
0003C0: 5798          JMP	INS_FAIL
0003C1: 3903          JBS		DC			; Check DC = 1?
0003C2: 5798          JMP	INS_FAIL
0003C3: 3203          JBC		Z			; Check Z = 0?
0003C4: 5798          JMP	INS_FAIL
0003C5: 3D03          JBS		OV			; Check OV = 1?
0003C6: 5798          JMP	INS_FAIL
0003C7: 3E03          JBS		N			; Check N = 1?
0003C8: 5798          JMP	INS_FAIL
0003C9: 6C80          XOR		A,@0x80		; Check Result ?
0003CA: 479C          CALL	INST_XOR_JUDGE
0003CB: 47A1          CALL	STATUS_CLEAR
0003CC: 2803          BS		C			; 0x80+0x7F
0003CD: 6080          MOV		A,@0x80
0003CE: 0150          MOV		0x50,A		; [0x50] = 0x80
0003CF: 607F          MOV		A,@0x7F		; A = 0x7F
0003D0: 7E50          ADC		A,0x50		; A = A + [0x50] + C
0003D1: 3803          JBS		C			; Check C = 1?
0003D2: 5798          JMP	INS_FAIL
0003D3: 3903          JBS		DC			; Check DC = 1?
0003D4: 5798          JMP	INS_FAIL
0003D5: 3A03          JBS		Z			; Check Z = 1?
0003D6: 5798          JMP	INS_FAIL
0003D7: 3503          JBC		OV			; Check OV = 0?
0003D8: 5798          JMP	INS_FAIL
0003D9: 3603          JBC		N			; Check N = 0?
0003DA: 5798          JMP	INS_FAIL
0003DB: 6C00          XOR		A,@0x00		; Check Result ?
0003DC: 479C          CALL	INST_XOR_JUDGE
0003DD: 47A1          CALL	STATUS_CLEAR
0003DE: 2803          BS		C			;0x7F+0x00
0003DF: 607F          MOV		A,@0x7F
0003E0: 0150          MOV		0x50,A		; [0x50] = 0x7F
0003E1: 6000          MOV		A,@0x00		; A = 0x00
0003E2: 2203          BC		Z
0003E3: 7F50          ADC		0x50,A		; TMP1 = A + [0x50] + C
0003E4: 1003          MOV		A,STATUS
0003E5: 6C7A          XOR		A,@0x7A		; Check Status ?
0003E6: 479C          CALL	INST_XOR_JUDGE
0003E7: 1050          MOV		A,0x50
0003E8: 6C80          XOR		A,@0x80		; Check Result ?
0003E9: 479C          CALL	INST_XOR_JUDGE
0003EA: 47A1          CALL	STATUS_CLEAR
0003EB: 2803          BS		C			;0x80+0x7F
0003EC: 6080          MOV		A,@0x80
0003ED: 0150          MOV		0x50,A		; [0x50] = 0x80
0003EE: 607F          MOV		A,@0x7F		; A = 0x7F
0003EF: 2203          BC		Z
0003F0: 7F50          ADC		0x50,A		; TMP1 = A + [0x50] + C
0003F1: 1003          MOV		A,STATUS
0003F2: 6C1F          XOR		A,@0x1F		; Check Status ?
0003F3: 479C          CALL	INST_XOR_JUDGE
0003F4: 1050          MOV		A,0x50
0003F5: 6C00          XOR		A,@0x00		; Check Result ?
0003F6: 479C          CALL	INST_XOR_JUDGE
0003F7: 47A1          CALL	STATUS_CLEAR	; 0x7F+0x01
0003F8: 607F          MOV		A,@0x7F
0003F9: 0150          MOV		0x50,A		; [0x50] = 0x7F
0003FA: 1450          INCA	0x50		; A = [0x50] +1		
0003FB: 3003          JBC		C			; Check C = 0?
0003FC: 5798          JMP	INS_FAIL
0003FD: 3903          JBS		DC			; Check DC = 1?
0003FE: 5798          JMP	INS_FAIL
0003FF: 3203          JBC		Z			; Check Z = 0?
000400: 5798          JMP	INS_FAIL
000401: 3D03          JBS		OV			; Check OV = 1?
000402: 5798          JMP	INS_FAIL
000403: 3E03          JBS		N			; Check N = 1?
000404: 5798          JMP	INS_FAIL
000405: 2203          BC		Z
000406: 2603          BC		N
000407: 6C80          XOR		A,@0x80		; Check Result ?
000408: 3A03          JBS		Z			; Check Z = 1?
000409: 5798          JMP	INS_FAIL
00040A: 3603          JBC		N			; Check N = 0?
00040B: 5798          JMP	INS_FAIL
00040C: 47A1          CALL	STATUS_CLEAR	; 0xFF+0x01
00040D: 60FF          MOV		A,@0xFF
00040E: 0150          MOV		0x50,A		; [0x50] = 0xFF
00040F: 1450          INCA	0x50		; A = [0x50] +1		
000410: 3803          JBS		C			; Check C = 1?
000411: 5798          JMP	INS_FAIL
000412: 3903          JBS		DC			; Check DC = 1?
000413: 5798          JMP	INS_FAIL
000414: 3A03          JBS		Z			; Check Z = 1?
000415: 5798          JMP	INS_FAIL
000416: 3503          JBC		OV			; Check OV = 0?
000417: 5798          JMP	INS_FAIL
000418: 3603          JBC		N			; Check N = 0?
000419: 5798          JMP	INS_FAIL
00041A: 2203          BC		Z
00041B: 2603          BC		N
00041C: 6C00          XOR		A,@0x00		; Check Result ?
00041D: 3A03          JBS		Z			; Check Z = 1?
00041E: 5798          JMP	INS_FAIL
00041F: 3603          JBC		N			; Check N = 0?
000420: 5798          JMP	INS_FAIL
000421: 47A1          CALL 	STATUS_CLEAR	; 0x7F+0x01
000422: 607F          MOV		A,@0x7F
000423: 0150          MOV		0x50,A		; [0x50] = 0x7F
000424: 1550          INC		0x50		; [0x50] = [0x50] + 0x01
000425: 1003          MOV		A,STATUS
000426: 6C7A          XOR		A,@0x7A		; Check Status ?
000427: 3A03          JBS		Z			; Check Z = 1?
000428: 5798          JMP	INS_FAIL
000429: 3603          JBC		N			; Check N = 0?
00042A: 5798          JMP	INS_FAIL
00042B: 1050          MOV		A,0x50
00042C: 6C80          XOR		A,@0x80		; Check Result ?
00042D: 3A03          JBS		Z			; Check Z = 1?
00042E: 5798          JMP	INS_FAIL
00042F: 3603          JBC		N			; Check N = 0?
000430: 5798          JMP	INS_FAIL
000431: 47A1          CALL	STATUS_CLEAR	; 0xFF+0x01
000432: 60FF          MOV		A,@0xFF
000433: 0150          MOV		0x50,A		; [0x50] = 0x7F
000434: 1550          INC		0x50		; [0x50] = [0x50] + 0x01
000435: 1003          MOV		A,STATUS
000436: 6C1F          XOR		A,@0x1F		; Check Status ?
000437: 3A03          JBS		Z			; Check Z = 1?
000438: 5798          JMP	INS_FAIL
000439: 3603          JBC		N			; Check N = 0?
00043A: 5798          JMP	INS_FAIL
00043B: 1050          MOV		A,0x50
00043C: 6C00          XOR		A,@0x00		; Check Result ?
00043D: 3A03          JBS		Z			; Check Z = 1?
00043E: 5798          JMP	INS_FAIL
00043F: 3603          JBC		N			; Check N = 0?
000440: 5798          JMP	INS_FAIL
000441: 47A1          CALL	STATUS_CLEAR
000442: 6000          MOV		A,@0x00		; 0x00
000443: 0150          MOV		0x50,A		; [0x50] = 0x00
000444: 7D50          NEG		0x50
000445: 1003          MOV		A,STATUS
000446: 6C1F          XOR		A,@0x1F		; Check Status ?
000447: 479C          CALL	INST_XOR_JUDGE
000448: 1050          MOV		A,0x50
000449: 6C00          XOR		A,@0x00		; Check Result ?
00044A: 479C          CALL	INST_XOR_JUDGE
00044B: 47A1          CALL	STATUS_CLEAR
00044C: 6001          MOV		A,@0x01		; 0x01
00044D: 0150          MOV		0x50,A		; [0x50] = 0x01
00044E: 7D50          NEG		0x50
00044F: 1003          MOV		A,STATUS
000450: 6C58          XOR		A,@0x58		; Check Status ?
000451: 479C          CALL	INST_XOR_JUDGE
000452: 1050          MOV		A,0x50
000453: 6CFF          XOR		A,@0xFF		; Check Result ?
000454: 479C          CALL	INST_XOR_JUDGE
000455: 47A1          CALL	STATUS_CLEAR
000456: 6080          MOV		A,@0x80		; 0x80
000457: 0150          MOV		0x50,A		; [0x50] = 0x80
000458: 7D50          NEG		0x50
000459: 1003          MOV		A,STATUS
00045A: 6C7A          XOR		A,@0x7A		; Check Status ?
00045B: 479C          CALL	INST_XOR_JUDGE
00045C: 1050          MOV		A,0x50
00045D: 6C80          XOR		A,@0x80		; Check Result ?
00045E: 479C          CALL	INST_XOR_JUDGE
00045F: 47A1  	SDxxx_EFT_INST_LOGIC_I
000460: 60FF          MOV		A,@0xFF
000461: 0104          MOV		RSR,A		; Start Address
000462: 0084          BTG		RSR
000463: 1004          MOV		A,RSR
000464: 6CFE          XOR		A,@0xFE		; Check Result ?
000465: 479C          CALL	INST_XOR_JUDGE
000466: 6000          MOV		A,@0x00
000467: 0103          MOV		STATUS,A
000468: 6000          MOV		A,@0x00
000469: 0150          MOV		0x50,A		; [0x50] = 0x00
00046A: 6000          MOV		A,@0x00
00046B: 2203          BC		Z
00046C: 0850          OR		A,0x50		; A = A | [0x50]
00046D: 3003          JBC		C			; Check C = 0?
00046E: 5798          JMP	INS_FAIL
00046F: 3103          JBC		DC			; Check DC = 0?
000470: 5798          JMP	INS_FAIL
000471: 3A03          JBS		Z			; Check Z = 1?
000472: 5798          JMP	INS_FAIL
000473: 3503          JBC		OV			; Check OV = 0?
000474: 5798          JMP	INS_FAIL
000475: 3603          JBC		N			; Check N = 0?
000476: 5798          JMP	INS_FAIL
000477: 2203          BC		Z
000478: 6C00          XOR		A,@0x00		; Check Result ?
000479: 3A03          JBS		Z			; Check Z = 1?
00047A: 5798          JMP	INS_FAIL
00047B: 3603          JBC		N			; Check N = 0?
00047C: 5798          JMP	INS_FAIL
00047D: 6000          MOV		A,@0x00
00047E: 0103          MOV		STATUS,A
00047F: 6055          MOV		A,@0x55
000480: 0150          MOV		0x50,A		; [0x50] = 0x55
000481: 60AA          MOV		A,@0xAA
000482: 2203          BC		Z
000483: 0850          OR		A,0x50		; A = A | [0x50]
000484: 3003          JBC		C			; Check C = 0?
000485: 5798          JMP	INS_FAIL
000486: 3103          JBC		DC			; Check DC = 0?
000487: 5798          JMP	INS_FAIL
000488: 3203          JBC		Z			; Check Z = 0?
000489: 5798          JMP	INS_FAIL
00048A: 3503          JBC		OV			; Check OV = 0?
00048B: 5798          JMP	INS_FAIL
00048C: 3E03          JBS		N			; Check N = 1?
00048D: 5798          JMP	INS_FAIL
00048E: 2203          BC		Z
00048F: 6CFF          XOR		A,@0xFF		; Check Result ?
000490: 3A03          JBS		Z			; Check Z = 1?
000491: 5798          JMP	INS_FAIL
000492: 3603          JBC		N			; Check N = 0?
000493: 5798          JMP	INS_FAIL
000494: 6000          MOV		A,@0x00
000495: 0103          MOV		STATUS,A
000496: 6000          MOV		A,@0x00
000497: 0150          MOV		0x50,A		; [0x50] = 0x00
000498: 6000          MOV		A,@0x00		; A = 0x00
000499: 2203          BC		Z
00049A: 0950          OR		0x50,A		; [0x50] = A | [0x50]
00049B: 1003          MOV		A,STATUS
00049C: 6C1C          XOR		A,@0x1C		; Check Status ? for non reset
00049D: 3A03          JBS		Z			; Check Z = 1?
00049E: 5798          JMP	INS_FAIL
00049F: 3603          JBC		N			; Check N = 0?
0004A0: 5798          JMP	INS_FAIL
0004A1: 1050          MOV		A,0x50		; A = Result[0x50]
0004A2: 2203          BC		Z
0004A3: 2603          BC		N
0004A4: 6C00          XOR		A,@0x00		; Check Result ?
0004A5: 3A03          JBS		Z			; Check Z = 1?
0004A6: 5798          JMP	INS_FAIL
0004A7: 3603          JBC		N			; Check N = 0?
0004A8: 5798          JMP	INS_FAIL
0004A9: 6000          MOV		A,@0x00
0004AA: 0103          MOV		STATUS,A
0004AB: 6055          MOV		A,@0x55
0004AC: 0150          MOV		0x50,A		; [0x50] = 0x55
0004AD: 60AA          MOV		A,@0xAA		; A = 0xAA
0004AE: 0950          OR		0x50,A		; [0x50] = 0xAA | 0x55
0004AF: 1003          MOV		A,STATUS
0004B0: 6C58          XOR		A,@0x58		; Check Status ? for non reset
0004B1: 3A03          JBS		Z			; Check Z = 1?
0004B2: 5798          JMP	INS_FAIL
0004B3: 3603          JBC		N			; Check N = 0?
0004B4: 5798          JMP	INS_FAIL
0004B5: 1050          MOV		A,0x50
0004B6: 2203          BC		Z
0004B7: 2603          BC		N
0004B8: 6CFF          XOR		A,@0xFF		; Check Result ?
0004B9: 3A03          JBS		Z			; Check Z = 1?
0004BA: 5798          JMP	INS_FAIL
0004BB: 3603          JBC		N			; Check N = 0?
0004BC: 5798          JMP	INS_FAIL
0004BD: 47A1          CALL	STATUS_CLEAR
0004BE: 6055          MOV		A,@0x55
0004BF: 0150          MOV		0x50,A		; [0x50] = 0x55
0004C0: 60AA          MOV		A,@0xAA
0004C1: 0A50          AND		A,0x50		; A = 0xAA & 0x55
0004C2: 3003          JBC		C			; Check C = 0?
0004C3: 5798          JMP	INS_FAIL
0004C4: 3103          JBC		DC			; Check DC = 0?
0004C5: 5798          JMP	INS_FAIL
0004C6: 3A03          JBS		Z			; Check Z = 1?
0004C7: 5798          JMP	INS_FAIL
0004C8: 3503          JBC		OV			; Check OV = 0?
0004C9: 5798          JMP	INS_FAIL
0004CA: 3603          JBC		N			; Check N = 0?
0004CB: 5798          JMP	INS_FAIL
0004CC: 6C00          XOR		A,@0x00		; Check Result ?
0004CD: 3A03          JBS		Z			; Check Z = 1?
0004CE: 5798          JMP	INS_FAIL
0004CF: 3603          JBC		N			; Check N = 0?
0004D0: 5798          JMP	INS_FAIL
0004D1: 47A1          CALL	STATUS_CLEAR
0004D2: 60F5          MOV		A,@0xF5
0004D3: 0150          MOV		0x50,A		; [0x50] = 0xF5
0004D4: 60FA          MOV		A,@0xFA
0004D5: 0A50          AND		A,0x50		; A = 0xFA & 0xF5
0004D6: 3003          JBC		C			; Check C = 0?
0004D7: 5798          JMP	INS_FAIL
0004D8: 3103          JBC		DC			; Check DC = 0?
0004D9: 5798          JMP	INS_FAIL
0004DA: 3203          JBC		Z			; Check Z = 0?
0004DB: 5798          JMP	INS_FAIL
0004DC: 3503          JBC		OV			; Check OV = 0?
0004DD: 5798          JMP	INS_FAIL
0004DE: 3E03          JBS		N			; Check N = 1?
0004DF: 5798          JMP	INS_FAIL
0004E0: 6CF0          XOR		A,@0xF0		; Check Result ?
0004E1: 3A03          JBS		Z			; Check Z = 1?
0004E2: 5798          JMP	INS_FAIL
0004E3: 3603          JBC		N			; Check N = 0?
0004E4: 5798          JMP	INS_FAIL
0004E5: 47A1          CALL	STATUS_CLEAR
0004E6: 6055          MOV		A,@0x55
0004E7: 0150          MOV		0x50,A		; [0x50] = 0x55
0004E8: 60AA          MOV		A,@0xAA
0004E9: 0B50          AND		0x50,A		; [0x50] = 0xAA & 0x55
0004EA: 1003          MOV		A,STATUS
0004EB: 6C1C          XOR		A,@0x1C		; Check Status ? for non reset
0004EC: 3A03          JBS		Z			; Check Z = 1?
0004ED: 5798          JMP	INS_FAIL
0004EE: 3603          JBC		N			; Check N = 0?
0004EF: 5798          JMP	INS_FAIL
0004F0: 2203          BC		Z
0004F1: 1050          MOV		A,0x50
0004F2: 2203          BC		Z
0004F3: 6C00          XOR		A,@0x00		; Check Result ?
0004F4: 3A03          JBS		Z			; Check Z = 1?
0004F5: 5798          JMP	INS_FAIL
0004F6: 3603          JBC		N			; Check N = 0?
0004F7: 5798          JMP	INS_FAIL
0004F8: 47A1          CALL	STATUS_CLEAR
0004F9: 60F5          MOV		A,@0xF5
0004FA: 0150          MOV		0x50,A		; [0x50] = 0xF5
0004FB: 60FA          MOV		A,@0xFA
0004FC: 0B50          AND		0x50,A		; [0x50] = 0xFA & 0xF5
0004FD: 1003          MOV		A,STATUS
0004FE: 6C58          XOR		A,@0x58		; Check Status ? for non reset
0004FF: 3A03          JBS		Z			; Check Z = 1?
000500: 5798          JMP	INS_FAIL
000501: 3603          JBC		N			; Check N = 0?
000502: 5798          JMP	INS_FAIL
000503: 2203          BC		Z
000504: 1050          MOV		A,0x50
000505: 2203          BC		Z
000506: 6CF0          XOR		A,@0xF0		; Check Result ?
000507: 3A03          JBS		Z			; Check Z = 1?
000508: 5798          JMP	INS_FAIL
000509: 3603          JBC		N			; Check N = 0?
00050A: 5798          JMP	INS_FAIL
00050B: 47A1          CALL	STATUS_CLEAR
00050C: 60AA          MOV		A,@0xAA
00050D: 6855          AND		A,@0x55		; A = 0xAA & 0x55
00050E: 3003          JBC		C			; Check C = 0?
00050F: 5798          JMP	INS_FAIL
000510: 3103          JBC		DC			; Check DC = 0?
000511: 5798          JMP	INS_FAIL
000512: 3A03          JBS		Z			; Check Z = 1?
000513: 5798          JMP	INS_FAIL
000514: 3503          JBC		OV			; Check OV = 0?
000515: 5798          JMP	INS_FAIL
000516: 3603          JBC		N			; Check N = 0?
000517: 5798          JMP	INS_FAIL
000518: 6C00          XOR		A,@0x00		; Check Result ?
000519: 3A03          JBS		Z			; Check Z = 1?
00051A: 5798          JMP	INS_FAIL
00051B: 3603          JBC		N			; Check N = 0?
00051C: 5798          JMP	INS_FAIL
00051D: 47A1          CALL	STATUS_CLEAR
00051E: 60AA          MOV		A,@0xAA
00051F: 68FF          AND		A,@0xFF		; A = A & 0xFF
000520: 3003          JBC		C			; Check C = 0?
000521: 5798          JMP	INS_FAIL
000522: 3103          JBC		DC			; Check DC = 0?
000523: 5798          JMP	INS_FAIL
000524: 3203          JBC		Z			; Check Z = 0?
000525: 5798          JMP	INS_FAIL
000526: 3503          JBC		OV			; Check OV = 0?
000527: 5798          JMP	INS_FAIL
000528: 3E03          JBS		N			; Check N = 1?
000529: 5798          JMP	INS_FAIL
00052A: 6CAA          XOR		A,@0xAA		; Check Result ?
00052B: 479C          CALL	INST_XOR_JUDGE
00052C: 47A1          CALL	STATUS_CLEAR
00052D: 60FF          MOV		A,@0xFF
00052E: 0150          MOV		0x50,A		; [0x50] = 0xFF
00052F: 1250          COMA	0x50		; A = /R
000530: 3003          JBC		C			; Check C = 0?
000531: 5798          JMP	INS_FAIL
000532: 3103          JBC		DC			; Check DC = 0?
000533: 5798          JMP	INS_FAIL
000534: 3A03          JBS		Z			; Check Z = 1?
000535: 5798          JMP	INS_FAIL
000536: 3503          JBC		OV			; Check OV = 0?
000537: 5798          JMP	INS_FAIL
000538: 3603          JBC		N			; Check N = 0?
000539: 5798          JMP	INS_FAIL
00053A: 6C00          XOR		A,@0x00		; Check Result ?
00053B: 3A03          JBS		Z			; Check Z = 1?
00053C: 5798          JMP	INS_FAIL
00053D: 3603          JBC		N			; Check N = 0?
00053E: 5798          JMP	INS_FAIL	
00053F: 47A1          CALL	STATUS_CLEAR
000540: 6005          MOV		A,@0x05
000541: 0150          MOV		0x50,A		; [0x50] = 0x05
000542: 1250          COMA	0x50		; A = /R
000543: 3003          JBC		C			; Check C = 0?
000544: 5798          JMP	INS_FAIL
000545: 3103          JBC		DC			; Check DC = 0?
000546: 5798          JMP	INS_FAIL
000547: 3203          JBC		Z			; Check Z = 0?
000548: 5798          JMP	INS_FAIL
000549: 3503          JBC		OV			; Check OV = 0?
00054A: 5798          JMP	INS_FAIL
00054B: 3E03          JBS		N			; Check N = 1?
00054C: 5798          JMP	INS_FAIL
00054D: 6CFA          XOR		A,@0xFA		; Check Result ?
00054E: 3A03          JBS		Z			; Check Z = 1?
00054F: 5798          JMP	INS_FAIL
000550: 3603          JBC		N			; Check N = 0?
000551: 5798          JMP	INS_FAIL
000552: 47A1          CALL	STATUS_CLEAR
000553: 60FF          MOV		A,@0xFF
000554: 0150          MOV		0x50,A		; [0x50] = 0xFF
000555: 1350          COM		0x50		; [0x50] = /[0x50]
000556: 1003          MOV		A,STATUS
000557: 6C1C          XOR		A,@0x1C		; Check Status ?
000558: 3A03          JBS		Z			; Check Z = 1?
000559: 5798          JMP	INS_FAIL
00055A: 3603          JBC		N			; Check N = 0?
00055B: 5798          JMP	INS_FAIL
00055C: 2203          BC		Z
00055D: 2603          BC		N
00055E: 1050          MOV		A,0x50
00055F: 6C00          XOR		A,@0x00		; Check Result ?
000560: 3A03          JBS		Z			; Check Z = 1?
000561: 5798          JMP	INS_FAIL
000562: 3603          JBC		N			; Check N = 0?
000563: 5798          JMP	INS_FAIL
000564: 47A1          CALL	STATUS_CLEAR
000565: 6000          MOV		A,@0x00
000566: 0150          MOV		0x50,A		; [0x50] = 0xFF
000567: 1350          COM		0x50		; [0x50] = /[0x50]
000568: 1003          MOV		A,STATUS
000569: 6C58          XOR		A,@0x58		; Check Status ?
00056A: 3A03          JBS		Z			; Check Z = 1?
00056B: 5798          JMP	INS_FAIL
00056C: 3603          JBC		N			; Check N = 0?
00056D: 5798          JMP	INS_FAIL
00056E: 2203          BC		Z
00056F: 2603          BC		N
000570: 1050          MOV		A,0x50
000571: 6CFF          XOR		A,@0xFF		; Check Result ?
000572: 3A03          JBS		Z			; Check Z = 1?
000573: 5798          JMP	INS_FAIL
000574: 3603          JBC		N			; Check N = 0?
000575: 5798          JMP	INS_FAIL
000576: 47A1          CALL	STATUS_CLEAR
000577: 60A5          MOV		A,@0xA5
000578: 645A          OR		A,@0x5A		; A = 0xA5 | 0x5A
000579: 6CFF          XOR		A,@0xFF		; Check Result ?
00057A: 479C          CALL	INST_XOR_JUDGE
00057B: 47A1  	SDxxx_EFT_INST_LOGIC_II
00057C: 6055          MOV		A,@0x55
00057D: 0150          MOV		0x50,A		; [0x50] = 0x55
00057E: 6F50          RR		0x50		; [0x50] = [0x50] >> 1
00057F: 1003          MOV		A,STATUS
000580: 6C58          XOR		A,@0x58		; Check Status ?
000581: 479C          CALL	INST_XOR_JUDGE
000582: 1050          MOV		A,0x50
000583: 6CAA          XOR		A,@0xAA		; Check Result ?
000584: 479C          CALL	INST_XOR_JUDGE
000585: 47A1          CALL 	STATUS_CLEAR
000586: 6055          MOV		A,@0x55
000587: 0150          MOV		0x50,A		; [0x50] = 0x55
000588: 6E50          RRA		0x50		; A = [0x50] >> 1
000589: 3003          JBC		C			; Check C = 0?
00058A: 5798          JMP	INS_FAIL
00058B: 3103          JBC		DC			; Check DC = 0?
00058C: 5798          JMP	INS_FAIL
00058D: 3203          JBC		Z			; Check Z = 0?
00058E: 5798          JMP	INS_FAIL
00058F: 3503          JBC		OV			; Check OV = 0?
000590: 5798          JMP	INS_FAIL
000591: 3E03          JBS		N			; Check N = 1?
000592: 5798          JMP	INS_FAIL
000593: 6CAA          XOR		A,@0xAA		; Check Result ?
000594: 479C          CALL	INST_XOR_JUDGE
000595: 47A1          CALL	STATUS_CLEAR
000596: 2803          BS		C
000597: 60AA          MOV		A,@0xAA
000598: 0150          MOV		0x50,A		; [0x50] = 0xAA
000599: 1850          RRCA	0x50		; A = [0x50] >> 1
00059A: 3003          JBC		C			; Check C = 0?
00059B: 5798          JMP	INS_FAIL
00059C: 3103          JBC		DC			; Check DC = 0?
00059D: 5798          JMP	INS_FAIL
00059E: 3203          JBC		Z			; Check Z = 0?
00059F: 5798          JMP	INS_FAIL
0005A0: 3503          JBC		OV			; Check OV = 0?
0005A1: 5798          JMP	INS_FAIL
0005A2: 3E03          JBS		N			; Check N = 1?
0005A3: 5798          JMP	INS_FAIL
0005A4: 6CD5          XOR		A,@0xD5		; Check Result ?
0005A5: 479C          CALL	INST_XOR_JUDGE
0005A6: 47A1          CALL	STATUS_CLEAR
0005A7: 6055          MOV		A,@0x55
0005A8: 0150          MOV		0x50,A		; [0x50] = 0x55
0005A9: 1850          RRCA	0x50		; A = [0x50] >> 1
0005AA: 3803          JBS		C			; Check C = 1?
0005AB: 5798          JMP	INS_FAIL
0005AC: 3103          JBC		DC			; Check DC = 0?
0005AD: 5798          JMP	INS_FAIL
0005AE: 3203          JBC		Z			; Check Z = 0?
0005AF: 5798          JMP	INS_FAIL
0005B0: 3503          JBC		OV			; Check OV = 0?
0005B1: 5798          JMP	INS_FAIL
0005B2: 3603          JBC		N			; Check N = 0?
0005B3: 5798          JMP	INS_FAIL
0005B4: 6C2A          XOR		A,@0x2A		; Check Result ?
0005B5: 479C          CALL	INST_XOR_JUDGE
0005B6: 47A1          CALL	STATUS_CLEAR
0005B7: 2803          BS		C
0005B8: 60AA          MOV		A,@0xAA
0005B9: 0150          MOV		0x50,A		; [0x50] = 0xAA
0005BA: 2203          BC		Z
0005BB: 1950          RRC		0x50		; [0x50] = [0x50] >> 1
0005BC: 1003          MOV		A,STATUS
0005BD: 6C58          XOR		A,@0x58		; Check Status ?
0005BE: 479C          CALL	INST_XOR_JUDGE
0005BF: 1050          MOV		A,0x50
0005C0: 6CD5          XOR		A,@0xD5		; Check Result ?
0005C1: 479C          CALL	INST_XOR_JUDGE
0005C2: 47A1          CALL	STATUS_CLEAR
0005C3: 6055          MOV		A,@0x55
0005C4: 0150          MOV		0x50,A		; [0x50] = 0x55
0005C5: 2203          BC		Z
0005C6: 1950          RRC		0x50		; [0x50] = [0x50] >> 1
0005C7: 1003          MOV		A,STATUS
0005C8: 6C19          XOR		A,@0x19		; Check Status ?
0005C9: 3A03          JBS		Z			; Check Z = 1?
0005CA: 5798          JMP	INS_FAIL
0005CB: 3603          JBC		N			; Check N = 0?
0005CC: 5798          JMP	INS_FAIL
0005CD: 1050          MOV		A,0x50
0005CE: 6C2A          XOR		A,@0x2A		; Check Result ?
0005CF: 479C          CALL	INST_XOR_JUDGE
0005D0: 47A1          CALL STATUS_CLEAR
0005D1: 2803          BS		C
0005D2: 6055          MOV		A,@0x55
0005D3: 0150          MOV		0x50,A		; [0x50] = 0x55
0005D4: 1A50          RLCA	0x50		; A = [0x50] << 1
0005D5: 3003          JBC		C			; Check C = 0?
0005D6: 5798          JMP	INS_FAIL
0005D7: 3103          JBC		DC			; Check DC = 0?
0005D8: 5798          JMP	INS_FAIL
0005D9: 3203          JBC		Z			; Check Z = 0?
0005DA: 5798          JMP	INS_FAIL
0005DB: 3503          JBC		OV			; Check OV = 0?
0005DC: 5798          JMP	INS_FAIL
0005DD: 3E03          JBS		N			; Check N = 1?
0005DE: 5798          JMP	INS_FAIL
0005DF: 6CAB          XOR		A,@0xAB		; Check Result ?
0005E0: 479C          CALL	INST_XOR_JUDGE
0005E1: 47A1          CALL	STATUS_CLEAR
0005E2: 60AA          MOV		A,@0xAA
0005E3: 0150          MOV		0x50,A		; [0x50] = 0xAA
0005E4: 1A50          RLCA	0x50		; A = [0x50] << 1
0005E5: 3803          JBS		C			; Check C = 1?
0005E6: 5798          JMP	INS_FAIL
0005E7: 3103          JBC		DC			; Check DC = 0?
0005E8: 5798          JMP	INS_FAIL
0005E9: 3203          JBC		Z			; Check Z = 0?
0005EA: 5798          JMP	INS_FAIL
0005EB: 3503          JBC		OV			; Check OV = 0?
0005EC: 5798          JMP	INS_FAIL
0005ED: 3603          JBC		N			; Check N = 0?
0005EE: 5798          JMP	INS_FAIL
0005EF: 6C54          XOR		A,@0x54		; Check Result ?
0005F0: 479C          CALL	INST_XOR_JUDGE
0005F1: 47A1          CALL	STATUS_CLEAR
0005F2: 2803          BS		C
0005F3: 6055          MOV		A,@0x55
0005F4: 0150          MOV		0x50,A		; [0x50] = 0x55
0005F5: 1B50          RLC		0x50		; [0x50] = [0x50] << 1
0005F6: 1003          MOV		A,STATUS
0005F7: 6C58          XOR		A,@0x58		; Check Status ?
0005F8: 479C          CALL	INST_XOR_JUDGE
0005F9: 1050          MOV		A,0x50
0005FA: 6CAB          XOR		A,@0xAB		; Check Result ?
0005FB: 479C          CALL	INST_XOR_JUDGE
0005FC: 47A1          CALL	STATUS_CLEAR
0005FD: 60AA          MOV		A,@0xAA
0005FE: 0150          MOV		0x50,A		; [0x50] = 0xAA
0005FF: 1B50          RLC		0x50		; [0x50] = [0x50] << 1
000600: 1003          MOV		A,STATUS
000601: 6C19          XOR		A,@0x19		; Check Status ?
000602: 479C          CALL	INST_XOR_JUDGE
000603: 1050          MOV		A,0x50
000604: 6C54          XOR		A,@0x54		; Check Result ?
000605: 479C          CALL	INST_XOR_JUDGE
000606: 47A1          CALL	STATUS_CLEAR
000607: 605A          MOV		A,@0x5A
000608: 0150          MOV		0x50,A		; [0x50] = 0x5A
000609: 7250          RLA		0x50		; A = [0x50] << 1
00060A: 3003          JBC		C			; Check C = 0?
00060B: 5798          JMP	INS_FAIL
00060C: 3103          JBC		DC			; Check DC = 0?
00060D: 5798          JMP	INS_FAIL
00060E: 3203          JBC		Z			; Check Z = 0?
00060F: 5798          JMP	INS_FAIL
000610: 3503          JBC		OV			; Check OV = 0?
000611: 5798          JMP	INS_FAIL
000612: 3E03          JBS		N			; Check N = 1?
000613: 5798          JMP	INS_FAIL
000614: 6CB4          XOR		A,@0xB4		; Check Result ?
000615: 479C          CALL	INST_XOR_JUDGE
000616: 47A1          CALL	STATUS_CLEAR
000617: 605A          MOV		A,@0x5A
000618: 0150          MOV		0x50,A		; [0x50] = 0xA5
000619: 7350          RL		0x50		; [0x50] = [0x50] << 1
00061A: 1003          MOV		A,STATUS
00061B: 6C58          XOR		A,@0x58		; Check Status ?
00061C: 3A03          JBS		Z			; Check Z = 1?
00061D: 5798          JMP	INS_FAIL
00061E: 3603          JBC		N			; Check N = 0?
00061F: 5798          JMP	INS_FAIL
000620: 1050          MOV		A,0x50
000621: 6CB4          XOR		A,@0xB4		; Check Result ?
000622: 479C          CALL	INST_XOR_JUDGE
000623: 47A1  			CALL	STATUS_CLEAR
000624: 6055  			MOV		A,@0x55
000625: 0150  			MOV		0x50,A		; [0x50] = 0x55
000626: 60AA  			MOV		A,@0xAA
000627: 7150  			XCH		0x50		; [0x50] <-> A
000628: 6C55  			XOR		A,@0x55		; Check Result ?
000629: 3A03  			JBS		Z			; Check Z = 1?
00062A: 5798  			JMP	INS_FAIL
00062B: 3603  			JBC		N			; Check N = 0?
00062C: 5798  			JMP	INS_FAIL
00062D: 1050  			MOV		A,0x50
00062E: 6CAA  			XOR		A,@0xAA		; Check Result ?
00062F: 479C  			CALL	INST_XOR_JUDGE
000630: 47A1  	SDxxx_EFT_INST_TRANSFER
000631: 60FF          MOV		A,@0xFF
000632: 0150          MOV		0x50,A
000633: 1003          MOV		A,STATUS
000634: 6C18          XOR		A,@0x18		;At  OCDS
000635: 479C          CALL	INST_XOR_JUDGE
000636: 1050          MOV		A,0x50
000637: 6CFF          XOR		A,@0xFF		; Check Result ?
000638: 479C          CALL	INST_XOR_JUDGE
000639: 47A1          CALL	STATUS_CLEAR
00063A: 6000          MOV		A,@0x00
00063B: 0150          MOV		0x50,A		; [0x50] = 0x00		
00063C: 1150          MOV		0x50,0x50	; [0x50] = [0x50]
00063D: 1003          MOV		A,STATUS
00063E: 6C1C          XOR		A,@0x1C		; Check Status ?
00063F: 3A03          JBS		Z			; Check Z = 1?
000640: 5798          JMP	INS_FAIL
000641: 3603          JBC		N			; Check N = 0?
000642: 5798          JMP	INS_FAIL
000643: 1050          MOV		A,0x50
000644: 2203          BC		Z
000645: 6C00          XOR		A,@0x00		; Check Result ?
000646: 3A03          JBS		Z			; Check Z = 1?
000647: 5798          JMP	INS_FAIL
000648: 3603          JBC		N			; Check N = 0?
000649: 5798          JMP	INS_FAIL
00064A: 47A1          CALL	STATUS_CLEAR
00064B: 6000          MOV		A,@0x00
00064C: 0150          MOV		0x50,A		; [0x50] = 0x00		
00064D: 1150          MOV		0x50,0x50	; [0x50] = [0x50]
00064E: 2850          BS		0x50,0
00064F: 1050          MOV		A,0x50
000650: 6C01          XOR		A,@0x01		; Check Result ?
000651: 479C          CALL	INST_XOR_JUDGE
000652: 47A1          CALL	STATUS_CLEAR
000653: 605A          MOV		A,@0x5A
000654: 0150          MOV		0x50,A		; [0x50] = 0x5A
000655: 1C50          SWAPA	0x50
000656: 6CA5          XOR		A,@0xA5		; Check Result ?
000657: 479C          CALL	INST_XOR_JUDGE
000658: 47A1          CALL	STATUS_CLEAR
000659: 605A          MOV		A,@0x5A
00065A: 0150          MOV		0x50,A		; [0x50] = 0x5A
00065B: 1D50          SWAP	0x50
00065C: 1050          MOV		A,0x50
00065D: 6CA5          XOR		A,@0xA5		; Check Result ?
00065E: 479C          CALL	INST_XOR_JUDGE
00065F: 47A1  	SDxxx_EFT_INST_MANIPULATION	0x50
000660: 7A00          SBANK	0
000661: 103E          MOV		A,ADCR1
000662: 0150          MOV		TMP50,A
000663: 283E          BS		ADCR1.0
000664: 1050          MOV		A,TMP50
000665: 0C3E          XOR		A,ADCR1
000666: 3203          JBC		Z
000667: 5798          JMP		INS_FAIL
000668: 3603          JBC		N
000669: 5798          JMP		INS_FAIL
00066A: 103E          MOV		A,ADCR1
00066B: 0150          MOV		TMP50,A
00066C: 293E          BS		ADCR1.1
00066D: 1050          MOV		A,TMP50
00066E: 0C3E          XOR		A,ADCR1
00066F: 3203          JBC		Z
000670: 5798          JMP		INS_FAIL
000671: 3603          JBC		N
000672: 5798          JMP		INS_FAIL
000673: 103E          MOV		A,ADCR1
000674: 0150          MOV		TMP50,A
000675: 203E          BC		ADCR1.0
000676: 1050          MOV		A,TMP50
000677: 0C3E          XOR		A,ADCR1
000678: 3203          JBC		Z
000679: 5798          JMP		INS_FAIL
00067A: 3603          JBC		N
00067B: 5798          JMP		INS_FAIL
00067C: 103E          MOV		A,ADCR1
00067D: 0150          MOV		TMP50,A
00067E: 213E          BC		ADCR1.1
00067F: 1050          MOV		A,TMP50
000680: 0C3E          XOR		A,ADCR1
000681: 3203          JBC		Z
000682: 5798          JMP		INS_FAIL
000683: 3603          JBC		N
000684: 5798          JMP		INS_FAIL
000685: 47A1  	SDxxx_EFT_BRANCH_I
000686: 6001          MOV		A,@0x01
000687: 0150          MOV		0x50,A		; [0x50] = 0x01
000688: 1750          DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
000689: 5798          JMP		INS_FAIL
00068A: 1050          MOV		A,0x50
00068B: 6C00          XOR		A,@0x00		; Check Result ?
00068C: 479C          CALL	INST_XOR_JUDGE	
00068D: 47A1          CALL	STATUS_CLEAR
00068E: 6002          MOV		A,@0x02
00068F: 0150          MOV		0x50,A		; [0x50] = 0x02
000690: 1750          DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
000691: 5693          JMP		$+2
000692: 5798          JMP		INS_FAIL
000693: 47A1          CALL	STATUS_CLEAR
000694: 6001          MOV		A,@0x01
000695: 0150          MOV		0x50,A		; [0x50] = 0x01
000696: 1650          DJZA	0x50		; A = [0x50] - 0x01,if z,skip
000697: 5798          JMP	INS_FAIL
000698: 6C00          XOR		A,@0x00		; Check Result ?
000699: 479C          CALL	INST_XOR_JUDGE
00069A: 47A1          CALL	STATUS_CLEAR
00069B: 6002          MOV		A,@0x02
00069C: 0150          MOV		0x50,A		; [0x50] = 0x02
00069D: 1650          DJZA	0x50		; A = [0x50] - 0x01,if z,skip
00069E: 56A0          JMP		$+2
00069F: 5798          JMP	INS_FAIL
0006A0: 47A1          CALL	STATUS_CLEAR
0006A1: 60FF          MOV		A,@0xFF
0006A2: 0150          MOV		0x50,A
0006A3: 1E50          JZA		0x50		; A = [0x50] + 1,if 0 skip
0006A4: 5798          JMP		INS_FAIL
0006A5: 6C00          XOR		A,@0x00		; Check Result ?
0006A6: 479C          CALL	INST_XOR_JUDGE
0006A7: 47A1          CALL	STATUS_CLEAR
0006A8: 6080          MOV		A,@0x80
0006A9: 0150          MOV		0x50,A
0006AA: 1E50          JZA		0x50		; A = [0x50] + 1,if 0 skip
0006AB: 56AD          JMP		$+2
0006AC: 5798          JMP		INS_FAIL
0006AD: 47A1          CALL	STATUS_CLEAR
0006AE: 60FF          MOV		A,@0xFF
0006AF: 0150          MOV		0x50,A		; [0x50] = 0xFF
0006B0: 1F50          JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006B1: 5798          JMP		INS_FAIL
0006B2: 1050          MOV		A,0x50
0006B3: 6C00          XOR		A,@0x00		; Check Result ?
0006B4: 479C          CALL	INST_XOR_JUDGE
0006B5: 47A1          CALL	STATUS_CLEAR
0006B6: 6080          MOV		A,@0x80
0006B7: 0150          MOV		0x50,A		; [0x50] = 0xFF
0006B8: 1F50          JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006B9: 56BB          JMP		$+2
0006BA: 5798          JMP		INS_FAIL
0006BB: 47A1  	SDxxx_EFT_BRANCH_II
0006BC: 605A          MOV		A,@0x5A
0006BD: 0150          MOV		0x50,A		; [0x50] = 0x5A
0006BE: 6150          JE		0x50		; [0x50] = A?
0006BF: 5798          JMP		INS_FAIL
0006C0: 605B          MOV		A,@0x5B
0006C1: 0150          MOV		0x50,A		; [0x50] = 0x5B
0006C2: 605C          MOV		A,@0x5C
0006C3: 6150          JE		0x50		; [0x50] = A(0x5C)?
0006C4: 56C6          JMP		$+2
0006C5: 5798          JMP		INS_FAIL
0006C6: 47A1          CALL	STATUS_CLEAR
0006C7: 607F          MOV		A,@0x7F
0006C8: 0150          MOV		0x50,A		; [0x50] = 0x7F
0006C9: 6000          MOV		A,@0x00
0006CA: 6250          JGE		0x50		; [0x50] > A ?
0006CB: 5798          JMP		INS_FAIL
0006CC: 47A1          CALL	STATUS_CLEAR
0006CD: 60FF          MOV		A,@0xFF
0006CE: 0150          MOV		0x50,A		; [0x50] = 0xFF
0006CF: 6080          MOV		A,@0x80
0006D0: 6250          JGE		0x50		; [0x50] > A ?
0006D1: 5798          JMP		INS_FAIL
0006D2: 47A1          CALL	STATUS_CLEAR
0006D3: 6000          MOV		A,@0x00
0006D4: 0150          MOV		0x50,A		; [0x50] = 0x00
0006D5: 60FF          MOV		A,@0xFF
0006D6: 6250          JGE		0x50		; [0x50] > A(0xFF) ?x
0006D7: 56D9          JMP		$+2
0006D8: 5798          JMP		INS_FAIL
0006D9: 47A1          CALL	STATUS_CLEAR
0006DA: 6000          MOV		A,@0x00
0006DB: 0150          MOV		0x50,A		; [0x50] = 0x00
0006DC: 607F          MOV		A,@0x7F
0006DD: 6350          JLE		0x50		; [0x50] < A ?
0006DE: 5798          JMP		INS_FAIL
0006DF: 6000          MOV		A,@0x00
0006E0: 0103          MOV		STATUS,A
0006E1: 6080          MOV		A,@0x80
0006E2: 0150          MOV		0x50,A		; [0x50] = 0x80
0006E3: 60FF          MOV		A,@0xFF
0006E4: 6350          JLE		0x50		; [0x50] < A ?
0006E5: 5798          JMP		INS_FAIL
0006E6: 47A1          CALL	STATUS_CLEAR
0006E7: 60FF          MOV		A,@0xFF
0006E8: 0150          MOV		0x50,A		; [0x50] = 0xFF
0006E9: 6000          MOV		A,@0x00
0006EA: 6350          JLE		0x50		; [0x50] < A(0x00) ?x
0006EB: 56ED          JMP		$+2
0006EC: 5798          JMP		INS_FAIL
0006ED: 47A1          CALL	STATUS_CLEAR
0006EE: 607F          MOV		A,@0x7F
0006EF: 657F          JE		@0x7F
0006F0: 5798          JMP	INS_FAIL
0006F1: 47A1  	SDxxx_EFT_SHORT_BRANCH
0006F2: 2803          BS	C
0006F3: 6903          SJC		@0x03
0006F4: 5796          JMP		JMP_FAIL
0006F5: 5796          JMP		JMP_FAIL
0006F6: 5796          JMP		JMP_FAIL
0006F7: 2003          BC	C
0006F8: 6A03          SJNC	bbb		;@0x03
0006F9: 5796          JMP		JMP_FAIL
0006FA: 5796          JMP		JMP_FAIL
0006FB: 5796          JMP		JMP_FAIL
0006FC: 2A03              BS		Z
0006FD: 6B03              SJZ		@0x03
0006FE: 5796              JMP		JMP_FAIL
0006FF: 5796              JMP		JMP_FAIL
000700: 5796              JMP		JMP_FAIL
000701: 0200              CLRA
000702: 6B03              SJZ		@0x03
000703: 5796              JMP		JMP_FAIL
000704: 5796              JMP		JMP_FAIL
000705: 5796              JMP		JMP_FAIL
000706: 570E          JMP		IATEST1		;JMP back Test as below
000707: 571B              JMP	IATEST2		; -9
000708: 5796              JMP	JMP_FAIL	; -8
000709: 5796              JMP	JMP_FAIL	; -7
00070A: 5796              JMP	JMP_FAIL	; -6
00070B: 5796              JMP	JMP_FAIL	; -5
00070C: 5796              JMP	JMP_FAIL	; -4
00070D: 5796              JMP	JMP_FAIL	; -3
00070E: 2803              BS		C		; -2
00070F: 69F7              SJC		aaa		; -1
000710: 69F7              SJC		@0xF7	; -1
000711: 5796              JMP		JMP_FAIL
000712: 5796              JMP		JMP_FAIL
000713: 5796              JMP		JMP_FAIL
000714: 5727              JMP		IATEST3		; -9
000715: 5796              JMP		JMP_FAIL	; -8
000716: 5796              JMP		JMP_FAIL	; -7
000717: 5796              JMP		JMP_FAIL	; -6
000718: 5796              JMP		JMP_FAIL	; -5
000719: 5796              JMP		JMP_FAIL	; -4
00071A: 5796              JMP		JMP_FAIL	; -3
00071B: 2003              BC		C		; -2
00071C: 6AF7              SJNC		@0xF7	; -1
00071D: 5738              JMP		_IPass
00071E: 5738              JMP		_IPass
00071F: 5738              JMP		_IPass
000720: 5733              JMP		IATEST4		; -9
000721: 5796              JMP		JMP_FAIL	; -8
000722: 5796              JMP		JMP_FAIL	; -7
000723: 5796              JMP		JMP_FAIL	; -6
000724: 5796              JMP		JMP_FAIL	; -5
000725: 5796              JMP		JMP_FAIL	; -4
000726: 5796              JMP		JMP_FAIL	; -3
000727: 2A03              BS		Z		; -2
000728: 6BF7              SJZ		@0xF7	; -1
000729: 5796              JMP		JMP_FAIL
00072A: 5796              JMP		JMP_FAIL
00072B: 5796              JMP		JMP_FAIL
00072C: 5738              JMP		_IPass		; -9
00072D: 5796              JMP		JMP_FAIL	; -8
00072E: 5796              JMP		JMP_FAIL	; -7
00072F: 5796              JMP		JMP_FAIL	; -6
000730: 5796              JMP		JMP_FAIL	; -5
000731: 5796              JMP		JMP_FAIL	; -4
000732: 5796              JMP		JMP_FAIL	; -3
000733: 2203              BC		Z		; -2
000734: 6DF7              SJNZ	@0xF7	; -1
000735: 5796              JMP		JMP_FAIL
000736: 5796              JMP		JMP_FAIL
000737: 5796              JMP		JMP_FAIL
000738: 0000              NOP
000739: 0010  	SDxxx_EFT_CONTROL
00073A: 3F03          JBS		IT		; Check IT = 1?
00073B: 5798          JMP	INS_FAIL
00073C: 0011          DISI
00073D: 3703          JBC		IT		; Check IT = 0?
00073E: 5798          JMP	INS_FAIL
00073F: 7A01  	SDxxx_EFT_READ_ROM
000740: 60F1          MOV		A,@0xF1		;ADDR(0x0EF1)
000741: 0145          MOV		TBPTL,A
000742: 600E          MOV		A,@0x0E
000743: 0146          MOV		TBPTH,A
000744: 7A00          SBANK	0
000745: 6750          TBRDA	0x50		; [0x50]+ A = [TABPTR] 
000746: 6CA1          XOR		A,@0xA1
000747: 479C          CALL	INST_XOR_JUDGE
000748: 1050          MOV		A,0x50
000749: 6C70          XOR		A,@0x70
00074A: 479C          CALL	INST_XOR_JUDGE
00074B: 7A01          SBANK	1
00074C: 1545          INC		TBPTL		;ADDR(0x0EF2)
00074D: 7A00          SBANK	0
00074E: 6750          TBRDA	0x50		; [0x50]+ A = [TABPTR] 
00074F: 6CA2          XOR		A,@0xA2
000750: 479C          CALL	INST_XOR_JUDGE
000751: 1050          MOV		A,0x50
000752: 6C70          XOR		A,@0x70
000753: 479C          CALL	INST_XOR_JUDGE
000754: 7A01          SBANK	1
000755: 60F3          MOV		A,@0xF3		;ADDR(0x0EF3)
000756: 0145          MOV		TBPTL,A
000757: 600E          MOV		A,@0x0E
000758: 0146          MOV		TBPTH,A
000759: 7A00          SBANK	0
00075A: 7B50          TBRD	0x50
00075B: 1050          MOV		A,0x50
00075C: 6CA4          XOR		A,@0xA4
00075D: 479C          CALL	INST_XOR_JUDGE
00075E: 7A01          SBANK	1
00075F: 1545          INC		TBPTL		;ADDR(0x0EF4)
000760: 7A00          SBANK	0
000761: 7B50          TBRD	0x50
000762: 1050          MOV		A,0x50
000763: 6CA8          XOR		A,@0xA8
000764: 479C          CALL	INST_XOR_JUDGE
000765: 6080  	SDxxx_RAM_WR_ALL 0,0x55
000766: 0104      MOV		RSR,A
000767: 7A40      GBANK	RAM_BANK
000768: 6055      MOV		A,@WR_VAL
000769: 0100      MOV		IAR,A
00076A: 1504      INC		RSR
00076B: 6000      MOV		A,@0x00
00076C: 0C04      XOR		A,RSR		; INC(0x80),UNTIL(0x00)
00076D: 3A03      JBS		Z
00076E: 5768      JMP		$-6
00076F: 6080      MOV		A,@0x80		; Read Start SRAM(WR_VAL)
000770: 0104      MOV		RSR,A
000771: 7A40      GBANK	RAM_BANK
000772: 6055      MOV		A,@WR_VAL
000773: 0D00      XOR		IAR,A
000774: 3A03      JBS		Z
000775: 579A      JMP		RAM_FAIL
000776: 1504      INC		RSR
000777: 6000      MOV		A,@0x00
000778: 0C04      XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000779: 3A03      JBS		Z
00077A: 5772      JMP		$-8
00077B: 6080  	SDxxx_RAM_WR_ALL 1,0xAA
00077C: 0104      MOV		RSR,A
00077D: 7A41      GBANK	RAM_BANK
00077E: 60AA      MOV		A,@WR_VAL
00077F: 0100      MOV		IAR,A
000780: 1504      INC		RSR
000781: 6000      MOV		A,@0x00
000782: 0C04      XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000783: 3A03      JBS		Z
000784: 577E      JMP		$-6
000785: 6080      MOV		A,@0x80		; Read Start SRAM(WR_VAL)
000786: 0104      MOV		RSR,A
000787: 7A41      GBANK	RAM_BANK
000788: 60AA      MOV		A,@WR_VAL
000789: 0D00      XOR		IAR,A
00078A: 3A03      JBS		Z
00078B: 579A      JMP		RAM_FAIL
00078C: 1504      INC		RSR
00078D: 6000      MOV		A,@0x00
00078E: 0C04      XOR		A,RSR		; INC(0x80),UNTIL(0x00)
00078F: 3A03      JBS		Z
000790: 5788      JMP		$-8
000791: 4793  	CAlL	JMP_PASS
000792: 50B2  	JMP		BACK_GROUND_LOOP
000793: 0095  	BTG		P5,1
000794: 0004  	WDTC
000795: 0012  	RET
000796: 7A00  	SBANK	0
000797: 5796  	JMP		JMP_FAIL
000798: 7A00  	SBANK	0
000799: 5798  	JMP		INS_FAIL
00079A: 7A00  	SBANK	0
00079B: 579A  	JMP		RAM_FAIL
00079C: 3A03  		JBS		Z			; IF(Z=1) BRANCH
00079D: 5798  		JMP		INS_FAIL
00079E: 3603  		JBC		N			; IF(N=0) BRANCH
00079F: 5798  		JMP		INS_FAIL
0007A0: 0012  		RET
0007A1: 6000  		MOV		A,@0x00
0007A2: 0103  		MOV		STATUS,A
0007A3: 0012  		RET
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000EF9: 7A00  		SBANK	0
000EFA: 2214  		BC		EXSF0
000EFB: 2314  		BC		EXSF1
000EFC: 0013  		RETI
000EFD: 7A00  		SBANK	0
000EFE: 2417  		BC		P5ICSF
000EFF: 0013  		RETI
000F00: 7A00  		SBANK	0
000F01: 3E14  		JBS 	CMP1SF
000F02: 5796  		JMP 	JMP_FAIL
000F03: 2614  		BC		CMP1SF
000F04: 0013  		RETI
000F05: 7A00  		SBANK	0
000F06: 3F14  		JBS 	CMP2SF
000F07: 5796  		JMP 	JMP_FAIL
000F08: 2714  		BC		CMP2SF
000F09: 0013  		RETI
000F0A: 7A00  		SBANK	0
000F0B: 3C14  		JBS 	ADSF
000F0C: 5796  		JMP 	JMP_FAIL
000F0D: 2414  		BC		ADSF
000F0E: 0013  		RETI
000F0F: 7A00  		SBANK	0
000F10: 0013  		RETI
000F11: 7A00  		SBANK	0
000F12: 0013  		RETI
000F13: 7A00  		SBANK	0
000F14: 3E15  		JBS 	CMP3SF
000F15: 5796  		JMP 	JMP_FAIL
000F16: 2615  		BC		CMP3SF
000F17: 0013  		RETI
000F18: 7A00  		SBANK	0
000F19: 0013  		RETI
000F1A: 7A00  		SBANK	0
000F1B: 0013  		RETI
000F1C: 7A00  		SBANK	0
000F1D: 0013  		RETI
000F1E: 7A00  		SBANK	0
000F1F: 0013  		RETI
000F20: 7A00  		SBANK	0
000F21: 3F19  		JBS 	SHSF
000F22: 5796  		JMP 	JMP_FAIL
000F23: 2719  		BC		SHSF
000F24: 0013  		RETI
000F25: 7A00  		SBANK	0
000F26: 231A  		BC		TM1DASF
000F27: 201A  		BC		TM1DBSF
000F28: 0013  		RETI
000F29: 7A00  		SBANK	0
000F2A: 241A  		BC		TM2DASF
000F2B: 211A  		BC		TM2DBSF
000F2C: 0013  		RETI
000F2D: 7A00  		SBANK	0
000F2E: 3A1A  		JBS 	TM1OFSF
000F2F: 5796  		JMP 	JMP_FAIL
000F30: 221A  		BC		TM1OFSF
000F31: 0013  		RETI
000F32: 7A00  		SBANK	0
000F33: 261A  		BC		TXDSF
000F34: 251A  		BC		TXCSF
000F35: 0013  		RETI
000F36: 7A00  		SBANK	0
000F37: 0013  		RETI
