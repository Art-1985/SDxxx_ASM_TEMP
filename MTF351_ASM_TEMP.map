****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0XC    , End=0X4F   , Size=68
Start=0X811  , End=0XFFF  , Size=2031
----------------------------------------
MTF351          |        ROM Size        
----------------+-----------------------
Total           |  4096 x 16 bits(100.0%)
Used            |  1996 x 16 bits( 48.7%)
Free            |  2100 x 16 bits( 51.3%)
----------------------------------------
****************************************
The Checksum is -- 0x61A9
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 505E  	JMP JMP_FAIL	;0x0046
000003: 505E  	JMP JMP_FAIL	;0x0047
000004: 505E  	JMP JMP_FAIL	;0x0048
000005: 505E  	JMP JMP_FAIL	;0x0049
000006: 505E  	JMP JMP_FAIL	;0x004A
000007: 505E  	JMP JMP_FAIL	;0x004B
000008: 505E  	JMP JMP_FAIL	;0x004C
000009: 505E  	JMP JMP_FAIL	;0x004D
00000A: 505E  	JMP JMP_FAIL	;0x004E
00000B: 505E  	JMP JMP_FAIL	;0x004F
000050: 4098  	CALL	RAM_SHA_INIT
000051: 40A2  	CALL	RAM_IND_INIT
000052: 7A00  	SBANK	0
000053: 40D3  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000054: 443B  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000055: 456D  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000056: 4635  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
000057: 466D  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
000058: 47B6  	CALL	TEST_RAM_BANK_0_5		;0x55
000059: 47CC  	CALL	TEST_RAM_BANK_0_A		;0xAA
00005A: 47E3  	CALL	TEST_RAM_BANK_1_3		;0x33
00005B: 47FA  	CALL	TEST_RAM_BANK_1_C		;0xCC
00005C: 5052  	JMP		BACK_GROUND_LOOP
00005D: 5050  	JMP		MAIN
00005E: 7A00  	SBANK	0
00005F: 505E  	JMP		JMP_FAIL
000060: 7A00  	SBANK	0
000061: 5060  	JMP		RAM_FAIL
000062: 7A00  	SBANK	0
000063: 5062  	JMP		INS_FAIL
000064: 7A00  		SBANK	0
000065: 2F0E  		BS		CPUS	;FSYS=FM
000066: 260E  		BC		IDLE	;SLEEP_MODE
000067: 0012  		RET
000068: 7A00  		SBANK	0
000069: 0305  		CLR		P5
00006A: 600F  		MOV		A,@0x0F	;P50~P53 As Input, Other Setting As Output
00006B: 010B  		MOV		IOCR5,A
00006C: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00006D: 0105  		MOV		P5,A
00006E: 0012  		RET
00006F: 7A00  		SBANK	0
000070: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000071: 5074  		JMP		$+3
000072: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000073: 0003  		SLEP
000074: 3B03  		JBS		P
000075: 5078  		JMP		$+3
000076: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000077: 0003  		SLEP
000078: 3B03  		JBS		P
000079: 507C  		JMP		$+3
00007A: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007B: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007C: 0003  		SLEP		
00007D: 0012  		RET
00007E: 3A05  		JBS		P5,2		; Push, or not
00007F: 5081  		JMP		$+2
000080: 507E  		JMP		$-2
000081: 3A05  		JBS		P5,2
000082: 507E  		JMP		KEY_DEBOUNCE
000083: 3A05  		JBS		P5,2
000084: 507E  		JMP		KEY_DEBOUNCE
000085: 3A05  		JBS		P5,2
000086: 507E  		JMP		KEY_DEBOUNCE
000087: 3A05  		JBS		P5,2
000088: 507E  		JMP		KEY_DEBOUNCE
000089: 3A05  		JBS		P5,2
00008A: 507E  		JMP		KEY_DEBOUNCE
00008B: 3A05  		JBS		P5,2
00008C: 507E  		JMP		KEY_DEBOUNCE
00008D: 3A05  		JBS		P5,2
00008E: 507E  		JMP		KEY_DEBOUNCE
00008F: 3A05  		JBS		P5,2
000090: 507E  		JMP		KEY_DEBOUNCE
000091: 3A05  		JBS		P5,2
000092: 507E  		JMP		KEY_DEBOUNCE
000093: 3A05  		JBS		P5,2
000094: 5092  		JMP		$-2
000095: 60FF  		MOV		A,@0xFF		; Turn Off all LED
000096: 0105  		MOV		P5,A		
000097: 0012  		RET
000098: 6050  		MOV		A,@0x50
000099: 0104  		MOV		RSR,A
00009A: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
00009B: 0100  		MOV		IAR,A
00009C: 1504  		INC		RSR
00009D: 6080  		MOV		A,@0x80
00009E: 0D04  		XOR		RSR,A
00009F: 3A03  		JBS		Z
0000A0: 509A  		JMP		$-6
0000A1: 0012  		RET
0000A2: 6080  		MOV		A,@0x80
0000A3: 0104  		MOV		RSR,A
0000A4: 7A40  		GBANK	0
0000A5: 60FF  		MOV		A,@0xFF
0000A6: 0100  		MOV		IAR,A
0000A7: 1504  		INC		RSR
0000A8: 6000  		MOV		A,@0x00
0000A9: 0D04  		XOR		RSR,A
0000AA: 3A03  		JBS		Z
0000AB: 50A4  		JMP		RAM_IND_LOOP_0
0000AC: 6080  		MOV		A,@0x80
0000AD: 0104  		MOV		RSR,A
0000AE: 7A41  		GBANK	1
0000AF: 60FF  		MOV		A,@0xFF
0000B0: 0100  		MOV		IAR,A
0000B1: 1504  		INC		RSR
0000B2: 6000  		MOV		A,@0x00
0000B3: 0D04  		XOR		RSR,A
0000B4: 3A03  		JBS		Z
0000B5: 50AE  		JMP		RAM_IND_LOOP_1
0000B6: 6080  		MOV		A,@0x80
0000B7: 0104  		MOV		RSR,A
0000B8: 7A42  		GBANK	2
0000B9: 60FF  		MOV		A,@0xFF
0000BA: 0100  		MOV		IAR,A
0000BB: 1504  		INC		RSR
0000BC: 6000  		MOV		A,@0x00
0000BD: 0D04  		XOR		RSR,A
0000BE: 3A03  		JBS		Z
0000BF: 50B8  		JMP		RAM_IND_LOOP_2
0000C0: 6080  		MOV		A,@0x80
0000C1: 0104  		MOV		RSR,A
0000C2: 7A43  		GBANK	3
0000C3: 60FF  		MOV		A,@0xFF
0000C4: 0100  		MOV		IAR,A
0000C5: 1504  		INC		RSR
0000C6: 6000  		MOV		A,@0x00
0000C7: 0D04  		XOR		RSR,A
0000C8: 3A03  		JBS		Z
0000C9: 50C2  		JMP		RAM_IND_LOOP_3
0000CA: 0012  		RET
0000CB: 6000  		MOV		A,@0x00
0000CC: 0103  		MOV		STATUS,A
0000CD: 0012  		RET
0000CE: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000CF: 5062  		JMP		INS_FAIL
0000D0: 3603  		JBC		N			; IF(N=0) BRANCH
0000D1: 5062  		JMP		INS_FAIL
0000D2: 0012  		RET
0000D3: 6001  			MOV		A,@0x01
0000D4: 015A  			MOV		INST,A
0000D5: 40CB  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000D6: 60AA  			MOV		A,@0xAA
0000D7: 0001  			DAA
0000D8: 3803  			JBS		C			; Check C = 1?
0000D9: 5062  			JMP	INS_FAIL
0000DA: 3103  			JBC		DC			; Check DC = 0?
0000DB: 5062  			JMP	INS_FAIL
0000DC: 3203  			JBC		Z			; Check Z = 0?
0000DD: 5062  			JMP	INS_FAIL
0000DE: 3503  			JBC		OV			; Check OV = 0?
0000DF: 5062  			JMP	INS_FAIL
0000E0: 3603  			JBC		N			; Check N = 0?
0000E1: 5062  			JMP	INS_FAIL
0000E2: 6C10  			XOR		A,@0x10		; Check Result ?
0000E3: 3A03  			JBS		Z			; Check Z = 1?
0000E4: 5062  			JMP	INS_FAIL
0000E5: 3603  			JBC		N			; Check N = 0?
0000E6: 5062  			JMP	INS_FAIL
0000E7: 40CB  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000E8: 6080  			MOV		A,@0x80
0000E9: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000EA: 607F  			MOV		A,@0x7F		; 
0000EB: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000EC: 0001  			DAA
0000ED: 3803  			JBS		C			; Check C = 1?
0000EE: 5062  			JMP	INS_FAIL
0000EF: 3103  			JBC		DC			; Check DC = 0?
0000F0: 5062  			JMP	INS_FAIL
0000F1: 3203  			JBC		Z			; Check Z = 0?
0000F2: 5062  			JMP	INS_FAIL
0000F3: 3503  			JBC		OV			; Check OV = 0?
0000F4: 5062  			JMP	INS_FAIL
0000F5: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
0000F6: 5062  			JMP	INS_FAIL
0000F7: 2203  			BC		Z
0000F8: 2603  			BC		N
0000F9: 6C65  			XOR		A,@0x65		; Check Result ?
0000FA: 3A03  			JBS		Z			; Check Z = 1?
0000FB: 5062  			JMP	INS_FAIL
0000FC: 3603  			JBC		N			; Check N = 0?
0000FD: 5062  			JMP	INS_FAIL
0000FE: 0000  			NOP
0000FF: 6000  			MOV		A,@0x00
000100: 0103  			MOV		STATUS,A
000101: 2803  			BS		C
000102: 6080  			MOV		A,@0x80
000103: 0150  			MOV		0x50,A		; [0x50] = 0x80
000104: 607F  			MOV		A,@0x7F		; 
000105: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000106: 0001  			DAA
000107: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000108: 5062  			JMP	INS_FAIL
000109: 3903  			JBS		DC			; Check DC = 1? / By ADC
00010A: 5062  			JMP	INS_FAIL
00010B: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
00010C: 5062  			JMP	INS_FAIL
00010D: 3503  			JBC		OV			; Check OV = 0?
00010E: 5062  			JMP	INS_FAIL
00010F: 3603  			JBC		N			; Check N = 0?
000110: 5062  			JMP	INS_FAIL
000111: 6C66  			XOR		A,@0x66		; Check Result ?
000112: 3A03  			JBS		Z			; Check Z = 1?
000113: 5062  			JMP	INS_FAIL
000114: 3603  			JBC		N			; Check N = 0?
000115: 5062  			JMP	INS_FAIL
000116: 6000  			MOV		A,@0x00
000117: 0103  			MOV		STATUS,A
000118: 60FF  			MOV		A,@0xFF
000119: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00011A: 607F  			MOV		A,@0x7F		; 
00011B: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
00011C: 0001  			DAA
00011D: 3803  			JBS		C			; Check C = 1? 	/ By SUB
00011E: 5062  			JMP	INS_FAIL
00011F: 3903  			JBS		DC			; Check DC = 1? / By SUB
000120: 5062  			JMP	INS_FAIL
000121: 3203  			JBC		Z			; Check Z = 0?
000122: 5062  			JMP	INS_FAIL
000123: 3503  			JBC		OV			; Check OV = 0?
000124: 5062  			JMP	INS_FAIL
000125: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000126: 5062  			JMP	INS_FAIL
000127: 2203  			BC		Z
000128: 2603  			BC		N
000129: 6CE6  			XOR		A,@0xE6		; Check Result ?
00012A: 3A03  			JBS		Z			; Check Z = 1?
00012B: 5062  			JMP	INS_FAIL
00012C: 3603  			JBC		N			; Check N = 0?
00012D: 5062  			JMP	INS_FAIL
00012E: 6008  			MOV		A,@0x08
00012F: 015A  			MOV		INST,A
000130: 605A  			MOV		A,@0x5A
000131: 6C5A  			XOR		A,@0x5A		; Check Result ?
000132: 3A03  			JBS		Z			; Check Z = 1?
000133: 5062  			JMP	INS_FAIL
000134: 3603  			JBC		N			; Check N = 0?
000135: 5062  			JMP	INS_FAIL
000136: 605A  			MOV		A,@0x5A
000137: 0200  			CLRA
000138: 3A03  			JBS		Z			; Check Z = 1?
000139: 5062  			JMP	INS_FAIL
00013A: 2203  			BC		Z
00013B: 6C00  			XOR		A,@0x00		; Check Result ?
00013C: 3A03  			JBS		Z			; Check Z = 1?
00013D: 5062  			JMP	INS_FAIL
00013E: 3603  			JBC		N			; Check N = 0?
00013F: 5062  			JMP	INS_FAIL
000140: 6009  			MOV		A,@0x09
000141: 015A  			MOV		INST,A
000142: 60AA  			MOV		A,@0xAA
000143: 0150  			MOV		0x50,A
000144: 1050  			MOV		A,0x50
000145: 6CAA  			XOR		A,@0xAA		; Check Result ?
000146: 3A03  			JBS		Z			; Check Z = 1?
000147: 5062  			JMP	INS_FAIL
000148: 3603  			JBC		N			; Check N = 0?
000149: 5062  			JMP	INS_FAIL
00014A: 0350  			CLR		0x50
00014B: 3A03  			JBS		Z			; Check Z = 1?
00014C: 5062  			JMP	INS_FAIL
00014D: 2203  			BC		Z
00014E: 1050  			MOV		A,0x50
00014F: 6C00  			XOR		A,@0x00		; Check Result ?
000150: 3A03  			JBS		Z			; Check Z = 1?
000151: 5062  			JMP	INS_FAIL
000152: 3603  			JBC		N			; Check N = 0?
000153: 5062  			JMP	INS_FAIL
000154: 600A  			MOV		A,@0x0A
000155: 015A  			MOV		INST,A
000156: 6000  			MOV		A,@0x00
000157: 0103  			MOV		STATUS,A
000158: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000159: 0150  			MOV		0x50,A		; [0x50] = 0x02
00015A: 6001  			MOV		A,@0x01
00015B: 0450  			SUB		A,0x50		; A = [0x50] - A
00015C: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
00015D: 5062  			JMP	INS_FAIL
00015E: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00015F: 5062  			JMP	INS_FAIL
000160: 3203  			JBC		Z			; Check Z = 0?
000161: 5062  			JMP	INS_FAIL
000162: 3503  			JBC		OV			; Check OV = 0?
000163: 5062  			JMP	INS_FAIL
000164: 3603  			JBC		N			; Check N = 0?
000165: 5062  			JMP	INS_FAIL
000166: 2203  			BC		Z
000167: 6C01  			XOR		A,@0x01		; Check Result ?
000168: 3A03  			JBS		Z			; Check Z = 1?
000169: 5062  			JMP	INS_FAIL
00016A: 3603  			JBC		N			; Check N = 0?
00016B: 5062  			JMP	INS_FAIL
00016C: 6000  			MOV		A,@0x00
00016D: 0103  			MOV		STATUS,A
00016E: 6002  			MOV		A,@0x02		; SUB(2-2)=0
00016F: 0150  			MOV		0x50,A		; [0x50] = 0x02
000170: 6002  			MOV		A,@0x02
000171: 0450  			SUB		A,0x50		; A = [0x50] - A
000172: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000173: 5062  			JMP	INS_FAIL
000174: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000175: 5062  			JMP	INS_FAIL
000176: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
000177: 5062  			JMP	INS_FAIL
000178: 3503  			JBC		OV			; Check OV = 0?
000179: 5062  			JMP	INS_FAIL
00017A: 3603  			JBC		N			; Check N = 0?
00017B: 5062  			JMP	INS_FAIL
00017C: 2203  			BC		Z
00017D: 6C00  			XOR		A,@0x00		; Check Result ?
00017E: 3A03  			JBS		Z			; Check Z = 1?
00017F: 5062  			JMP	INS_FAIL
000180: 3603  			JBC		N			; Check N = 0?
000181: 5062  			JMP	INS_FAIL
000182: 6000  			MOV		A,@0x00
000183: 0103  			MOV		STATUS,A
000184: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000185: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000186: 607F  			MOV		A,@0x7F
000187: 0450  			SUB		A,0x50		; A = [0x50] - A
000188: 3803  			JBS		C			; Check C = 1?
000189: 5062  			JMP	INS_FAIL
00018A: 3903  			JBS		DC			; Check DC = 1?
00018B: 5062  			JMP	INS_FAIL
00018C: 3203  			JBC		Z			; Check Z = 0?
00018D: 5062  			JMP	INS_FAIL
00018E: 3503  			JBC		OV			; Check OV = 0?
00018F: 5062  			JMP	INS_FAIL
000190: 3E03  			JBS		N			; Check N = 1?
000191: 5062  			JMP	INS_FAIL
000192: 2203  			BC		Z
000193: 2603  			BC		N
000194: 6C80  			XOR		A,@0x80		; Check Result ?
000195: 3A03  			JBS		Z			; Check Z = 1?
000196: 5062  			JMP	INS_FAIL
000197: 3603  			JBC		N			; Check N = 0?
000198: 5062  			JMP	INS_FAIL
000199: 6000  			MOV		A,@0x00
00019A: 0103  			MOV		STATUS,A
00019B: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
00019C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00019D: 607F  			MOV		A,@0x7F
00019E: 0450  			SUB		A,0x50		; A = [0x50] - A
00019F: 3803  			JBS		C			; Check C = 1?
0001A0: 5062  			JMP	INS_FAIL
0001A1: 3103  			JBC		DC			; Check DC = 0?
0001A2: 5062  			JMP	INS_FAIL
0001A3: 3203  			JBC		Z			; Check Z = 0?
0001A4: 5062  			JMP	INS_FAIL
0001A5: 3D03  			JBS		OV			; Check OV = 1?
0001A6: 5062  			JMP	INS_FAIL
0001A7: 3603  			JBC		N			; Check N = 0?
0001A8: 5062  			JMP	INS_FAIL
0001A9: 2203  			BC		Z
0001AA: 2603  			BC		N
0001AB: 6C01  			XOR		A,@0x01		; Check Result ?
0001AC: 3A03  			JBS		Z			; Check Z = 1?
0001AD: 5062  			JMP	INS_FAIL
0001AE: 3603  			JBC		N			; Check N = 0?
0001AF: 5062  			JMP	INS_FAIL
0001B0: 6000  			MOV		A,@0x00
0001B1: 0103  			MOV		STATUS,A
0001B2: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001B3: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001B4: 6003  			MOV		A,@0x03
0001B5: 0450  			SUB		A,0x50		; A = [0x50] - A
0001B6: 3003  			JBC		C			; Check C = 0?
0001B7: 5062  			JMP	INS_FAIL
0001B8: 3103  			JBC		DC			; Check DC = 0?
0001B9: 5062  			JMP	INS_FAIL
0001BA: 3203  			JBC		Z			; Check Z = 0?
0001BB: 5062  			JMP	INS_FAIL
0001BC: 3503  			JBC		OV			; Check OV = 0?
0001BD: 5062  			JMP	INS_FAIL
0001BE: 3E03  			JBS		N			; Check N = 1?
0001BF: 5062  			JMP	INS_FAIL
0001C0: 2203  			BC		Z
0001C1: 2603  			BC		N
0001C2: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001C3: 3A03  			JBS		Z			; Check Z = 1?
0001C4: 5062  			JMP	INS_FAIL
0001C5: 3603  			JBC		N			; Check N = 0?
0001C6: 5062  			JMP	INS_FAIL
0001C7: 600B  			MOV		A,@0x0B
0001C8: 015A  			MOV		INST,A
0001C9: 6000  			MOV		A,@0x00
0001CA: 0103  			MOV		STATUS,A
0001CB: 6002  			MOV		A,@0x02
0001CC: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001CD: 6001  			MOV		A,@0x01
0001CE: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001CF: 1003  			MOV		A,STATUS
0001D0: 6C1B  			XOR		A,@0x1B		; for non reset
0001D1: 40CE  			CALL	INST_XOR_JUDGE
0001D2: 2203  			BC		Z
0001D3: 2603  			BC		N
0001D4: 1050  			MOV		A,0x50
0001D5: 6C01  			XOR		A,@0x01		; Check Result ?
0001D6: 40CE  			CALL	INST_XOR_JUDGE
0001D7: 6000  			MOV		A,@0x00
0001D8: 0103  			MOV		STATUS,A
0001D9: 6002  			MOV		A,@0x02
0001DA: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001DB: 6002  			MOV		A,@0x02
0001DC: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001DD: 1003  			MOV		A,STATUS
0001DE: 6C1F  			XOR		A,@0x1F		; for nono reset
0001DF: 40CE  			CALL	INST_XOR_JUDGE
0001E0: 2203  			BC		Z
0001E1: 2603  			BC		N
0001E2: 1050  			MOV		A,0x50
0001E3: 6C00  			XOR		A,@0x00		; Check Result ?
0001E4: 3A03  			JBS		Z			; Check Z = 1?
0001E5: 5062  			JMP	INS_FAIL
0001E6: 3603  			JBC		N			; Check N = 0?
0001E7: 5062  			JMP	INS_FAIL
0001E8: 6000  			MOV		A,@0x00
0001E9: 0103  			MOV		STATUS,A
0001EA: 6080  			MOV		A,@0x80
0001EB: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001EC: 6001  			MOV		A,@0x01
0001ED: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001EE: 1003  			MOV		A,STATUS
0001EF: 6C39  			XOR		A,@0x39	;; for non reset
0001F0: 40CE  			CALL	INST_XOR_JUDGE
0001F1: 2203  			BC		Z
0001F2: 2603  			BC		N
0001F3: 1050  			MOV		A,0x50
0001F4: 6C7F  			XOR		A,@0x7F		; Check Result ?
0001F5: 40CE  			CALL	INST_XOR_JUDGE
0001F6: 6030  			MOV		A,@0x30
0001F7: 015A  			MOV		INST,A
0001F8: 40CB  			CALL	STATUS_CLEAR
0001F9: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
0001FA: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
0001FB: 3803  			JBS		C			; Check C = 1?
0001FC: 5062  			JMP	INS_FAIL
0001FD: 3903  			JBS		DC			; Check DC = 1?
0001FE: 5062  			JMP	INS_FAIL
0001FF: 3A03  			JBS		Z			; Check Z = 1?
000200: 5062  			JMP	INS_FAIL
000201: 3503  			JBC		OV			; Check OV = 0?
000202: 5062  			JMP	INS_FAIL
000203: 3603  			JBC		N			; Check N = 0?
000204: 5062  			JMP	INS_FAIL
000205: 6C00  			XOR		A,@0x00		; Check Result ?
000206: 40CE  			CALL	INST_XOR_JUDGE
000207: 40CB  			CALL	STATUS_CLEAR
000208: 607F  			MOV		A,@0x7F		; 0x00-0x7F
000209: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
00020A: 3003  			JBC		C			; Check C = 0?
00020B: 5062  			JMP	INS_FAIL
00020C: 3103  			JBC		DC			; Check DC = 0?
00020D: 5062  			JMP	INS_FAIL
00020E: 3203  			JBC		Z			; Check Z = 0?
00020F: 5062  			JMP	INS_FAIL
000210: 3503  			JBC		OV			; Check OV = 0?
000211: 5062  			JMP	INS_FAIL
000212: 3E03  			JBS		N			; Check N = 1?
000213: 5062  			JMP	INS_FAIL
000214: 6C81  			XOR		A,@0x81		; Check Result ?
000215: 40CE  			CALL	INST_XOR_JUDGE
000216: 40CB  			CALL	STATUS_CLEAR
000217: 6001  			MOV		A,@0x01		; 0x80-0x01
000218: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
000219: 3803  			JBS		C			; Check C = 1?
00021A: 5062  			JMP	INS_FAIL
00021B: 3103  			JBC		DC			; Check DC = 0?
00021C: 5062  			JMP	INS_FAIL
00021D: 3203  			JBC		Z			; Check Z = 0?
00021E: 5062  			JMP	INS_FAIL
00021F: 3D03  			JBS		OV			; Check OV = 1?
000220: 5062  			JMP	INS_FAIL
000221: 3603  			JBC		N			; Check N = 0?
000222: 5062  			JMP	INS_FAIL
000223: 6C7F  			XOR		A,@0x7F		; Check Result ?
000224: 40CE  			CALL	INST_XOR_JUDGE
000225: 6031  			MOV		A,@0x31
000226: 015A  			MOV		INST,A
000227: 40CB  			CALL	STATUS_CLEAR
000228: 2003  			BC		C			; B = 1
000229: 6000  			MOV		A,@0x00		;0x00-0xF
00022A: 0150  			MOV		0x50,A		; [0x50] = 0x00
00022B: 60FF  			MOV		A,@0xFF		; A = 0x01
00022C: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00022D: 3003  			JBC		C			; Check C = 0?
00022E: 5062  			JMP	INS_FAIL
00022F: 3103  			JBC		DC			; Check DC = 0?
000230: 5062  			JMP	INS_FAIL
000231: 3A03  			JBS		Z			; Check Z = 1?
000232: 5062  			JMP	INS_FAIL
000233: 3503  			JBC		OV			; Check OV = 0?
000234: 5062  			JMP	INS_FAIL
000235: 3603  			JBC		N			; Check N = 0?
000236: 5062  			JMP	INS_FAIL
000237: 6C00  			XOR		A,@0x00		; Check Result ?
000238: 40CE  			CALL	INST_XOR_JUDGE	
000239: 40CB  			CALL	STATUS_CLEAR
00023A: 2003  			BC		C			; B = 1
00023B: 6000  			MOV		A,@0x00		; 0x00-0x7F
00023C: 0150  			MOV		0x50,A		; [0x50] = 0x00
00023D: 607F  			MOV		A,@0x7F		; A = 0x01
00023E: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00023F: 3003  			JBC		C			; Check C = 0?
000240: 5062  			JMP	INS_FAIL
000241: 3103  			JBC		DC			; Check DC = 0?
000242: 5062  			JMP	INS_FAIL
000243: 3203  			JBC		Z			; Check Z = 0?
000244: 5062  			JMP	INS_FAIL
000245: 3503  			JBC		OV			; Check OV = 0?
000246: 5062  			JMP	INS_FAIL
000247: 3E03  			JBS		N			; Check N = 1?
000248: 5062  			JMP	INS_FAIL
000249: 6C80  			XOR		A,@0x80		; Check Result ?
00024A: 40CE  			CALL	INST_XOR_JUDGE
00024B: 40CB  			CALL	STATUS_CLEAR
00024C: 2003  			BC		C			; B = 1
00024D: 6080  			MOV		A,@0x80		; 0x80-0x01
00024E: 0150  			MOV		0x50,A		; [0x50] = 0x80
00024F: 6001  			MOV		A,@0x01		; A = 0x01
000250: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000251: 3803  			JBS		C			; Check C = 1?
000252: 5062  			JMP	INS_FAIL
000253: 3103  			JBC		DC			; Check DC = 0?
000254: 5062  			JMP	INS_FAIL
000255: 3203  			JBC		Z			; Check Z = 0?
000256: 5062  			JMP	INS_FAIL
000257: 3D03  			JBS		OV			; Check OV = 1?
000258: 5062  			JMP	INS_FAIL
000259: 3603  			JBC		N			; Check N = 0?
00025A: 5062  			JMP	INS_FAIL
00025B: 6C7E  			XOR		A,@0x7E		; Check Result ?
00025C: 40CE  			CALL	INST_XOR_JUDGE
00025D: 6032  			MOV		A,@0x32
00025E: 015A  			MOV		INST,A
00025F: 40CB  			CALL	STATUS_CLEAR
000260: 2003  			BC		C			; B = 1
000261: 6000  			MOV		A,@0x00		; 0x00-0xFF
000262: 0150  			MOV		0x50,A		; [0x50] = 0x00
000263: 60FF  			MOV		A,@0xFF
000264: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000265: 1003  			MOV		A,STATUS
000266: 6C1C  			XOR		A,@0x1C		; Check Status ?
000267: 40CE  			CALL	INST_XOR_JUDGE
000268: 1050  			MOV		A,0x50
000269: 6C00  			XOR		A,@0x00		; Check Result ?
00026A: 40CE  			CALL	INST_XOR_JUDGE
00026B: 40CB  			CALL	STATUS_CLEAR
00026C: 2003  			BC		C			; B = 1
00026D: 6000  			MOV		A,@0x00		; 0x00-0x7F
00026E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00026F: 607F  			MOV		A,@0x7F
000270: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000271: 1003  			MOV		A,STATUS
000272: 6C58  			XOR		A,@0x58		; Check Status ?
000273: 40CE  			CALL	INST_XOR_JUDGE
000274: 1050  			MOV		A,0x50
000275: 6C80  			XOR		A,@0x80		; Check Result ?
000276: 40CE  			CALL	INST_XOR_JUDGE
000277: 40CB  			CALL	STATUS_CLEAR
000278: 2003  			BC		C			; B = 1
000279: 6080  			MOV		A,@0x80		; ,0x80-0x01
00027A: 0150  			MOV		0x50,A		; [0x50] = 0x80
00027B: 6001  			MOV		A,@0x01
00027C: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
00027D: 1003  			MOV		A,STATUS
00027E: 6C39  			XOR		A,@0x39		; Check Status ?
00027F: 40CE  			CALL	INST_XOR_JUDGE
000280: 1050  			MOV		A,0x50
000281: 6C7E  			XOR		A,@0x7E		; Check Result ?
000282: 40CE  			CALL	INST_XOR_JUDGE
000283: 600C  			MOV		A,@0x0C
000284: 015A  			MOV		INST,A
000285: 6000  			MOV		A,@0x00
000286: 0103  			MOV		STATUS,A
000287: 6020  			MOV		A,@0x20		; 0x20-1
000288: 0150  			MOV		0x50,A		; [0x50] = 0x20
000289: 0650  			DECA	0x50		; A = [0x50] - 1
00028A: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00028B: 5062  			JMP	INS_FAIL
00028C: 3103  			JBC		DC			; Check DC = 0?
00028D: 5062  			JMP	INS_FAIL
00028E: 3203  			JBC		Z			; Check Z = 0?
00028F: 5062  			JMP	INS_FAIL
000290: 3503  			JBC		OV			; Check OV = 0?
000291: 5062  			JMP	INS_FAIL
000292: 3603  			JBC		N			; Check N = 0?
000293: 5062  			JMP	INS_FAIL
000294: 6C1F  			XOR		A,@0x1F		; Check Result ?
000295: 3A03  			JBS		Z			; Check Z = 1?
000296: 5062  			JMP	INS_FAIL
000297: 3603  			JBC		N			; Check N = 0?
000298: 5062  			JMP	INS_FAIL
000299: 6000  			MOV		A,@0x00
00029A: 0103  			MOV		STATUS,A
00029B: 6001  			MOV		A,@0x01		; 0x01-1
00029C: 0150  			MOV		0x50,A		; [0x50] = 0x01
00029D: 0650  			DECA	0x50		; A = [0x50] - 1
00029E: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00029F: 5062  			JMP	INS_FAIL
0002A0: 3903  			JBS		DC			; Check DC = 1?
0002A1: 5062  			JMP	INS_FAIL
0002A2: 3A03  			JBS		Z			; Check Z = 1?
0002A3: 5062  			JMP	INS_FAIL
0002A4: 3503  			JBC		OV			; Check OV = 0?
0002A5: 5062  			JMP	INS_FAIL
0002A6: 3603  			JBC		N			; Check N = 0?
0002A7: 5062  			JMP	INS_FAIL
0002A8: 2203  			BC		Z
0002A9: 6C00  			XOR		A,@0x00		; Check Result ?
0002AA: 3A03  			JBS		Z			; Check Z = 1?
0002AB: 5062  			JMP	INS_FAIL
0002AC: 3603  			JBC		N			; Check N = 0?
0002AD: 5062  			JMP	INS_FAIL
0002AE: 6000  			MOV		A,@0x00
0002AF: 0103  			MOV		STATUS,A
0002B0: 6000  			MOV		A,@0x00		; 0x00-1
0002B1: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002B2: 0650  			DECA	0x50		; A = [0x50] - 1
0002B3: 3003  			JBC		C			; Check C = 0?
0002B4: 5062  			JMP	INS_FAIL
0002B5: 3103  			JBC		DC			; Check DC = 0?
0002B6: 5062  			JMP	INS_FAIL
0002B7: 3203  			JBC		Z			; Check Z = 0?
0002B8: 5062  			JMP	INS_FAIL
0002B9: 3503  			JBC		OV			; Check OV = 0?
0002BA: 5062  			JMP	INS_FAIL
0002BB: 3E03  			JBS		N			; Check N = 1?
0002BC: 5062  			JMP	INS_FAIL
0002BD: 2203  			BC		Z
0002BE: 2603  			BC		N
0002BF: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002C0: 3A03  			JBS		Z			; Check Z = 1?
0002C1: 5062  			JMP	INS_FAIL
0002C2: 3603  			JBC		N			; Check N = 0?
0002C3: 5062  			JMP	INS_FAIL
0002C4: 6000  			MOV		A,@0x00
0002C5: 0103  			MOV		STATUS,A
0002C6: 6080  			MOV		A,@0x80		; 0x80-1
0002C7: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002C8: 0650  			DECA	0x50		; A = [0x50] - 1
0002C9: 3803  			JBS		C			; Check C = 1?
0002CA: 5062  			JMP	INS_FAIL
0002CB: 3103  			JBC		DC			; Check DC = 0?
0002CC: 5062  			JMP	INS_FAIL
0002CD: 3203  			JBC		Z			; Check Z = 0?
0002CE: 5062  			JMP	INS_FAIL
0002CF: 3D03  			JBS		OV			; Check OV = 1?
0002D0: 5062  			JMP	INS_FAIL
0002D1: 3603  			JBC		N			; Check N = 0?
0002D2: 5062  			JMP	INS_FAIL
0002D3: 2203  			BC		Z
0002D4: 2603  			BC		N
0002D5: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002D6: 3A03  			JBS		Z			; Check Z = 1?
0002D7: 5062  			JMP	INS_FAIL
0002D8: 3603  			JBC		N			; Check N = 0?
0002D9: 5062  			JMP	INS_FAIL
0002DA: 600D  			MOV		A,@0x0D
0002DB: 015A  			MOV		INST,A
0002DC: 6000  			MOV		A,@0x00
0002DD: 0103  			MOV		STATUS,A
0002DE: 6020  			MOV		A,@0x20		; 0x20-1
0002DF: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002E0: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002E1: 1003  			MOV		A,STATUS
0002E2: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002E3: 3A03  			JBS		Z			; Check Z = 1?
0002E4: 5062  			JMP	INS_FAIL
0002E5: 3603  			JBC		N			; Check N = 0?
0002E6: 5062  			JMP	INS_FAIL
0002E7: 2203  			BC		Z
0002E8: 1050  			MOV		A,0x50
0002E9: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002EA: 3A03  			JBS		Z			; Check Z = 1?
0002EB: 5062  			JMP	INS_FAIL
0002EC: 3603  			JBC		N			; Check N = 0?
0002ED: 5062  			JMP	INS_FAIL
0002EE: 6000  			MOV		A,@0x00
0002EF: 0103  			MOV		STATUS,A
0002F0: 6001  			MOV		A,@0x01		; 0x01-1
0002F1: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002F2: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002F3: 1003  			MOV		A,STATUS
0002F4: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
0002F5: 3A03  			JBS		Z			; Check Z = 1?
0002F6: 5062  			JMP	INS_FAIL
0002F7: 3603  			JBC		N			; Check N = 0?
0002F8: 5062  			JMP	INS_FAIL
0002F9: 2203  			BC		Z
0002FA: 1050  			MOV		A,0x50
0002FB: 6C00  			XOR		A,@0x00		; Check Result ?
0002FC: 3A03  			JBS		Z			; Check Z = 1?
0002FD: 5062  			JMP	INS_FAIL
0002FE: 3603  			JBC		N			; Check N = 0?
0002FF: 5062  			JMP	INS_FAIL
000300: 6000  			MOV		A,@0x00
000301: 0103  			MOV		STATUS,A
000302: 6000  			MOV		A,@0x00		; 0x00-1
000303: 0150  			MOV		0x50,A		; [0x50] = 0x00
000304: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000305: 1003  			MOV		A,STATUS
000306: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000307: 3A03  			JBS		Z			; Check Z = 1?
000308: 5062  			JMP	INS_FAIL
000309: 3603  			JBC		N			; Check N = 0?
00030A: 5062  			JMP	INS_FAIL
00030B: 2203  			BC		Z
00030C: 1050  			MOV		A,0x50
00030D: 6CFF  			XOR		A,@0xFF		; Check Result ?
00030E: 3A03  			JBS		Z			; Check Z = 1?
00030F: 5062  			JMP	INS_FAIL
000310: 3603  			JBC		N			; Check N = 0?
000311: 5062  			JMP	INS_FAIL
000312: 6000  			MOV		A,@0x00
000313: 0103  			MOV		STATUS,A
000314: 6080  			MOV		A,@0x80		; 0x80-1
000315: 0150  			MOV		0x50,A		; [0x50] = 0x80
000316: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000317: 1003  			MOV		A,STATUS
000318: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
000319: 3A03  			JBS		Z			; Check Z = 1?
00031A: 5062  			JMP	INS_FAIL
00031B: 3603  			JBC		N			; Check N = 0?
00031C: 5062  			JMP	INS_FAIL
00031D: 2203  			BC		Z
00031E: 1050  			MOV		A,0x50
00031F: 6C7F  			XOR		A,@0x7F		; Check Result ?
000320: 3A03  			JBS		Z			; Check Z = 1?
000321: 5062  			JMP	INS_FAIL
000322: 3603  			JBC		N			; Check N = 0?
000323: 5062  			JMP	INS_FAIL
000324: 6012  			MOV		A,@0x12
000325: 015A  			MOV		INST,A
000326: 40CB  			CALL	STATUS_CLEAR	; 0x80+0x7F
000327: 6080  			MOV		A,@0x80
000328: 0150  			MOV		0x50,A		; [0x50] = 0x80
000329: 607F  			MOV		A,@0x7F		; 
00032A: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
00032B: 3003  			JBC		C			; Check C = 0?
00032C: 5062  			JMP	INS_FAIL
00032D: 3103  			JBC		DC			; Check DC = 0?
00032E: 5062  			JMP	INS_FAIL
00032F: 3203  			JBC		Z			; Check Z = 0?
000330: 5062  			JMP	INS_FAIL
000331: 3503  			JBC		OV			; Check OV = 0?
000332: 5062  			JMP	INS_FAIL
000333: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000334: 5062  			JMP	INS_FAIL
000335: 2203  			BC		Z
000336: 2603  			BC		N
000337: 6CFF  			XOR		A,@0xFF		; Check Result ?
000338: 3A03  			JBS		Z			; Check Z = 1?
000339: 5062  			JMP	INS_FAIL
00033A: 3603  			JBC		N			; Check N = 0?
00033B: 5062  			JMP	INS_FAIL
00033C: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
00033D: 60FF  			MOV		A,@0xFF
00033E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00033F: 6001  			MOV		A,@0x01		; 
000340: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
000341: 3803  			JBS		C			; Check C = 1?
000342: 5062  			JMP	INS_FAIL
000343: 3903  			JBS		DC			; Check DC = 1?
000344: 5062  			JMP	INS_FAIL
000345: 3A03  			JBS		Z			; Check Z = 1?
000346: 5062  			JMP	INS_FAIL
000347: 3503  			JBC		OV			; Check OV = 0?
000348: 5062  			JMP	INS_FAIL
000349: 3603  			JBC		N			; Check N = 0?
00034A: 5062  			JMP	INS_FAIL
00034B: 2203  			BC		Z
00034C: 2603  			BC		N
00034D: 6C00  			XOR		A,@0x00		; Check Result ?
00034E: 3A03  			JBS		Z			; Check Z = 1?
00034F: 5062  			JMP	INS_FAIL
000350: 3603  			JBC		N			; Check N = 0?
000351: 5062  			JMP	INS_FAIL
000352: 40CB  			CALL	STATUS_CLEAR	; 0x7F+0x01
000353: 607F  			MOV		A,@0x7F
000354: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000355: 6001  			MOV		A,@0x01		; 
000356: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
000357: 3003  			JBC		C			; Check C = 0?
000358: 5062  			JMP	INS_FAIL
000359: 3903  			JBS		DC			; Check DC = 1?
00035A: 5062  			JMP	INS_FAIL
00035B: 3203  			JBC		Z			; Check Z = 0?
00035C: 5062  			JMP	INS_FAIL
00035D: 3D03  			JBS		OV			; Check OV = 1?
00035E: 5062  			JMP	INS_FAIL
00035F: 3E03  			JBS		N			; Check N = 1?
000360: 5062  			JMP	INS_FAIL
000361: 2203  			BC		Z
000362: 2603  			BC		N
000363: 6C80  			XOR		A,@0x80		; Check Result ?
000364: 3A03  			JBS		Z			; Check Z = 1?
000365: 5062  			JMP	INS_FAIL
000366: 3603  			JBC		N			; Check N = 0?
000367: 5062  			JMP	INS_FAIL
000368: 6013  			MOV		A,@0x13
000369: 015A  			MOV		INST,A
00036A: 40CB  			CALL	STATUS_CLEAR	; 0x80+0x7F
00036B: 6080  			MOV		A,@0x80
00036C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00036D: 607F  			MOV		A,@0x7F		; A = 0x7F
00036E: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00036F: 1003  			MOV		A,STATUS
000370: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000371: 3A03  			JBS		Z			; Check Z = 1?
000372: 5062  			JMP	INS_FAIL
000373: 3603  			JBC		N			; Check N = 0?
000374: 5062  			JMP	INS_FAIL
000375: 1050  			MOV		A,0x50
000376: 6CFF  			XOR		A,@0xFF		; Check Result ?
000377: 3A03  			JBS		Z			; Check Z = 1?
000378: 5062  			JMP	INS_FAIL
000379: 3603  			JBC		N			; Check N = 0?
00037A: 5062  			JMP	INS_FAIL
00037B: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
00037C: 60FF  			MOV		A,@0xFF
00037D: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00037E: 6001  			MOV		A,@0x01		; A = 0x01
00037F: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
000380: 1003  			MOV		A,STATUS
000381: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000382: 3A03  			JBS		Z			; Check Z = 1?
000383: 5062  			JMP	INS_FAIL
000384: 3603  			JBC		N			; Check N = 0?
000385: 5062  			JMP	INS_FAIL
000386: 1050  			MOV		A,0x50
000387: 6C00  			XOR		A,@0x00		; Check Result ?
000388: 3A03  			JBS		Z			; Check Z = 1?
000389: 5062  			JMP	INS_FAIL
00038A: 3603  			JBC		N			; Check N = 0?
00038B: 5062  			JMP	INS_FAIL
00038C: 40CB  			CALL	STATUS_CLEAR	;0x7F+0x01
00038D: 607F  			MOV		A,@0x7F
00038E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00038F: 6001  			MOV		A,@0x01		; A = 0x01
000390: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
000391: 1003  			MOV		A,STATUS
000392: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
000393: 3A03  			JBS		Z			; Check Z = 1?
000394: 5062  			JMP	INS_FAIL
000395: 3603  			JBC		N			; Check N = 0?
000396: 5062  			JMP	INS_FAIL
000397: 1050  			MOV		A,0x50
000398: 6C80  			XOR		A,@0x80		; Check Result ?
000399: 3A03  			JBS		Z			; Check Z = 1?
00039A: 5062  			JMP	INS_FAIL
00039B: 3603  			JBC		N			; Check N = 0?
00039C: 5062  			JMP	INS_FAIL
00039D: 6034  			MOV		A,@0x34
00039E: 015A  			MOV		INST,A
00039F: 40CB  			CALL	STATUS_CLEAR
0003A0: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003A1: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003A2: 3003  			JBC		C			; Check C = 0?
0003A3: 5062  			JMP	INS_FAIL
0003A4: 3903  			JBS		DC			; Check DC = 1?
0003A5: 5062  			JMP	INS_FAIL
0003A6: 3203  			JBC		Z			; Check Z = 0?
0003A7: 5062  			JMP	INS_FAIL
0003A8: 3D03  			JBS		OV			; Check OV = 1?
0003A9: 5062  			JMP	INS_FAIL
0003AA: 3E03  			JBS		N			; Check N = 1?
0003AB: 5062  			JMP	INS_FAIL
0003AC: 6C80  			XOR		A,@0x80		; Check Result ?
0003AD: 40CE  			CALL	INST_XOR_JUDGE
0003AE: 40CB  			CALL	STATUS_CLEAR
0003AF: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003B0: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003B1: 3803  			JBS		C			; Check C = 1?
0003B2: 5062  			JMP	INS_FAIL
0003B3: 3903  			JBS		DC			; Check DC = 1?
0003B4: 5062  			JMP	INS_FAIL
0003B5: 3A03  			JBS		Z			; Check Z = 1?
0003B6: 5062  			JMP	INS_FAIL
0003B7: 3503  			JBC		OV			; Check OV = 0?
0003B8: 5062  			JMP	INS_FAIL
0003B9: 3603  			JBC		N			; Check N = 0?
0003BA: 5062  			JMP	INS_FAIL
0003BB: 6C00  			XOR		A,@0x00		; Check Result ?
0003BC: 40CE  			CALL	INST_XOR_JUDGE
0003BD: 40CB  			CALL	STATUS_CLEAR
0003BE: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003BF: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003C0: 3003  			JBC		C			; Check C = 0?
0003C1: 5062  			JMP	INS_FAIL
0003C2: 3103  			JBC		DC			; Check DC = 0?
0003C3: 5062  			JMP	INS_FAIL
0003C4: 3203  			JBC		Z			; Check Z = 0?
0003C5: 5062  			JMP	INS_FAIL
0003C6: 3503  			JBC		OV			; Check OV = 0?
0003C7: 5062  			JMP	INS_FAIL
0003C8: 3E03  			JBS		N			; Check N = 1?
0003C9: 5062  			JMP	INS_FAIL
0003CA: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003CB: 40CE  			CALL	INST_XOR_JUDGE
0003CC: 6017  			MOV		A,@0x17
0003CD: 015A  			MOV		INST,A
0003CE: 40CB  			CALL	STATUS_CLEAR	; 0x7F+0x01
0003CF: 607F  			MOV		A,@0x7F
0003D0: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003D1: 1450  			INCA	0x50		; A = [0x50] +1		
0003D2: 3003  			JBC		C			; Check C = 0?
0003D3: 5062  			JMP	INS_FAIL
0003D4: 3903  			JBS		DC			; Check DC = 1?
0003D5: 5062  			JMP	INS_FAIL
0003D6: 3203  			JBC		Z			; Check Z = 0?
0003D7: 5062  			JMP	INS_FAIL
0003D8: 3D03  			JBS		OV			; Check OV = 1?
0003D9: 5062  			JMP	INS_FAIL
0003DA: 3E03  			JBS		N			; Check N = 1?
0003DB: 5062  			JMP	INS_FAIL
0003DC: 2203  			BC		Z
0003DD: 2603  			BC		N
0003DE: 6C80  			XOR		A,@0x80		; Check Result ?
0003DF: 3A03  			JBS		Z			; Check Z = 1?
0003E0: 5062  			JMP	INS_FAIL
0003E1: 3603  			JBC		N			; Check N = 0?
0003E2: 5062  			JMP	INS_FAIL
0003E3: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
0003E4: 60FF  			MOV		A,@0xFF
0003E5: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0003E6: 1450  			INCA	0x50		; A = [0x50] +1		
0003E7: 3803  			JBS		C			; Check C = 1?
0003E8: 5062  			JMP	INS_FAIL
0003E9: 3903  			JBS		DC			; Check DC = 1?
0003EA: 5062  			JMP	INS_FAIL
0003EB: 3A03  			JBS		Z			; Check Z = 1?
0003EC: 5062  			JMP	INS_FAIL
0003ED: 3503  			JBC		OV			; Check OV = 0?
0003EE: 5062  			JMP	INS_FAIL
0003EF: 3603  			JBC		N			; Check N = 0?
0003F0: 5062  			JMP	INS_FAIL
0003F1: 2203  			BC		Z
0003F2: 2603  			BC		N
0003F3: 6C00  			XOR		A,@0x00		; Check Result ?
0003F4: 3A03  			JBS		Z			; Check Z = 1?
0003F5: 5062  			JMP	INS_FAIL
0003F6: 3603  			JBC		N			; Check N = 0?
0003F7: 5062  			JMP	INS_FAIL
0003F8: 6018  			MOV		A,@0x18
0003F9: 015A  			MOV		INST,A
0003FA: 40CB  			CALL 	STATUS_CLEAR	; 0x7F+0x01
0003FB: 607F  			MOV		A,@0x7F
0003FC: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003FD: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
0003FE: 1003  			MOV		A,STATUS
0003FF: 6C7A  			XOR		A,@0x7A		; Check Status ?
000400: 3A03  			JBS		Z			; Check Z = 1?
000401: 5062  			JMP	INS_FAIL
000402: 3603  			JBC		N			; Check N = 0?
000403: 5062  			JMP	INS_FAIL
000404: 1050  			MOV		A,0x50
000405: 6C80  			XOR		A,@0x80		; Check Result ?
000406: 3A03  			JBS		Z			; Check Z = 1?
000407: 5062  			JMP	INS_FAIL
000408: 3603  			JBC		N			; Check N = 0?
000409: 5062  			JMP	INS_FAIL
00040A: 40CB  			CALL	STATUS_CLEAR	; 0xFF+0x01
00040B: 60FF  			MOV		A,@0xFF
00040C: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00040D: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00040E: 1003  			MOV		A,STATUS
00040F: 6C1F  			XOR		A,@0x1F		; Check Status ?
000410: 3A03  			JBS		Z			; Check Z = 1?
000411: 5062  			JMP	INS_FAIL
000412: 3603  			JBC		N			; Check N = 0?
000413: 5062  			JMP	INS_FAIL
000414: 1050  			MOV		A,0x50
000415: 6C00  			XOR		A,@0x00		; Check Result ?
000416: 3A03  			JBS		Z			; Check Z = 1?
000417: 5062  			JMP	INS_FAIL
000418: 3603  			JBC		N			; Check N = 0?
000419: 5062  			JMP	INS_FAIL
00041A: 6035  			MOV		A,@0x35
00041B: 015A  			MOV		INST,A
00041C: 40CB  			CALL	STATUS_CLEAR
00041D: 6000  			MOV		A,@0x00		; 0x00
00041E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00041F: 7D50  			NEG		0x50
000420: 1003  			MOV		A,STATUS
000421: 6C1F  			XOR		A,@0x1F		; Check Status ?
000422: 40CE  			CALL	INST_XOR_JUDGE
000423: 1050  			MOV		A,0x50
000424: 6C00  			XOR		A,@0x00		; Check Result ?
000425: 40CE  			CALL	INST_XOR_JUDGE
000426: 40CB  			CALL	STATUS_CLEAR
000427: 6001  			MOV		A,@0x01		; 0x01
000428: 0150  			MOV		0x50,A		; [0x50] = 0x01
000429: 7D50  			NEG		0x50
00042A: 1003  			MOV		A,STATUS
00042B: 6C58  			XOR		A,@0x58		; Check Status ?
00042C: 40CE  			CALL	INST_XOR_JUDGE
00042D: 1050  			MOV		A,0x50
00042E: 6CFF  			XOR		A,@0xFF		; Check Result ?
00042F: 4625  			CALL	INST_XCH
000430: 40CB  			CALL	STATUS_CLEAR
000431: 6080  			MOV		A,@0x80		; 0x80
000432: 0150  			MOV		0x50,A		; [0x50] = 0x80
000433: 7D50  			NEG		0x50
000434: 1003  			MOV		A,STATUS
000435: 6C7A  			XOR		A,@0x7A		; Check Status ?
000436: 40CE  			CALL	INST_XOR_JUDGE
000437: 1050  			MOV		A,0x50
000438: 6C80  			XOR		A,@0x80		; Check Result ?
000439: 40CE  			CALL	INST_XOR_JUDGE
00043A: 0012  		RET
00043B: 6006  			MOV		A,@0x06
00043C: 015A  			MOV		INST,A
00043D: 6000  			MOV		A,@0x00
00043E: 60FF  			MOV		A,@0xFF
00043F: 0104  			MOV		RSR,A		; Start Address
000440: 0084  			BTG		RSR
000441: 1004  			MOV		A,RSR
000442: 6CFE  			XOR		A,@0xFE		; Check Result ?
000443: 3A03  			JBS		Z			; Check Z = 1?
000444: 5062  			JMP	INS_FAIL
000445: 3603  			JBC		N			; Check N = 0?
000446: 5062  			JMP	INS_FAIL
000447: 600E  			MOV		A,@0x0E
000448: 015A  			MOV		INST,A
000449: 6000  			MOV		A,@0x00
00044A: 0103  			MOV		STATUS,A
00044B: 6000  			MOV		A,@0x00
00044C: 0150  			MOV		0x50,A		; [0x50] = 0x00
00044D: 6000  			MOV		A,@0x00
00044E: 2203  			BC		Z
00044F: 0850  			OR		A,0x50		; A = A | [0x50]
000450: 3003  			JBC		C			; Check C = 0?
000451: 5062  			JMP	INS_FAIL
000452: 3103  			JBC		DC			; Check DC = 0?
000453: 5062  			JMP	INS_FAIL
000454: 3A03  			JBS		Z			; Check Z = 1?
000455: 5062  			JMP	INS_FAIL
000456: 3503  			JBC		OV			; Check OV = 0?
000457: 5062  			JMP	INS_FAIL
000458: 3603  			JBC		N			; Check N = 0?
000459: 5062  			JMP	INS_FAIL
00045A: 2203  			BC		Z
00045B: 6C00  			XOR		A,@0x00		; Check Result ?
00045C: 3A03  			JBS		Z			; Check Z = 1?
00045D: 5062  			JMP	INS_FAIL
00045E: 3603  			JBC		N			; Check N = 0?
00045F: 5062  			JMP	INS_FAIL
000460: 6000  			MOV		A,@0x00
000461: 0103  			MOV		STATUS,A
000462: 6055  			MOV		A,@0x55
000463: 0150  			MOV		0x50,A		; [0x50] = 0x55
000464: 60AA  			MOV		A,@0xAA
000465: 2203  			BC		Z
000466: 0850  			OR		A,0x50		; A = A | [0x50]
000467: 3003  			JBC		C			; Check C = 0?
000468: 5062  			JMP	INS_FAIL
000469: 3103  			JBC		DC			; Check DC = 0?
00046A: 5062  			JMP	INS_FAIL
00046B: 3203  			JBC		Z			; Check Z = 0?
00046C: 5062  			JMP	INS_FAIL
00046D: 3503  			JBC		OV			; Check OV = 0?
00046E: 5062  			JMP	INS_FAIL
00046F: 3E03  			JBS		N			; Check N = 1?
000470: 5062  			JMP	INS_FAIL
000471: 2203  			BC		Z
000472: 6CFF  			XOR		A,@0xFF		; Check Result ?
000473: 3A03  			JBS		Z			; Check Z = 1?
000474: 5062  			JMP	INS_FAIL
000475: 3603  			JBC		N			; Check N = 0?
000476: 5062  			JMP	INS_FAIL
000477: 600F  			MOV		A,@0x0F
000478: 015A  			MOV		INST,A
000479: 6000  			MOV		A,@0x00
00047A: 0103  			MOV		STATUS,A
00047B: 6000  			MOV		A,@0x00
00047C: 0150  			MOV		0x50,A		; [0x50] = 0x00
00047D: 6000  			MOV		A,@0x00		; A = 0x00
00047E: 2203  			BC		Z
00047F: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
000480: 1003  			MOV		A,STATUS
000481: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
000482: 3A03  			JBS		Z			; Check Z = 1?
000483: 5062  			JMP	INS_FAIL
000484: 3603  			JBC		N			; Check N = 0?
000485: 5062  			JMP	INS_FAIL
000486: 1050  			MOV		A,0x50		; A = Result[0x50]
000487: 2203  			BC		Z
000488: 2603  			BC		N
000489: 6C00  			XOR		A,@0x00		; Check Result ?
00048A: 3A03  			JBS		Z			; Check Z = 1?
00048B: 5062  			JMP	INS_FAIL
00048C: 3603  			JBC		N			; Check N = 0?
00048D: 5062  			JMP	INS_FAIL
00048E: 6000  			MOV		A,@0x00
00048F: 0103  			MOV		STATUS,A
000490: 6055  			MOV		A,@0x55
000491: 0150  			MOV		0x50,A		; [0x50] = 0x55
000492: 60AA  			MOV		A,@0xAA		; A = 0xAA
000493: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
000494: 1003  			MOV		A,STATUS
000495: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000496: 3A03  			JBS		Z			; Check Z = 1?
000497: 5062  			JMP	INS_FAIL
000498: 3603  			JBC		N			; Check N = 0?
000499: 5062  			JMP	INS_FAIL
00049A: 1050  			MOV		A,0x50
00049B: 2203  			BC		Z
00049C: 2603  			BC		N
00049D: 6CFF  			XOR		A,@0xFF		; Check Result ?
00049E: 3A03  			JBS		Z			; Check Z = 1?
00049F: 5062  			JMP	INS_FAIL
0004A0: 3603  			JBC		N			; Check N = 0?
0004A1: 5062  			JMP	INS_FAIL
0004A2: 6010  			MOV		A,@0x10
0004A3: 015A  			MOV		INST,A
0004A4: 40CB  			CALL	STATUS_CLEAR
0004A5: 6055  			MOV		A,@0x55
0004A6: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004A7: 60AA  			MOV		A,@0xAA
0004A8: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
0004A9: 3003  			JBC		C			; Check C = 0?
0004AA: 5062  			JMP	INS_FAIL
0004AB: 3103  			JBC		DC			; Check DC = 0?
0004AC: 5062  			JMP	INS_FAIL
0004AD: 3A03  			JBS		Z			; Check Z = 1?
0004AE: 5062  			JMP	INS_FAIL
0004AF: 3503  			JBC		OV			; Check OV = 0?
0004B0: 5062  			JMP	INS_FAIL
0004B1: 3603  			JBC		N			; Check N = 0?
0004B2: 5062  			JMP	INS_FAIL
0004B3: 6C00  			XOR		A,@0x00		; Check Result ?
0004B4: 3A03  			JBS		Z			; Check Z = 1?
0004B5: 5062  			JMP	INS_FAIL
0004B6: 3603  			JBC		N			; Check N = 0?
0004B7: 5062  			JMP	INS_FAIL
0004B8: 40CB  			CALL	STATUS_CLEAR
0004B9: 60F5  			MOV		A,@0xF5
0004BA: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0004BB: 60FA  			MOV		A,@0xFA
0004BC: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
0004BD: 3003  			JBC		C			; Check C = 0?
0004BE: 5062  			JMP	INS_FAIL
0004BF: 3103  			JBC		DC			; Check DC = 0?
0004C0: 5062  			JMP	INS_FAIL
0004C1: 3203  			JBC		Z			; Check Z = 0?
0004C2: 5062  			JMP	INS_FAIL
0004C3: 3503  			JBC		OV			; Check OV = 0?
0004C4: 5062  			JMP	INS_FAIL
0004C5: 3E03  			JBS		N			; Check N = 1?
0004C6: 5062  			JMP	INS_FAIL
0004C7: 6CF0  			XOR		A,@0xF0		; Check Result ?
0004C8: 3A03  			JBS		Z			; Check Z = 1?
0004C9: 5062  			JMP	INS_FAIL
0004CA: 3603  			JBC		N			; Check N = 0?
0004CB: 5062  			JMP	INS_FAIL
0004CC: 6011  			MOV		A,@0x11
0004CD: 015A  			MOV		INST,A
0004CE: 40CB  			CALL	STATUS_CLEAR
0004CF: 6055  			MOV		A,@0x55
0004D0: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004D1: 60AA  			MOV		A,@0xAA
0004D2: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
0004D3: 1003  			MOV		A,STATUS
0004D4: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004D5: 3A03  			JBS		Z			; Check Z = 1?
0004D6: 5062  			JMP	INS_FAIL
0004D7: 3603  			JBC		N			; Check N = 0?
0004D8: 5062  			JMP	INS_FAIL
0004D9: 2203  			BC		Z
0004DA: 1050  			MOV		A,0x50
0004DB: 2203  			BC		Z
0004DC: 6C00  			XOR		A,@0x00		; Check Result ?
0004DD: 3A03  			JBS		Z			; Check Z = 1?
0004DE: 5062  			JMP	INS_FAIL
0004DF: 3603  			JBC		N			; Check N = 0?
0004E0: 5062  			JMP	INS_FAIL
0004E1: 40CB  			CALL	STATUS_CLEAR
0004E2: 60F5  			MOV		A,@0xF5
0004E3: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0004E4: 60FA  			MOV		A,@0xFA
0004E5: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
0004E6: 1003  			MOV		A,STATUS
0004E7: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004E8: 3A03  			JBS		Z			; Check Z = 1?
0004E9: 5062  			JMP	INS_FAIL
0004EA: 3603  			JBC		N			; Check N = 0?
0004EB: 5062  			JMP	INS_FAIL
0004EC: 2203  			BC		Z
0004ED: 1050  			MOV		A,0x50
0004EE: 2203  			BC		Z
0004EF: 6CF0  			XOR		A,@0xF0		; Check Result ?
0004F0: 3A03  			JBS		Z			; Check Z = 1?
0004F1: 5062  			JMP	INS_FAIL
0004F2: 3603  			JBC		N			; Check N = 0?
0004F3: 5062  			JMP	INS_FAIL
0004F4: 6029  			MOV		A,@0x29
0004F5: 015A  			MOV		INST,A
0004F6: 40CB  			CALL	STATUS_CLEAR
0004F7: 60AA  			MOV		A,@0xAA
0004F8: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
0004F9: 3003  			JBC		C			; Check C = 0?
0004FA: 5062  			JMP	INS_FAIL
0004FB: 3103  			JBC		DC			; Check DC = 0?
0004FC: 5062  			JMP	INS_FAIL
0004FD: 3A03  			JBS		Z			; Check Z = 1?
0004FE: 5062  			JMP	INS_FAIL
0004FF: 3503  			JBC		OV			; Check OV = 0?
000500: 5062  			JMP	INS_FAIL
000501: 3603  			JBC		N			; Check N = 0?
000502: 5062  			JMP	INS_FAIL
000503: 6C00  			XOR		A,@0x00		; Check Result ?
000504: 3A03  			JBS		Z			; Check Z = 1?
000505: 5062  			JMP	INS_FAIL
000506: 3603  			JBC		N			; Check N = 0?
000507: 5062  			JMP	INS_FAIL
000508: 40CB  			CALL	STATUS_CLEAR
000509: 60AA  			MOV		A,@0xAA
00050A: 68FF  			AND		A,@0xFF		; A = A & 0xFF
00050B: 3003  			JBC		C			; Check C = 0?
00050C: 5062  			JMP	INS_FAIL
00050D: 3103  			JBC		DC			; Check DC = 0?
00050E: 5062  			JMP	INS_FAIL
00050F: 3203  			JBC		Z			; Check Z = 0?
000510: 5062  			JMP	INS_FAIL
000511: 3503  			JBC		OV			; Check OV = 0?
000512: 5062  			JMP	INS_FAIL
000513: 3E03  			JBS		N			; Check N = 1?
000514: 5062  			JMP	INS_FAIL
000515: 6CAA  			XOR		A,@0xAA		; Check Result ?
000516: 40CE  			CALL	INST_XOR_JUDGE
000517: 6015  			MOV		A,@0x15
000518: 015A  			MOV		INST,A
000519: 40CB  			CALL	STATUS_CLEAR
00051A: 60FF  			MOV		A,@0xFF
00051B: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00051C: 1250  			COMA	0x50		; A = /R
00051D: 3003  			JBC		C			; Check C = 0?
00051E: 5062  			JMP	INS_FAIL
00051F: 3103  			JBC		DC			; Check DC = 0?
000520: 5062  			JMP	INS_FAIL
000521: 3A03  			JBS		Z			; Check Z = 1?
000522: 5062  			JMP	INS_FAIL
000523: 3503  			JBC		OV			; Check OV = 0?
000524: 5062  			JMP	INS_FAIL
000525: 3603  			JBC		N			; Check N = 0?
000526: 5062  			JMP	INS_FAIL
000527: 6C00  			XOR		A,@0x00		; Check Result ?
000528: 3A03  			JBS		Z			; Check Z = 1?
000529: 5062  			JMP	INS_FAIL
00052A: 3603  			JBC		N			; Check N = 0?
00052B: 5062  			JMP	INS_FAIL	
00052C: 40CB  			CALL	STATUS_CLEAR
00052D: 6005  			MOV		A,@0x05
00052E: 0150  			MOV		0x50,A		; [0x50] = 0x05
00052F: 1250  			COMA	0x50		; A = /R
000530: 3003  			JBC		C			; Check C = 0?
000531: 5062  			JMP	INS_FAIL
000532: 3103  			JBC		DC			; Check DC = 0?
000533: 5062  			JMP	INS_FAIL
000534: 3203  			JBC		Z			; Check Z = 0?
000535: 5062  			JMP	INS_FAIL
000536: 3503  			JBC		OV			; Check OV = 0?
000537: 5062  			JMP	INS_FAIL
000538: 3E03  			JBS		N			; Check N = 1?
000539: 5062  			JMP	INS_FAIL
00053A: 6CFA  			XOR		A,@0xFA		; Check Result ?
00053B: 3A03  			JBS		Z			; Check Z = 1?
00053C: 5062  			JMP	INS_FAIL
00053D: 3603  			JBC		N			; Check N = 0?
00053E: 5062  			JMP	INS_FAIL
00053F: 6016  			MOV		A,@0x16
000540: 015A  			MOV		INST,A
000541: 40CB  			CALL	STATUS_CLEAR
000542: 60FF  			MOV		A,@0xFF
000543: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000544: 1350  			COM		0x50		; [0x50] = /[0x50]
000545: 1003  			MOV		A,STATUS
000546: 6C1C  			XOR		A,@0x1C		; Check Status ?
000547: 3A03  			JBS		Z			; Check Z = 1?
000548: 5062  			JMP	INS_FAIL
000549: 3603  			JBC		N			; Check N = 0?
00054A: 5062  			JMP	INS_FAIL
00054B: 2203  			BC		Z
00054C: 2603  			BC		N
00054D: 1050  			MOV		A,0x50
00054E: 6C00  			XOR		A,@0x00		; Check Result ?
00054F: 3A03  			JBS		Z			; Check Z = 1?
000550: 5062  			JMP	INS_FAIL
000551: 3603  			JBC		N			; Check N = 0?
000552: 5062  			JMP	INS_FAIL
000553: 40CB  			CALL	STATUS_CLEAR
000554: 6000  			MOV		A,@0x00
000555: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000556: 1350  			COM		0x50		; [0x50] = /[0x50]
000557: 1003  			MOV		A,STATUS
000558: 6C58  			XOR		A,@0x58		; Check Status ?
000559: 3A03  			JBS		Z			; Check Z = 1?
00055A: 5062  			JMP	INS_FAIL
00055B: 3603  			JBC		N			; Check N = 0?
00055C: 5062  			JMP	INS_FAIL
00055D: 2203  			BC		Z
00055E: 2603  			BC		N
00055F: 1050  			MOV		A,0x50
000560: 6CFF  			XOR		A,@0xFF		; Check Result ?
000561: 3A03  			JBS		Z			; Check Z = 1?
000562: 5062  			JMP	INS_FAIL
000563: 3603  			JBC		N			; Check N = 0?
000564: 5062  			JMP	INS_FAIL
000565: 6026  			MOV		A,@0x26
000566: 015A  			MOV		INST,A
000567: 40CB  			CALL	STATUS_CLEAR
000568: 60A5  			MOV		A,@0xA5
000569: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
00056A: 6CFF  			XOR		A,@0xFF		; Check Result ?
00056B: 40CE  			CALL	INST_XOR_JUDGE
00056C: 0012  		RET
00056D: 602B  			MOV		A,@0x2B
00056E: 015A  			MOV		INST,A
00056F: 40CB  			CALL	STATUS_CLEAR
000570: 6055  			MOV		A,@0x55
000571: 0150  			MOV		0x50,A		; [0x50] = 0x55
000572: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
000573: 1003  			MOV		A,STATUS
000574: 6C58  			XOR		A,@0x58		; Check Status ?
000575: 40CE  			CALL	INST_XOR_JUDGE
000576: 1050  			MOV		A,0x50
000577: 6CAA  			XOR		A,@0xAA		; Check Result ?
000578: 40CE  			CALL	INST_XOR_JUDGE
000579: 602A  			MOV		A,@0x2A
00057A: 015A  			MOV		INST,A
00057B: 40CB  			CALL 	STATUS_CLEAR
00057C: 6055  			MOV		A,@0x55
00057D: 0150  			MOV		0x50,A		; [0x50] = 0x55
00057E: 6E50  			RRA		0x50		; A = [0x50] >> 1
00057F: 3003  			JBC		C			; Check C = 0?
000580: 5062  			JMP	INS_FAIL
000581: 3103  			JBC		DC			; Check DC = 0?
000582: 5062  			JMP	INS_FAIL
000583: 3203  			JBC		Z			; Check Z = 0?
000584: 5062  			JMP	INS_FAIL
000585: 3503  			JBC		OV			; Check OV = 0?
000586: 5062  			JMP	INS_FAIL
000587: 3E03  			JBS		N			; Check N = 1?
000588: 5062  			JMP	INS_FAIL
000589: 6CAA  			XOR		A,@0xAA		; Check Result ?
00058A: 40CE  			CALL	INST_XOR_JUDGE
00058B: 601B  			MOV		A,@0x1B
00058C: 015A  			MOV		INST,A
00058D: 40CB  			CALL	STATUS_CLEAR
00058E: 2803  			BS		C
00058F: 60AA  			MOV		A,@0xAA
000590: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000591: 1850  			RRCA	0x50		; A = [0x50] >> 1
000592: 3003  			JBC		C			; Check C = 0?
000593: 5062  			JMP	INS_FAIL
000594: 3103  			JBC		DC			; Check DC = 0?
000595: 5062  			JMP	INS_FAIL
000596: 3203  			JBC		Z			; Check Z = 0?
000597: 5062  			JMP	INS_FAIL
000598: 3503  			JBC		OV			; Check OV = 0?
000599: 5062  			JMP	INS_FAIL
00059A: 3E03  			JBS		N			; Check N = 1?
00059B: 5062  			JMP	INS_FAIL
00059C: 6CD5  			XOR		A,@0xD5		; Check Result ?
00059D: 40CE  			CALL	INST_XOR_JUDGE
00059E: 40CB  			CALL	STATUS_CLEAR
00059F: 6055  			MOV		A,@0x55
0005A0: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005A1: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005A2: 3803  			JBS		C			; Check C = 1?
0005A3: 5062  			JMP	INS_FAIL
0005A4: 3103  			JBC		DC			; Check DC = 0?
0005A5: 5062  			JMP	INS_FAIL
0005A6: 3203  			JBC		Z			; Check Z = 0?
0005A7: 5062  			JMP	INS_FAIL
0005A8: 3503  			JBC		OV			; Check OV = 0?
0005A9: 5062  			JMP	INS_FAIL
0005AA: 3603  			JBC		N			; Check N = 0?
0005AB: 5062  			JMP	INS_FAIL
0005AC: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005AD: 40CE  			CALL	INST_XOR_JUDGE
0005AE: 601C  			MOV		A,@0x1C
0005AF: 015A  			MOV		INST,A
0005B0: 40CB  			CALL	STATUS_CLEAR
0005B1: 2803  			BS		C
0005B2: 60AA  			MOV		A,@0xAA
0005B3: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005B4: 2203  			BC		Z
0005B5: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005B6: 1003  			MOV		A,STATUS
0005B7: 6C58  			XOR		A,@0x58		; Check Status ?
0005B8: 40CE  			CALL	INST_XOR_JUDGE
0005B9: 1050  			MOV		A,0x50
0005BA: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005BB: 40CE  			CALL	INST_XOR_JUDGE
0005BC: 40CB  			CALL	STATUS_CLEAR
0005BD: 6055  			MOV		A,@0x55
0005BE: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005BF: 2203  			BC		Z
0005C0: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005C1: 1003  			MOV		A,STATUS
0005C2: 6C19  			XOR		A,@0x19		; Check Status ?
0005C3: 3A03  			JBS		Z			; Check Z = 1?
0005C4: 5062  			JMP	INS_FAIL
0005C5: 3603  			JBC		N			; Check N = 0?
0005C6: 5062  			JMP	INS_FAIL
0005C7: 1050  			MOV		A,0x50
0005C8: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005C9: 40CE  			CALL	INST_XOR_JUDGE
0005CA: 601D  			MOV		A,@0x1D
0005CB: 015A  			MOV		INST,A
0005CC: 40CB  			CALL STATUS_CLEAR
0005CD: 2803  			BS		C
0005CE: 6055  			MOV		A,@0x55
0005CF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005D0: 1A50  			RLCA	0x50		; A = [0x50] << 1
0005D1: 3003  			JBC		C			; Check C = 0?
0005D2: 5062  			JMP	INS_FAIL
0005D3: 3103  			JBC		DC			; Check DC = 0?
0005D4: 5062  			JMP	INS_FAIL
0005D5: 3203  			JBC		Z			; Check Z = 0?
0005D6: 5062  			JMP	INS_FAIL
0005D7: 3503  			JBC		OV			; Check OV = 0?
0005D8: 5062  			JMP	INS_FAIL
0005D9: 3E03  			JBS		N			; Check N = 1?
0005DA: 5062  			JMP	INS_FAIL
0005DB: 6CAB  			XOR		A,@0xAB		; Check Result ?
0005DC: 40CE  			CALL	INST_XOR_JUDGE
0005DD: 40CB  			CALL	STATUS_CLEAR
0005DE: 60AA  			MOV		A,@0xAA
0005DF: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005E0: 1A50  			RLCA	0x50		; A = [0x50] << 1
0005E1: 3803  			JBS		C			; Check C = 1?
0005E2: 5062  			JMP	INS_FAIL
0005E3: 3103  			JBC		DC			; Check DC = 0?
0005E4: 5062  			JMP	INS_FAIL
0005E5: 3203  			JBC		Z			; Check Z = 0?
0005E6: 5062  			JMP	INS_FAIL
0005E7: 3503  			JBC		OV			; Check OV = 0?
0005E8: 5062  			JMP	INS_FAIL
0005E9: 3603  			JBC		N			; Check N = 0?
0005EA: 5062  			JMP	INS_FAIL
0005EB: 6C54  			XOR		A,@0x54		; Check Result ?
0005EC: 40CE  			CALL	INST_XOR_JUDGE
0005ED: 601E  			MOV		A,@0x1E
0005EE: 015A  			MOV		INST,A
0005EF: 40CB  			CALL	STATUS_CLEAR
0005F0: 2803  			BS		C
0005F1: 6055  			MOV		A,@0x55
0005F2: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005F3: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
0005F4: 1003  			MOV		A,STATUS
0005F5: 6C58  			XOR		A,@0x58		; Check Status ?
0005F6: 40CE  			CALL	INST_XOR_JUDGE
0005F7: 1050  			MOV		A,0x50
0005F8: 6CAB  			XOR		A,@0xAB		; Check Result ?
0005F9: 40CE  			CALL	INST_XOR_JUDGE
0005FA: 40CB  			CALL	STATUS_CLEAR
0005FB: 60AA  			MOV		A,@0xAA
0005FC: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005FD: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
0005FE: 1003  			MOV		A,STATUS
0005FF: 6C19  			XOR		A,@0x19		; Check Status ?
000600: 40CE  			CALL	INST_XOR_JUDGE
000601: 1050  			MOV		A,0x50
000602: 6C54  			XOR		A,@0x54		; Check Result ?
000603: 40CE  			CALL	INST_XOR_JUDGE
000604: 602E  			MOV		A,@0x2E
000605: 015A  			MOV		INST,A
000606: 40CB  			CALL	STATUS_CLEAR
000607: 605A  			MOV		A,@0x5A
000608: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000609: 7250  			RLA		0x50		; A = [0x50] << 1
00060A: 3003  			JBC		C			; Check C = 0?
00060B: 5062  			JMP	INS_FAIL
00060C: 3103  			JBC		DC			; Check DC = 0?
00060D: 5062  			JMP	INS_FAIL
00060E: 3203  			JBC		Z			; Check Z = 0?
00060F: 5062  			JMP	INS_FAIL
000610: 3503  			JBC		OV			; Check OV = 0?
000611: 5062  			JMP	INS_FAIL
000612: 3E03  			JBS		N			; Check N = 1?
000613: 5062  			JMP	INS_FAIL
000614: 6CB4  			XOR		A,@0xB4		; Check Result ?
000615: 40CE  			CALL	INST_XOR_JUDGE
000616: 602F  			MOV		A,@0x2F
000617: 015A  			MOV		INST,A
000618: 40CB  			CALL	STATUS_CLEAR
000619: 605A  			MOV		A,@0x5A
00061A: 0150  			MOV		0x50,A		; [0x50] = 0xA5
00061B: 7350  			RL		0x50		; [0x50] = [0x50] << 1
00061C: 1003  			MOV		A,STATUS
00061D: 6C58  			XOR		A,@0x58		; Check Status ?
00061E: 3A03  			JBS		Z			; Check Z = 1?
00061F: 5062  			JMP	INS_FAIL
000620: 3603  			JBC		N			; Check N = 0?
000621: 5062  			JMP	INS_FAIL
000622: 1050  			MOV		A,0x50
000623: 6CB4  			XOR		A,@0xB4		; Check Result ?
000624: 40CE  			CALL	INST_XOR_JUDGE
000625: 602D  			MOV		A,@0x2D
000626: 015A  			MOV		INST,A
000627: 40CB  			CALL	STATUS_CLEAR
000628: 6055  			MOV		A,@0x55
000629: 0150  			MOV		0x50,A		; [0x50] = 0x55
00062A: 60AA  			MOV		A,@0xAA
00062B: 7150  			XCH		0x50		; [0x50] <-> A
00062C: 6C55  			XOR		A,@0x55		; Check Result ?
00062D: 3A03  			JBS		Z			; Check Z = 1?
00062E: 5062  			JMP	INS_FAIL
00062F: 3603  			JBC		N			; Check N = 0?
000630: 5062  			JMP	INS_FAIL
000631: 1050  			MOV		A,0x50
000632: 6CAA  			XOR		A,@0xAA		; Check Result ?
000633: 40CE  			CALL	INST_XOR_JUDGE
000634: 0012  		RET
000635: 6007  			MOV		A,@0x07
000636: 015A  			MOV		INST,A
000637: 40CB  			CALL	STATUS_CLEAR
000638: 60FF  			MOV		A,@0xFF
000639: 0150  			MOV		0x50,A
00063A: 1003  			MOV		A,STATUS
00063B: 6C18  			XOR		A,@0x18		;At  OCDS
00063C: 40CE  			CALL	INST_XOR_JUDGE
00063D: 1050  			MOV		A,0x50
00063E: 6CFF  			XOR		A,@0xFF		; Check Result ?
00063F: 40CE  			CALL	INST_XOR_JUDGE
000640: 6014  			MOV		A,@0x14
000641: 015A  			MOV		INST,A
000642: 40CB  			CALL	STATUS_CLEAR
000643: 6000  			MOV		A,@0x00
000644: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000645: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000646: 1003  			MOV		A,STATUS
000647: 6C1C  			XOR		A,@0x1C		; Check Status ?
000648: 3A03  			JBS		Z			; Check Z = 1?
000649: 5062  			JMP	INS_FAIL
00064A: 3603  			JBC		N			; Check N = 0?
00064B: 5062  			JMP	INS_FAIL
00064C: 1050  			MOV		A,0x50
00064D: 2203  			BC		Z
00064E: 6C00  			XOR		A,@0x00		; Check Result ?
00064F: 3A03  			JBS		Z			; Check Z = 1?
000650: 5062  			JMP	INS_FAIL
000651: 3603  			JBC		N			; Check N = 0?
000652: 5062  			JMP	INS_FAIL
000653: 40CB  			CALL	STATUS_CLEAR
000654: 6000  			MOV		A,@0x00
000655: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000656: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000657: 2850  			BS		0x50,0
000658: 1050  			MOV		A,0x50
000659: 6C01  			XOR		A,@0x01		; Check Result ?
00065A: 40CE  			CALL	INST_XOR_JUDGE
00065B: 601F  			MOV		A,@0x1F
00065C: 015A  			MOV		INST,A
00065D: 40CB  			CALL	STATUS_CLEAR
00065E: 605A  			MOV		A,@0x5A
00065F: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000660: 1C50  			SWAPA	0x50
000661: 6CA5  			XOR		A,@0xA5		; Check Result ?
000662: 40CE  			CALL	INST_XOR_JUDGE
000663: 6020  			MOV		A,@0x20
000664: 015A  			MOV		INST,A
000665: 40CB  			CALL	STATUS_CLEAR
000666: 605A  			MOV		A,@0x5A
000667: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000668: 1D50  			SWAP	0x50
000669: 1050  			MOV		A,0x50
00066A: 6CA5  			XOR		A,@0xA5		; Check Result ?
00066B: 40CE  			CALL	INST_XOR_JUDGE
00066C: 0012  		RET
00066D: 0012  		RET
00066E: 0012  		RET
00066F: 6004  			MOV		A,@0x04
000670: 015A  			MOV		INST,A
000671: 0010  			ENI
000672: 3F03  			JBS		IT		; Check IT = 1?
000673: 5062  			JMP	INS_FAIL
000674: 6005  			MOV		A,@0x05
000675: 015A  			MOV		INST,A
000676: 0011  			DISI
000677: 3703  			JBC		IT		; Check IT = 0?
000678: 5062  			JMP	INS_FAIL
000679: 0012  		RET
00067A: 6019  	MOV		A,@0x19
00067B: 015A  	MOV		INST,A
00067C: 6000  	MOV		A,@0x00
00067D: 0103  	MOV		STATUS,A
00067E: 6001  		MOV		A,@0x01
00067F: 0150  		MOV		0x50,A		; [0x50] = 0x01
000680: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
000681: 5062  		JMP	INS_FAIL
000682: 6C00  		XOR		A,@0x00		; Check Result ?
000683: 3A03  		JBS		Z			; Check Z = 1?
000684: 5062  		JMP	INS_FAIL
000685: 3603  		JBC		N			; Check N = 0?
000686: 5062  		JMP	INS_FAIL
000687: 6000  	MOV		A,@0x00
000688: 0103  	MOV		STATUS,A
000689: 6002  		MOV		A,@0x02
00068A: 0150  		MOV		0x50,A		; [0x50] = 0x02
00068B: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
00068C: 568E  		JMP		$+2
00068D: 5062  		JMP	INS_FAIL
00068E: 601A  	MOV		A,@0x1A
00068F: 015A  	MOV		INST,A
000690: 6000  	MOV		A,@0x00
000691: 0103  	MOV		STATUS,A
000692: 6001  		MOV		A,@0x01
000693: 0150  		MOV		0x50,A		; [0x50] = 0x01
000694: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
000695: 5062  		JMP	INS_FAIL
000696: 1050  		MOV		A,0x50
000697: 6C00  		XOR		A,@0x00		; Check Result ?
000698: 3A03  		JBS		Z			; Check Z = 1?
000699: 5062  		JMP	INS_FAIL
00069A: 3603  		JBC		N			; Check N = 0?
00069B: 5062  		JMP	INS_FAIL
00069C: 6000  	MOV		A,@0x00
00069D: 0103  	MOV		STATUS,A
00069E: 6002  		MOV		A,@0x02
00069F: 0150  		MOV		0x50,A		; [0x50] = 0x02
0006A0: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006A1: 56A3  		JMP		$+2
0006A2: 5062  		JMP	INS_FAIL
0006A3: 6021  	MOV		A,@0x21
0006A4: 015A  	MOV		INST,A
0006A5: 6000  	MOV		A,@0x00
0006A6: 0103  	MOV		STATUS,A
0006A7: 60FF  		MOV		A,@0xFF
0006A8: 0150  		MOV		0x50,A
0006A9: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0006AA: 5062  		JMP		INS_FAIL
0006AB: 6C00  		XOR		A,@0x00		; Check Result ?
0006AC: 3A03  		JBS		Z			; Check Z = 1?
0006AD: 5062  		JMP	INS_FAIL
0006AE: 3603  		JBC		N			; Check N = 0?
0006AF: 5062  		JMP	INS_FAIL
0006B0: 6000  	MOV		A,@0x00
0006B1: 0103  	MOV		STATUS,A
0006B2: 6080  		MOV		A,@0x80
0006B3: 0150  		MOV		0x50,A
0006B4: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0006B5: 56B7  		JMP		$+2
0006B6: 5062  		JMP		INS_FAIL
0006B7: 6022  	MOV		A,@0x22
0006B8: 015A  	MOV		INST,A
0006B9: 6000  	MOV		A,@0x00
0006BA: 0103  	MOV		STATUS,A
0006BB: 60FF  		MOV		A,@0xFF
0006BC: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006BD: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006BE: 5062  		JMP		INS_FAIL
0006BF: 1050  		MOV		A,0x50
0006C0: 6C00  		XOR		A,@0x00		; Check Result ?
0006C1: 3A03  		JBS		Z			; Check Z = 1?
0006C2: 5062  		JMP	INS_FAIL
0006C3: 3603  		JBC		N			; Check N = 0?
0006C4: 5062  		JMP	INS_FAIL
0006C5: 6000  	MOV		A,@0x00
0006C6: 0103  	MOV		STATUS,A
0006C7: 6080  		MOV		A,@0x80
0006C8: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006C9: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006CA: 56CC  		JMP		$+2
0006CB: 5062  		JMP		INS_FAIL
0006CC: 6023  	MOV		A,@0x23
0006CD: 015A  	MOV		INST,A
0006CE: 6000  	MOV		A,@0x00
0006CF: 0103  	MOV		STATUS,A
0006D0: 605A  		MOV		A,@0x5A
0006D1: 0150  		MOV		0x50,A		; [0x50] = 0x5A
0006D2: 6150  		JE		0x50		; [0x50] = A?
0006D3: 5062  		JMP		INS_FAIL
0006D4: 605B  		MOV		A,@0x5B
0006D5: 0150  		MOV		0x50,A		; [0x50] = 0x5B
0006D6: 605C  		MOV		A,@0x5C
0006D7: 6150  		JE		0x50		; [0x50] = A(0x5C)?
0006D8: 56DA  		JMP		$+2
0006D9: 5062  		JMP		INS_FAIL
0006DA: 6024  	MOV		A,@0x24
0006DB: 015A  	MOV		INST,A
0006DC: 6000  	MOV		A,@0x00
0006DD: 0103  	MOV		STATUS,A
0006DE: 607F  		MOV		A,@0x7F
0006DF: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0006E0: 6000  		MOV		A,@0x00
0006E1: 6250  		JGE		0x50		; [0x50] > A ?
0006E2: 5062  		JMP		INS_FAIL
0006E3: 6000  	MOV		A,@0x00
0006E4: 0103  	MOV		STATUS,A
0006E5: 60FF  		MOV		A,@0xFF
0006E6: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006E7: 6080  		MOV		A,@0x80
0006E8: 6250  		JGE		0x50		; [0x50] > A ?
0006E9: 5062  		JMP		INS_FAIL
0006EA: 6000  	MOV		A,@0x00
0006EB: 0103  	MOV		STATUS,A
0006EC: 6000  		MOV		A,@0x00
0006ED: 0150  		MOV		0x50,A		; [0x50] = 0x00
0006EE: 60FF  		MOV		A,@0xFF
0006EF: 6250  		JGE		0x50		; [0x50] > A(0xFF) ?x
0006F0: 56F2  		JMP		$+2
0006F1: 5062  		JMP		INS_FAIL
0006F2: 6025  	MOV		A,@0x25
0006F3: 015A  	MOV		INST,A
0006F4: 6000  	MOV		A,@0x00
0006F5: 0103  	MOV		STATUS,A
0006F6: 6000  		MOV		A,@0x00
0006F7: 0150  		MOV		0x50,A		; [0x50] = 0x00
0006F8: 607F  		MOV		A,@0x7F
0006F9: 6350  		JLE		0x50		; [0x50] < A ?
0006FA: 5062  		JMP		INS_FAIL
0006FB: 6000  	MOV		A,@0x00
0006FC: 0103  	MOV		STATUS,A
0006FD: 6080  		MOV		A,@0x80
0006FE: 0150  		MOV		0x50,A		; [0x50] = 0x80
0006FF: 60FF  		MOV		A,@0xFF
000700: 6350  		JLE		0x50		; [0x50] < A ?
000701: 5062  		JMP		INS_FAIL
000702: 6000  	MOV		A,@0x00
000703: 0103  	MOV		STATUS,A
000704: 60FF  		MOV		A,@0xFF
000705: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000706: 6000  		MOV		A,@0x00
000707: 6350  		JLE		0x50		; [0x50] < A(0x00) ?x
000708: 570A  		JMP		$+2
000709: 5062  		JMP		INS_FAIL
00070A: 6027  	MOV		A,@0x27
00070B: 015A  	MOV		INST,A
00070C: 6000  	MOV		A,@0x00
00070D: 0103  	MOV		STATUS,A
00070E: 607F  		MOV		A,@0x7F
00070F: 657F  		JE		@0x7F
000710: 5062  		JMP	INS_FAIL
000711: 6036  	MOV		A,@0x36
000712: 015A  	MOV		INST,A
000713: 6000  	MOV		A,@0x00
000714: 0103  	MOV		STATUS,A
000715: 2803  		BS		C
000716: 607F  		MOV		A,@0x7F
000717: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000718: 6000  		MOV		A,@0x00		; A = 0x00
000719: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
00071A: 3003  		JBC		C			; Check C = 0?
00071B: 5062  		JMP	INS_FAIL
00071C: 3903  		JBS		DC			; Check DC = 1?
00071D: 5062  		JMP	INS_FAIL
00071E: 3203  		JBC		Z			; Check Z = 0?
00071F: 5062  		JMP	INS_FAIL
000720: 3D03  		JBS		OV			; Check OV = 1?
000721: 5062  		JMP	INS_FAIL
000722: 3E03  		JBS		N			; Check N = 1?
000723: 5062  		JMP	INS_FAIL
000724: 6C80  		XOR		A,@0x80		; Check Result ?
000725: 3A03  		JBS		Z			; Check Z = 1?
000726: 5062  		JMP	INS_FAIL
000727: 3603  		JBC		N			; Check N = 0?
000728: 5062  		JMP	INS_FAIL
000729: 6000  	MOV		A,@0x00
00072A: 0103  	MOV		STATUS,A
00072B: 2803  		BS		C
00072C: 6080  		MOV		A,@0x80
00072D: 0150  		MOV		0x50,A		; [0x50] = 0x80
00072E: 607F  		MOV		A,@0x7F		; A = 0x7F
00072F: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
000730: 3803  		JBS		C			; Check C = 1?
000731: 5062  		JMP	INS_FAIL
000732: 3903  		JBS		DC			; Check DC = 1?
000733: 5062  		JMP	INS_FAIL
000734: 3A03  		JBS		Z			; Check Z = 1?
000735: 5062  		JMP	INS_FAIL
000736: 3503  		JBC		OV			; Check OV = 0?
000737: 5062  		JMP	INS_FAIL
000738: 3603  		JBC		N			; Check N = 0?
000739: 5062  		JMP	INS_FAIL
00073A: 6C00  		XOR		A,@0x00		; Check Result ?
00073B: 3A03  		JBS		Z			; Check Z = 1?
00073C: 5062  		JMP	INS_FAIL
00073D: 3603  		JBC		N			; Check N = 0?
00073E: 5062  		JMP	INS_FAIL
00073F: 6037  	MOV		A,@0x37
000740: 015A  	MOV		INST,A
000741: 6000  	MOV		A,@0x00
000742: 0103  	MOV		STATUS,A
000743: 2803  		BS		C
000744: 607F  		MOV		A,@0x7F
000745: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000746: 6000  		MOV		A,@0x00		; A = 0x00
000747: 2203  		BC		Z
000748: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
000749: 1003  		MOV		A,STATUS
00074A: 6C7A  		XOR		A,@0x7A		; Check Status ?
00074B: 3A03  		JBS		Z			; Check Z = 1?
00074C: 5062  		JMP	INS_FAIL
00074D: 3603  		JBC		N			; Check N = 0?
00074E: 5062  		JMP	INS_FAIL
00074F: 1050  		MOV		A,0x50
000750: 6C80  		XOR		A,@0x80		; Check Result ?
000751: 3A03  		JBS		Z			; Check Z = 1?
000752: 5062  		JMP	INS_FAIL
000753: 3603  		JBC		N			; Check N = 0?
000754: 5062  		JMP	INS_FAIL
000755: 6000  	MOV		A,@0x00
000756: 0103  	MOV		STATUS,A
000757: 2803  		BS		C
000758: 6080  		MOV		A,@0x80
000759: 0150  		MOV		0x50,A		; [0x50] = 0x80
00075A: 607F  		MOV		A,@0x7F		; A = 0x7F
00075B: 2203  		BC		Z
00075C: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
00075D: 1003  		MOV		A,STATUS
00075E: 6C1F  		XOR		A,@0x1F		; Check Status ?
00075F: 3A03  		JBS		Z			; Check Z = 1?
000760: 5062  		JMP	INS_FAIL
000761: 3603  		JBC		N			; Check N = 0?
000762: 5062  		JMP	INS_FAIL
000763: 1050  		MOV		A,0x50
000764: 6C00  		XOR		A,@0x00		; Check Result ?
000765: 3A03  		JBS		Z			; Check Z = 1?
000766: 5062  		JMP	INS_FAIL
000767: 3603  		JBC		N			; Check N = 0?
000768: 5062  		JMP	INS_FAIL
000769: 0000  		NOP
00076A: 0000  		NOP
00076B: 0000  		NOP
00076C: 0000  		NOP
00076D: 6000  	MOV		A,@0x00
00076E: 0103  	MOV		STATUS,A
00076F: 2803  		BS	C
000770: 6903  		SJC		@0x03
000771: 505E  		JMP	JMP_FAIL
000772: 505E  		JMP	JMP_FAIL
000773: 505E  		JMP	JMP_FAIL
000774: 2003  		BC	C
000775: 6A03  		SJNC	bbb
000776: 505E  		JMP	JMP_FAIL
000777: 505E  		JMP	JMP_FAIL
000778: 505E  		JMP	JMP_FAIL
000779: 2A03  		BS	Z
00077A: 6B03  		SJZ		@0x03
00077B: 505E  		JMP	JMP_FAIL
00077C: 505E  		JMP	JMP_FAIL
00077D: 505E  		JMP	JMP_FAIL
00077E: 0200  		CLRA
00077F: 6B03  		SJZ		@0x03
000780: 505E  		JMP	JMP_FAIL
000781: 505E  		JMP	JMP_FAIL
000782: 505E  		JMP	JMP_FAIL
000783: 578B  		JMP	IATEST1
000784: 5798  		JMP	IATEST2		; -9
000785: 505E  		JMP	JMP_FAIL	; -8
000786: 505E  		JMP	JMP_FAIL	; -7
000787: 505E  		JMP	JMP_FAIL	; -6
000788: 505E  		JMP	JMP_FAIL	; -5
000789: 505E  		JMP	JMP_FAIL	; -4
00078A: 505E  		JMP	JMP_FAIL	; -3
00078B: 2803  		BS		C		; -2
00078C: 69F7  		SJC		aaa		; -1
00078D: 69F7  		SJC		@0xF7	; -1
00078E: 505E  		JMP	JMP_FAIL
00078F: 505E  		JMP	JMP_FAIL
000790: 505E  		JMP	JMP_FAIL
000791: 57A4  		JMP	IATEST3		; -9
000792: 505E  		JMP	JMP_FAIL	; -8
000793: 505E  		JMP	JMP_FAIL	; -7
000794: 505E  		JMP	JMP_FAIL	; -6
000795: 505E  		JMP	JMP_FAIL	; -5
000796: 505E  		JMP	JMP_FAIL	; -4
000797: 505E  		JMP	JMP_FAIL	; -3
000798: 2003  		BC		C		; -2
000799: 6AF7  		SJNC		@0xF7	; -1
00079A: 57B5  		JMP	_IPass
00079B: 57B5  		JMP	_IPass
00079C: 57B5  		JMP	_IPass
00079D: 57B0  		JMP	IATEST4		; -9
00079E: 505E  		JMP	JMP_FAIL	; -8
00079F: 505E  		JMP	JMP_FAIL	; -7
0007A0: 505E  		JMP	JMP_FAIL	; -6
0007A1: 505E  		JMP	JMP_FAIL	; -5
0007A2: 505E  		JMP	JMP_FAIL	; -4
0007A3: 505E  		JMP	JMP_FAIL	; -3
0007A4: 2A03  		BS		Z		; -2
0007A5: 6BF7  		SJZ		@0xF7	; -1
0007A6: 505E  		JMP	JMP_FAIL
0007A7: 505E  		JMP	JMP_FAIL
0007A8: 505E  		JMP	JMP_FAIL
0007A9: 57B5  		JMP	_IPass		; -9
0007AA: 505E  		JMP	JMP_FAIL	; -8
0007AB: 505E  		JMP	JMP_FAIL	; -7
0007AC: 505E  		JMP	JMP_FAIL	; -6
0007AD: 505E  		JMP	JMP_FAIL	; -5
0007AE: 505E  		JMP	JMP_FAIL	; -4
0007AF: 505E  		JMP	JMP_FAIL	; -3
0007B0: 2203  		BC		Z		; -2
0007B1: 6DF7  		SJNZ	@0xF7	; -1
0007B2: 505E  		JMP	JMP_FAIL
0007B3: 505E  		JMP	JMP_FAIL
0007B4: 505E  		JMP	JMP_FAIL
0007B5: 0000  		NOP
0007B6: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
0007B7: 0104  		MOV		RSR,A
0007B8: 7A40  		GBANK	0
0007B9: 6055  		MOV		A,@0x55
0007BA: 0100  		MOV		IAR,A
0007BB: 1504  		INC		RSR
0007BC: 6000  		MOV		A,@0x00
0007BD: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007BE: 3A03  		JBS		Z
0007BF: 57B9  		JMP		$-6
0007C0: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
0007C1: 0104  		MOV		RSR,A
0007C2: 7A40  		GBANK	0
0007C3: 6055  		MOV		A,@0x55
0007C4: 0D00  		XOR		IAR,A
0007C5: 3A03  		JBS		Z
0007C6: 1504  		INC		RSR
0007C7: 6000  		MOV		A,@0x00
0007C8: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007C9: 3A03  		JBS		Z
0007CA: 57C2  		JMP		$-8
0007CB: 0012  		RET
0007CC: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
0007CD: 0104  		MOV		RSR,A
0007CE: 7A40  		GBANK	0
0007CF: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
0007D0: 0100  		MOV		IAR,A
0007D1: 1504  		INC		RSR
0007D2: 6000  		MOV		A,@0x00
0007D3: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007D4: 3A03  		JBS		Z
0007D5: 57CF  		JMP		$-6
0007D6: 6080  		MOV		A,@0x80
0007D7: 0104  		MOV		RSR,A
0007D8: 7A40  		GBANK	0
0007D9: 60AA  		MOV		A,@0xAA
0007DA: 0D00  		XOR		IAR,A
0007DB: 3A03  		JBS		Z
0007DC: 5060  		JMP		RAM_FAIL
0007DD: 1504  		INC		RSR
0007DE: 6000  		MOV		A,@0x00
0007DF: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007E0: 3A03  		JBS		Z
0007E1: 57D9  		JMP		$-8
0007E2: 0012  		RET
0007E3: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
0007E4: 0104  		MOV		RSR,A
0007E5: 7A41  		GBANK	1
0007E6: 6033  		MOV		A,@0x33		; SRAM(0x33)
0007E7: 0100  		MOV		IAR,A
0007E8: 1504  		INC		RSR
0007E9: 6000  		MOV		A,@0x00
0007EA: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007EB: 3A03  		JBS		Z
0007EC: 57E6  		JMP		$-6
0007ED: 6080  		MOV		A,@0x80
0007EE: 0104  		MOV		RSR,A
0007EF: 7A41  		GBANK	1
0007F0: 6033  		MOV		A,@0x33
0007F1: 0D00  		XOR		IAR,A
0007F2: 3A03  		JBS		Z
0007F3: 5060  		JMP		RAM_FAIL
0007F4: 1504  		INC		RSR
0007F5: 6000  		MOV		A,@0x00
0007F6: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
0007F7: 3A03  		JBS		Z
0007F8: 57F0  		JMP		$-8
0007F9: 0012  		RET
0007FA: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
0007FB: 0104  		MOV		RSR,A
0007FC: 7A41  		GBANK	1
0007FD: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
0007FE: 0100  		MOV		IAR,A
0007FF: 1504  		INC		RSR
000800: 6000  		MOV		A,@0x00
000801: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
000802: 3A03  		JBS		Z
000803: 57FD  		JMP		$-6
000804: 6080  		MOV		A,@0x80
000805: 0104  		MOV		RSR,A
000806: 7A41  		GBANK	1
000807: 60CC  		MOV		A,@0xCC
000808: 0D00  		XOR		IAR,A
000809: 3A03  		JBS		Z
00080A: 5060  		JMP		RAM_FAIL
00080B: 1504  		INC		RSR
00080C: 6000  		MOV		A,@0x00
00080D: 0D04  		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
00080E: 3A03  		JBS		Z
00080F: 5807  		JMP		$-8
000810: 0012  		RET
