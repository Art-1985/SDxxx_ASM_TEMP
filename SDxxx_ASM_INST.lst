     1                     ;============================================================
     2                     ;	Project:		SD028_ASM_TEMP
     3                     ;	FILE:			SD028_ASM_TEMP.asm
     4                     ;  	Target:  		SD028
     5                     ;	Author:			Arthur (Lu Hungche)
     6                     ;	Date:			2020/03/11
     7                     ;------------------------------------------------------------
     8                     ;	Description:	For SD028 Instruction and EFT Verify
     9                     ;	Active-Low: P50(Red-PWR)、P51(Yel-PUSH)、
    10                     ;					
    11                     ;------------------------------------------------------------
    12                     ; History:
    13                     ; Ver  | dd-mmm-yyyy |  Who  | Description of changes
    14                     ; =====|=============|=======|===============================
    15                     ;  0.1 | 11 Mat 2020 |Arthur | Original Release.
    16                     ; -----|-------------|-------|-------------------------------
    17                     ;  0.2 |
    18                     ; -----|-------------|-------|-------------------------------
    19                     ;============================================================
    20                     
    21                     ;==================== Project Include ====================
    22                     INCLUDE		"SDxxx_DEV_TAR.h"
     1            C        ;;=========================================================================
     2            C        ;;	FILE:			SDxxx_DEV_TAR.h
     3            C        ;;	Author:			ELAN SRD Arthur (Lu Hungche)
     4            C        ;;	Date:			2020/09/15
     5            C        ;;-------------------------------------------------------------------------
     6            C        ;;	Description:	SDxxx Device Definitions
     7            C        ;;
     8            C        ;;-------------------------------------------------------------------------
     9            C        ;; History:
    10            C        ;; Ver  | dd-mmm-yyyy |  Who  | Description of changes
    11            C        ;; =====|=============|=======|============================================
    12            C        ;;  0.1 | 02 Sep 2020 | Arthur| Original Release.
    13            C        ;; -----|-------------|-------|--------------------------------------------
    14            C        ;;	0.2 |
    15            C        ;; -----|-------------|-------|--------------------------------------------
    16            C        ;;
    17            C        ;; -----|-------------|-------|--------------------------------------------
    18            C        ;;=========================================================================
    19            C        
    20            C        ;;====== Select Target Device ===========================================;;
    21       0002 C        TARGET	VAR	2
    22            C        
    23            C        IF	(TARGET == 1)
    24            C        	INCLUDE	"SD062.INC"
    25            C        ELSEIF(TARGET == 2)
    26            C        	INCLUDE	"SD028.INC"
     1            C        ;===========================================================================;
     2            C        ;  Title:       SD028 Include File                                          ;
     3            C        ;  Target MCU:  SD028                                                       ;
     4            C        ;  Description: The Definition of SD028 Registers                           ;
     5            C        ;  Company:     ELAN MICROELECTRONICS LTD.	                            	;
     6            C        ;  Date:        2020/02/20                                                  ;
     7            C        ;  Version:     v0.9                                                        ;
     8            C        ;===========================================================================;
     9            C        
    10            C        ;======================================================;
    11            C        ; Operational Registers Define                         ;
    12            C        ;======================================================;
    13       0000 C            BIT0    ==  0
    14       0001 C            BIT1    ==  1
    15       0002 C            BIT2    ==  2
    16       0003 C            BIT3    ==  3
    17       0004 C            BIT4    ==  4
    18       0005 C            BIT5    ==  5
    19       0006 C            BIT6    ==  6
    20       0007 C            BIT7    ==  7
    21            C        ;======================================================;
    22            C        ; Registers R0~R4                                      ;
    23            C        ;======================================================;
    24            C        ; R0/IAR: Indirect Address Register
    25       2000 C            R0      ==  0x00:rpage 0
    25 00000 0010 C            R0      ==  0x00:rpage 0
    26       2000 C            IAR     ==  0x00:rpage 0
    26 00000 0010 C            IAR     ==  0x00:rpage 0
    27            C        ;R1/ BSR: Bank Selection Control Register
    28       2001 C            R1      ==  0x01:rpage 0
    28 00000 0010 C            R1      ==  0x01:rpage 0
    29       2001 C            BSR     ==  0x01:rpage 0
    29 00000 0010 C            BSR     ==  0x01:rpage 0
    30       2001 C                SBS1  ==  BSR.5
    30 00000 0540 C                SBS1  ==  BSR.5
    31       2001 C                SBS0  ==  BSR.4
    31 00000 0440 C                SBS0  ==  BSR.4
    32       2001 C                GBS1  ==  BSR.1
    32 00000 0140 C                GBS1  ==  BSR.1
    33       2001 C                GBS0  ==  BSR.0
    33 00000 0040 C                GBS0  ==  BSR.0
    34            C        ; R2/PC: Program Counter & Stack
    35       2002 C            R2      ==  0x02:rpage 0
    35 00000 0010 C            R2      ==  0x02:rpage 0
    36       2002 C            PCL     ==  0x02:rpage 0
    36 00000 0010 C            PCL     ==  0x02:rpage 0
    37            C        
    38            C        ;R3/SW:Status Register
    39       2003 C            R3      ==  0x03:rpage 0
    39 00000 0010 C            R3      ==  0x03:rpage 0
    40       2003 C            STATUS  ==  0x03:rpage 0
    40 00000 0010 C            STATUS  ==  0x03:rpage 0
    41       2003 C            SR      ==  0x03:rpage 0
    41 00000 0010 C            SR      ==  0x03:rpage 0
    42       2003 C                IT	    == SR.7
    42 00000 0740 C                IT	    == SR.7
    43       2003 C                N       == SR.6
    43 00000 0640 C                N       == SR.6
    44       2003 C                OV      == SR.5
    44 00000 0540 C                OV      == SR.5
    45       2003 C                T       == SR.4
    45 00000 0440 C                T       == SR.4
    46       2003 C                P       == SR.3
    46 00000 0340 C                P       == SR.3
    47       2003 C                Z       == SR.2
    47 00000 0240 C                Z       == SR.2
    48       2003 C                DC      == SR.1
    48 00000 0140 C                DC      == SR.1
    49       2003 C                C       == SR.0
    49 00000 0040 C                C       == SR.0
    50            C        ;R4/ RSR:RAM Select Register
    51       2004 C            R4          == 0x04:rpage 0
    51 00000 0010 C            R4          == 0x04:rpage 0
    52       2004 C            RSR         == 0x04:rpage 0
    52 00000 0010 C            RSR         == 0x04:rpage 0
    53            C        
    54            C        ;======================================================;
    55            C        ; BANK 0                                               ;
    56            C        ; Registers R5~R4F                                     ;
    57            C        ;======================================================;
    58            C        ;R5/PORT5 :IO PORT 5 Data Register
    59       2005 C            PORT5   ==  0x05:rpage 0
    59 00000 0010 C            PORT5   ==  0x05:rpage 0
    60       2005 C            P5      ==  0x05:rpage 0
    60 00000 0010 C            P5      ==  0x05:rpage 0
    61       2005 C                P50     == PORT5.0
    61 00000 0040 C                P50     == PORT5.0
    62       2005 C                P51     == PORT5.1
    62 00000 0140 C                P51     == PORT5.1
    63       2005 C                P52     == PORT5.2
    63 00000 0240 C                P52     == PORT5.2
    64       2005 C                P53     == PORT5.3
    64 00000 0340 C                P53     == PORT5.3
    65       2005 C                P54     == PORT5.4
    65 00000 0440 C                P54     == PORT5.4
    66       2005 C                P55     == PORT5.5
    66 00000 0540 C                P55     == PORT5.5
    67       2005 C                P56     == PORT5.6
    67 00000 0640 C                P56     == PORT5.6
    68       2005 C                P57     == PORT5.7
    68 00000 0740 C                P57     == PORT5.7
    69            C        ;RB/IOCR5 :IO PORT 5 Control Register
    70       200B C            IOCR5   ==  0x0B:rpage 0
    70 00000 0010 C            IOCR5   ==  0x0B:rpage 0
    71            C        ;RE/OMCR :OMCR:Operating Mode Control Register
    72       200E C            OMCR    ==  0x0E:rpage 0
    72 00000 0010 C            OMCR    ==  0x0E:rpage 0
    73       200E C                CPUS    == OMCR.7
    73 00000 0740 C                CPUS    == OMCR.7
    74       200E C                IDLE    == OMCR.6
    74 00000 0640 C                IDLE    == OMCR.6
    75       200E C                PERCS   == OMCR.5
    75 00000 0540 C                PERCS   == OMCR.5
    76       200E C                IIPS    == OMCR.4
    76 00000 0440 C                IIPS    == OMCR.4
    77       200E C                FMSF    == OMCR.3
    77 00000 0340 C                FMSF    == OMCR.3
    78       200E C        	    RCM1    == OMCR.1
    78 00000 0140 C        	    RCM1    == OMCR.1
    79       200E C                RCM0    == OMCR.0
    79 00000 0040 C                RCM0    == OMCR.0
    80            C        ;RF/EIESCR :External Interrupt Edge Select Control Register
    81       200F C            EIESCR  ==  0x0F:rpage 0
    81 00000 0010 C            EIESCR  ==  0x0F:rpage 0
    82       200F C                EI1ES1  == EIESCR.3
    82 00000 0340 C                EI1ES1  == EIESCR.3
    83       200F C        	    EI1ES0  == EIESCR.2
    83 00000 0240 C        	    EI1ES0  == EIESCR.2
    84       200F C        	    EI0ES1  == EIESCR.1
    84 00000 0140 C        	    EI0ES1  == EIESCR.1
    85       200F C        	    EI0ES0  == EIESCR.0
    85 00000 0040 C        	    EI0ES0  == EIESCR.0
    86            C        ;R10/WUCR1 :Wake-up Control Register1
    87       2010 C            WUCR1   ==  0x10:rpage 0
    87 00000 0010 C            WUCR1   ==  0x10:rpage 0
    88       2010 C                CMP2WK	== WUCR1.7
    88 00000 0740 C                CMP2WK	== WUCR1.7
    89       2010 C        	    CMP1WK	== WUCR1.6
    89 00000 0640 C        	    CMP1WK	== WUCR1.6
    90       2010 C        	    ADWK    == WUCR1.4
    90 00000 0440 C        	    ADWK    == WUCR1.4
    91       2010 C                INT1WK  == WUCR1.3
    91 00000 0340 C                INT1WK  == WUCR1.3
    92       2010 C                INT0WK  == WUCR1.2
    92 00000 0240 C                INT0WK  == WUCR1.2
    93       2010 C                IGWK    == WUCR1.0
    93 00000 0040 C                IGWK    == WUCR1.0
    94            C        ;R11/WUCR2 :Wake-up Control Register2
    95       2011 C            WUCR2   == 0x11:rpage 0
    95 00000 0010 C            WUCR2   == 0x11:rpage 0
    96       2011 C                CMP3WK	== WUCR2.6
    96 00000 0640 C                CMP3WK	== WUCR2.6
    97       2011 C                URWK	== WUCR2.4
    97 00000 0440 C                URWK	== WUCR2.4
    98            C        ;R12/WUCR3 :Wake-up Control Register3
    99       2012 C            WUCR3   ==  0x12:rpage 0
    99 00000 0010 C            WUCR3   ==  0x12:rpage 0
   100       2012 C                ICWKP5  == WUCR3.4
   100 00000 0440 C                ICWKP5  == WUCR3.4
   101            C        ;R13/SYSCON :
   102       2013 C            SYSCON  == 0x13:rpage 0
   102 00000 0010 C            SYSCON  == 0x13:rpage 0
   103       2013 C                LDOI    ==  SYSCON.7
   103 00000 0740 C                LDOI    ==  SYSCON.7
   104            C        ;R14/SFR1 :Status Flag Register 1
   105       2014 C            SFR1    == 0x14:rpage 0
   105 00000 0010 C            SFR1    == 0x14:rpage 0
   106       2014 C                CMP2SF  == SFR1.7
   106 00000 0740 C                CMP2SF  == SFR1.7
   107       2014 C        	    CMP1SF  == SFR1.6
   107 00000 0640 C        	    CMP1SF  == SFR1.6
   108       2014 C        	    ADSF    == SFR1.4
   108 00000 0440 C        	    ADSF    == SFR1.4
   109       2014 C                EXSF1   == SFR1.3
   109 00000 0340 C                EXSF1   == SFR1.3
   110       2014 C                EXSF0   == SFR1.2
   110 00000 0240 C                EXSF0   == SFR1.2
   111            C        ;R15/SFR2 :Status Flag Register2
   112       2015 C            SFR2    == 0x15:rpage 0
   112 00000 0010 C            SFR2    == 0x15:rpage 0
   113       2015 C        	    CMP3SF  == SFR2.6
   113 00000 0640 C        	    CMP3SF  == SFR2.6
   114       2015 C                UERRSF  == SFR2.5
   114 00000 0540 C                UERRSF  == SFR2.5
   115       2015 C                URSF    == SFR2.4
   115 00000 0440 C                URSF    == SFR2.4
   116       2015 C                UTSF    == SFR2.3
   116 00000 0340 C                UTSF    == SFR2.3
   117            C        
   118            C        ;R17/SFR4 :Status Flag Register4
   119       2017 C            SFR4    == 0x17:rpage 0
   119 00000 0010 C            SFR4    == 0x17:rpage 0
   120       2017 C                P5ICSF  == SFR4.4
   120 00000 0440 C                P5ICSF  == SFR4.4
   121            C        
   122            C        ;R19/SFR6 :Status Flag Register6
   123       2019 C            SFR6    ==  0x19:rpage 0
   123 00000 0010 C            SFR6    ==  0x19:rpage 0
   124       2019 C                SHSF    == SFR6.7
   124 00000 0740 C                SHSF    == SFR6.7
   125            C        ;R1A/SFR7 :Status Flag Register7
   126       201A C            SFR7        == 0x1A:rpage 0
   126 00000 0010 C            SFR7        == 0x1A:rpage 0
   127       201A C                IGSF    == SFR7.7
   127 00000 0740 C                IGSF    == SFR7.7
   128       201A C                TXDSF   == SFR7.6
   128 00000 0640 C                TXDSF   == SFR7.6
   129       201A C                TXCSF   == SFR7.5
   129 00000 0540 C                TXCSF   == SFR7.5
   130       201A C                TM2DASF == SFR7.4
   130 00000 0440 C                TM2DASF == SFR7.4
   131       201A C                TM1DASF == SFR7.3
   131 00000 0340 C                TM1DASF == SFR7.3
   132       201A C                TM1OFSF == SFR7.2
   132 00000 0240 C                TM1OFSF == SFR7.2
   133       201A C                TM2DBSF == SFR7.1
   133 00000 0140 C                TM2DBSF == SFR7.1
   134       201A C                TM1DBSF == SFR7.0
   134 00000 0040 C                TM1DBSF == SFR7.0
   135            C        ;R1B/IMR1 :Interrupt Mask Register 1
   136       201B C            IMR1        == 0x1B:rpage 0
   136 00000 0010 C            IMR1        == 0x1B:rpage 0
   137       201B C                CMP2IE  == IMR1.7
   137 00000 0740 C                CMP2IE  == IMR1.7
   138       201B C        	    CMP1IE  == IMR1.6
   138 00000 0640 C        	    CMP1IE  == IMR1.6
   139       201B C        	    ADIE    == IMR1.4
   139 00000 0440 C        	    ADIE    == IMR1.4
   140       201B C                EXIE1   == IMR1.3
   140 00000 0340 C                EXIE1   == IMR1.3
   141       201B C                EXIE0   == IMR1.2
   141 00000 0240 C                EXIE0   == IMR1.2
   142            C        ;RF/IMR2 :Interrupt Mask Register 2
   143       201C C            IMR2        == 0x1C:rpage 0
   143 00000 0010 C            IMR2        == 0x1C:rpage 0
   144       201C C                CMP3IE  == IMR2.6
   144 00000 0640 C                CMP3IE  == IMR2.6
   145       201C C                UERRIE  == IMR2.5
   145 00000 0540 C                UERRIE  == IMR2.5
   146       201C C                URIE    == IMR2.4
   146 00000 0440 C                URIE    == IMR2.4
   147       201C C                UTIE    == IMR2.3
   147 00000 0340 C                UTIE    == IMR2.3
   148            C        
   149            C        ;R1E/IMR4 :Interrupt Mask Register 4
   150       201E C            IMR4        ==  0x1E:rpage 0
   150 00000 0010 C            IMR4        ==  0x1E:rpage 0
   151       201E C                P5ICIE  ==  IMR4.4
   151 00000 0440 C                P5ICIE  ==  IMR4.4
   152            C        
   153            C        ;R20/IMR6 :Interrupt Mask Register 6
   154       2020 C            IMR6        == 0x20:rpage 0
   154 00000 0010 C            IMR6        == 0x20:rpage 0
   155       2020 C                SHIE    == IMR6.7
   155 00000 0740 C                SHIE    == IMR6.7
   156       2020 C                IGIE    == IMR6.3
   156 00000 0340 C                IGIE    == IMR6.3
   157       2020 C                TXTMIE  == IMR6.2
   157 00000 0240 C                TXTMIE  == IMR6.2
   158       2020 C                TM2IE   == IMR6.1
   158 00000 0140 C                TM2IE   == IMR6.1
   159       2020 C                TM1IE   == IMR6.0
   159 00000 0040 C                TM1IE   == IMR6.0
   160            C        ;R21/WDTCR :Watch Dog Timer Control Register
   161       2021 C            WDTCR       == 0x21:rpage 0
   161 00000 0010 C            WDTCR       == 0x21:rpage 0
   162       2021 C                WDTE    == WDTCR.7
   162 00000 0740 C                WDTE    == WDTCR.7
   163       2021 C                FSSF    == WDTCR.6
   163 00000 0640 C                FSSF    == WDTCR.6
   164       2021 C                PSWE    == WDTCR.3
   164 00000 0340 C                PSWE    == WDTCR.3
   165       2021 C                WPSR2   == WDTCR.2
   165 00000 0240 C                WPSR2   == WDTCR.2
   166       2021 C                WPSR1   == WDTCR.1
   166 00000 0140 C                WPSR1   == WDTCR.1
   167       2021 C                WPSR0   == WDTCR.0
   167 00000 0040 C                WPSR0   == WDTCR.0
   168            C        ;R3E/ADCR1 :ADC Control Register1
   169       203E C            ADCR1       == 0x3E:rpage 0
   169 00000 0010 C            ADCR1       == 0x3E:rpage 0
   170       203E C                CKR1    == ADCR1.6
   170 00000 0640 C                CKR1    == ADCR1.6
   171       203E C                CKR0    == ADCR1.5
   171 00000 0540 C                CKR0    == ADCR1.5
   172       203E C                ADRUN   == ADCR1.4
   172 00000 0440 C                ADRUN   == ADCR1.4
   173       203E C                ADP     == ADCR1.3
   173 00000 0340 C                ADP     == ADCR1.3
   174       203E C                ADOM    == ADCR1.2
   174 00000 0240 C                ADOM    == ADCR1.2
   175       203E C                SHS1    == ADCR1.1
   175 00000 0140 C                SHS1    == ADCR1.1
   176       203E C                SHS0    == ADCR1.0
   176 00000 0040 C                SHS0    == ADCR1.0
   177            C        ;R3F/ADCR2 :ADC Control Register2
   178       203F C            ADCR2       == 0x3F:rpage 0
   178 00000 0010 C            ADCR2       == 0x3F:rpage 0
   179       203F C                ADLPFEN == ADCR2.7
   179 00000 0740 C                ADLPFEN == ADCR2.7
   180       203F C                ADIM    == ADCR2.5
   180 00000 0540 C                ADIM    == ADCR2.5
   181       203F C                ADCMS   == ADCR2.4
   181 00000 0440 C                ADCMS   == ADCR2.4
   182       203F C                VPIS1   == ADCR2.3
   182 00000 0340 C                VPIS1   == ADCR2.3
   183       203F C                VPIS0   == ADCR2.2
   183 00000 0240 C                VPIS0   == ADCR2.2
   184       203F C                VREFP   == ADCR2.1
   184 00000 0140 C                VREFP   == ADCR2.1
   185            C        ;R40/ADISR :Analog to Digital Converter Input Channel Selection Register
   186       2040 C            ADISR       == 0x40:rpage 0
   186 00000 0010 C            ADISR       == 0x40:rpage 0
   187       2040 C                ADIS1   == ADISR.1
   187 00000 0140 C                ADIS1   == ADISR.1
   188       2040 C                ADIS0   == ADISR.0
   188 00000 0040 C                ADIS0   == ADISR.0
   189            C        ;R41/ADER1 :ADC Input Enable Register
   190       2041 C            ADER1       == 0x41:rpage 0
   190 00000 0010 C            ADER1       == 0x41:rpage 0
   191       2041 C                ADE1    == ADER1.1
   191 00000 0140 C                ADE1    == ADER1.1
   192       2041 C                ADE0    == ADER1.0
   192 00000 0040 C                ADE0    == ADER1.0
   193            C        ;R43/ADDL :ADC Low-8 Bits Data Buffer
   194       2043 C            ADDL        == 0x43:rpage 0
   194 00000 0010 C            ADDL        == 0x43:rpage 0
   195            C        ;R44/ADDH :ADC High-8 Bits Data Buffer
   196       2044 C            ADDH        == 0x44:rpage 0
   196 00000 0010 C            ADDH        == 0x44:rpage 0
   197            C        ;R45/ADCVL :Low Byte of Analog to Digital Converter Comparison
   198       2045 C            ADCVL       == 0x45:rpage 0
   198 00000 0010 C            ADCVL       == 0x45:rpage 0
   199            C        ;R46/ADCVH :High Byte of Analog to Digital Converter Comparison
   200       2046 C            ADCVH       == 0x46:rpage 0
   200 00000 0010 C            ADCVH       == 0x46:rpage 0
   201            C        ;======================================================
   202            C        ; BANK 1
   203            C        ; Registers R5~R4F
   204            C        ;======================================================
   205            C        ;R08/P5PHCR :Port5 Pull-high Control Register
   206       2008 C          P5PHCR        ==  0x08:rpage 1
   206 00000 0011 C          P5PHCR        ==  0x08:rpage 1
   207       2008 C                PH55    ==  P5PHCR.6
   207 00000 0641 C                PH55    ==  P5PHCR.6
   208       2008 C                PH54    ==  P5PHCR.4
   208 00000 0441 C                PH54    ==  P5PHCR.4
   209       2008 C                PH53    ==  P5PHCR.3
   209 00000 0341 C                PH53    ==  P5PHCR.3
   210       2008 C                PH52    ==  P5PHCR.2
   210 00000 0241 C                PH52    ==  P5PHCR.2
   211       2008 C                PH51    ==  P5PHCR.1
   211 00000 0141 C                PH51    ==  P5PHCR.1
   212       2008 C                PH50    ==  P5PHCR.0
   212 00000 0041 C                PH50    ==  P5PHCR.0
   213            C        
   214            C        ;R0B/P5PLCR Port 5 Pull-low Control Register
   215       200B C            P5PLCR      ==  0x0B:rpage 1
   215 00000 0011 C            P5PLCR      ==  0x0B:rpage 1
   216       200B C                PL55    ==  P5PLCR.5
   216 00000 0541 C                PL55    ==  P5PLCR.5
   217       200B C                PL54    ==  P5PLCR.4
   217 00000 0441 C                PL54    ==  P5PLCR.4
   218       200B C                PL53    ==  P5PLCR.3
   218 00000 0341 C                PL53    ==  P5PLCR.3
   219       200B C                PL52    ==  P5PLCR.2
   219 00000 0241 C                PL52    ==  P5PLCR.2
   220       200B C                PL51    ==  P5PLCR.1
   220 00000 0141 C                PL51    ==  P5PLCR.1
   221       200B C                PL50    ==  P5PLCR.0
   221 00000 0041 C                PL50    ==  P5PLCR.0
   222            C        
   223            C        ;R0E/P5HDSCR :Port 5 High Drive/Sink Control Register
   224       200E C            P5HDSCR     ==  0x0E:rpage 1
   224 00000 0011 C            P5HDSCR     ==  0x0E:rpage 1
   225       200E C                HDS55   ==  P5HDSCR.5
   225 00000 0541 C                HDS55   ==  P5HDSCR.5
   226       200E C                HDS54   ==  P5HDSCR.4
   226 00000 0441 C                HDS54   ==  P5HDSCR.4
   227       200E C                HDS53   ==  P5HDSCR.3
   227 00000 0341 C                HDS53   ==  P5HDSCR.3
   228       200E C                HDS52   ==  P5HDSCR.2
   228 00000 0241 C                HDS52   ==  P5HDSCR.2
   229       200E C                HDS51   ==  P5HDSCR.1
   229 00000 0141 C                HDS51   ==  P5HDSCR.1
   230       200E C                HDS50   ==  P5HDSCR.0
   230 00000 0041 C                HDS50   ==  P5HDSCR.0
   231            C        
   232            C        ;R33 URCR :UART Control Register
   233       2033 C            URCR        == 0x33:rpage 1
   233 00000 0011 C            URCR        == 0x33:rpage 1
   234       2033 C                UINVEN  == URCR.7
   234 00000 0741 C                UINVEN  == URCR.7
   235       2033 C                UMODE1  == URCR.6
   235 00000 0641 C                UMODE1  == URCR.6
   236       2033 C                UMODE0  == URCR.5
   236 00000 0541 C                UMODE0  == URCR.5
   237       2033 C                BRATE2  == URCR.4
   237 00000 0441 C                BRATE2  == URCR.4
   238       2033 C                BRATE1  == URCR.3
   238 00000 0341 C                BRATE1  == URCR.3
   239       2033 C                BRATE0  == URCR.2
   239 00000 0241 C                BRATE0  == URCR.2
   240       2033 C        	    UTBF    == URCR.1
   240 00000 0141 C        	    UTBF    == URCR.1
   241       2033 C        	    TXE     == URCR.0
   241 00000 0041 C        	    TXE     == URCR.0
   242            C        ;R34 URS :UART Status Register
   243       2034 C            URS         == 0x34:rpage 1
   243 00000 0011 C            URS         == 0x34:rpage 1
   244       2034 C                URTD8   == URS.7
   244 00000 0741 C                URTD8   == URS.7
   245       2034 C                EVEN    == URS.6
   245 00000 0641 C                EVEN    == URS.6
   246       2034 C                PER     == URS.5
   246 00000 0541 C                PER     == URS.5
   247       2034 C                PRERR   == URS.4
   247 00000 0441 C                PRERR   == URS.4
   248       2034 C                OVERR   == URS.3
   248 00000 0341 C                OVERR   == URS.3
   249       2034 C                FMERR   == URS.2
   249 00000 0241 C                FMERR   == URS.2
   250       2034 C        	    URBF    == URS.1
   250 00000 0141 C        	    URBF    == URS.1
   251       2034 C        	    RXE     == URS.0
   251 00000 0041 C        	    RXE     == URS.0
   252            C        ;R35 URTD :UART Transmit Data Buffer Register
   253       2035 C            URTD        == 0x35:rpage 1
   253 00000 0011 C            URTD        == 0x35:rpage 1
   254            C        ;R36 URRDL :UART Receive Data Low Buffer Register
   255       2036 C            URRDL       == 0x36:rpage 1
   255 00000 0011 C            URRDL       == 0x36:rpage 1
   256            C        ;R37 URRDH :UART Receive Data High Buffer Register
   257       2037 C            URRDH       == 0x37:rpage 1
   257 00000 0011 C            URRDH       == 0x37:rpage 1
   258       2037 C                URRD8   == URRDH.7
   258 00000 0741 C                URRD8   == URRDH.7
   259       2037 C                URSS    == URRDH.0
   259 00000 0041 C                URSS    == URRDH.0
   260            C        
   261            C        ;R40/EECR1 :EEPROM Control Register 1
   262       2040 C            EECR1       ==  0x40:rpage 1
   262 00000 0011 C            EECR1       ==  0x40:rpage 1
   263       2040 C                EEPVSF  ==  EECR1.4
   263 00000 0441 C                EEPVSF  ==  EECR1.4
   264       2040 C                EEPV    ==  EECR1.3
   264 00000 0341 C                EEPV    ==  EECR1.3
   265       2040 C                ONRD    ==  EECR1.2
   265 00000 0241 C                ONRD    ==  EECR1.2
   266       2040 C                RD      ==  EECR1.1
   266 00000 0141 C                RD      ==  EECR1.1
   267       2040 C                WR      ==  EECR1.0
   267 00000 0041 C                WR      ==  EECR1.0
   268            C        ;R41/EECR2 :EEPROM Control Register 2
   269       2041 C            EECR2       ==  0x41:rpage 1
   269 00000 0011 C            EECR2       ==  0x41:rpage 1
   270       2041 C                EEWE    ==  EECR2.7
   270 00000 0741 C                EEWE    ==  EECR2.7
   271       2041 C                EEDF    ==  EECR2.6
   271 00000 0641 C                EEDF    ==  EECR2.6
   272       2041 C                EEPC    ==  EECR2.5
   272 00000 0541 C                EEPC    ==  EECR2.5
   273            C        ;R42/EERA :EEPROM Address
   274       2042 C            EERA        ==  0x42:rpage 1
   274 00000 0011 C            EERA        ==  0x42:rpage 1
   275            C        ;R43/EERD :EEPROM Data
   276       2043 C            EERD        ==  0x43:rpage 1
   276 00000 0011 C            EERD        ==  0x43:rpage 1
   277            C        ;R44/FLKR :Flash Key Register for Table Write Use
   278       2044 C            FLKR        ==  0x44:rpage 1
   278 00000 0011 C            FLKR        ==  0x44:rpage 1
   279            C        ;R45/TBPTL :Table Point Low Register
   280       2045 C            TBPTL       ==  0x45:rpage 1
   280 00000 0011 C            TBPTL       ==  0x45:rpage 1
   281            C        ;R46/TBPTH :Table Point High Register
   282       2046 C            TBPTH       ==  0x46:rpage 1
   282 00000 0011 C            TBPTH       ==  0x46:rpage 1
   283       2046 C                HLB     ==  TBPTH.7
   283 00000 0741 C                HLB     ==  TBPTH.7
   284       2046 C                RDS     ==  TBPTH.6
   284 00000 0641 C                RDS     ==  TBPTH.6
   285            C        ;R47/STKMON :Stack point
   286       2047 C            STKMON      ==  0x47:rpage 1
   286 00000 0011 C            STKMON      ==  0x47:rpage 1
   287       2047 C                STOV    ==  STKMON.7
   287 00000 0741 C                STOV    ==  STKMON.7
   288       2047 C                STL2    ==  STKMON.2
   288 00000 0241 C                STL2    ==  STKMON.2
   289       2047 C                STL1    ==  STKMON.1
   289 00000 0141 C                STL1    ==  STKMON.1
   290       2047 C                STL0    ==  STKMON.0
   290 00000 0041 C                STL0    ==  STKMON.0
   291            C        ;R48/PCH :Program Counter High
   292       2048 C            PCH         == 0x48:rpage 1
   292 00000 0011 C            PCH         == 0x48:rpage 1
   293            C        
   294       204A C            COBS1       == 0x4A:rpage 1
   294 00000 0011 C            COBS1       == 0x4A:rpage 1
   295       204A C                HLFS	== COBS1.7
   295 00000 0741 C                HLFS	== COBS1.7
   296       204A C                ENWDT	== COBS1.5
   296 00000 0541 C                ENWDT	== COBS1.5
   297       204A C                NRHL	== COBS1.4
   297 00000 0441 C                NRHL	== COBS1.4
   298       204A C                NRE     == COBS1.3
   298 00000 0341 C                NRE     == COBS1.3
   299       204A C                ADFM	== COBS1.2
   299 00000 0241 C                ADFM	== COBS1.2
   300       204B C            COBS2       == 0x4B:rpage 1
   300 00000 0011 C            COBS2       == 0x4B:rpage 1
   301       204B C                RT5     == COBS2.5
   301 00000 0541 C                RT5     == COBS2.5
   302       204B C                RT4     == COBS2.4
   302 00000 0441 C                RT4     == COBS2.4
   303       204B C                RT3     == COBS2.3
   303 00000 0341 C                RT3     == COBS2.3
   304       204B C                RT2     == COBS2.2
   304 00000 0241 C                RT2     == COBS2.2
   305       204B C                RT1     == COBS2.1
   305 00000 0141 C                RT1     == COBS2.1
   306       204B C                RT0     == COBS2.0
   306 00000 0041 C                RT0     == COBS2.0
   307       204C C            COBS3       == 0x4C:rpage 1
   307 00000 0011 C            COBS3       == 0x4C:rpage 1
   308       204C C                CT3     == COBS3.3
   308 00000 0341 C                CT3     == COBS3.3
   309       204C C                CT2     == COBS3.2
   309 00000 0241 C                CT2     == COBS3.2
   310       204C C                CT1     == COBS3.1
   310 00000 0141 C                CT1     == COBS3.1
   311       204C C                CT0     == COBS3.0
   311 00000 0041 C                CT0     == COBS3.0
   312            C        ;R4D/TBWCR :Table Write Control Register
   313       204D C            TBWCR       ==  0x4D:rpage 1
   313 00000 0011 C            TBWCR       ==  0x4D:rpage 1
   314       204D C                IAPVSF  ==  TBWCR.2
   314 00000 0241 C                IAPVSF  ==  TBWCR.2
   315       204D C                IAPV    ==  TBWCR.1
   315 00000 0141 C                IAPV    ==  TBWCR.1
   316       204D C                IAPEN   ==  TBWCR.0
   316 00000 0041 C                IAPEN   ==  TBWCR.0
   317            C        ;R4E/TBWAL :Table Write start Address Low byte
   318       204E C            TBWAL       ==  0x4E:rpage 1
   318 00000 0011 C            TBWAL       ==  0x4E:rpage 1
   319            C        ;R4F/TBWAH :Table Write start Address High byte
   320       204F C            TBWAH       ==  0x4F:rpage 1
   320 00000 0011 C            TBWAH       ==  0x4F:rpage 1
   321            C        
   322            C        ;======================================================
   323            C        ; BANK 2
   324            C        ; Registers R5~R4F
   325            C        ;======================================================
   326            C        ;R05/TM1CR1 :Timer/Counter 1 Control Register 1
   327       2005 C            TM1CR1      ==  0x05:rpage 2
   327 00000 0012 C            TM1CR1      ==  0x05:rpage 2
   328       2005 C                TM1S    ==  TM1CR1.7
   328 00000 0742 C                TM1S    ==  TM1CR1.7
   329       2005 C                TM1RC   ==  TM1CR1.6
   329 00000 0642 C                TM1RC   ==  TM1CR1.6
   330       2005 C                TM1SS1  ==  TM1CR1.5
   330 00000 0542 C                TM1SS1  ==  TM1CR1.5
   331       2005 C                TM1RX1  ==  TM1CR1.4
   331 00000 0442 C                TM1RX1  ==  TM1CR1.4
   332       2005 C                TM1FF   ==  TM1CR1.3
   332 00000 0342 C                TM1FF   ==  TM1CR1.3
   333       2005 C                TM1MOS  ==  TM1CR1.2
   333 00000 0242 C                TM1MOS  ==  TM1CR1.2
   334       2005 C                TM1IS1  ==  TM1CR1.1
   334 00000 0142 C                TM1IS1  ==  TM1CR1.1
   335       2005 C                TM1IS0  ==  TM1CR1.0
   335 00000 0042 C                TM1IS0  ==  TM1CR1.0
   336            C        ;R06/TM1CR2 :Timer/Counter 1 Control Register 2
   337       2006 C            TM1CR2      ==  0x06:rpage 2
   337 00000 0012 C            TM1CR2      ==  0x06:rpage 2
   338       2006 C                TM1M2   ==  TM1CR2.7
   338 00000 0742 C                TM1M2   ==  TM1CR2.7
   339       2006 C                TM1M1   ==  TM1CR2.6
   339 00000 0642 C                TM1M1   ==  TM1CR2.6
   340       2006 C                TM1M0   ==  TM1CR2.5
   340 00000 0542 C                TM1M0   ==  TM1CR2.5
   341       2006 C                TM1SS0  ==  TM1CR2.4
   341 00000 0442 C                TM1SS0  ==  TM1CR2.4
   342       2006 C                TM1CK3  ==  TM1CR2.3
   342 00000 0342 C                TM1CK3  ==  TM1CR2.3
   343       2006 C                TM1CK2  ==  TM1CR2.2
   343 00000 0242 C                TM1CK2  ==  TM1CR2.2
   344       2006 C                TM1CK1  ==  TM1CR2.1
   344 00000 0142 C                TM1CK1  ==  TM1CR2.1
   345       2006 C                TM1CK0  ==  TM1CR2.0
   345 00000 0042 C                TM1CK0  ==  TM1CR2.0
   346            C        ;R07/TM1DBH :Timer/Counter 1 Data Buffer B High Byte
   347       2007 C            TM1DBH      ==  0x07:rpage 2
   347 00000 0012 C            TM1DBH      ==  0x07:rpage 2
   348            C        ;R08/TM1DBL :Timer/Counter 1 Data Buffer B Low Byte
   349       2008 C            TM1DBL      ==  0x08:rpage 2
   349 00000 0012 C            TM1DBL      ==  0x08:rpage 2
   350            C        ;R09/TM1DAH :Timer/Counter 1 Data Buffer A High Byte
   351       2009 C            TM1DAH      ==  0x09:rpage 2
   351 00000 0012 C            TM1DAH      ==  0x09:rpage 2
   352            C        ;R0A/TM1DAL :Timer/Counter 1 Data Buffer A Low Byte
   353       200A C            TM1DAL      ==  0x0A:rpage 2
   353 00000 0012 C            TM1DAL      ==  0x0A:rpage 2
   354            C        ;R0B/TM2CR1 :Timer/Counter 2 Control Register 1
   355       200B C            TM2CR1      ==  0x0B:rpage 2
   355 00000 0012 C            TM2CR1      ==  0x0B:rpage 2
   356       200B C                TM2S    ==  TM2CR1.7
   356 00000 0742 C                TM2S    ==  TM2CR1.7
   357       200B C                TM2RC   ==  TM2CR1.6
   357 00000 0642 C                TM2RC   ==  TM2CR1.6
   358       200B C                TM2SS1  ==  TM2CR1.5
   358 00000 0542 C                TM2SS1  ==  TM2CR1.5
   359       200B C                TM2RX2  ==  TM2CR1.4
   359 00000 0442 C                TM2RX2  ==  TM2CR1.4
   360       200B C                TM2FF   ==  TM2CR1.3
   360 00000 0342 C                TM2FF   ==  TM2CR1.3
   361       200B C                TM2MOS  ==  TM2CR1.2
   361 00000 0242 C                TM2MOS  ==  TM2CR1.2
   362       200B C                TM2IS1  ==  TM2CR1.1
   362 00000 0142 C                TM2IS1  ==  TM2CR1.1
   363       200B C                TM2IS0  ==  TM2CR1.0
   363 00000 0042 C                TM2IS0  ==  TM2CR1.0
   364            C        ;R0C/TM2CR2 :Timer/Counter 2 Control Register 2
   365       200C C            TM2CR2      ==  0x0C:rpage 2
   365 00000 0012 C            TM2CR2      ==  0x0C:rpage 2
   366       200C C                TM2M2   ==  TM2CR2.7
   366 00000 0742 C                TM2M2   ==  TM2CR2.7
   367       200C C                TM2M1   ==  TM2CR2.6
   367 00000 0642 C                TM2M1   ==  TM2CR2.6
   368       200C C                TM2M0   ==  TM2CR2.5
   368 00000 0542 C                TM2M0   ==  TM2CR2.5
   369       200C C                TM2SS0  ==  TM2CR2.4
   369 00000 0442 C                TM2SS0  ==  TM2CR2.4
   370       200C C                TM2CK3  ==  TM2CR2.3
   370 00000 0342 C                TM2CK3  ==  TM2CR2.3
   371       200C C                TM2CK2  ==  TM2CR2.2
   371 00000 0242 C                TM2CK2  ==  TM2CR2.2
   372       200C C                TM2CK1  ==  TM2CR2.1
   372 00000 0142 C                TM2CK1  ==  TM2CR2.1
   373       200C C                TM2CK0  ==  TM2CR2.0
   373 00000 0042 C                TM2CK0  ==  TM2CR2.0
   374            C        ;R0D/TM2DBH :Timer/Counter 2 Data Buffer B High Byte
   375       200D C            TM2DBH      ==  0x0D:rpage 2
   375 00000 0012 C            TM2DBH      ==  0x0D:rpage 2
   376            C        ;R0E/TM2DBL :Timer/Counter 2 Data Buffer B Low Byte
   377       200E C            TM2DBL      ==  0x0E:rpage 2
   377 00000 0012 C            TM2DBL      ==  0x0E:rpage 2
   378            C        ;R0F/TM2DAH :Timer/Counter 2 Data Buffer A High Byte
   379       200F C            TM2DAH      ==  0x0F:rpage 2
   379 00000 0012 C            TM2DAH      ==  0x0F:rpage 2
   380            C        ;R10/TM2DAL :Timer/Counter 2 Data Buffer A Low Byte
   381       2010 C            TM2DAL      ==  0x10:rpage 2
   381 00000 0012 C            TM2DAL      ==  0x10:rpage 2
   382            C        
   383            C        ;R11 RX1CR1(RX1 Control Register 1)
   384       2011 C            RX1CR1      ==  0x11:rpage 2
   384 00000 0012 C            RX1CR1      ==  0x11:rpage 2
   385       2011 C                RX1E    ==  RX1CR1.7
   385 00000 0742 C                RX1E    ==  RX1CR1.7
   386       2011 C                RXIVE   ==  RX1CR1.6
   386 00000 0642 C                RXIVE   ==  RX1CR1.6
   387       2011 C                RX1HV4  ==  RX1CR1.4
   387 00000 0442 C                RX1HV4  ==  RX1CR1.4
   388       2011 C                RX1HV3  ==  RX1CR1.3
   388 00000 0342 C                RX1HV3  ==  RX1CR1.3
   389       2011 C                RX1HV2  ==  RX1CR1.2
   389 00000 0242 C                RX1HV2  ==  RX1CR1.2
   390       2011 C                RX1HV1  ==  RX1CR1.1
   390 00000 0142 C                RX1HV1  ==  RX1CR1.1
   391       2011 C                RX1HV0  ==  RX1CR1.0
   391 00000 0042 C                RX1HV0  ==  RX1CR1.0
   392            C        ;R12 RX1CR2(RX1 Control Register 2)
   393       2012 C            RX1CR2      ==  0x12:rpage 2
   393 00000 0012 C            RX1CR2      ==  0x12:rpage 2
   394       2012 C                RX1OPE  ==  RX1CR2.7
   394 00000 0742 C                RX1OPE  ==  RX1CR2.7
   395       2012 C                RX1OUT  ==  RX1CR2.6
   395 00000 0642 C                RX1OUT  ==  RX1CR2.6
   396       2012 C                RX1LV4  ==  RX1CR2.4
   396 00000 0442 C                RX1LV4  ==  RX1CR2.4
   397       2012 C                RX1LV3  ==  RX1CR2.3
   397 00000 0342 C                RX1LV3  ==  RX1CR2.3
   398       2012 C                RX1LV2  ==  RX1CR2.2
   398 00000 0242 C                RX1LV2  ==  RX1CR2.2
   399       2012 C                RX1LV1  ==  RX1CR2.1
   399 00000 0142 C                RX1LV1  ==  RX1CR2.1
   400       2012 C                RX1LV0  ==  RX1CR2.0
   400 00000 0042 C                RX1LV0  ==  RX1CR2.0
   401            C        ;R13 RX2CR1(RX2 Control Register 1)
   402       2013 C            RX2CR1      ==  0x13:rpage 2
   402 00000 0012 C            RX2CR1      ==  0x13:rpage 2
   403       2013 C                RX2E    ==  RX2CR1.7
   403 00000 0742 C                RX2E    ==  RX2CR1.7
   404       2013 C                RX2HV4  ==  RX2CR1.4
   404 00000 0442 C                RX2HV4  ==  RX2CR1.4
   405       2013 C                RX2HV3  ==  RX2CR1.3
   405 00000 0342 C                RX2HV3  ==  RX2CR1.3
   406       2013 C                RX2HV2  ==  RX2CR1.2
   406 00000 0242 C                RX2HV2  ==  RX2CR1.2
   407       2013 C                RX2HV1  ==  RX2CR1.1
   407 00000 0142 C                RX2HV1  ==  RX2CR1.1
   408       2013 C                RX2HV0  ==  RX2CR1.0
   408 00000 0042 C                RX2HV0  ==  RX2CR1.0
   409            C        ;R14 RX2CR2(RX2 Control Register 2)
   410       2014 C            RX2CR2      ==  0x14:rpage 2
   410 00000 0012 C            RX2CR2      ==  0x14:rpage 2
   411       2014 C                RX2OPE  ==  RX2CR2.7
   411 00000 0742 C                RX2OPE  ==  RX2CR2.7
   412       2014 C                RX2OUT  ==  RX2CR2.6
   412 00000 0642 C                RX2OUT  ==  RX2CR2.6
   413       2014 C                RX2LV4  ==  RX2CR2.4
   413 00000 0442 C                RX2LV4  ==  RX2CR2.4
   414       2014 C                RX2LV3  ==  RX2CR2.3
   414 00000 0342 C                RX2LV3  ==  RX2CR2.3
   415       2014 C                RX2LV2  ==  RX2CR2.2
   415 00000 0242 C                RX2LV2  ==  RX2CR2.2
   416       2014 C                RX2LV1  ==  RX2CR2.1
   416 00000 0142 C                RX2LV1  ==  RX2CR2.1
   417       2014 C                RX2LV0  ==  RX2CR2.0
   417 00000 0042 C                RX2LV0  ==  RX2CR2.0
   418            C        ;R15 RXDCR(RX Deglitch Control Register)
   419       2015 C            RXDCR       ==  0x15:rpage 2
   419 00000 0012 C            RXDCR       ==  0x15:rpage 2
   420       2015 C                RX1DS   ==  RXDCR.7
   420 00000 0742 C                RX1DS   ==  RXDCR.7
   421       2015 C                RX1DT2  ==  RXDCR.6
   421 00000 0642 C                RX1DT2  ==  RXDCR.6
   422       2015 C                RX1DT1  ==  RXDCR.5
   422 00000 0542 C                RX1DT1  ==  RXDCR.5
   423       2015 C                RX1DT0  ==  RXDCR.4
   423 00000 0442 C                RX1DT0  ==  RXDCR.4
   424       2015 C                RX2DS   ==  RXDCR.3
   424 00000 0342 C                RX2DS   ==  RXDCR.3
   425       2015 C                RX2DT2  ==  RXDCR.2
   425 00000 0242 C                RX2DT2  ==  RXDCR.2
   426       2015 C                RX2DT1  ==  RXDCR.1
   426 00000 0142 C                RX2DT1  ==  RXDCR.1
   427       2015 C                RX2DT0  ==  RXDCR.0
   427 00000 0042 C                RX2DT0  ==  RXDCR.0
   428            C        ;R16 TXSC(TX Sink Current Register)
   429       2016 C            TXSC        ==  0x16:rpage 2
   429 00000 0012 C            TXSC        ==  0x16:rpage 2
   430       2016 C                TXCS3   ==  TXSC.3
   430 00000 0342 C                TXCS3   ==  TXSC.3
   431       2016 C                TXCS2   ==  TXSC.2
   431 00000 0242 C                TXCS2   ==  TXSC.2
   432       2016 C                TXCS1   ==  TXSC.1
   432 00000 0142 C                TXCS1   ==  TXSC.1
   433       2016 C                TXCS0   ==  TXSC.0
   433 00000 0042 C                TXCS0   ==  TXSC.0
   434            C        ;R17 TXCR1(TX Control Register 1)
   435       2017 C            TXCR1       ==  0x17:rpage 2
   435 00000 0012 C            TXCR1       ==  0x17:rpage 2
   436       2017 C                TXEN    ==  TXCR1.7
   436 00000 0742 C                TXEN    ==  TXCR1.7
   437       2017 C                TXTM    ==  TXCR1.5
   437 00000 0542 C                TXTM    ==  TXCR1.5
   438       2017 C                TXSR1   ==  TXCR1.4
   438 00000 0442 C                TXSR1   ==  TXCR1.4
   439       2017 C                TXSR0   ==  TXCR1.3
   439 00000 0342 C                TXSR0   ==  TXCR1.3
   440       2017 C                TXMV2   ==  TXCR1.2
   440 00000 0242 C                TXMV2   ==  TXCR1.2
   441       2017 C                TXMV1   ==  TXCR1.1
   441 00000 0142 C                TXMV1   ==  TXCR1.1
   442       2017 C                TXMV0   ==  TXCR1.0
   442 00000 0042 C                TXMV0   ==  TXCR1.0
   443            C        ;R18 TXCR2(TX Control Register 2)
   444       2018 C            TXCR2       ==  0x18:rpage 2
   444 00000 0012 C            TXCR2       ==  0x18:rpage 2
   445       2018 C                TXS     ==  TXCR2.7
   445 00000 0742 C                TXS     ==  TXCR2.7
   446       2018 C                TXCLK   ==  TXCR2.6
   446 00000 0642 C                TXCLK   ==  TXCR2.6
   447       2018 C                TXDP2   ==  TXCR2.5
   447 00000 0542 C                TXDP2   ==  TXCR2.5
   448       2018 C                TXDP1   ==  TXCR2.4
   448 00000 0442 C                TXDP1   ==  TXCR2.4
   449       2018 C                TXDP0   ==  TXCR2.3
   449 00000 0342 C                TXDP0   ==  TXCR2.3
   450       2018 C                TXCP2   ==  TXCR2.2
   450 00000 0242 C                TXCP2   ==  TXCR2.2
   451       2018 C                TXCP1   ==  TXCR2.1
   451 00000 0142 C                TXCP1   ==  TXCR2.1
   452       2018 C                TXCP0   ==  TXCR2.0
   452 00000 0042 C                TXCP0   ==  TXCR2.0
   453            C        ;R19 TXDT(TX Delay Timer Register)
   454       2019 C            TXDT       ==  0x19:rpage 2
   454 00000 0012 C            TXDT       ==  0x19:rpage 2
   455            C        ;R1A TXCT(TX Sink Current Timer Register)
   456       201A C            TXCT       ==  0x1A:rpage 2
   456 00000 0012 C            TXCT       ==  0x1A:rpage 2
   457            C        ;R1B TXRC (TXTM Read Counting)
   458       201B C            TXRC       ==  0x1B:rpage 2
   458 00000 0012 C            TXRC       ==  0x1B:rpage 2
   459            C        ;R1C CMP3&LRR (CMP3&Limiting Resistor)
   460       201C C            LRR         ==  0x1C:rpage 2
   460 00000 0012 C            LRR         ==  0x1C:rpage 2
   461       201C C                CMP3DS  ==  LRR.7
   461 00000 0742 C                CMP3DS  ==  LRR.7
   462       201C C                CMP3DT2 ==  LRR.6
   462 00000 0642 C                CMP3DT2 ==  LRR.6
   463       201C C                CMP3DT1 ==  LRR.5
   463 00000 0542 C                CMP3DT1 ==  LRR.5
   464       201C C                CMP3DT0 ==  LRR.4
   464 00000 0442 C                CMP3DT0 ==  LRR.4
   465       201C C                CL0     ==  LRR.0
   465 00000 0042 C                CL0     ==  LRR.0
   466            C        ;R1D DCCR (Discharge Control Register)
   467       201D C            DCCR        ==  0x1D:rpage 2
   467 00000 0012 C            DCCR        ==  0x1D:rpage 2
   468       201D C                CMP3E   ==  DCCR.7
   468 00000 0742 C                CMP3E   ==  DCCR.7
   469       201D C                MCDC    ==  DCCR.6
   469 00000 0642 C                MCDC    ==  DCCR.6
   470       201D C                DCT2    ==  DCCR.4
   470 00000 0442 C                DCT2    ==  DCCR.4
   471       201D C                DCT1    ==  DCCR.3
   471 00000 0342 C                DCT1    ==  DCCR.3
   472       201D C                DCT0    ==  DCCR.2
   472 00000 0242 C                DCT0    ==  DCCR.2
   473       201D C                DCR1    ==  DCCR.1
   473 00000 0142 C                DCR1    ==  DCCR.1
   474       201D C                DCR0    ==  DCCR.0
   474 00000 0042 C                DCR0    ==  DCCR.0
   475            C        ;R1E DCVS (Discharge Voltage select Register)
   476       201E C            DCVS        ==  0x1E:rpage 2
   476 00000 0012 C            DCVS        ==  0x1E:rpage 2
   477       201E C                CMP3OPE ==  DCVS.7
   477 00000 0742 C                CMP3OPE ==  DCVS.7
   478       201E C                CMP3OUT ==  DCVS.6
   478 00000 0642 C                CMP3OUT ==  DCVS.6
   479       201E C                DCP     ==  DCVS.3
   479 00000 0342 C                DCP     ==  DCVS.3
   480       201E C                DCV2    ==  DCVS.2
   480 00000 0242 C                DCV2    ==  DCVS.2
   481       201E C                DCV1    ==  DCVS.1
   481 00000 0142 C                DCV1    ==  DCVS.1
   482       201E C                DCV0    ==  DCVS.0
   482 00000 0042 C                DCV0    ==  DCVS.0
   483            C        
   484            C        
   485            C        ;R1F IR1SR (IR1 Sink Current Control Register)
   486       201F C            IR1SR       ==  0x1F:rpage 2
   486 00000 0012 C            IR1SR       ==  0x1F:rpage 2
   487            C        ;R20 IR2SR (IR2 Sink Current Control Register)
   488       2020 C            IR2SR       ==  0x20:rpage 2
   488 00000 0012 C            IR2SR       ==  0x20:rpage 2
   489            C        ;R21 IRCR1 (IR Control Register 1)
   490       2021 C            IRCR1       ==  0x21:rpage 2
   490 00000 0012 C            IRCR1       ==  0x21:rpage 2
   491            C        ;R22 IGCR1 (Integrator Control Register 1)
   492       2022 C            IGCR1       ==  0x22:rpage 2
   492 00000 0012 C            IGCR1       ==  0x22:rpage 2
   493            C        ;R23 IGCR2 (Integrator Control Register 2)
   494       2023 C            IGCR2       ==  0x23:rpage 2
   494 00000 0012 C            IGCR2       ==  0x23:rpage 2
   495            C        ;R24 IGCR3 (Integrator Control Register 3)
   496       2024 C            IGCR3       ==  0x24:rpage 2
   496 00000 0012 C            IGCR3       ==  0x24:rpage 2
   497            C        ;R25 IGDBH (Integrator Data Buffer High byte)
   498       2025 C            IGDBH       ==  0x25:rpage 2
   498 00000 0012 C            IGDBH       ==  0x25:rpage 2
   499            C        ;R26 IGDBL (Integrator Data Buffer Low byte)
   500       2026 C            IGDBL       ==  0x26:rpage 2    
   500 00000 0012 C            IGDBL       ==  0x26:rpage 2    
   501            C        ;R27 TLED (Time of LED Control Register)
   502       2027 C            TLED        ==  0x27:rpage 2
   502 00000 0012 C            TLED        ==  0x27:rpage 2
   503            C        
   504            C        ;R38 IGCOBS1 (Integrator Code Option Bit Selection Register 1)
   505       2038 C            IGCOBS1     ==  0x38:rpage 2
   505 00000 0012 C            IGCOBS1     ==  0x38:rpage 2
   506            C        ;R39 IGCOBS2 (Integrator Code Option Bit Selection Register 2)
   507       2039 C            IGCOBS2     ==  0x39:rpage 2
   507 00000 0012 C            IGCOBS2     ==  0x39:rpage 2
   508            C        ;R3A IGCOBS3 (Integrator Code Option Bit Selection Register 3)
   509       203A C            IGCOBS3     ==  0x3A:rpage 2
   509 00000 0012 C            IGCOBS3     ==  0x3A:rpage 2
   510            C        ;R3B IGCOBS4 (Integrator Code Option Bit Selection Register 4)
   511       203B C            IGCOBS4     ==  0x3B:rpage 2
   511 00000 0012 C            IGCOBS4     ==  0x3B:rpage 2
   512            C        ;R3C IGCOBS5 (Integrator Code Option Bit Selection Register 5)
   513       203C C            IGCOBS5     ==  0x3C:rpage 2
   513 00000 0012 C            IGCOBS5     ==  0x3C:rpage 2
   514            C        ;R3D IGCOBS6 (Integrator Code Option Bit Selection Register 6)
   515       203D C            IGCOBS6     ==  0x3D:rpage 2
   515 00000 0012 C            IGCOBS6     ==  0x3D:rpage 2
   516            C        ;R3E IGCOBS7 (Integrator Code Option Bit Selection Register 7)
   517       203E C            IGCOBS7     ==  0x3E:rpage 2
   517 00000 0012 C            IGCOBS7     ==  0x3E:rpage 2
   518            C        
   519            C        ;R41 VRCOBS1 (VREF Code Option Bit Selection Register 1)
   520       2041 C            VRCOBS1     ==  0x41:rpage 2
   520 00000 0012 C            VRCOBS1     ==  0x41:rpage 2
   521            C        ;R42/COBS4 :Code Option Bit Selection Register4
   522       2042 C            COBS4       ==  0x42:rpage 2
   522 00000 0012 C            COBS4       ==  0x42:rpage 2
   523            C        ;R43/COBS5 :Code Option Bit Selection Register5
   524       2043 C            COBS5       ==  0x43:rpage 2
   524 00000 0012 C            COBS5       ==  0x43:rpage 2
   525            C        ;R44/COBS6 :Code Option Bit Selection Register6
   526       2044 C            COBS6       ==  0x44:rpage 2
   526 00000 0012 C            COBS6       ==  0x44:rpage 2
   527            C        
   528            C        ;R47/LOCKPR (Lock Page Number Register)
   529       2047 C            LOCKPR      ==  0x47:rpage 2
   529 00000 0012 C            LOCKPR      ==  0x47:rpage 2
   530            C        ;R46/LOCKCR (Lock Control Register)
   531       2048 C            LOCKCR      ==  0x48:rpage 2
   531 00000 0012 C            LOCKCR      ==  0x48:rpage 2
   532       2048 C        	LOCKEN  == LOCKCR.7
   532 00000 0742 C        	LOCKEN  == LOCKCR.7
    27            C        ELSE
    28            C        	NOP
    29            C        ENDIF
    23                     
    24                     
    25                     ;================ General Purpose Register ===============
    26       0050          	TMP50	== 0x50
    27       0051          	TMP51	== 0x51
    28       0052          	TMP52	== 0x52
    29       0053          	TMP53	== 0x53
    30       0054          	TMP54	== 0x54
    31       0055          	TMP55	== 0x55
    32       0056          	TMP56	== 0x56
    33       0057          	TMP57	== 0x57
    34       0058          	TMP58	== 0x58
    35       0059          	TMP59	== 0x59
    36       005A          	TMP5A	== 0x5A
    37       005B          	TMP5B	== 0x5B
    38       005C          	TMP5C	== 0x5C
    39       005D          	TMP5D	== 0x5D
    40       005E          	TMP5E	== 0x5E
    41       005F          	TMP5F	== 0x5F
    42                     	
    43       005A          	INST	== 0x5A
    44                     
    45       0080          	TMP80	== 0x80
    46       0081          	TMP81	== 0x81
    47       0082          	TMP82	== 0x82
    48       0083          	TMP83	== 0x83
    49       0084          	TMP84	== 0x84
    50       0085          	TMP85	== 0x85
    51       0086          	TMP86	== 0x86
    52       0087          	TMP87	== 0x87
    53       0088          	TMP88	== 0x88
    54       0089          	TMP89	== 0x89
    55       008A          	TMP8A	== 0x8A
    56       008B          	TMP8B	== 0x8B
    57       008C          	TMP8C	== 0x8C
    58       008D          	TMP8D	== 0x8D
    59       008E          	TMP8E	== 0x8E
    60       008F          	TMP8F	== 0x8F
    61                     
    62                     ;================ Interrupt Vector Table =================
    63                     	ORG 	0x0000
    64 00000 5050          	JMP 	MAIN
    65                     	ORG		0x0002
    66 00002 506B          	JMP 	JMP_FAIL	;0x0030
    67 00003 506B          	JMP 	JMP_FAIL	;0x0031
    68 00004 506B          	JMP 	JMP_FAIL	;0x0032
    69 00005 506B          	JMP 	JMP_FAIL	;0x0033
    70 00006 506B          	JMP 	JMP_FAIL	;0x0034
    71 00007 506B          	JMP 	JMP_FAIL	;0x0035
    72 00008 506B          	JMP 	JMP_FAIL	;0x0036
    73 00009 506B          	JMP 	JMP_FAIL	;0x0037
    74 0000A 506B          	JMP 	JMP_FAIL	;0x0038
    75 0000B 506B          	JMP 	JMP_FAIL	;0x0039
    76 0000C 506B          	JMP 	JMP_FAIL	;0x003A
    77 0000D 506B          	JMP 	JMP_FAIL	;0x003B
    78 0000E 506B          	JMP 	JMP_FAIL	;0x003C
    79 0000F 506B          	JMP 	JMP_FAIL	;0x003D
    80 00010 506B          	JMP 	JMP_FAIL	;0x003E
    81 00011 506B          	JMP 	JMP_FAIL	;0x003F
    82 00012 506B          	JMP 	JMP_FAIL	;0x0040
    83 00013 506B          	JMP 	JMP_FAIL	;0x0041
    84 00014 506B          	JMP 	JMP_FAIL	;0x0042
    85 00015 506B          	JMP 	JMP_FAIL	;0x0043
    86 00016 506B          	JMP 	JMP_FAIL	;0x0044
    87 00017 506B          	JMP 	JMP_FAIL	;0x0045
    88 00018 506B          	JMP 	JMP_FAIL	;0x0046
    89 00019 506B          	JMP 	JMP_FAIL	;0x0047
    90 0001A 506B          	JMP 	JMP_FAIL	;0x0048
    91 0001B 506B          	JMP 	JMP_FAIL	;0x0049
    92 0001C 506B          	JMP 	JMP_FAIL	;0x004A
    93 0001D 506B          	JMP 	JMP_FAIL	;0x004B
    94 0001E 506B          	JMP 	JMP_FAIL	;0x004C
    95 0001F 506B          	JMP 	JMP_FAIL	;0x004D
    96 00020 506B          	JMP 	JMP_FAIL	;0x004E
    97 00021 506B          	JMP 	JMP_FAIL	;0x004F
    98                     ;==================== Main Function ======================
    99                     	ORG		0x0050
   100 00050               MAIN:
   101                     	;CALL 	EFT_INIT
   102 00050 4074          	CALL	SYS_INIT
   103 00051 4079          	CALL	GPIO_INIT
   104                     	;CALL	WAKE_INIT
   105                     	;CALL	KEY_DEBOUNCE
   106 00052 40A9          	CALL	RAM_SHA_INIT
   107 00053 40B3          	CALL	RAM_IND_INIT
   108 00054 40DC          	CALL	EEPROM_INIT
   109                     	;CALL	TEST_EEPROM (Do not loop forever)
   110                     	;CALL	TEST_FLASH (Do not loop forever)
   111 00055 6088          	MOV		A,@0x88
   112 00056 0121          	MOV		WDTCR,A
   113                     ;====================== BACK_GROUND_LOOP ================
   114 00057               BACK_GROUND_LOOP:
   115 00057 7A00          	SBANK	0
   116 00058 4816          	CALL	TEST_STACK
   117 00059 40F2          	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
   118 0005A 449C          	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
   119 0005B 45CB          	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
   120 0005C 4693          	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
   121 0005D 46CB          	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
   122 0005E 46F2          	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
   123 0005F 4731          	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
   124 00060 4770          	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
   125 00061 4797          	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
   126 00062 47A2          	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
   127 00063 47EB          	CALL	TEST_READ_ROM			;TBRD, TBRDA
   128 00064 4F00          	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
   129 00065 4F17          	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
   130 00066 4F2E          	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
   131 00067 4F45          	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
   132 00068               	JMP_PASS:
   133 00068 0095          	BTG		P5,1
   134 00069 0004          	WDTC
   135 0006A 5057          	JMP		BACK_GROUND_LOOP
   136                     
   137                     ;====================== ERROR_LOOP =====================
   138 0006B               JMP_FAIL:
   139 0006B 7A00          	SBANK	0
   140 0006C 2205          	BC		P5,2
   141 0006D 506B          	JMP		JMP_FAIL
   142 0006E               RAM_FAIL:
   143 0006E 7A00          	SBANK	0
   144 0006F 2305          	BC		P5,3
   145 00070 506E          	JMP		RAM_FAIL
   146 00071               INS_FAIL:
   147 00071 7A00          	SBANK	0
   148 00072 2405          	BC		P5,4
   149 00073 5071          	JMP		INS_FAIL
   150                     
   151                     ;================== PEIPHERAL_INITIAL ==================
   152                     	;-------------------------------;
   153 00074               	SYS_INIT:	
   154 00074 7A00          		SBANK	0
   155                     		;BS		CPUS	;FSYS=FM
   156 00075 260E          		BC		IDLE	;SLEEP_MODE
   157 00076 6000          		MOV		A,@0x00
   158 00077 0114          		MOV		SFR1,A
   159 00078 0012          		RET
   160                     	;-------------------------------;		
   161 00079               	GPIO_INIT:
   162 00079 7A00          		SBANK	0
   163 0007A 0305          		CLR		P5
   164 0007B 60F0          		MOV		A,@0xF0
   165 0007C 010B          		MOV		IOCR5,A
   166 0007D 60FF          		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
   167 0007E 0105          		MOV		P5,A
   168 0007F 0012          		RET
   169                     
   170                     	;-------------------------------;
   171 00080               	WAKE_INIT:
   172 00080 7A00          		SBANK	0
   173 00081 3B03          		JBS		P			; PWR ON reset(1)/RST pin reset(0)
   174 00082 5085          		JMP		$+3
   175 00083 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   176 00084 0003          		SLEP
   177 00085 3B03          		JBS		P
   178 00086 5089          		JMP		$+3
   179 00087 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   180 00088 0003          		SLEP
   181 00089 3B03          		JBS		P
   182 0008A 508D          		JMP		$+3
   183 0008B 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   184 0008C 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   185 0008D 0003          		SLEP		
   186 0008E 0012          		RET
   187                     	;-------------------------------;
   188 0008F               	KEY_DEBOUNCE:
   189 0008F 3D05          		JBS		P5,5		; Push, or not
   190 00090 5092          		JMP		$+2
   191 00091 508F          		JMP		$-2
   192 00092 3D05          		JBS		P5,5
   193 00093 508F          		JMP		KEY_DEBOUNCE
   194 00094 3D05          		JBS		P5,5
   195 00095 508F          		JMP		KEY_DEBOUNCE
   196 00096 3D05          		JBS		P5,5
   197 00097 508F          		JMP		KEY_DEBOUNCE
   198 00098 3D05          		JBS		P5,5
   199 00099 508F          		JMP		KEY_DEBOUNCE
   200 0009A 3D05          		JBS		P5,5
   201 0009B 508F          		JMP		KEY_DEBOUNCE
   202 0009C 3D05          		JBS		P5,5
   203 0009D 508F          		JMP		KEY_DEBOUNCE
   204 0009E 3D05          		JBS		P5,5
   205 0009F 508F          		JMP		KEY_DEBOUNCE
   206 000A0 3D05          		JBS		P5,5
   207 000A1 508F          		JMP		KEY_DEBOUNCE
   208 000A2 3D05          		JBS		P5,5
   209 000A3 508F          		JMP		KEY_DEBOUNCE
   210 000A4 3D05          		JBS		P5,5
   211 000A5 50A3          		JMP		$-2
   212 000A6 60FF          		MOV		A,@0xFF		; Turn Off all LED
   213 000A7 0105          		MOV		P5,A		
   214 000A8 0012          		RET
   215                     	;-------------------------------;
   216 000A9               	RAM_SHA_INIT:
   217 000A9 6050          		MOV		A,@0x50
   218 000AA 0104          		MOV		RSR,A
   219 000AB 60FF          		MOV		A,@0xFF		;RAM_SHA_LOOP
   220 000AC 0100          		MOV		IAR,A
   221 000AD 1504          		INC		RSR
   222 000AE 6080          		MOV		A,@0x80
   223 000AF 0C04          		XOR		A,RSR
   224 000B0 3A03          		JBS		Z
   225 000B1 50AB          		JMP		$-6
   226 000B2 0012          		RET
   227                     	;-------------------------------;		
   228 000B3               	RAM_IND_INIT:
   229 000B3 6080          		MOV		A,@0x80
   230 000B4 0104          		MOV		RSR,A
   231 000B5               		RAM_IND_LOOP_0:
   232 000B5 7A40          		GBANK	0
   233 000B6 60FF          		MOV		A,@0xFF
   234 000B7 0100          		MOV		IAR,A
   235 000B8 1504          		INC		RSR
   236 000B9 6000          		MOV		A,@0x00
   237 000BA 0C04          		XOR		A,RSR
   238 000BB 3A03          		JBS		Z
   239 000BC 50B5          		JMP		RAM_IND_LOOP_0
   240 000BD 6080          		MOV		A,@0x80
   241 000BE 0104          		MOV		RSR,A
   242 000BF               		RAM_IND_LOOP_1:
   243 000BF 7A41          		GBANK	1
   244 000C0 60FF          		MOV		A,@0xFF
   245 000C1 0100          		MOV		IAR,A
   246 000C2 1504          		INC		RSR
   247 000C3 6000          		MOV		A,@0x00
   248 000C4 0C04          		XOR		A,RSR
   249 000C5 3A03          		JBS		Z
   250 000C6 50BF          		JMP		RAM_IND_LOOP_1
   251 000C7 6080          		MOV		A,@0x80
   252 000C8 0104          		MOV		RSR,A
   253 000C9               		RAM_IND_LOOP_2:
   254 000C9 7A42          		GBANK	2
   255 000CA 60FF          		MOV		A,@0xFF
   256 000CB 0100          		MOV		IAR,A
   257 000CC 1504          		INC		RSR
   258 000CD 6000          		MOV		A,@0x00
   259 000CE 0C04          		XOR		A,RSR
   260 000CF 3A03          		JBS		Z
   261 000D0 50C9          		JMP		RAM_IND_LOOP_2
   262 000D1 6080          		MOV		A,@0x80
   263 000D2 0104          		MOV		RSR,A
   264 000D3               		RAM_IND_LOOP_3:
   265 000D3 7A43          		GBANK	3
   266 000D4 60FF          		MOV		A,@0xFF
   267 000D5 0100          		MOV		IAR,A
   268 000D6 1504          		INC		RSR
   269 000D7 6000          		MOV		A,@0x00
   270 000D8 0C04          		XOR		A,RSR
   271 000D9 3A03          		JBS		Z
   272 000DA 50D3          		JMP		RAM_IND_LOOP_3
   273 000DB 0012          		RET
   274                     	;-------------------------------;
   275 000DC               	EEPROM_INIT:
   276 000DC 6080          		MOV		A,@0x80
   277 000DD 0141          		MOV		EECR2,A
   278 000DE 1000          		MOV		A,0x00
   279 000DF 0150          		MOV		TMP50,A
   280 000E0               		EEPROM_INIT_LOOP:
   281 000E0 1050          		MOV		A,TMP50
   282 000E1 0142          		MOV		EERA,A
   283 000E2 60FF          		MOV		A,@0xFF
   284 000E3 0143          		MOV		EERD,A
   285 000E4 1550          		INC		TMP50
   286 000E5 1080          		MOV		A,0x80
   287 000E6 0C50          		XOR		A,TMP50
   288 000E7 3A03          		JBS		Z
   289 000E8 50E0          		JMP		EEPROM_INIT_LOOP
   290 000E9 0012          		RET
   291                     	;-------------------------------;
   292 000EA               	STATUS_CLEAR:
   293 000EA 6000          		MOV		A,@0x00
   294 000EB 0103          		MOV		STATUS,A
   295 000EC 0012          		RET
   296                     	;-------------------------------;
   297 000ED               	INST_XOR_JUDGE:
   298 000ED 3A03          		JBS		Z			; IF(Z=1) BRANCH
   299 000EE 5071          		JMP		INS_FAIL
   300 000EF 3603          		JBC		N			; IF(N=0) BRANCH
   301 000F0 5071          		JMP		INS_FAIL
   302 000F1 0012          		RET
   303                     
   304                     ;================== Jmp Sub Function ==================
   305 000F2               	TEST_INST_ARITHEMATIC:
   306 000F2               		INST_DAA:			;-------Instruction Test => DAA , C?
   307 000F2 6001          			MOV		A,@0x01
   308 000F3 015A          			MOV		INST,A
   309 000F4 40EA          			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
   310 000F5 60AA          			MOV		A,@0xAA
   311 000F6 0001          			DAA
   312 000F7 3803          			JBS		C			; Check C = 1?
   313 000F8 5071          			JMP	INS_FAIL
   314 000F9 3103          			JBC		DC			; Check DC = 0?
   315 000FA 5071          			JMP	INS_FAIL
   316 000FB 3203          			JBC		Z			; Check Z = 0?
   317 000FC 5071          			JMP	INS_FAIL
   318 000FD 3503          			JBC		OV			; Check OV = 0?
   319 000FE 5071          			JMP	INS_FAIL
   320 000FF 3603          			JBC		N			; Check N = 0?
   321 00100 5071          			JMP	INS_FAIL
   322 00101 6C10          			XOR		A,@0x10		; Check Result ?
   323 00102 3A03          			JBS		Z			; Check Z = 1?
   324 00103 5071          			JMP	INS_FAIL
   325 00104 3603          			JBC		N			; Check N = 0?
   326 00105 5071          			JMP	INS_FAIL
   327 00106 40EA          			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
   328 00107 6080          			MOV		A,@0x80
   329 00108 0150          			MOV		0x50,A		; [0x50] = 0x80
   330 00109 607F          			MOV		A,@0x7F		; 
   331 0010A 0E50          			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
   332 0010B 0001          			DAA
   333 0010C 3803          			JBS		C			; Check C = 1?
   334 0010D 5071          			JMP	INS_FAIL
   335 0010E 3103          			JBC		DC			; Check DC = 0?
   336 0010F 5071          			JMP	INS_FAIL
   337 00110 3203          			JBC		Z			; Check Z = 0?
   338 00111 5071          			JMP	INS_FAIL
   339 00112 3503          			JBC		OV			; Check OV = 0?
   340 00113 5071          			JMP	INS_FAIL
   341 00114 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   342 00115 5071          			JMP	INS_FAIL
   343 00116 2203          			BC		Z
   344 00117 2603          			BC		N
   345 00118 6C65          			XOR		A,@0x65		; Check Result ?
   346 00119 3A03          			JBS		Z			; Check Z = 1?
   347 0011A 5071          			JMP	INS_FAIL
   348 0011B 3603          			JBC		N			; Check N = 0?
   349 0011C 5071          			JMP	INS_FAIL
   350 0011D 0000          			NOP
   351 0011E 6000          			MOV		A,@0x00
   352 0011F 0103          			MOV		STATUS,A
   353                     			;-------DAA(0x00)=66
   354 00120 2803          			BS		C
   355 00121 6080          			MOV		A,@0x80
   356 00122 0150          			MOV		0x50,A		; [0x50] = 0x80
   357 00123 607F          			MOV		A,@0x7F		; 
   358 00124 7E50          			ADC		A,0x50		; A = 0x7F + 0x80
   359 00125 0001          			DAA
   360 00126 3803          			JBS		C			; Check C = 1? 	/ By ADC
   361 00127 5071          			JMP	INS_FAIL
   362 00128 3903          			JBS		DC			; Check DC = 1? / By ADC
   363 00129 5071          			JMP	INS_FAIL
   364 0012A 3A03          			JBS		Z			; Check Z = 1? 	/ By ADC
   365 0012B 5071          			JMP	INS_FAIL
   366 0012C 3503          			JBC		OV			; Check OV = 0?
   367 0012D 5071          			JMP	INS_FAIL
   368 0012E 3603          			JBC		N			; Check N = 0?
   369 0012F 5071          			JMP	INS_FAIL
   370 00130 6C66          			XOR		A,@0x66		; Check Result ?
   371 00131 3A03          			JBS		Z			; Check Z = 1?
   372 00132 5071          			JMP	INS_FAIL
   373 00133 3603          			JBC		N			; Check N = 0?
   374 00134 5071          			JMP	INS_FAIL
   375 00135 6000          			MOV		A,@0x00
   376 00136 0103          			MOV		STATUS,A
   377                     			;-------DAA(0x80)=E6
   378 00137 60FF          			MOV		A,@0xFF
   379 00138 0150          			MOV		0x50,A		; [0x50] = 0xFF
   380 00139 607F          			MOV		A,@0x7F		; 
   381 0013A 0450          			SUB		A,0x50		; A = 0xFF - 0x7F
   382 0013B 0001          			DAA
   383 0013C 3803          			JBS		C			; Check C = 1? 	/ By SUB
   384 0013D 5071          			JMP	INS_FAIL
   385 0013E 3903          			JBS		DC			; Check DC = 1? / By SUB
   386 0013F 5071          			JMP	INS_FAIL
   387 00140 3203          			JBC		Z			; Check Z = 0?
   388 00141 5071          			JMP	INS_FAIL
   389 00142 3503          			JBC		OV			; Check OV = 0?
   390 00143 5071          			JMP	INS_FAIL
   391 00144 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   392 00145 5071          			JMP	INS_FAIL
   393 00146 2203          			BC		Z
   394 00147 2603          			BC		N
   395 00148 6CE6          			XOR		A,@0xE6		; Check Result ?
   396 00149 3A03          			JBS		Z			; Check Z = 1?
   397 0014A 5071          			JMP	INS_FAIL
   398 0014B 3603          			JBC		N			; Check N = 0?
   399 0014C 5071          			JMP	INS_FAIL
   400                     
   401                     		
   402 0014D               		INST_CLA:			;-------Instruction Test => CLA
   403 0014D 6008          			MOV		A,@0x08
   404 0014E 015A          			MOV		INST,A
   405 0014F 605A          			MOV		A,@0x5A
   406 00150 6C5A          			XOR		A,@0x5A		; Check Result ?
   407 00151 3A03          			JBS		Z			; Check Z = 1?
   408 00152 5071          			JMP	INS_FAIL
   409 00153 3603          			JBC		N			; Check N = 0?
   410 00154 5071          			JMP	INS_FAIL
   411 00155 605A          			MOV		A,@0x5A
   412 00156 0200          			CLRA
   413 00157 3A03          			JBS		Z			; Check Z = 1?
   414 00158 5071          			JMP	INS_FAIL
   415 00159 2203          			BC		Z
   416 0015A 6C00          			XOR		A,@0x00		; Check Result ?
   417 0015B 3A03          			JBS		Z			; Check Z = 1?
   418 0015C 5071          			JMP	INS_FAIL
   419 0015D 3603          			JBC		N			; Check N = 0?
   420 0015E 5071          			JMP	INS_FAIL
   421 0015F               		INST_CLR:			;-------Instruction Test => CLR
   422 0015F 6009          			MOV		A,@0x09
   423 00160 015A          			MOV		INST,A
   424 00161 60AA          			MOV		A,@0xAA
   425 00162 0150          			MOV		0x50,A
   426 00163 1050          			MOV		A,0x50
   427 00164 6CAA          			XOR		A,@0xAA		; Check Result ?
   428 00165 3A03          			JBS		Z			; Check Z = 1?
   429 00166 5071          			JMP	INS_FAIL
   430 00167 3603          			JBC		N			; Check N = 0?
   431 00168 5071          			JMP	INS_FAIL
   432 00169 0350          			CLR		0x50
   433 0016A 3A03          			JBS		Z			; Check Z = 1?
   434 0016B 5071          			JMP	INS_FAIL
   435 0016C 2203          			BC		Z
   436 0016D 1050          			MOV		A,0x50
   437 0016E 6C00          			XOR		A,@0x00		; Check Result ?
   438 0016F 3A03          			JBS		Z			; Check Z = 1?
   439 00170 5071          			JMP	INS_FAIL
   440 00171 3603          			JBC		N			; Check N = 0?
   441 00172 5071          			JMP	INS_FAIL
   442 00173               		INST_SUB_A_R:		;-------Instruction Test => SUB A,R
   443 00173 600A          			MOV		A,@0x0A
   444 00174 015A          			MOV		INST,A
   445 00175 6000          			MOV		A,@0x00
   446 00176 0103          			MOV		STATUS,A
   447 00177 6002          			MOV		A,@0x02		; SUB(2-1)=1
   448 00178 0150          			MOV		0x50,A		; [0x50] = 0x02
   449 00179 6001          			MOV		A,@0x01
   450 0017A 0450          			SUB		A,0x50		; A = [0x50] - A
   451 0017B 3803          			JBS		C			; Check C = 1? 	; Resulet is Positive
   452 0017C 5071          			JMP	INS_FAIL
   453 0017D 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   454 0017E 5071          			JMP	INS_FAIL
   455 0017F 3203          			JBC		Z			; Check Z = 0?
   456 00180 5071          			JMP	INS_FAIL
   457 00181 3503          			JBC		OV			; Check OV = 0?
   458 00182 5071          			JMP	INS_FAIL
   459 00183 3603          			JBC		N			; Check N = 0?
   460 00184 5071          			JMP	INS_FAIL
   461 00185 2203          			BC		Z
   462 00186 6C01          			XOR		A,@0x01		; Check Result ?
   463 00187 3A03          			JBS		Z			; Check Z = 1?
   464 00188 5071          			JMP	INS_FAIL
   465 00189 3603          			JBC		N			; Check N = 0?
   466 0018A 5071          			JMP	INS_FAIL
   467 0018B 6000          			MOV		A,@0x00
   468 0018C 0103          			MOV		STATUS,A
   469 0018D 6002          			MOV		A,@0x02		; SUB(2-2)=0
   470 0018E 0150          			MOV		0x50,A		; [0x50] = 0x02
   471 0018F 6002          			MOV		A,@0x02
   472 00190 0450          			SUB		A,0x50		; A = [0x50] - A
   473 00191 3803          			JBS		C			; Check C = 1?	; Result is Positive
   474 00192 5071          			JMP	INS_FAIL
   475 00193 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   476 00194 5071          			JMP	INS_FAIL
   477 00195 3A03          			JBS		Z			; Check Z = 1?	; Result is Zero
   478 00196 5071          			JMP	INS_FAIL
   479 00197 3503          			JBC		OV			; Check OV = 0?
   480 00198 5071          			JMP	INS_FAIL
   481 00199 3603          			JBC		N			; Check N = 0?
   482 0019A 5071          			JMP	INS_FAIL
   483 0019B 2203          			BC		Z
   484 0019C 6C00          			XOR		A,@0x00		; Check Result ?
   485 0019D 3A03          			JBS		Z			; Check Z = 1?
   486 0019E 5071          			JMP	INS_FAIL
   487 0019F 3603          			JBC		N			; Check N = 0?
   488 001A0 5071          			JMP	INS_FAIL
   489 001A1 6000          			MOV		A,@0x00
   490 001A2 0103          			MOV		STATUS,A
   491 001A3 60FF          			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
   492 001A4 0150          			MOV		0x50,A		; [0x50] = 0xFF
   493 001A5 607F          			MOV		A,@0x7F
   494 001A6 0450          			SUB		A,0x50		; A = [0x50] - A
   495 001A7 3803          			JBS		C			; Check C = 1?
   496 001A8 5071          			JMP	INS_FAIL
   497 001A9 3903          			JBS		DC			; Check DC = 1?
   498 001AA 5071          			JMP	INS_FAIL
   499 001AB 3203          			JBC		Z			; Check Z = 0?
   500 001AC 5071          			JMP	INS_FAIL
   501 001AD 3503          			JBC		OV			; Check OV = 0?
   502 001AE 5071          			JMP	INS_FAIL
   503 001AF 3E03          			JBS		N			; Check N = 1?
   504 001B0 5071          			JMP	INS_FAIL
   505 001B1 2203          			BC		Z
   506 001B2 2603          			BC		N
   507 001B3 6C80          			XOR		A,@0x80		; Check Result ?
   508 001B4 3A03          			JBS		Z			; Check Z = 1?
   509 001B5 5071          			JMP	INS_FAIL
   510 001B6 3603          			JBC		N			; Check N = 0?
   511 001B7 5071          			JMP	INS_FAIL
   512 001B8 6000          			MOV		A,@0x00
   513 001B9 0103          			MOV		STATUS,A
   514 001BA 6080          			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
   515 001BB 0150          			MOV		0x50,A		; [0x50] = 0x80
   516 001BC 607F          			MOV		A,@0x7F
   517 001BD 0450          			SUB		A,0x50		; A = [0x50] - A
   518 001BE 3803          			JBS		C			; Check C = 1?
   519 001BF 5071          			JMP	INS_FAIL
   520 001C0 3103          			JBC		DC			; Check DC = 0?
   521 001C1 5071          			JMP	INS_FAIL
   522 001C2 3203          			JBC		Z			; Check Z = 0?
   523 001C3 5071          			JMP	INS_FAIL
   524 001C4 3D03          			JBS		OV			; Check OV = 1?
   525 001C5 5071          			JMP	INS_FAIL
   526 001C6 3603          			JBC		N			; Check N = 0?
   527 001C7 5071          			JMP	INS_FAIL
   528 001C8 2203          			BC		Z
   529 001C9 2603          			BC		N
   530 001CA 6C01          			XOR		A,@0x01		; Check Result ?
   531 001CB 3A03          			JBS		Z			; Check Z = 1?
   532 001CC 5071          			JMP	INS_FAIL
   533 001CD 3603          			JBC		N			; Check N = 0?
   534 001CE 5071          			JMP	INS_FAIL
   535 001CF 6000          			MOV		A,@0x00
   536 001D0 0103          			MOV		STATUS,A
   537 001D1 6001          			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
   538 001D2 0150          			MOV		0x50,A		; [0x50] = 0x01
   539 001D3 6003          			MOV		A,@0x03
   540 001D4 0450          			SUB		A,0x50		; A = [0x50] - A
   541 001D5 3003          			JBC		C			; Check C = 0?
   542 001D6 5071          			JMP	INS_FAIL
   543 001D7 3103          			JBC		DC			; Check DC = 0?
   544 001D8 5071          			JMP	INS_FAIL
   545 001D9 3203          			JBC		Z			; Check Z = 0?
   546 001DA 5071          			JMP	INS_FAIL
   547 001DB 3503          			JBC		OV			; Check OV = 0?
   548 001DC 5071          			JMP	INS_FAIL
   549 001DD 3E03          			JBS		N			; Check N = 1?
   550 001DE 5071          			JMP	INS_FAIL
   551 001DF 2203          			BC		Z
   552 001E0 2603          			BC		N
   553 001E1 6CFE          			XOR		A,@0xFE		; Check Result ?
   554 001E2 3A03          			JBS		Z			; Check Z = 1?
   555 001E3 5071          			JMP	INS_FAIL
   556 001E4 3603          			JBC		N			; Check N = 0?
   557 001E5 5071          			JMP	INS_FAIL
   558 001E6               		INST_SUB_R_A:		;-------Instruction Test => SUB R,A
   559 001E6 600B          			MOV		A,@0x0B
   560 001E7 015A          			MOV		INST,A
   561 001E8 6000          			MOV		A,@0x00
   562 001E9 0103          			MOV		STATUS,A
   563 001EA 6002          			MOV		A,@0x02
   564 001EB 0150          			MOV		0x50,A		; [0x50] = 0x02
   565 001EC 6001          			MOV		A,@0x01
   566 001ED 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   567 001EE 1003          			MOV		A,STATUS
   568 001EF 6C1B          			XOR		A,@0x1B		; for non reset
   569                     			;;XOR		A,@0x13
   570 001F0 40ED          			CALL	INST_XOR_JUDGE
   571 001F1 2203          			BC		Z
   572 001F2 2603          			BC		N
   573 001F3 1050          			MOV		A,0x50
   574 001F4 6C01          			XOR		A,@0x01		; Check Result ?
   575 001F5 40ED          			CALL	INST_XOR_JUDGE
   576 001F6 6000          			MOV		A,@0x00
   577 001F7 0103          			MOV		STATUS,A
   578 001F8 6002          			MOV		A,@0x02
   579 001F9 0150          			MOV		0x50,A		; [0x50] = 0x02
   580 001FA 6002          			MOV		A,@0x02
   581 001FB 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x02
   582 001FC 1003          			MOV		A,STATUS
   583 001FD 6C1F          			XOR		A,@0x1F		; for nono reset
   584                     			;;XOR		A,@0x17
   585 001FE 40ED          			CALL	INST_XOR_JUDGE
   586 001FF 2203          			BC		Z
   587 00200 2603          			BC		N
   588 00201 1050          			MOV		A,0x50
   589 00202 6C00          			XOR		A,@0x00		; Check Result ?
   590 00203 3A03          			JBS		Z			; Check Z = 1?
   591 00204 5071          			JMP	INS_FAIL
   592 00205 3603          			JBC		N			; Check N = 0?
   593 00206 5071          			JMP	INS_FAIL
   594 00207 6000          			MOV		A,@0x00
   595 00208 0103          			MOV		STATUS,A
   596 00209 6080          			MOV		A,@0x80
   597 0020A 0150          			MOV		0x50,A		; [0x50] = 0x80
   598 0020B 6001          			MOV		A,@0x01
   599 0020C 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   600 0020D 1003          			MOV		A,STATUS
   601 0020E 6C39          			XOR		A,@0x39	;; for non reset
   602                     			;;XOR		A,@0x31
   603 0020F 40ED          			CALL	INST_XOR_JUDGE
   604 00210 2203          			BC		Z
   605 00211 2603          			BC		N
   606 00212 1050          			MOV		A,0x50
   607 00213 6C7F          			XOR		A,@0x7F		; Check Result ?
   608 00214 40ED          			CALL	INST_XOR_JUDGE
   609 00215               		INST_SUB_A_K:		;-------Instruction Test => SUB A,k
   610 00215 6030          			MOV		A,@0x30
   611 00216 015A          			MOV		INST,A
   612 00217 40EA          			CALL	STATUS_CLEAR
   613 00218 60FF          			MOV		A,@0xFF		; 0xFF-0xFF
   614 00219 74FF          			SUB		A,@0xFF		; A = 0xFF - 0xFF
   615 0021A 3803          			JBS		C			; Check C = 1?
   616 0021B 5071          			JMP	INS_FAIL
   617 0021C 3903          			JBS		DC			; Check DC = 1?
   618 0021D 5071          			JMP	INS_FAIL
   619 0021E 3A03          			JBS		Z			; Check Z = 1?
   620 0021F 5071          			JMP	INS_FAIL
   621 00220 3503          			JBC		OV			; Check OV = 0?
   622 00221 5071          			JMP	INS_FAIL
   623 00222 3603          			JBC		N			; Check N = 0?
   624 00223 5071          			JMP	INS_FAIL
   625 00224 6C00          			XOR		A,@0x00		; Check Result ?
   626 00225 40ED          			CALL	INST_XOR_JUDGE
   627 00226 40EA          			CALL	STATUS_CLEAR
   628 00227 607F          			MOV		A,@0x7F		; 0x00-0x7F
   629 00228 7400          			SUB		A,@0x00		; A = 0x00 - 0x7F
   630 00229 3003          			JBC		C			; Check C = 0?
   631 0022A 5071          			JMP	INS_FAIL
   632 0022B 3103          			JBC		DC			; Check DC = 0?
   633 0022C 5071          			JMP	INS_FAIL
   634 0022D 3203          			JBC		Z			; Check Z = 0?
   635 0022E 5071          			JMP	INS_FAIL
   636 0022F 3503          			JBC		OV			; Check OV = 0?
   637 00230 5071          			JMP	INS_FAIL
   638 00231 3E03          			JBS		N			; Check N = 1?
   639 00232 5071          			JMP	INS_FAIL
   640 00233 6C81          			XOR		A,@0x81		; Check Result ?
   641 00234 40ED          			CALL	INST_XOR_JUDGE
   642 00235 40EA          			CALL	STATUS_CLEAR
   643 00236 6001          			MOV		A,@0x01		; 0x80-0x01
   644 00237 7480          			SUB		A,@0x80		; A = 0x80 - 0x01
   645 00238 3803          			JBS		C			; Check C = 1?
   646 00239 5071          			JMP	INS_FAIL
   647 0023A 3103          			JBC		DC			; Check DC = 0?
   648 0023B 5071          			JMP	INS_FAIL
   649 0023C 3203          			JBC		Z			; Check Z = 0?
   650 0023D 5071          			JMP	INS_FAIL
   651 0023E 3D03          			JBS		OV			; Check OV = 1?
   652 0023F 5071          			JMP	INS_FAIL
   653 00240 3603          			JBC		N			; Check N = 0?
   654 00241 5071          			JMP	INS_FAIL
   655 00242 6C7F          			XOR		A,@0x7F		; Check Result ?
   656 00243 40ED          			CALL	INST_XOR_JUDGE
   657 00244               		INST_SUBB_A_R:		;-------Instruction Test => SUBB A,R
   658 00244 6031          			MOV		A,@0x31
   659 00245 015A          			MOV		INST,A
   660 00246 40EA          			CALL	STATUS_CLEAR
   661 00247 2003          			BC		C			; B = 1
   662 00248 6000          			MOV		A,@0x00		;0x00-0xF
   663 00249 0150          			MOV		0x50,A		; [0x50] = 0x00
   664 0024A 60FF          			MOV		A,@0xFF		; A = 0x01
   665 0024B 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   666 0024C 3003          			JBC		C			; Check C = 0?
   667 0024D 5071          			JMP	INS_FAIL
   668 0024E 3103          			JBC		DC			; Check DC = 0?
   669 0024F 5071          			JMP	INS_FAIL
   670 00250 3A03          			JBS		Z			; Check Z = 1?
   671 00251 5071          			JMP	INS_FAIL
   672 00252 3503          			JBC		OV			; Check OV = 0?
   673 00253 5071          			JMP	INS_FAIL
   674 00254 3603          			JBC		N			; Check N = 0?
   675 00255 5071          			JMP	INS_FAIL
   676 00256 6C00          			XOR		A,@0x00		; Check Result ?
   677 00257 40ED          			CALL	INST_XOR_JUDGE	
   678 00258 40EA          			CALL	STATUS_CLEAR
   679 00259 2003          			BC		C			; B = 1
   680 0025A 6000          			MOV		A,@0x00		; 0x00-0x7F
   681 0025B 0150          			MOV		0x50,A		; [0x50] = 0x00
   682 0025C 607F          			MOV		A,@0x7F		; A = 0x01
   683 0025D 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   684 0025E 3003          			JBC		C			; Check C = 0?
   685 0025F 5071          			JMP	INS_FAIL
   686 00260 3103          			JBC		DC			; Check DC = 0?
   687 00261 5071          			JMP	INS_FAIL
   688 00262 3203          			JBC		Z			; Check Z = 0?
   689 00263 5071          			JMP	INS_FAIL
   690 00264 3503          			JBC		OV			; Check OV = 0?
   691 00265 5071          			JMP	INS_FAIL
   692 00266 3E03          			JBS		N			; Check N = 1?
   693 00267 5071          			JMP	INS_FAIL
   694 00268 6C80          			XOR		A,@0x80		; Check Result ?
   695 00269 40ED          			CALL	INST_XOR_JUDGE
   696 0026A 40EA          			CALL	STATUS_CLEAR
   697 0026B 2003          			BC		C			; B = 1
   698 0026C 6080          			MOV		A,@0x80		; 0x80-0x01
   699 0026D 0150          			MOV		0x50,A		; [0x50] = 0x80
   700 0026E 6001          			MOV		A,@0x01		; A = 0x01
   701 0026F 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   702 00270 3803          			JBS		C			; Check C = 1?
   703 00271 5071          			JMP	INS_FAIL
   704 00272 3103          			JBC		DC			; Check DC = 0?
   705 00273 5071          			JMP	INS_FAIL
   706 00274 3203          			JBC		Z			; Check Z = 0?
   707 00275 5071          			JMP	INS_FAIL
   708 00276 3D03          			JBS		OV			; Check OV = 1?
   709 00277 5071          			JMP	INS_FAIL
   710 00278 3603          			JBC		N			; Check N = 0?
   711 00279 5071          			JMP	INS_FAIL
   712 0027A 6C7E          			XOR		A,@0x7E		; Check Result ?
   713 0027B 40ED          			CALL	INST_XOR_JUDGE
   714 0027C               		INST_SUBB_R_A:			;-------Instruction Test => SUBB R,A
   715 0027C 6032          			MOV		A,@0x32
   716 0027D 015A          			MOV		INST,A
   717 0027E 40EA          			CALL	STATUS_CLEAR
   718 0027F 2003          			BC		C			; B = 1
   719 00280 6000          			MOV		A,@0x00		; 0x00-0xFF
   720 00281 0150          			MOV		0x50,A		; [0x50] = 0x00
   721 00282 60FF          			MOV		A,@0xFF
   722 00283 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
   723 00284 1003          			MOV		A,STATUS
   724 00285 6C1C          			XOR		A,@0x1C		; Check Status ?
   725                     			;;XOR		A,@0x14		; Check Status ?
   726 00286 40ED          			CALL	INST_XOR_JUDGE
   727 00287 1050          			MOV		A,0x50
   728 00288 6C00          			XOR		A,@0x00		; Check Result ?
   729 00289 40ED          			CALL	INST_XOR_JUDGE
   730 0028A 40EA          			CALL	STATUS_CLEAR
   731 0028B 2003          			BC		C			; B = 1
   732 0028C 6000          			MOV		A,@0x00		; 0x00-0x7F
   733 0028D 0150          			MOV		0x50,A		; [0x50] = 0x00
   734 0028E 607F          			MOV		A,@0x7F
   735 0028F 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
   736 00290 1003          			MOV		A,STATUS
   737 00291 6C58          			XOR		A,@0x58		; Check Status ?
   738                     			;;XOR		A,@0x50		; Check Status ?
   739 00292 40ED          			CALL	INST_XOR_JUDGE
   740 00293 1050          			MOV		A,0x50
   741 00294 6C80          			XOR		A,@0x80		; Check Result ?
   742 00295 40ED          			CALL	INST_XOR_JUDGE
   743 00296 40EA          			CALL	STATUS_CLEAR
   744 00297 2003          			BC		C			; B = 1
   745 00298 6080          			MOV		A,@0x80		; ,0x80-0x01
   746 00299 0150          			MOV		0x50,A		; [0x50] = 0x80
   747 0029A 6001          			MOV		A,@0x01
   748 0029B 7950          			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
   749 0029C 1003          			MOV		A,STATUS
   750 0029D 6C39          			XOR		A,@0x39		; Check Status ?
   751                     			;;XOR		A,@0x31		; Check Status ?
   752 0029E 40ED          			CALL	INST_XOR_JUDGE
   753 0029F 1050          			MOV		A,0x50
   754 002A0 6C7E          			XOR		A,@0x7E		; Check Result ?
   755 002A1 40ED          			CALL	INST_XOR_JUDGE
   756                     
   757 002A2               		INST_DECA:			;-------Instruction Test => DECA R
   758 002A2 600C          			MOV		A,@0x0C
   759 002A3 015A          			MOV		INST,A
   760 002A4 6000          			MOV		A,@0x00
   761 002A5 0103          			MOV		STATUS,A
   762 002A6 6020          			MOV		A,@0x20		; 0x20-1
   763 002A7 0150          			MOV		0x50,A		; [0x50] = 0x20
   764 002A8 0650          			DECA	0x50		; A = [0x50] - 1
   765 002A9 3803          			JBS		C			; Check C = 1?	; Result is Positive
   766 002AA 5071          			JMP	INS_FAIL
   767 002AB 3103          			JBC		DC			; Check DC = 0?
   768 002AC 5071          			JMP	INS_FAIL
   769 002AD 3203          			JBC		Z			; Check Z = 0?
   770 002AE 5071          			JMP	INS_FAIL
   771 002AF 3503          			JBC		OV			; Check OV = 0?
   772 002B0 5071          			JMP	INS_FAIL
   773 002B1 3603          			JBC		N			; Check N = 0?
   774 002B2 5071          			JMP	INS_FAIL
   775 002B3 6C1F          			XOR		A,@0x1F		; Check Result ?
   776 002B4 3A03          			JBS		Z			; Check Z = 1?
   777 002B5 5071          			JMP	INS_FAIL
   778 002B6 3603          			JBC		N			; Check N = 0?
   779 002B7 5071          			JMP	INS_FAIL
   780 002B8 6000          			MOV		A,@0x00
   781 002B9 0103          			MOV		STATUS,A
   782 002BA 6001          			MOV		A,@0x01		; 0x01-1
   783 002BB 0150          			MOV		0x50,A		; [0x50] = 0x01
   784 002BC 0650          			DECA	0x50		; A = [0x50] - 1
   785 002BD 3803          			JBS		C			; Check C = 1?	; Result is Positive
   786 002BE 5071          			JMP	INS_FAIL
   787 002BF 3903          			JBS		DC			; Check DC = 1?
   788 002C0 5071          			JMP	INS_FAIL
   789 002C1 3A03          			JBS		Z			; Check Z = 1?
   790 002C2 5071          			JMP	INS_FAIL
   791 002C3 3503          			JBC		OV			; Check OV = 0?
   792 002C4 5071          			JMP	INS_FAIL
   793 002C5 3603          			JBC		N			; Check N = 0?
   794 002C6 5071          			JMP	INS_FAIL
   795 002C7 2203          			BC		Z
   796 002C8 6C00          			XOR		A,@0x00		; Check Result ?
   797 002C9 3A03          			JBS		Z			; Check Z = 1?
   798 002CA 5071          			JMP	INS_FAIL
   799 002CB 3603          			JBC		N			; Check N = 0?
   800 002CC 5071          			JMP	INS_FAIL
   801 002CD 6000          			MOV		A,@0x00
   802 002CE 0103          			MOV		STATUS,A
   803 002CF 6000          			MOV		A,@0x00		; 0x00-1
   804 002D0 0150          			MOV		0x50,A		; [0x50] = 0x00
   805 002D1 0650          			DECA	0x50		; A = [0x50] - 1
   806 002D2 3003          			JBC		C			; Check C = 0?
   807 002D3 5071          			JMP	INS_FAIL
   808 002D4 3103          			JBC		DC			; Check DC = 0?
   809 002D5 5071          			JMP	INS_FAIL
   810 002D6 3203          			JBC		Z			; Check Z = 0?
   811 002D7 5071          			JMP	INS_FAIL
   812 002D8 3503          			JBC		OV			; Check OV = 0?
   813 002D9 5071          			JMP	INS_FAIL
   814 002DA 3E03          			JBS		N			; Check N = 1?
   815 002DB 5071          			JMP	INS_FAIL
   816 002DC 2203          			BC		Z
   817 002DD 2603          			BC		N
   818 002DE 6CFF          			XOR		A,@0xFF		; Check Result ?
   819 002DF 3A03          			JBS		Z			; Check Z = 1?
   820 002E0 5071          			JMP	INS_FAIL
   821 002E1 3603          			JBC		N			; Check N = 0?
   822 002E2 5071          			JMP	INS_FAIL
   823 002E3 6000          			MOV		A,@0x00
   824 002E4 0103          			MOV		STATUS,A
   825 002E5 6080          			MOV		A,@0x80		; 0x80-1
   826 002E6 0150          			MOV		0x50,A		; [0x50] = 0x80
   827 002E7 0650          			DECA	0x50		; A = [0x50] - 1
   828 002E8 3803          			JBS		C			; Check C = 1?
   829 002E9 5071          			JMP	INS_FAIL
   830 002EA 3103          			JBC		DC			; Check DC = 0?
   831 002EB 5071          			JMP	INS_FAIL
   832 002EC 3203          			JBC		Z			; Check Z = 0?
   833 002ED 5071          			JMP	INS_FAIL
   834 002EE 3D03          			JBS		OV			; Check OV = 1?
   835 002EF 5071          			JMP	INS_FAIL
   836 002F0 3603          			JBC		N			; Check N = 0?
   837 002F1 5071          			JMP	INS_FAIL
   838 002F2 2203          			BC		Z
   839 002F3 2603          			BC		N
   840 002F4 6C7F          			XOR		A,@0x7F		; Check Result ?
   841 002F5 3A03          			JBS		Z			; Check Z = 1?
   842 002F6 5071          			JMP	INS_FAIL
   843 002F7 3603          			JBC		N			; Check N = 0?
   844 002F8 5071          			JMP	INS_FAIL
   845                     
   846                     
   847                     
   848 002F9               		INST_DEC:			;-------Instruction Test => DEC R
   849 002F9 600D          			MOV		A,@0x0D
   850 002FA 015A          			MOV		INST,A
   851 002FB 6000          			MOV		A,@0x00
   852 002FC 0103          			MOV		STATUS,A
   853 002FD 6020          			MOV		A,@0x20		; 0x20-1
   854 002FE 0150          			MOV		0x50,A		; [0x50] = 0x20
   855 002FF 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   856 00300 1003          			MOV		A,STATUS
   857 00301 6C19          			XOR		A,@0x19		; Check Status ? for non rest
   858                     			;;XOR		A,@0x11		; Check Status ?
   859 00302 3A03          			JBS		Z			; Check Z = 1?
   860 00303 5071          			JMP	INS_FAIL
   861 00304 3603          			JBC		N			; Check N = 0?
   862 00305 5071          			JMP	INS_FAIL
   863 00306 2203          			BC		Z
   864 00307 1050          			MOV		A,0x50
   865 00308 6C1F          			XOR		A,@0x1F		; Check Result ?
   866 00309 3A03          			JBS		Z			; Check Z = 1?
   867 0030A 5071          			JMP	INS_FAIL
   868 0030B 3603          			JBC		N			; Check N = 0?
   869 0030C 5071          			JMP	INS_FAIL
   870 0030D 6000          			MOV		A,@0x00
   871 0030E 0103          			MOV		STATUS,A
   872 0030F 6001          			MOV		A,@0x01		; 0x01-1
   873 00310 0150          			MOV		0x50,A		; [0x50] = 0x01
   874 00311 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   875 00312 1003          			MOV		A,STATUS
   876 00313 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
   877                     			;;XOR		A,@0x17		; Check Status ?
   878 00314 3A03          			JBS		Z			; Check Z = 1?
   879 00315 5071          			JMP	INS_FAIL
   880 00316 3603          			JBC		N			; Check N = 0?
   881 00317 5071          			JMP	INS_FAIL
   882 00318 2203          			BC		Z
   883 00319 1050          			MOV		A,0x50
   884 0031A 6C00          			XOR		A,@0x00		; Check Result ?
   885 0031B 3A03          			JBS		Z			; Check Z = 1?
   886 0031C 5071          			JMP	INS_FAIL
   887 0031D 3603          			JBC		N			; Check N = 0?
   888 0031E 5071          			JMP	INS_FAIL
   889 0031F 6000          			MOV		A,@0x00
   890 00320 0103          			MOV		STATUS,A
   891 00321 6000          			MOV		A,@0x00		; 0x00-1
   892 00322 0150          			MOV		0x50,A		; [0x50] = 0x00
   893 00323 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   894 00324 1003          			MOV		A,STATUS
   895 00325 6C58          			XOR		A,@0x58		; Check Status ? for non reset
   896                     			;;XOR		A,@0x50		; Check Status ?
   897 00326 3A03          			JBS		Z			; Check Z = 1?
   898 00327 5071          			JMP	INS_FAIL
   899 00328 3603          			JBC		N			; Check N = 0?
   900 00329 5071          			JMP	INS_FAIL
   901 0032A 2203          			BC		Z
   902 0032B 1050          			MOV		A,0x50
   903 0032C 6CFF          			XOR		A,@0xFF		; Check Result ?
   904 0032D 3A03          			JBS		Z			; Check Z = 1?
   905 0032E 5071          			JMP	INS_FAIL
   906 0032F 3603          			JBC		N			; Check N = 0?
   907 00330 5071          			JMP	INS_FAIL
   908 00331 6000          			MOV		A,@0x00
   909 00332 0103          			MOV		STATUS,A
   910 00333 6080          			MOV		A,@0x80		; 0x80-1
   911 00334 0150          			MOV		0x50,A		; [0x50] = 0x80
   912 00335 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   913 00336 1003          			MOV		A,STATUS
   914 00337 6C39          			XOR		A,@0x39		; Check Status ? for non reset
   915                     			;;XOR		A,@0x31		; Check Status ?
   916 00338 3A03          			JBS		Z			; Check Z = 1?
   917 00339 5071          			JMP	INS_FAIL
   918 0033A 3603          			JBC		N			; Check N = 0?
   919 0033B 5071          			JMP	INS_FAIL
   920 0033C 2203          			BC		Z
   921 0033D 1050          			MOV		A,0x50
   922 0033E 6C7F          			XOR		A,@0x7F		; Check Result ?
   923 0033F 3A03          			JBS		Z			; Check Z = 1?
   924 00340 5071          			JMP	INS_FAIL
   925 00341 3603          			JBC		N			; Check N = 0?
   926 00342 5071          			JMP	INS_FAIL
   927                     
   928 00343               		INST_ADD_A_R:		;-------Instruction Test => ADD A,R
   929 00343 6012          			MOV		A,@0x12
   930 00344 015A          			MOV		INST,A
   931 00345 40EA          			CALL	STATUS_CLEAR	; 0x80+0x7F
   932 00346 6080          			MOV		A,@0x80
   933 00347 0150          			MOV		0x50,A		; [0x50] = 0x80
   934 00348 607F          			MOV		A,@0x7F		; 
   935 00349 0E50          			ADD		A,0x50		; A = 0x7F + 0x80
   936 0034A 3003          			JBC		C			; Check C = 0?
   937 0034B 5071          			JMP	INS_FAIL
   938 0034C 3103          			JBC		DC			; Check DC = 0?
   939 0034D 5071          			JMP	INS_FAIL
   940 0034E 3203          			JBC		Z			; Check Z = 0?
   941 0034F 5071          			JMP	INS_FAIL
   942 00350 3503          			JBC		OV			; Check OV = 0?
   943 00351 5071          			JMP	INS_FAIL
   944 00352 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   945 00353 5071          			JMP	INS_FAIL
   946 00354 2203          			BC		Z
   947 00355 2603          			BC		N
   948 00356 6CFF          			XOR		A,@0xFF		; Check Result ?
   949 00357 3A03          			JBS		Z			; Check Z = 1?
   950 00358 5071          			JMP	INS_FAIL
   951 00359 3603          			JBC		N			; Check N = 0?
   952 0035A 5071          			JMP	INS_FAIL
   953 0035B 40EA          			CALL	STATUS_CLEAR	; 0xFF+0x01
   954 0035C 60FF          			MOV		A,@0xFF
   955 0035D 0150          			MOV		0x50,A		; [0x50] = 0xFF
   956 0035E 6001          			MOV		A,@0x01		; 
   957 0035F 0E50          			ADD		A,0x50		; A = 0x01 + 0xFF
   958 00360 3803          			JBS		C			; Check C = 1?
   959 00361 5071          			JMP	INS_FAIL
   960 00362 3903          			JBS		DC			; Check DC = 1?
   961 00363 5071          			JMP	INS_FAIL
   962 00364 3A03          			JBS		Z			; Check Z = 1?
   963 00365 5071          			JMP	INS_FAIL
   964 00366 3503          			JBC		OV			; Check OV = 0?
   965 00367 5071          			JMP	INS_FAIL
   966 00368 3603          			JBC		N			; Check N = 0?
   967 00369 5071          			JMP	INS_FAIL
   968 0036A 2203          			BC		Z
   969 0036B 2603          			BC		N
   970 0036C 6C00          			XOR		A,@0x00		; Check Result ?
   971 0036D 3A03          			JBS		Z			; Check Z = 1?
   972 0036E 5071          			JMP	INS_FAIL
   973 0036F 3603          			JBC		N			; Check N = 0?
   974 00370 5071          			JMP	INS_FAIL
   975 00371 40EA          			CALL	STATUS_CLEAR	; 0x7F+0x01
   976 00372 607F          			MOV		A,@0x7F
   977 00373 0150          			MOV		0x50,A		; [0x50] = 0x7F
   978 00374 6001          			MOV		A,@0x01		; 
   979 00375 0E50          			ADD		A,0x50		; A = 0x01 + 0x7F
   980 00376 3003          			JBC		C			; Check C = 0?
   981 00377 5071          			JMP	INS_FAIL
   982 00378 3903          			JBS		DC			; Check DC = 1?
   983 00379 5071          			JMP	INS_FAIL
   984 0037A 3203          			JBC		Z			; Check Z = 0?
   985 0037B 5071          			JMP	INS_FAIL
   986 0037C 3D03          			JBS		OV			; Check OV = 1?
   987 0037D 5071          			JMP	INS_FAIL
   988 0037E 3E03          			JBS		N			; Check N = 1?
   989 0037F 5071          			JMP	INS_FAIL
   990 00380 2203          			BC		Z
   991 00381 2603          			BC		N
   992 00382 6C80          			XOR		A,@0x80		; Check Result ?
   993 00383 3A03          			JBS		Z			; Check Z = 1?
   994 00384 5071          			JMP	INS_FAIL
   995 00385 3603          			JBC		N			; Check N = 0?
   996 00386 5071          			JMP	INS_FAIL
   997 00387               		INST_ADD_R_A:		;-------Instruction Test => ADD R,A
   998 00387 6013          			MOV		A,@0x13
   999 00388 015A          			MOV		INST,A
  1000 00389 40EA          			CALL	STATUS_CLEAR	; 0x80+0x7F
  1001 0038A 6080          			MOV		A,@0x80
  1002 0038B 0150          			MOV		0x50,A		; [0x50] = 0x80
  1003 0038C 607F          			MOV		A,@0x7F		; A = 0x7F
  1004 0038D 0F50          			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
  1005 0038E 1003          			MOV		A,STATUS
  1006 0038F 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1007                     			;;XOR		A,@0x50		; Check Status ?
  1008 00390 3A03          			JBS		Z			; Check Z = 1?
  1009 00391 5071          			JMP	INS_FAIL
  1010 00392 3603          			JBC		N			; Check N = 0?
  1011 00393 5071          			JMP	INS_FAIL
  1012 00394 1050          			MOV		A,0x50
  1013 00395 6CFF          			XOR		A,@0xFF		; Check Result ?
  1014 00396 3A03          			JBS		Z			; Check Z = 1?
  1015 00397 5071          			JMP	INS_FAIL
  1016 00398 3603          			JBC		N			; Check N = 0?
  1017 00399 5071          			JMP	INS_FAIL
  1018 0039A 40EA          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1019 0039B 60FF          			MOV		A,@0xFF
  1020 0039C 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1021 0039D 6001          			MOV		A,@0x01		; A = 0x01
  1022 0039E 0F50          			ADD		0x50,A		; [0x50] = 0xFF + 0x01
  1023 0039F 1003          			MOV		A,STATUS
  1024 003A0 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
  1025                     			;;XOR		A,@0x17		; Check Status ?
  1026 003A1 3A03          			JBS		Z			; Check Z = 1?
  1027 003A2 5071          			JMP	INS_FAIL
  1028 003A3 3603          			JBC		N			; Check N = 0?
  1029 003A4 5071          			JMP	INS_FAIL
  1030 003A5 1050          			MOV		A,0x50
  1031 003A6 6C00          			XOR		A,@0x00		; Check Result ?
  1032 003A7 3A03          			JBS		Z			; Check Z = 1?
  1033 003A8 5071          			JMP	INS_FAIL
  1034 003A9 3603          			JBC		N			; Check N = 0?
  1035 003AA 5071          			JMP	INS_FAIL
  1036 003AB 40EA          			CALL	STATUS_CLEAR	;0x7F+0x01
  1037 003AC 607F          			MOV		A,@0x7F
  1038 003AD 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1039 003AE 6001          			MOV		A,@0x01		; A = 0x01
  1040 003AF 0F50          			ADD		0x50,A		; [0x50] = 0x7F + 0x01
  1041 003B0 1003          			MOV		A,STATUS
  1042 003B1 6C7A          			XOR		A,@0x7A		; Check Status ? for non reset
  1043                     			;;XOR		A,@0x72		; Check Status ?
  1044 003B2 3A03          			JBS		Z			; Check Z = 1?
  1045 003B3 5071          			JMP	INS_FAIL
  1046 003B4 3603          			JBC		N			; Check N = 0?
  1047 003B5 5071          			JMP	INS_FAIL
  1048 003B6 1050          			MOV		A,0x50
  1049 003B7 6C80          			XOR		A,@0x80		; Check Result ?
  1050 003B8 3A03          			JBS		Z			; Check Z = 1?
  1051 003B9 5071          			JMP	INS_FAIL
  1052 003BA 3603          			JBC		N			; Check N = 0?
  1053 003BB 5071          			JMP	INS_FAIL
  1054 003BC               		INST_ADD_A_K:		;-------Instruction Test => ADD A,k
  1055 003BC 6034          			MOV		A,@0x34
  1056 003BD 015A          			MOV		INST,A
  1057 003BE 40EA          			CALL	STATUS_CLEAR
  1058 003BF 607F          			MOV		A,@0x7F		;0x7F+0x01
  1059 003C0 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1060 003C1 3003          			JBC		C			; Check C = 0?
  1061 003C2 5071          			JMP	INS_FAIL
  1062 003C3 3903          			JBS		DC			; Check DC = 1?
  1063 003C4 5071          			JMP	INS_FAIL
  1064 003C5 3203          			JBC		Z			; Check Z = 0?
  1065 003C6 5071          			JMP	INS_FAIL
  1066 003C7 3D03          			JBS		OV			; Check OV = 1?
  1067 003C8 5071          			JMP	INS_FAIL
  1068 003C9 3E03          			JBS		N			; Check N = 1?
  1069 003CA 5071          			JMP	INS_FAIL
  1070 003CB 6C80          			XOR		A,@0x80		; Check Result ?
  1071 003CC 40ED          			CALL	INST_XOR_JUDGE
  1072 003CD 40EA          			CALL	STATUS_CLEAR
  1073 003CE 60FF          			MOV		A,@0xFF		;0xFF+0x01
  1074 003CF 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1075 003D0 3803          			JBS		C			; Check C = 1?
  1076 003D1 5071          			JMP	INS_FAIL
  1077 003D2 3903          			JBS		DC			; Check DC = 1?
  1078 003D3 5071          			JMP	INS_FAIL
  1079 003D4 3A03          			JBS		Z			; Check Z = 1?
  1080 003D5 5071          			JMP	INS_FAIL
  1081 003D6 3503          			JBC		OV			; Check OV = 0?
  1082 003D7 5071          			JMP	INS_FAIL
  1083 003D8 3603          			JBC		N			; Check N = 0?
  1084 003D9 5071          			JMP	INS_FAIL
  1085 003DA 6C00          			XOR		A,@0x00		; Check Result ?
  1086 003DB 40ED          			CALL	INST_XOR_JUDGE
  1087 003DC 40EA          			CALL	STATUS_CLEAR
  1088 003DD 607F          			MOV		A,@0x7F		; 0x80+0x7F
  1089 003DE 7C80          			ADD		A,@0x80		; A = 0x80 + A
  1090 003DF 3003          			JBC		C			; Check C = 0?
  1091 003E0 5071          			JMP	INS_FAIL
  1092 003E1 3103          			JBC		DC			; Check DC = 0?
  1093 003E2 5071          			JMP	INS_FAIL
  1094 003E3 3203          			JBC		Z			; Check Z = 0?
  1095 003E4 5071          			JMP	INS_FAIL
  1096 003E5 3503          			JBC		OV			; Check OV = 0?
  1097 003E6 5071          			JMP	INS_FAIL
  1098 003E7 3E03          			JBS		N			; Check N = 1?
  1099 003E8 5071          			JMP	INS_FAIL
  1100 003E9 6CFF          			XOR		A,@0xFF		; Check Result ?
  1101 003EA 40ED          			CALL	INST_XOR_JUDGE
  1102 003EB               		INST_ADC_A_R:		;-------Instruction Test => ADC A,R
  1103 003EB 6036          			MOV		A,@0x36
  1104 003EC 015A          			MOV		INST,A
  1105 003ED 40EA          			CALL	STATUS_CLEAR
  1106 003EE 2803          			BS		C			; 0x7F+0x00
  1107 003EF 607F          			MOV		A,@0x7F		
  1108 003F0 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1109 003F1 6000          			MOV		A,@0x00		; A = 0x00
  1110 003F2 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1111 003F3 3003          			JBC		C			; Check C = 0?
  1112 003F4 5071          			JMP	INS_FAIL
  1113 003F5 3903          			JBS		DC			; Check DC = 1?
  1114 003F6 5071          			JMP	INS_FAIL
  1115 003F7 3203          			JBC		Z			; Check Z = 0?
  1116 003F8 5071          			JMP	INS_FAIL
  1117 003F9 3D03          			JBS		OV			; Check OV = 1?
  1118 003FA 5071          			JMP	INS_FAIL
  1119 003FB 3E03          			JBS		N			; Check N = 1?
  1120 003FC 5071          			JMP	INS_FAIL
  1121 003FD 6C80          			XOR		A,@0x80		; Check Result ?
  1122 003FE 40ED          			CALL	INST_XOR_JUDGE
  1123 003FF 40EA          			CALL	STATUS_CLEAR
  1124 00400 2803          			BS		C			; 0x80+0x7F
  1125 00401 6080          			MOV		A,@0x80
  1126 00402 0150          			MOV		0x50,A		; [0x50] = 0x80
  1127 00403 607F          			MOV		A,@0x7F		; A = 0x7F
  1128 00404 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1129 00405 3803          			JBS		C			; Check C = 1?
  1130 00406 5071          			JMP	INS_FAIL
  1131 00407 3903          			JBS		DC			; Check DC = 1?
  1132 00408 5071          			JMP	INS_FAIL
  1133 00409 3A03          			JBS		Z			; Check Z = 1?
  1134 0040A 5071          			JMP	INS_FAIL
  1135 0040B 3503          			JBC		OV			; Check OV = 0?
  1136 0040C 5071          			JMP	INS_FAIL
  1137 0040D 3603          			JBC		N			; Check N = 0?
  1138 0040E 5071          			JMP	INS_FAIL
  1139 0040F 6C00          			XOR		A,@0x00		; Check Result ?
  1140 00410 40ED          			CALL	INST_XOR_JUDGE
  1141 00411               		INST_ADC_R_A:		;-------Instruction Test => ADC R,A
  1142 00411 6037          			MOV		A,@0x37
  1143 00412 015A          			MOV		INST,A
  1144 00413 40EA          			CALL	STATUS_CLEAR
  1145 00414 2803          			BS		C			;0x7F+0x00
  1146 00415 607F          			MOV		A,@0x7F
  1147 00416 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1148 00417 6000          			MOV		A,@0x00		; A = 0x00
  1149 00418 2203          			BC		Z
  1150 00419 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1151 0041A 1003          			MOV		A,STATUS
  1152 0041B 6C7A          			XOR		A,@0x7A		; Check Status ?
  1153                     			;;XOR		A,@0x72		; Check Status ?
  1154 0041C 40ED          			CALL	INST_XOR_JUDGE
  1155 0041D 1050          			MOV		A,0x50
  1156 0041E 6C80          			XOR		A,@0x80		; Check Result ?
  1157 0041F 40ED          			CALL	INST_XOR_JUDGE
  1158 00420 40EA          			CALL	STATUS_CLEAR
  1159 00421 2803          			BS		C			;0x80+0x7F
  1160 00422 6080          			MOV		A,@0x80
  1161 00423 0150          			MOV		0x50,A		; [0x50] = 0x80
  1162 00424 607F          			MOV		A,@0x7F		; A = 0x7F
  1163 00425 2203          			BC		Z
  1164 00426 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1165 00427 1003          			MOV		A,STATUS
  1166 00428 6C1F          			XOR		A,@0x1F		; Check Status ?
  1167                     			;;XOR		A,@0x17		; Check Status ?
  1168 00429 40ED          			CALL	INST_XOR_JUDGE
  1169 0042A 1050          			MOV		A,0x50
  1170 0042B 6C00          			XOR		A,@0x00		; Check Result ?
  1171 0042C 40ED          			CALL	INST_XOR_JUDGE
  1172                     
  1173 0042D               		INST_INCA:			;-------Instruction Test => INCA R
  1174 0042D 6017          			MOV		A,@0x17
  1175 0042E 015A          			MOV		INST,A
  1176 0042F 40EA          			CALL	STATUS_CLEAR	; 0x7F+0x01
  1177 00430 607F          			MOV		A,@0x7F
  1178 00431 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1179 00432 1450          			INCA	0x50		; A = [0x50] +1		
  1180 00433 3003          			JBC		C			; Check C = 0?
  1181 00434 5071          			JMP	INS_FAIL
  1182 00435 3903          			JBS		DC			; Check DC = 1?
  1183 00436 5071          			JMP	INS_FAIL
  1184 00437 3203          			JBC		Z			; Check Z = 0?
  1185 00438 5071          			JMP	INS_FAIL
  1186 00439 3D03          			JBS		OV			; Check OV = 1?
  1187 0043A 5071          			JMP	INS_FAIL
  1188 0043B 3E03          			JBS		N			; Check N = 1?
  1189 0043C 5071          			JMP	INS_FAIL
  1190 0043D 2203          			BC		Z
  1191 0043E 2603          			BC		N
  1192 0043F 6C80          			XOR		A,@0x80		; Check Result ?
  1193 00440 3A03          			JBS		Z			; Check Z = 1?
  1194 00441 5071          			JMP	INS_FAIL
  1195 00442 3603          			JBC		N			; Check N = 0?
  1196 00443 5071          			JMP	INS_FAIL
  1197 00444 40EA          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1198 00445 60FF          			MOV		A,@0xFF
  1199 00446 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1200 00447 1450          			INCA	0x50		; A = [0x50] +1		
  1201 00448 3803          			JBS		C			; Check C = 1?
  1202 00449 5071          			JMP	INS_FAIL
  1203 0044A 3903          			JBS		DC			; Check DC = 1?
  1204 0044B 5071          			JMP	INS_FAIL
  1205 0044C 3A03          			JBS		Z			; Check Z = 1?
  1206 0044D 5071          			JMP	INS_FAIL
  1207 0044E 3503          			JBC		OV			; Check OV = 0?
  1208 0044F 5071          			JMP	INS_FAIL
  1209 00450 3603          			JBC		N			; Check N = 0?
  1210 00451 5071          			JMP	INS_FAIL
  1211 00452 2203          			BC		Z
  1212 00453 2603          			BC		N
  1213 00454 6C00          			XOR		A,@0x00		; Check Result ?
  1214 00455 3A03          			JBS		Z			; Check Z = 1?
  1215 00456 5071          			JMP	INS_FAIL
  1216 00457 3603          			JBC		N			; Check N = 0?
  1217 00458 5071          			JMP	INS_FAIL
  1218                     
  1219 00459               		INST_INC:			;-------Instruction Test => INC R
  1220 00459 6018          			MOV		A,@0x18
  1221 0045A 015A          			MOV		INST,A
  1222 0045B 40EA          			CALL 	STATUS_CLEAR	; 0x7F+0x01
  1223 0045C 607F          			MOV		A,@0x7F
  1224 0045D 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1225 0045E 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1226 0045F 1003          			MOV		A,STATUS
  1227 00460 6C7A          			XOR		A,@0x7A		; Check Status ?
  1228                     			;;XOR		A,@0x72		; Check Status ?
  1229 00461 3A03          			JBS		Z			; Check Z = 1?
  1230 00462 5071          			JMP	INS_FAIL
  1231 00463 3603          			JBC		N			; Check N = 0?
  1232 00464 5071          			JMP	INS_FAIL
  1233 00465 1050          			MOV		A,0x50
  1234 00466 6C80          			XOR		A,@0x80		; Check Result ?
  1235 00467 3A03          			JBS		Z			; Check Z = 1?
  1236 00468 5071          			JMP	INS_FAIL
  1237 00469 3603          			JBC		N			; Check N = 0?
  1238 0046A 5071          			JMP	INS_FAIL
  1239 0046B 40EA          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1240 0046C 60FF          			MOV		A,@0xFF
  1241 0046D 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1242 0046E 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1243 0046F 1003          			MOV		A,STATUS
  1244 00470 6C1F          			XOR		A,@0x1F		; Check Status ?
  1245                     			;;XOR		A,@0x17		; Check Status ?
  1246 00471 3A03          			JBS		Z			; Check Z = 1?
  1247 00472 5071          			JMP	INS_FAIL
  1248 00473 3603          			JBC		N			; Check N = 0?
  1249 00474 5071          			JMP	INS_FAIL
  1250 00475 1050          			MOV		A,0x50
  1251 00476 6C00          			XOR		A,@0x00		; Check Result ?
  1252 00477 3A03          			JBS		Z			; Check Z = 1?
  1253 00478 5071          			JMP	INS_FAIL
  1254 00479 3603          			JBC		N			; Check N = 0?
  1255 0047A 5071          			JMP	INS_FAIL
  1256                     
  1257 0047B               		INST_NEG_R:			;-------Instruction Test => NEG R
  1258 0047B 6035          			MOV		A,@0x35
  1259 0047C 015A          			MOV		INST,A
  1260 0047D 40EA          			CALL	STATUS_CLEAR
  1261 0047E 6000          			MOV		A,@0x00		; 0x00
  1262 0047F 0150          			MOV		0x50,A		; [0x50] = 0x00
  1263 00480 7D50          			NEG		0x50
  1264 00481 1003          			MOV		A,STATUS
  1265 00482 6C1F          			XOR		A,@0x1F		; Check Status ?
  1266                     			;;XOR		A,@0x17		; Check Status ?
  1267 00483 40ED          			CALL	INST_XOR_JUDGE
  1268 00484 1050          			MOV		A,0x50
  1269 00485 6C00          			XOR		A,@0x00		; Check Result ?
  1270 00486 40ED          			CALL	INST_XOR_JUDGE
  1271 00487 40EA          			CALL	STATUS_CLEAR
  1272 00488 6001          			MOV		A,@0x01		; 0x01
  1273 00489 0150          			MOV		0x50,A		; [0x50] = 0x01
  1274 0048A 7D50          			NEG		0x50
  1275 0048B 1003          			MOV		A,STATUS
  1276 0048C 6C58          			XOR		A,@0x58		; Check Status ?
  1277                     			;;XOR		A,@0x50		; Check Status ?
  1278 0048D 40ED          			CALL	INST_XOR_JUDGE
  1279 0048E 1050          			MOV		A,0x50
  1280 0048F 6CFF          			XOR		A,@0xFF		; Check Result ?
  1281 00490 4683          			CALL	INST_XCH
  1282 00491 40EA          			CALL	STATUS_CLEAR
  1283 00492 6080          			MOV		A,@0x80		; 0x80
  1284 00493 0150          			MOV		0x50,A		; [0x50] = 0x80
  1285 00494 7D50          			NEG		0x50
  1286 00495 1003          			MOV		A,STATUS
  1287 00496 6C7A          			XOR		A,@0x7A		; Check Status ?
  1288                     			;;XOR		A,@0x72		; Check Status ?
  1289 00497 40ED          			CALL	INST_XOR_JUDGE
  1290 00498 1050          			MOV		A,0x50
  1291 00499 6C80          			XOR		A,@0x80		; Check Result ?
  1292 0049A 40ED          			CALL	INST_XOR_JUDGE
  1293                     
  1294 0049B 0012          		RET
  1295 0049C               	TEST_INST_LOGIC_I:
  1296 0049C               		INST_BTG:			;-------Instruction Test => BTG R,b	
  1297 0049C 6006          			MOV		A,@0x06
  1298 0049D 015A          			MOV		INST,A
  1299 0049E 40EA          			CALL	STATUS_CLEAR
  1300 0049F 60FF          			MOV		A,@0xFF
  1301 004A0 0104          			MOV		RSR,A		; Start Address
  1302 004A1 0084          			BTG		RSR
  1303 004A2 1004          			MOV		A,RSR
  1304 004A3 6CFE          			XOR		A,@0xFE		; Check Result ?
  1305 004A4 40ED          			CALL	INST_XOR_JUDGE
  1306 004A5               		INST_OR_A_R:		;-------Instruction Test => OR A,R
  1307 004A5 600E          			MOV		A,@0x0E
  1308 004A6 015A          			MOV		INST,A
  1309 004A7 6000          			MOV		A,@0x00
  1310 004A8 0103          			MOV		STATUS,A
  1311 004A9 6000          			MOV		A,@0x00
  1312 004AA 0150          			MOV		0x50,A		; [0x50] = 0x00
  1313 004AB 6000          			MOV		A,@0x00
  1314 004AC 2203          			BC		Z
  1315 004AD 0850          			OR		A,0x50		; A = A | [0x50]
  1316 004AE 3003          			JBC		C			; Check C = 0?
  1317 004AF 5071          			JMP	INS_FAIL
  1318 004B0 3103          			JBC		DC			; Check DC = 0?
  1319 004B1 5071          			JMP	INS_FAIL
  1320 004B2 3A03          			JBS		Z			; Check Z = 1?
  1321 004B3 5071          			JMP	INS_FAIL
  1322 004B4 3503          			JBC		OV			; Check OV = 0?
  1323 004B5 5071          			JMP	INS_FAIL
  1324 004B6 3603          			JBC		N			; Check N = 0?
  1325 004B7 5071          			JMP	INS_FAIL
  1326 004B8 2203          			BC		Z
  1327 004B9 6C00          			XOR		A,@0x00		; Check Result ?
  1328 004BA 3A03          			JBS		Z			; Check Z = 1?
  1329 004BB 5071          			JMP	INS_FAIL
  1330 004BC 3603          			JBC		N			; Check N = 0?
  1331 004BD 5071          			JMP	INS_FAIL
  1332 004BE 6000          			MOV		A,@0x00
  1333 004BF 0103          			MOV		STATUS,A
  1334 004C0 6055          			MOV		A,@0x55
  1335 004C1 0150          			MOV		0x50,A		; [0x50] = 0x55
  1336 004C2 60AA          			MOV		A,@0xAA
  1337 004C3 2203          			BC		Z
  1338 004C4 0850          			OR		A,0x50		; A = A | [0x50]
  1339 004C5 3003          			JBC		C			; Check C = 0?
  1340 004C6 5071          			JMP	INS_FAIL
  1341 004C7 3103          			JBC		DC			; Check DC = 0?
  1342 004C8 5071          			JMP	INS_FAIL
  1343 004C9 3203          			JBC		Z			; Check Z = 0?
  1344 004CA 5071          			JMP	INS_FAIL
  1345 004CB 3503          			JBC		OV			; Check OV = 0?
  1346 004CC 5071          			JMP	INS_FAIL
  1347 004CD 3E03          			JBS		N			; Check N = 1?
  1348 004CE 5071          			JMP	INS_FAIL
  1349 004CF 2203          			BC		Z
  1350 004D0 6CFF          			XOR		A,@0xFF		; Check Result ?
  1351 004D1 3A03          			JBS		Z			; Check Z = 1?
  1352 004D2 5071          			JMP	INS_FAIL
  1353 004D3 3603          			JBC		N			; Check N = 0?
  1354 004D4 5071          			JMP	INS_FAIL
  1355                     
  1356 004D5               		INST_OR_R_A:		;-------Instruction Test => OR R,A
  1357 004D5 600F          			MOV		A,@0x0F
  1358 004D6 015A          			MOV		INST,A
  1359 004D7 6000          			MOV		A,@0x00
  1360 004D8 0103          			MOV		STATUS,A
  1361 004D9 6000          			MOV		A,@0x00
  1362 004DA 0150          			MOV		0x50,A		; [0x50] = 0x00
  1363 004DB 6000          			MOV		A,@0x00		; A = 0x00
  1364 004DC 2203          			BC		Z
  1365 004DD 0950          			OR		0x50,A		; [0x50] = A | [0x50]
  1366 004DE 1003          			MOV		A,STATUS
  1367 004DF 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1368                     			;;XOR		A,@0x14		; Check Status ?
  1369 004E0 3A03          			JBS		Z			; Check Z = 1?
  1370 004E1 5071          			JMP	INS_FAIL
  1371 004E2 3603          			JBC		N			; Check N = 0?
  1372 004E3 5071          			JMP	INS_FAIL
  1373 004E4 1050          			MOV		A,0x50		; A = Result[0x50]
  1374 004E5 2203          			BC		Z
  1375 004E6 2603          			BC		N
  1376 004E7 6C00          			XOR		A,@0x00		; Check Result ?
  1377 004E8 3A03          			JBS		Z			; Check Z = 1?
  1378 004E9 5071          			JMP	INS_FAIL
  1379 004EA 3603          			JBC		N			; Check N = 0?
  1380 004EB 5071          			JMP	INS_FAIL
  1381 004EC 6000          			MOV		A,@0x00
  1382 004ED 0103          			MOV		STATUS,A
  1383 004EE 6055          			MOV		A,@0x55
  1384 004EF 0150          			MOV		0x50,A		; [0x50] = 0x55
  1385 004F0 60AA          			MOV		A,@0xAA		; A = 0xAA
  1386 004F1 0950          			OR		0x50,A		; [0x50] = 0xAA | 0x55
  1387 004F2 1003          			MOV		A,STATUS
  1388 004F3 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1389                     			;;XOR		A,@0x50		; Check Status ?
  1390 004F4 3A03          			JBS		Z			; Check Z = 1?
  1391 004F5 5071          			JMP	INS_FAIL
  1392 004F6 3603          			JBC		N			; Check N = 0?
  1393 004F7 5071          			JMP	INS_FAIL
  1394 004F8 1050          			MOV		A,0x50
  1395 004F9 2203          			BC		Z
  1396 004FA 2603          			BC		N
  1397 004FB 6CFF          			XOR		A,@0xFF		; Check Result ?
  1398 004FC 3A03          			JBS		Z			; Check Z = 1?
  1399 004FD 5071          			JMP	INS_FAIL
  1400 004FE 3603          			JBC		N			; Check N = 0?
  1401 004FF 5071          			JMP	INS_FAIL
  1402                     
  1403 00500               		INST_AND_A_R:		;-------Instruction Test => AND A,R
  1404 00500 6010          			MOV		A,@0x10
  1405 00501 015A          			MOV		INST,A
  1406 00502 40EA          			CALL	STATUS_CLEAR
  1407 00503 6055          			MOV		A,@0x55
  1408 00504 0150          			MOV		0x50,A		; [0x50] = 0x55
  1409 00505 60AA          			MOV		A,@0xAA
  1410 00506 0A50          			AND		A,0x50		; A = 0xAA & 0x55
  1411 00507 3003          			JBC		C			; Check C = 0?
  1412 00508 5071          			JMP	INS_FAIL
  1413 00509 3103          			JBC		DC			; Check DC = 0?
  1414 0050A 5071          			JMP	INS_FAIL
  1415 0050B 3A03          			JBS		Z			; Check Z = 1?
  1416 0050C 5071          			JMP	INS_FAIL
  1417 0050D 3503          			JBC		OV			; Check OV = 0?
  1418 0050E 5071          			JMP	INS_FAIL
  1419 0050F 3603          			JBC		N			; Check N = 0?
  1420 00510 5071          			JMP	INS_FAIL
  1421 00511 6C00          			XOR		A,@0x00		; Check Result ?
  1422 00512 3A03          			JBS		Z			; Check Z = 1?
  1423 00513 5071          			JMP	INS_FAIL
  1424 00514 3603          			JBC		N			; Check N = 0?
  1425 00515 5071          			JMP	INS_FAIL
  1426 00516 40EA          			CALL	STATUS_CLEAR
  1427 00517 60F5          			MOV		A,@0xF5
  1428 00518 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1429 00519 60FA          			MOV		A,@0xFA
  1430 0051A 0A50          			AND		A,0x50		; A = 0xFA & 0xF5
  1431 0051B 3003          			JBC		C			; Check C = 0?
  1432 0051C 5071          			JMP	INS_FAIL
  1433 0051D 3103          			JBC		DC			; Check DC = 0?
  1434 0051E 5071          			JMP	INS_FAIL
  1435 0051F 3203          			JBC		Z			; Check Z = 0?
  1436 00520 5071          			JMP	INS_FAIL
  1437 00521 3503          			JBC		OV			; Check OV = 0?
  1438 00522 5071          			JMP	INS_FAIL
  1439 00523 3E03          			JBS		N			; Check N = 1?
  1440 00524 5071          			JMP	INS_FAIL
  1441 00525 6CF0          			XOR		A,@0xF0		; Check Result ?
  1442 00526 3A03          			JBS		Z			; Check Z = 1?
  1443 00527 5071          			JMP	INS_FAIL
  1444 00528 3603          			JBC		N			; Check N = 0?
  1445 00529 5071          			JMP	INS_FAIL
  1446 0052A               		INST_AND_R_A:		;-------Instruction Test => AND R,A
  1447 0052A 6011          			MOV		A,@0x11
  1448 0052B 015A          			MOV		INST,A
  1449 0052C 40EA          			CALL	STATUS_CLEAR
  1450 0052D 6055          			MOV		A,@0x55
  1451 0052E 0150          			MOV		0x50,A		; [0x50] = 0x55
  1452 0052F 60AA          			MOV		A,@0xAA
  1453 00530 0B50          			AND		0x50,A		; [0x50] = 0xAA & 0x55
  1454 00531 1003          			MOV		A,STATUS
  1455 00532 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1456                     			;;XOR		A,@0x14		; Check Status ?
  1457 00533 3A03          			JBS		Z			; Check Z = 1?
  1458 00534 5071          			JMP	INS_FAIL
  1459 00535 3603          			JBC		N			; Check N = 0?
  1460 00536 5071          			JMP	INS_FAIL
  1461 00537 2203          			BC		Z
  1462 00538 1050          			MOV		A,0x50
  1463 00539 2203          			BC		Z
  1464 0053A 6C00          			XOR		A,@0x00		; Check Result ?
  1465 0053B 3A03          			JBS		Z			; Check Z = 1?
  1466 0053C 5071          			JMP	INS_FAIL
  1467 0053D 3603          			JBC		N			; Check N = 0?
  1468 0053E 5071          			JMP	INS_FAIL
  1469 0053F 40EA          			CALL	STATUS_CLEAR
  1470 00540 60F5          			MOV		A,@0xF5
  1471 00541 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1472 00542 60FA          			MOV		A,@0xFA
  1473 00543 0B50          			AND		0x50,A		; [0x50] = 0xFA & 0xF5
  1474 00544 1003          			MOV		A,STATUS
  1475 00545 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1476                     			;;XOR		A,@0x50		; Check Status ?
  1477 00546 3A03          			JBS		Z			; Check Z = 1?
  1478 00547 5071          			JMP	INS_FAIL
  1479 00548 3603          			JBC		N			; Check N = 0?
  1480 00549 5071          			JMP	INS_FAIL
  1481 0054A 2203          			BC		Z
  1482 0054B 1050          			MOV		A,0x50
  1483 0054C 2203          			BC		Z
  1484 0054D 6CF0          			XOR		A,@0xF0		; Check Result ?
  1485 0054E 3A03          			JBS		Z			; Check Z = 1?
  1486 0054F 5071          			JMP	INS_FAIL
  1487 00550 3603          			JBC		N			; Check N = 0?
  1488 00551 5071          			JMP	INS_FAIL
  1489 00552               		INST_AND_A_K:		;-------Instruction Test => AND A,k
  1490 00552 6029          			MOV		A,@0x29
  1491 00553 015A          			MOV		INST,A
  1492 00554 40EA          			CALL	STATUS_CLEAR
  1493 00555 60AA          			MOV		A,@0xAA
  1494 00556 6855          			AND		A,@0x55		; A = 0xAA & 0x55
  1495 00557 3003          			JBC		C			; Check C = 0?
  1496 00558 5071          			JMP	INS_FAIL
  1497 00559 3103          			JBC		DC			; Check DC = 0?
  1498 0055A 5071          			JMP	INS_FAIL
  1499 0055B 3A03          			JBS		Z			; Check Z = 1?
  1500 0055C 5071          			JMP	INS_FAIL
  1501 0055D 3503          			JBC		OV			; Check OV = 0?
  1502 0055E 5071          			JMP	INS_FAIL
  1503 0055F 3603          			JBC		N			; Check N = 0?
  1504 00560 5071          			JMP	INS_FAIL
  1505 00561 6C00          			XOR		A,@0x00		; Check Result ?
  1506 00562 3A03          			JBS		Z			; Check Z = 1?
  1507 00563 5071          			JMP	INS_FAIL
  1508 00564 3603          			JBC		N			; Check N = 0?
  1509 00565 5071          			JMP	INS_FAIL
  1510 00566 40EA          			CALL	STATUS_CLEAR
  1511 00567 60AA          			MOV		A,@0xAA
  1512 00568 68FF          			AND		A,@0xFF		; A = A & 0xFF
  1513 00569 3003          			JBC		C			; Check C = 0?
  1514 0056A 5071          			JMP	INS_FAIL
  1515 0056B 3103          			JBC		DC			; Check DC = 0?
  1516 0056C 5071          			JMP	INS_FAIL
  1517 0056D 3203          			JBC		Z			; Check Z = 0?
  1518 0056E 5071          			JMP	INS_FAIL
  1519 0056F 3503          			JBC		OV			; Check OV = 0?
  1520 00570 5071          			JMP	INS_FAIL
  1521 00571 3E03          			JBS		N			; Check N = 1?
  1522 00572 5071          			JMP	INS_FAIL
  1523 00573 6CAA          			XOR		A,@0xAA		; Check Result ?
  1524 00574 40ED          			CALL	INST_XOR_JUDGE
  1525                     
  1526 00575               		INST_COMA:			;-------Instruction Test => COMA R
  1527 00575 6015          			MOV		A,@0x15
  1528 00576 015A          			MOV		INST,A
  1529 00577 40EA          			CALL	STATUS_CLEAR
  1530 00578 60FF          			MOV		A,@0xFF
  1531 00579 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1532 0057A 1250          			COMA	0x50		; A = /R
  1533 0057B 3003          			JBC		C			; Check C = 0?
  1534 0057C 5071          			JMP	INS_FAIL
  1535 0057D 3103          			JBC		DC			; Check DC = 0?
  1536 0057E 5071          			JMP	INS_FAIL
  1537 0057F 3A03          			JBS		Z			; Check Z = 1?
  1538 00580 5071          			JMP	INS_FAIL
  1539 00581 3503          			JBC		OV			; Check OV = 0?
  1540 00582 5071          			JMP	INS_FAIL
  1541 00583 3603          			JBC		N			; Check N = 0?
  1542 00584 5071          			JMP	INS_FAIL
  1543 00585 6C00          			XOR		A,@0x00		; Check Result ?
  1544 00586 3A03          			JBS		Z			; Check Z = 1?
  1545 00587 5071          			JMP	INS_FAIL
  1546 00588 3603          			JBC		N			; Check N = 0?
  1547 00589 5071          			JMP	INS_FAIL	
  1548 0058A 40EA          			CALL	STATUS_CLEAR
  1549 0058B 6005          			MOV		A,@0x05
  1550 0058C 0150          			MOV		0x50,A		; [0x50] = 0x05
  1551 0058D 1250          			COMA	0x50		; A = /R
  1552 0058E 3003          			JBC		C			; Check C = 0?
  1553 0058F 5071          			JMP	INS_FAIL
  1554 00590 3103          			JBC		DC			; Check DC = 0?
  1555 00591 5071          			JMP	INS_FAIL
  1556 00592 3203          			JBC		Z			; Check Z = 0?
  1557 00593 5071          			JMP	INS_FAIL
  1558 00594 3503          			JBC		OV			; Check OV = 0?
  1559 00595 5071          			JMP	INS_FAIL
  1560 00596 3E03          			JBS		N			; Check N = 1?
  1561 00597 5071          			JMP	INS_FAIL
  1562 00598 6CFA          			XOR		A,@0xFA		; Check Result ?
  1563 00599 3A03          			JBS		Z			; Check Z = 1?
  1564 0059A 5071          			JMP	INS_FAIL
  1565 0059B 3603          			JBC		N			; Check N = 0?
  1566 0059C 5071          			JMP	INS_FAIL
  1567 0059D               		INST_COM:			;-------Instruction Test => COM R
  1568 0059D 6016          			MOV		A,@0x16
  1569 0059E 015A          			MOV		INST,A
  1570 0059F 40EA          			CALL	STATUS_CLEAR
  1571 005A0 60FF          			MOV		A,@0xFF
  1572 005A1 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1573 005A2 1350          			COM		0x50		; [0x50] = /[0x50]
  1574 005A3 1003          			MOV		A,STATUS
  1575 005A4 6C1C          			XOR		A,@0x1C		; Check Status ?
  1576                     			;;XOR		A,@0x14		; Check Status ?
  1577 005A5 3A03          			JBS		Z			; Check Z = 1?
  1578 005A6 5071          			JMP	INS_FAIL
  1579 005A7 3603          			JBC		N			; Check N = 0?
  1580 005A8 5071          			JMP	INS_FAIL
  1581 005A9 2203          			BC		Z
  1582 005AA 2603          			BC		N
  1583 005AB 1050          			MOV		A,0x50
  1584 005AC 6C00          			XOR		A,@0x00		; Check Result ?
  1585 005AD 3A03          			JBS		Z			; Check Z = 1?
  1586 005AE 5071          			JMP	INS_FAIL
  1587 005AF 3603          			JBC		N			; Check N = 0?
  1588 005B0 5071          			JMP	INS_FAIL
  1589 005B1 40EA          			CALL	STATUS_CLEAR
  1590 005B2 6000          			MOV		A,@0x00
  1591 005B3 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1592 005B4 1350          			COM		0x50		; [0x50] = /[0x50]
  1593 005B5 1003          			MOV		A,STATUS
  1594 005B6 6C58          			XOR		A,@0x58		; Check Status ?
  1595                     			;;XOR		A,@0x50		; Check Status ?
  1596 005B7 3A03          			JBS		Z			; Check Z = 1?
  1597 005B8 5071          			JMP	INS_FAIL
  1598 005B9 3603          			JBC		N			; Check N = 0?
  1599 005BA 5071          			JMP	INS_FAIL
  1600 005BB 2203          			BC		Z
  1601 005BC 2603          			BC		N
  1602 005BD 1050          			MOV		A,0x50
  1603 005BE 6CFF          			XOR		A,@0xFF		; Check Result ?
  1604 005BF 3A03          			JBS		Z			; Check Z = 1?
  1605 005C0 5071          			JMP	INS_FAIL
  1606 005C1 3603          			JBC		N			; Check N = 0?
  1607 005C2 5071          			JMP	INS_FAIL
  1608 005C3               		INST_OR_A_K:		;-------Instruction Test => OR A,k
  1609 005C3 6026          			MOV		A,@0x26
  1610 005C4 015A          			MOV		INST,A
  1611 005C5 40EA          			CALL	STATUS_CLEAR
  1612 005C6 60A5          			MOV		A,@0xA5
  1613 005C7 645A          			OR		A,@0x5A		; A = 0xA5 | 0x5A
  1614 005C8 6CFF          			XOR		A,@0xFF		; Check Result ?
  1615 005C9 40ED          			CALL	INST_XOR_JUDGE
  1616 005CA 0012          		RET
  1617                     
  1618 005CB               	TEST_INST_LOGIC_II:
  1619 005CB               		INST_RR_R:			;-------Instruction Test => RR R
  1620 005CB 602B          			MOV		A,@0x2B
  1621 005CC 015A          			MOV		INST,A
  1622 005CD 40EA          			CALL	STATUS_CLEAR
  1623 005CE 6055          			MOV		A,@0x55
  1624 005CF 0150          			MOV		0x50,A		; [0x50] = 0x55
  1625 005D0 6F50          			RR		0x50		; [0x50] = [0x50] >> 1
  1626 005D1 1003          			MOV		A,STATUS
  1627 005D2 6C58          			XOR		A,@0x58		; Check Status ?
  1628                     			;;XOR		A,@0x50		; Check Status ?
  1629 005D3 40ED          			CALL	INST_XOR_JUDGE
  1630 005D4 1050          			MOV		A,0x50
  1631 005D5 6CAA          			XOR		A,@0xAA		; Check Result ?
  1632 005D6 40ED          			CALL	INST_XOR_JUDGE
  1633                     
  1634 005D7               		INST_RRA_R:			;-------Instruction Test => RRA R
  1635 005D7 602A          			MOV		A,@0x2A
  1636 005D8 015A          			MOV		INST,A
  1637 005D9 40EA          			CALL 	STATUS_CLEAR
  1638 005DA 6055          			MOV		A,@0x55
  1639 005DB 0150          			MOV		0x50,A		; [0x50] = 0x55
  1640 005DC 6E50          			RRA		0x50		; A = [0x50] >> 1
  1641 005DD 3003          			JBC		C			; Check C = 0?
  1642 005DE 5071          			JMP	INS_FAIL
  1643 005DF 3103          			JBC		DC			; Check DC = 0?
  1644 005E0 5071          			JMP	INS_FAIL
  1645 005E1 3203          			JBC		Z			; Check Z = 0?
  1646 005E2 5071          			JMP	INS_FAIL
  1647 005E3 3503          			JBC		OV			; Check OV = 0?
  1648 005E4 5071          			JMP	INS_FAIL
  1649 005E5 3E03          			JBS		N			; Check N = 1?
  1650 005E6 5071          			JMP	INS_FAIL
  1651 005E7 6CAA          			XOR		A,@0xAA		; Check Result ?
  1652 005E8 40ED          			CALL	INST_XOR_JUDGE
  1653                     
  1654 005E9               		INST_RRCA_R:		;-------Instruction Test => RRCA R
  1655 005E9 601B          			MOV		A,@0x1B
  1656 005EA 015A          			MOV		INST,A
  1657 005EB 40EA          			CALL	STATUS_CLEAR
  1658 005EC 2803          			BS		C
  1659 005ED 60AA          			MOV		A,@0xAA
  1660 005EE 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1661 005EF 1850          			RRCA	0x50		; A = [0x50] >> 1
  1662 005F0 3003          			JBC		C			; Check C = 0?
  1663 005F1 5071          			JMP	INS_FAIL
  1664 005F2 3103          			JBC		DC			; Check DC = 0?
  1665 005F3 5071          			JMP	INS_FAIL
  1666 005F4 3203          			JBC		Z			; Check Z = 0?
  1667 005F5 5071          			JMP	INS_FAIL
  1668 005F6 3503          			JBC		OV			; Check OV = 0?
  1669 005F7 5071          			JMP	INS_FAIL
  1670 005F8 3E03          			JBS		N			; Check N = 1?
  1671 005F9 5071          			JMP	INS_FAIL
  1672 005FA 6CD5          			XOR		A,@0xD5		; Check Result ?
  1673 005FB 40ED          			CALL	INST_XOR_JUDGE
  1674 005FC 40EA          			CALL	STATUS_CLEAR
  1675 005FD 6055          			MOV		A,@0x55
  1676 005FE 0150          			MOV		0x50,A		; [0x50] = 0x55
  1677 005FF 1850          			RRCA	0x50		; A = [0x50] >> 1
  1678 00600 3803          			JBS		C			; Check C = 1?
  1679 00601 5071          			JMP	INS_FAIL
  1680 00602 3103          			JBC		DC			; Check DC = 0?
  1681 00603 5071          			JMP	INS_FAIL
  1682 00604 3203          			JBC		Z			; Check Z = 0?
  1683 00605 5071          			JMP	INS_FAIL
  1684 00606 3503          			JBC		OV			; Check OV = 0?
  1685 00607 5071          			JMP	INS_FAIL
  1686 00608 3603          			JBC		N			; Check N = 0?
  1687 00609 5071          			JMP	INS_FAIL
  1688 0060A 6C2A          			XOR		A,@0x2A		; Check Result ?
  1689 0060B 40ED          			CALL	INST_XOR_JUDGE
  1690 0060C               		INST_RRC_R:			;-------Instruction Test => RRC R
  1691 0060C 601C          			MOV		A,@0x1C
  1692 0060D 015A          			MOV		INST,A
  1693 0060E 40EA          			CALL	STATUS_CLEAR
  1694 0060F 2803          			BS		C
  1695 00610 60AA          			MOV		A,@0xAA
  1696 00611 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1697 00612 2203          			BC		Z
  1698 00613 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1699 00614 1003          			MOV		A,STATUS
  1700 00615 6C58          			XOR		A,@0x58		; Check Status ?
  1701                     			;;XOR		A,@0x50		; Check Status ?
  1702 00616 40ED          			CALL	INST_XOR_JUDGE
  1703 00617 1050          			MOV		A,0x50
  1704 00618 6CD5          			XOR		A,@0xD5		; Check Result ?
  1705 00619 40ED          			CALL	INST_XOR_JUDGE
  1706 0061A 40EA          			CALL	STATUS_CLEAR
  1707 0061B 6055          			MOV		A,@0x55
  1708 0061C 0150          			MOV		0x50,A		; [0x50] = 0x55
  1709 0061D 2203          			BC		Z
  1710 0061E 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1711 0061F 1003          			MOV		A,STATUS
  1712 00620 6C19          			XOR		A,@0x19		; Check Status ?
  1713                     			;;XOR		A,@0x11		; Check Status ?
  1714 00621 3A03          			JBS		Z			; Check Z = 1?
  1715 00622 5071          			JMP	INS_FAIL
  1716 00623 3603          			JBC		N			; Check N = 0?
  1717 00624 5071          			JMP	INS_FAIL
  1718 00625 1050          			MOV		A,0x50
  1719 00626 6C2A          			XOR		A,@0x2A		; Check Result ?
  1720 00627 40ED          			CALL	INST_XOR_JUDGE
  1721 00628               		INST_RLCA_R:		;-------Instruction Test => RLCA R
  1722 00628 601D          			MOV		A,@0x1D
  1723 00629 015A          			MOV		INST,A
  1724 0062A 40EA          			CALL STATUS_CLEAR
  1725 0062B 2803          			BS		C
  1726 0062C 6055          			MOV		A,@0x55
  1727 0062D 0150          			MOV		0x50,A		; [0x50] = 0x55
  1728 0062E 1A50          			RLCA	0x50		; A = [0x50] << 1
  1729 0062F 3003          			JBC		C			; Check C = 0?
  1730 00630 5071          			JMP	INS_FAIL
  1731 00631 3103          			JBC		DC			; Check DC = 0?
  1732 00632 5071          			JMP	INS_FAIL
  1733 00633 3203          			JBC		Z			; Check Z = 0?
  1734 00634 5071          			JMP	INS_FAIL
  1735 00635 3503          			JBC		OV			; Check OV = 0?
  1736 00636 5071          			JMP	INS_FAIL
  1737 00637 3E03          			JBS		N			; Check N = 1?
  1738 00638 5071          			JMP	INS_FAIL
  1739 00639 6CAB          			XOR		A,@0xAB		; Check Result ?
  1740 0063A 40ED          			CALL	INST_XOR_JUDGE
  1741 0063B 40EA          			CALL	STATUS_CLEAR
  1742 0063C 60AA          			MOV		A,@0xAA
  1743 0063D 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1744 0063E 1A50          			RLCA	0x50		; A = [0x50] << 1
  1745 0063F 3803          			JBS		C			; Check C = 1?
  1746 00640 5071          			JMP	INS_FAIL
  1747 00641 3103          			JBC		DC			; Check DC = 0?
  1748 00642 5071          			JMP	INS_FAIL
  1749 00643 3203          			JBC		Z			; Check Z = 0?
  1750 00644 5071          			JMP	INS_FAIL
  1751 00645 3503          			JBC		OV			; Check OV = 0?
  1752 00646 5071          			JMP	INS_FAIL
  1753 00647 3603          			JBC		N			; Check N = 0?
  1754 00648 5071          			JMP	INS_FAIL
  1755 00649 6C54          			XOR		A,@0x54		; Check Result ?
  1756 0064A 40ED          			CALL	INST_XOR_JUDGE
  1757 0064B               		INST_RLC_R:			;-------Instruction Test => RLC R
  1758 0064B 601E          			MOV		A,@0x1E
  1759 0064C 015A          			MOV		INST,A
  1760 0064D 40EA          			CALL	STATUS_CLEAR
  1761 0064E 2803          			BS		C
  1762 0064F 6055          			MOV		A,@0x55
  1763 00650 0150          			MOV		0x50,A		; [0x50] = 0x55
  1764 00651 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1765 00652 1003          			MOV		A,STATUS
  1766 00653 6C58          			XOR		A,@0x58		; Check Status ?
  1767                     			;;XOR		A,@0x50		; Check Status ?
  1768 00654 40ED          			CALL	INST_XOR_JUDGE
  1769 00655 1050          			MOV		A,0x50
  1770 00656 6CAB          			XOR		A,@0xAB		; Check Result ?
  1771 00657 40ED          			CALL	INST_XOR_JUDGE
  1772 00658 40EA          			CALL	STATUS_CLEAR
  1773 00659 60AA          			MOV		A,@0xAA
  1774 0065A 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1775 0065B 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1776 0065C 1003          			MOV		A,STATUS
  1777 0065D 6C19          			XOR		A,@0x19		; Check Status ?
  1778                     			;;XOR		A,@0x11		; Check Status ?
  1779 0065E 40ED          			CALL	INST_XOR_JUDGE
  1780 0065F 1050          			MOV		A,0x50
  1781 00660 6C54          			XOR		A,@0x54		; Check Result ?
  1782 00661 40ED          			CALL	INST_XOR_JUDGE
  1783                     
  1784 00662               		INST_RLA_A:			;-------Instruction Test => RLA R
  1785 00662 602E          			MOV		A,@0x2E
  1786 00663 015A          			MOV		INST,A
  1787 00664 40EA          			CALL	STATUS_CLEAR
  1788 00665 605A          			MOV		A,@0x5A
  1789 00666 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1790 00667 7250          			RLA		0x50		; A = [0x50] << 1
  1791 00668 3003          			JBC		C			; Check C = 0?
  1792 00669 5071          			JMP	INS_FAIL
  1793 0066A 3103          			JBC		DC			; Check DC = 0?
  1794 0066B 5071          			JMP	INS_FAIL
  1795 0066C 3203          			JBC		Z			; Check Z = 0?
  1796 0066D 5071          			JMP	INS_FAIL
  1797 0066E 3503          			JBC		OV			; Check OV = 0?
  1798 0066F 5071          			JMP	INS_FAIL
  1799 00670 3E03          			JBS		N			; Check N = 1?
  1800 00671 5071          			JMP	INS_FAIL
  1801 00672 6CB4          			XOR		A,@0xB4		; Check Result ?
  1802 00673 40ED          			CALL	INST_XOR_JUDGE
  1803                     
  1804 00674               		INST_RL_R:			;-------Instruction Test => RL R
  1805 00674 602F          			MOV		A,@0x2F
  1806 00675 015A          			MOV		INST,A
  1807 00676 40EA          			CALL	STATUS_CLEAR
  1808 00677 605A          			MOV		A,@0x5A
  1809 00678 0150          			MOV		0x50,A		; [0x50] = 0xA5
  1810 00679 7350          			RL		0x50		; [0x50] = [0x50] << 1
  1811 0067A 1003          			MOV		A,STATUS
  1812 0067B 6C58          			XOR		A,@0x58		; Check Status ?
  1813                     			;;XOR		A,@0x50		; Check Status ?
  1814 0067C 3A03          			JBS		Z			; Check Z = 1?
  1815 0067D 5071          			JMP	INS_FAIL
  1816 0067E 3603          			JBC		N			; Check N = 0?
  1817 0067F 5071          			JMP	INS_FAIL
  1818 00680 1050          			MOV		A,0x50
  1819 00681 6CB4          			XOR		A,@0xB4		; Check Result ?
  1820 00682 40ED          			CALL	INST_XOR_JUDGE
  1821 00683               		INST_XCH:			;-------Instruction Test => XCH R
  1822 00683 602D          			MOV		A,@0x2D
  1823 00684 015A          			MOV		INST,A
  1824 00685 40EA          			CALL	STATUS_CLEAR
  1825 00686 6055          			MOV		A,@0x55
  1826 00687 0150          			MOV		0x50,A		; [0x50] = 0x55
  1827 00688 60AA          			MOV		A,@0xAA
  1828 00689 7150          			XCH		0x50		; [0x50] <-> A
  1829 0068A 6C55          			XOR		A,@0x55		; Check Result ?
  1830 0068B 3A03          			JBS		Z			; Check Z = 1?
  1831 0068C 5071          			JMP	INS_FAIL
  1832 0068D 3603          			JBC		N			; Check N = 0?
  1833 0068E 5071          			JMP	INS_FAIL
  1834 0068F 1050          			MOV		A,0x50
  1835 00690 6CAA          			XOR		A,@0xAA		; Check Result ?
  1836 00691 40ED          			CALL	INST_XOR_JUDGE
  1837 00692 0012          		RET
  1838 00693               	TEST_INST_TRANSFER:
  1839 00693               		INST_MOV_R_A:		;-------Instruction Test => MOV R,A
  1840 00693 6007          			MOV		A,@0x07
  1841 00694 015A          			MOV		INST,A
  1842 00695 40EA          			CALL	STATUS_CLEAR
  1843 00696 60FF          			MOV		A,@0xFF
  1844 00697 0150          			MOV		0x50,A
  1845 00698 1003          			MOV		A,STATUS
  1846 00699 6C18          			XOR		A,@0x18		;At  OCDS
  1847                     			;XOR		A,@0x98		; Check Status ? ;; For not reset
  1848                     			;;XOR		A,@0x10		; Check Status ?
  1849 0069A 40ED          			CALL	INST_XOR_JUDGE
  1850 0069B 1050          			MOV		A,0x50
  1851 0069C 6CFF          			XOR		A,@0xFF		; Check Result ?
  1852 0069D 40ED          			CALL	INST_XOR_JUDGE
  1853 0069E               		INST_MOV_R_R:		;-------Instruction Test => MOV R,R
  1854 0069E 6014          			MOV		A,@0x14
  1855 0069F 015A          			MOV		INST,A
  1856 006A0 40EA          			CALL	STATUS_CLEAR
  1857 006A1 6000          			MOV		A,@0x00
  1858 006A2 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1859 006A3 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1860 006A4 1003          			MOV		A,STATUS
  1861 006A5 6C1C          			XOR		A,@0x1C		; Check Status ?
  1862                     			;;XOR		A,@0x14		; Check Status ?
  1863 006A6 3A03          			JBS		Z			; Check Z = 1?
  1864 006A7 5071          			JMP	INS_FAIL
  1865 006A8 3603          			JBC		N			; Check N = 0?
  1866 006A9 5071          			JMP	INS_FAIL
  1867 006AA 1050          			MOV		A,0x50
  1868 006AB 2203          			BC		Z
  1869 006AC 6C00          			XOR		A,@0x00		; Check Result ?
  1870 006AD 3A03          			JBS		Z			; Check Z = 1?
  1871 006AE 5071          			JMP	INS_FAIL
  1872 006AF 3603          			JBC		N			; Check N = 0?
  1873 006B0 5071          			JMP	INS_FAIL
  1874 006B1 40EA          			CALL	STATUS_CLEAR
  1875 006B2 6000          			MOV		A,@0x00
  1876 006B3 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1877 006B4 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1878 006B5 2850          			BS		0x50,0
  1879 006B6 1050          			MOV		A,0x50
  1880 006B7 6C01          			XOR		A,@0x01		; Check Result ?
  1881 006B8 40ED          			CALL	INST_XOR_JUDGE
  1882                     
  1883 006B9               		INST_SWAPA_R:		;-------Instruction Test => SWAPA R
  1884 006B9 601F          			MOV		A,@0x1F
  1885 006BA 015A          			MOV		INST,A
  1886 006BB 40EA          			CALL	STATUS_CLEAR
  1887 006BC 605A          			MOV		A,@0x5A
  1888 006BD 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1889 006BE 1C50          			SWAPA	0x50
  1890 006BF 6CA5          			XOR		A,@0xA5		; Check Result ?
  1891 006C0 40ED          			CALL	INST_XOR_JUDGE
  1892 006C1               		INST_SWAP_R:		;-------Instruction Test => SWAP R
  1893 006C1 6020          			MOV		A,@0x20
  1894 006C2 015A          			MOV		INST,A
  1895 006C3 40EA          			CALL	STATUS_CLEAR
  1896 006C4 605A          			MOV		A,@0x5A
  1897 006C5 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1898 006C6 1D50          			SWAP	0x50
  1899 006C7 1050          			MOV		A,0x50
  1900 006C8 6CA5          			XOR		A,@0xA5		; Check Result ?
  1901 006C9 40ED          			CALL	INST_XOR_JUDGE
  1902 006CA 0012          		RET
  1903                     
  1904 006CB               	TEST_INST_MANIPULATION:
  1905 006CB               		INST_BS_R:		;-------Instruction Test => BS	R
  1906 006CB 40EA          			CALL	STATUS_CLEAR
  1907 006CC 7A00          			SBANK	0
  1908 006CD 103E          			MOV		A,ADCR1
  1909 006CE 0150          			MOV		TMP50,A
  1910 006CF 283E          			BS		ADCR1.0
  1911 006D0 1050          			MOV		A,TMP50
  1912 006D1 0C3E          			XOR		A,ADCR1
  1913 006D2 3203          			JBC		Z
  1914 006D3 5071          			JMP		INS_FAIL
  1915 006D4 3603          			JBC		N
  1916 006D5 5071          			JMP		INS_FAIL
  1917 006D6 103E          			MOV		A,ADCR1
  1918 006D7 0150          			MOV		TMP50,A
  1919 006D8 293E          			BS		ADCR1.1
  1920 006D9 1050          			MOV		A,TMP50
  1921 006DA 0C3E          			XOR		A,ADCR1
  1922 006DB 3203          			JBC		Z
  1923 006DC 5071          			JMP		INS_FAIL
  1924 006DD 3603          			JBC		N
  1925 006DE 5071          			JMP		INS_FAIL
  1926 006DF               		INST_BC_R:		;-------Instruction Test => BC	R
  1927 006DF 103E          			MOV		A,ADCR1
  1928 006E0 0150          			MOV		TMP50,A
  1929 006E1 203E          			BC		ADCR1.0
  1930 006E2 1050          			MOV		A,TMP50
  1931 006E3 0C3E          			XOR		A,ADCR1
  1932 006E4 3203          			JBC		Z
  1933 006E5 5071          			JMP		INS_FAIL
  1934 006E6 3603          			JBC		N
  1935 006E7 5071          			JMP		INS_FAIL
  1936 006E8 103E          			MOV		A,ADCR1
  1937 006E9 0150          			MOV		TMP50,A
  1938 006EA 213E          			BC		ADCR1.1
  1939 006EB 1050          			MOV		A,TMP50
  1940 006EC 0C3E          			XOR		A,ADCR1
  1941 006ED 3203          			JBC		Z
  1942 006EE 5071          			JMP		INS_FAIL
  1943 006EF 3603          			JBC		N
  1944 006F0 5071          			JMP		INS_FAIL
  1945 006F1 0012          		RET
  1946                     
  1947 006F2               	TEST_INST_BRANCH_I:
  1948 006F2               		INST_DJZ_R:			;------- Instruction Test => DJZ R
  1949 006F2 601A          			MOV		A,@0x1A
  1950 006F3 015A          			MOV		INST,A
  1951 006F4 40EA          			CALL	STATUS_CLEAR
  1952 006F5 6001          			MOV		A,@0x01
  1953 006F6 0150          			MOV		0x50,A		; [0x50] = 0x01
  1954 006F7 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1955 006F8 5071          			JMP		INS_FAIL
  1956 006F9 1050          			MOV		A,0x50
  1957 006FA 6C00          			XOR		A,@0x00		; Check Result ?
  1958 006FB 40ED          			CALL	INST_XOR_JUDGE	
  1959 006FC 40EA          			CALL	STATUS_CLEAR
  1960 006FD 6002          			MOV		A,@0x02
  1961 006FE 0150          			MOV		0x50,A		; [0x50] = 0x02
  1962 006FF 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1963 00700 5702          			JMP		$+2
  1964 00701 5071          			JMP		INS_FAIL
  1965 00702               		INST_DJZA_R:		;------- Instruction Test => DJZA R
  1966 00702 6019          			MOV		A,@0x19
  1967 00703 015A          			MOV		INST,A
  1968 00704 40EA          			CALL	STATUS_CLEAR
  1969 00705 6001          			MOV		A,@0x01
  1970 00706 0150          			MOV		0x50,A		; [0x50] = 0x01
  1971 00707 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1972 00708 5071          			JMP	INS_FAIL
  1973 00709 6C00          			XOR		A,@0x00		; Check Result ?
  1974 0070A 40ED          			CALL	INST_XOR_JUDGE
  1975 0070B 40EA          			CALL	STATUS_CLEAR
  1976 0070C 6002          			MOV		A,@0x02
  1977 0070D 0150          			MOV		0x50,A		; [0x50] = 0x02
  1978 0070E 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1979 0070F 5711          			JMP		$+2
  1980 00710 5071          			JMP	INS_FAIL
  1981 00711               		INST_JZA_R:			;-------Instruction Test => JZA R
  1982 00711 6021          			MOV		A,@0x21
  1983 00712 015A          			MOV		INST,A
  1984 00713 40EA          			CALL	STATUS_CLEAR
  1985 00714 60FF          			MOV		A,@0xFF
  1986 00715 0150          			MOV		0x50,A
  1987 00716 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1988 00717 5071          			JMP		INS_FAIL
  1989 00718 6C00          			XOR		A,@0x00		; Check Result ?
  1990 00719 40ED          			CALL	INST_XOR_JUDGE
  1991 0071A 40EA          			CALL	STATUS_CLEAR
  1992 0071B 6080          			MOV		A,@0x80
  1993 0071C 0150          			MOV		0x50,A
  1994 0071D 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1995 0071E 5720          			JMP		$+2
  1996 0071F 5071          			JMP		INS_FAIL
  1997 00720               		INST_JZ_R:			;-------Instruction Test => JZ R
  1998 00720 6022          			MOV		A,@0x22
  1999 00721 015A          			MOV		INST,A
  2000 00722 40EA          			CALL	STATUS_CLEAR
  2001 00723 60FF          			MOV		A,@0xFF
  2002 00724 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2003 00725 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  2004 00726 5071          			JMP		INS_FAIL
  2005 00727 1050          			MOV		A,0x50
  2006 00728 6C00          			XOR		A,@0x00		; Check Result ?
  2007 00729 40ED          			CALL	INST_XOR_JUDGE
  2008 0072A 40EA          			CALL	STATUS_CLEAR
  2009 0072B 6080          			MOV		A,@0x80
  2010 0072C 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2011 0072D 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  2012 0072E 5730          			JMP		$+2
  2013 0072F 5071          			JMP		INS_FAIL
  2014 00730 0012          		RET
  2015 00731               	TEST_INST_BRANCH_II:
  2016 00731               		INST_JE_R:			;-------Instruction Test => JE R
  2017 00731 6023          			MOV		A,@0x23
  2018 00732 015A          			MOV		INST,A
  2019 00733 40EA          			CALL	STATUS_CLEAR
  2020 00734 605A          			MOV		A,@0x5A
  2021 00735 0150          			MOV		0x50,A		; [0x50] = 0x5A
  2022 00736 6150          			JE		0x50		; [0x50] = A?
  2023 00737 5071          			JMP		INS_FAIL
  2024 00738 605B          			MOV		A,@0x5B
  2025 00739 0150          			MOV		0x50,A		; [0x50] = 0x5B
  2026 0073A 605C          			MOV		A,@0x5C
  2027 0073B 6150          			JE		0x50		; [0x50] = A(0x5C)?
  2028 0073C 573E          			JMP		$+2
  2029 0073D 5071          			JMP		INS_FAIL
  2030 0073E               		INST_JGE_R:			;-------Instruction Test => JGE R
  2031 0073E 6024          			MOV		A,@0x24
  2032 0073F 015A          			MOV		INST,A
  2033 00740 40EA          			CALL	STATUS_CLEAR
  2034 00741 607F          			MOV		A,@0x7F
  2035 00742 0150          			MOV		0x50,A		; [0x50] = 0x7F
  2036 00743 6000          			MOV		A,@0x00
  2037 00744 6250          			JGE		0x50		; [0x50] > A ?
  2038 00745 5071          			JMP		INS_FAIL
  2039 00746 40EA          			CALL	STATUS_CLEAR
  2040 00747 60FF          			MOV		A,@0xFF
  2041 00748 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2042 00749 6080          			MOV		A,@0x80
  2043 0074A 6250          			JGE		0x50		; [0x50] > A ?
  2044 0074B 5071          			JMP		INS_FAIL
  2045 0074C 40EA          			CALL	STATUS_CLEAR
  2046 0074D 6000          			MOV		A,@0x00
  2047 0074E 0150          			MOV		0x50,A		; [0x50] = 0x00
  2048 0074F 60FF          			MOV		A,@0xFF
  2049 00750 6250          			JGE		0x50		; [0x50] > A(0xFF) ?x
  2050 00751 5753          			JMP		$+2
  2051 00752 5071          			JMP		INS_FAIL
  2052                     
  2053 00753               		INST_JLE_R:			;-------Instruction Test => JLE R
  2054 00753 6025          			MOV		A,@0x25
  2055 00754 015A          			MOV		INST,A
  2056 00755 40EA          			CALL	STATUS_CLEAR
  2057 00756 6000          			MOV		A,@0x00
  2058 00757 0150          			MOV		0x50,A		; [0x50] = 0x00
  2059 00758 607F          			MOV		A,@0x7F
  2060 00759 6350          			JLE		0x50		; [0x50] < A ?
  2061 0075A 5071          			JMP		INS_FAIL
  2062 0075B 6000          			MOV		A,@0x00
  2063 0075C 0103          			MOV		STATUS,A
  2064 0075D 6080          			MOV		A,@0x80
  2065 0075E 0150          			MOV		0x50,A		; [0x50] = 0x80
  2066 0075F 60FF          			MOV		A,@0xFF
  2067 00760 6350          			JLE		0x50		; [0x50] < A ?
  2068 00761 5071          			JMP		INS_FAIL
  2069 00762 40EA          			CALL	STATUS_CLEAR
  2070 00763 60FF          			MOV		A,@0xFF
  2071 00764 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2072 00765 6000          			MOV		A,@0x00
  2073 00766 6350          			JLE		0x50		; [0x50] < A(0x00) ?x
  2074 00767 5769          			JMP		$+2
  2075 00768 5071          			JMP		INS_FAIL
  2076 00769               		INST_JE_K:			;-------Instruction Test => JE k
  2077 00769 6027          			MOV		A,@0x27
  2078 0076A 015A          			MOV		INST,A
  2079 0076B 40EA          			CALL	STATUS_CLEAR
  2080 0076C 607F          			MOV		A,@0x7F
  2081 0076D 657F          			JE		@0x7F
  2082 0076E 5071          			JMP	INS_FAIL
  2083 0076F 0012          		RET
  2084 00770               	TEST_INST_BRANCH_III:
  2085 00770               		INST_CALL_K:		;-------Instruction Test => CALL k
  2086 00770 6002          			MOV	A,@0x02
  2087 00771 015A          			MOV	INST,A
  2088 00772 40EA          			CALL	STATUS_CLEAR
  2089 00773 6003          			MOV		A,@0x03
  2090 00774 0150          			MOV		0x50,A
  2091 00775 483C          			CALL	CALL_Test
  2092 00776 1050          			MOV		A,0x50
  2093 00777 6C04          			XOR		A,@0x04
  2094 00778 40ED          			CALL	INST_XOR_JUDGE
  2095                     
  2096 00779               		INST_LCALL_K:		;-------Instruction Test => LCALL k
  2097 00779 6003          			MOV		A,@0x03
  2098 0077A 015A          			MOV		INST,A
  2099 0077B 40EA          			CALL	STATUS_CLEAR
  2100 0077C 6003          			MOV		A,@0x03
  2101 0077D 0151          			MOV		0x51,A
  2102 0077E 7A80          			LCALL	LCALL_Test
  2102 0077F 1000          			LCALL	LCALL_Test
  2103 00780 1051          			MOV		A,0x51
  2104 00781 6C04          			XOR		A,@0x04		; Check Result ?
  2105 00782 40ED          			CALL	INST_XOR_JUDGE
  2106                     
  2107 00783               		INST_RETL_K:		;-------Instruction Test => RETL k
  2108 00783 602C          			MOV		A,@0x2C
  2109 00784 015A          			MOV		INST,A
  2110 00785 40EA          			CALL	STATUS_CLEAR
  2111 00786 6000          			MOV		A,@0x00
  2112 00787 4EF0          			CALL	INST_RETL_TABLE
  2113 00788 6CA1          			XOR		A,@0xA1
  2114 00789 40ED          			CALL	INST_XOR_JUDGE
  2115 0078A 6001          			MOV		A,@0x01
  2116 0078B 4EF0          			CALL	INST_RETL_TABLE
  2117 0078C 6CA2          			XOR		A,@0xA2
  2118 0078D 40ED          			CALL	INST_XOR_JUDGE
  2119 0078E 6002          			MOV		A,@0x02
  2120 0078F 4EF0          			CALL	INST_RETL_TABLE
  2121 00790 6CA4          			XOR		A,@0xA4
  2122 00791 40ED          			CALL	INST_XOR_JUDGE
  2123 00792 6003          			MOV		A,@0x03
  2124 00793 4EF0          			CALL	INST_RETL_TABLE
  2125 00794 6CA8          			XOR		A,@0xA8
  2126 00795 40ED          			CALL	INST_XOR_JUDGE
  2127 00796 0012          		RET
  2128 00797               	TEST_INST_CONTROL:
  2129 00797               		INST_ENI:			;-------Instruction Test => ENI , IT?
  2130 00797 6004          			MOV		A,@0x04
  2131 00798 015A          			MOV		INST,A
  2132 00799 0010          			ENI
  2133 0079A 3F03          			JBS		IT		; Check IT = 1?
  2134 0079B 5071          			JMP	INS_FAIL
  2135 0079C               		INST_DISI:			;-------Instruction Test => DISI , IT?
  2136 0079C 6005          			MOV		A,@0x05
  2137 0079D 015A          			MOV		INST,A
  2138 0079E 0011          			DISI
  2139 0079F 3703          			JBC		IT		; Check IT = 0?
  2140 007A0 5071          			JMP	INS_FAIL
  2141 007A1 0012          		RET
  2142                     
  2143 007A2               	TEST_SHORT_BRANCH:
  2144                     		;ORG	0x800
  2145 007A2 40EA          		CALL	STATUS_CLEAR
  2146 007A3 2803          		BS	C
  2147 007A4 6903          		SJC		@0x03
  2148 007A5 506B          		JMP		JMP_FAIL
  2149 007A6 506B          		JMP		JMP_FAIL
  2150 007A7 506B          		JMP		JMP_FAIL
  2151 007A8 2003          		BC	C
  2152 007A9 6A03          		SJNC	bbb		;@0x03
  2153 007AA 506B          		JMP		JMP_FAIL
  2154 007AB 506B          		JMP		JMP_FAIL
  2155 007AC 506B          		JMP		JMP_FAIL
  2156 007AD               		bbb:		
  2157 007AD 2A03          			BS		Z
  2158 007AE 6B03          			SJZ		@0x03
  2159 007AF 506B          			JMP		JMP_FAIL
  2160 007B0 506B          			JMP		JMP_FAIL
  2161 007B1 506B          			JMP		JMP_FAIL
  2162 007B2 0200          			CLRA
  2163 007B3 6B03          			SJZ		@0x03
  2164 007B4 506B          			JMP		JMP_FAIL
  2165 007B5 506B          			JMP		JMP_FAIL
  2166 007B6 506B          			JMP		JMP_FAIL
  2167 007B7 57BF          		JMP		IATEST1		;JMP back Test as below
  2168 007B8               		aaa:	
  2169 007B8 57CC          			JMP	IATEST2		; -9
  2170 007B9 506B          			JMP	JMP_FAIL	; -8
  2171 007BA 506B          			JMP	JMP_FAIL	; -7
  2172 007BB 506B          			JMP	JMP_FAIL	; -6
  2173 007BC 506B          			JMP	JMP_FAIL	; -5
  2174 007BD 506B          			JMP	JMP_FAIL	; -4
  2175 007BE 506B          			JMP	JMP_FAIL	; -3
  2176 007BF               		IATEST1:	
  2177 007BF 2803          			BS		C		; -2
  2178 007C0 69F7          			SJC		aaa		; -1
  2179 007C1 69F7          			SJC		@0xF7	; -1
  2180 007C2 506B          			JMP		JMP_FAIL
  2181 007C3 506B          			JMP		JMP_FAIL
  2182 007C4 506B          			JMP		JMP_FAIL
  2183 007C5 57D8          			JMP		IATEST3		; -9
  2184 007C6 506B          			JMP		JMP_FAIL	; -8
  2185 007C7 506B          			JMP		JMP_FAIL	; -7
  2186 007C8 506B          			JMP		JMP_FAIL	; -6
  2187 007C9 506B          			JMP		JMP_FAIL	; -5
  2188 007CA 506B          			JMP		JMP_FAIL	; -4
  2189 007CB 506B          			JMP		JMP_FAIL	; -3
  2190 007CC               		IATEST2:	
  2191 007CC 2003          			BC		C		; -2
  2192 007CD 6AF7          			SJNC		@0xF7	; -1
  2193 007CE 57E9          			JMP		_IPass
  2194 007CF 57E9          			JMP		_IPass
  2195 007D0 57E9          			JMP		_IPass
  2196 007D1 57E4          			JMP		IATEST4		; -9
  2197 007D2 506B          			JMP		JMP_FAIL	; -8
  2198 007D3 506B          			JMP		JMP_FAIL	; -7
  2199 007D4 506B          			JMP		JMP_FAIL	; -6
  2200 007D5 506B          			JMP		JMP_FAIL	; -5
  2201 007D6 506B          			JMP		JMP_FAIL	; -4
  2202 007D7 506B          			JMP		JMP_FAIL	; -3
  2203 007D8               		IATEST3:	
  2204 007D8 2A03          			BS		Z		; -2
  2205 007D9 6BF7          			SJZ		@0xF7	; -1
  2206 007DA 506B          			JMP		JMP_FAIL
  2207 007DB 506B          			JMP		JMP_FAIL
  2208 007DC 506B          			JMP		JMP_FAIL
  2209                     
  2210 007DD 57E9          			JMP		_IPass		; -9
  2211 007DE 506B          			JMP		JMP_FAIL	; -8
  2212 007DF 506B          			JMP		JMP_FAIL	; -7
  2213 007E0 506B          			JMP		JMP_FAIL	; -6
  2214 007E1 506B          			JMP		JMP_FAIL	; -5
  2215 007E2 506B          			JMP		JMP_FAIL	; -4
  2216 007E3 506B          			JMP		JMP_FAIL	; -3
  2217 007E4               		IATEST4:	
  2218 007E4 2203          			BC		Z		; -2
  2219 007E5 6DF7          			SJNZ	@0xF7	; -1
  2220 007E6 506B          			JMP		JMP_FAIL
  2221 007E7 506B          			JMP		JMP_FAIL
  2222 007E8 506B          			JMP		JMP_FAIL
  2223 007E9               		_IPass:
  2224 007E9 0000          				NOP
  2225 007EA 0012          		RET
  2226                     
  2227 007EB               	TEST_READ_ROM:
  2228 007EB               		INST_TBLRD_R:
  2229 007EB 6028          			MOV		A,@0x28
  2230 007EC 015A          			MOV		INST,A
  2231 007ED 7A01          			SBANK	1
  2232 007EE 60F1          			MOV		A,@0xF1		;ADDR(0x0EF1)
  2233 007EF 0145          			MOV		TBPTL,A
  2234 007F0 600E          			MOV		A,@0x0E
  2235 007F1 0146          			MOV		TBPTH,A
  2236 007F2 7A00          			SBANK	0
  2237 007F3 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2238 007F4 6CA1          			XOR		A,@0xA1
  2239 007F5 40ED          			CALL	INST_XOR_JUDGE
  2240 007F6 1050          			MOV		A,0x50
  2241 007F7 6C70          			XOR		A,@0x70
  2242 007F8 40ED          			CALL	INST_XOR_JUDGE
  2243                     
  2244 007F9 7A01          			SBANK	1
  2245                     			;MOV		A,@0xF1		;ADDR(0x0EF1)
  2246                     			;MOV		TBPTL,A
  2247                     			;MOV		A,@0x0E
  2248                     			;MOV		TBPTH,A
  2249 007FA 1545          			INC		TBPTL		;ADDR(0x0EF2)
  2250 007FB 7A00          			SBANK	0
  2251 007FC 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2252 007FD 6CA2          			XOR		A,@0xA2
  2253 007FE 40ED          			CALL	INST_XOR_JUDGE
  2254 007FF 1050          			MOV		A,0x50
  2255 00800 6C70          			XOR		A,@0x70
  2256 00801 40ED          			CALL	INST_XOR_JUDGE
  2257 00802               		INST_TBRD_R:		;-------Instruction Test => TBRD R
  2258 00802 6033          			MOV		A,@0x33
  2259 00803 015A          			MOV		INST,A
  2260 00804 7A01          			SBANK	1
  2261 00805 60F3          			MOV		A,@0xF3		;ADDR(0x0EF3)
  2262 00806 0145          			MOV		TBPTL,A
  2263 00807 600E          			MOV		A,@0x0E
  2264 00808 0146          			MOV		TBPTH,A
  2265 00809 7A00          			SBANK	0
  2266 0080A 7B50          			TBRD	0x50
  2267 0080B 1050          			MOV		A,0x50
  2268 0080C 6CA4          			XOR		A,@0xA4
  2269 0080D 40ED          			CALL	INST_XOR_JUDGE
  2270                     
  2271 0080E 7A01          			SBANK	1
  2272                     			;MOV		A,@0xF3
  2273                     			;MOV		TBPTL,A
  2274                     			;MOV		A,@0x0E
  2275                     			;MOV		TBPTH,A
  2276 0080F 1545          			INC		TBPTL		;ADDR(0x0EF4)
  2277 00810 7A00          			SBANK	0
  2278 00811 7B50          			TBRD	0x50
  2279 00812 1050          			MOV		A,0x50
  2280 00813 6CA8          			XOR		A,@0xA8
  2281 00814 40ED          			CALL	INST_XOR_JUDGE
  2282 00815 0012          		RET
  2283                     
  2284 00816               	TEST_STACK:
  2285 00816 7A01          		SBANK	1
  2286 00817 1047          		MOV		A,STKMON
  2287 00818 6C01          		XOR		A,@0x01
  2288 00819 40ED          		CALL	INST_XOR_JUDGE
  2289 0081A 481C          		CALL	STACK1
  2290 0081B 0012          		RET
  2291 0081C               	STACK1:
  2292 0081C 1047          		MOV		A,STKMON
  2293 0081D 6C02          		XOR		A,@0x02
  2294 0081E 40ED          		CALL	INST_XOR_JUDGE
  2295 0081F 4821          		CALL	STACK2
  2296 00820 0012          		RET
  2297 00821               	STACK2:
  2298 00821 1047          		MOV		A,STKMON
  2299 00822 6C03          		XOR		A,@0x03
  2300 00823 40ED          		CALL	INST_XOR_JUDGE
  2301 00824 4826          		CALL	STACK3
  2302 00825 0012          		RET
  2303 00826               	STACK3:
  2304 00826 1047          		MOV		A,STKMON
  2305 00827 6C04          		XOR		A,@0x04
  2306 00828 40ED          		CALL	INST_XOR_JUDGE
  2307 00829 482B          		CALL	STACK4
  2308 0082A 0012          		RET
  2309 0082B               	STACK4:
  2310 0082B 1047          		MOV		A,STKMON
  2311 0082C 6C05          		XOR		A,@0x05
  2312 0082D 40ED          		CALL	INST_XOR_JUDGE
  2313 0082E 4830          		CALL	STACK5
  2314 0082F 0012          		RET
  2315 00830               	STACK5:
  2316 00830 1047          		MOV		A,STKMON
  2317 00831 6C06          		XOR		A,@0x06
  2318 00832 40ED          		CALL	INST_XOR_JUDGE
  2319 00833 4835          		CALL	STACK6
  2320 00834 0012          		RET
  2321 00835               	STACK6:
  2322 00835 1047          		MOV		A,STKMON
  2323 00836 6C07          		XOR		A,@0x07
  2324 00837 40ED          		CALL	INST_XOR_JUDGE
  2325 00838 483A          		CALL	STACK7
  2326 00839 0012          		RET
  2327 0083A               	STACK7:
  2328 0083A 0000          		NOP
  2329                     		;CALL	INST_XOR_JUDGE ;Sack Over(Shut Down Tst)
  2330 0083B 0012          		RET
  2331                     
  2332 0083C               	CALL_Test:
  2333 0083C 1550          		INC		0x50
  2334 0083D 0012          		RET
  2335                     ;================== EEPROM Test Routine =====================
  2336                     
  2337                     ;================== Return Table ============================
  2338                     ORG	0x0EF0	; ADDR(3824)
  2339 00EF0               	INST_RETL_TABLE:
  2340 00EF0 0F02          		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
  2341 00EF1 70A1          		RETL	@0xA1
  2342 00EF2 70A2          		RETL	@0xA2
  2343 00EF3 70A4          		RETL	@0xA4
  2344 00EF4 70A8          		RETL	@0xA8
  2345 00EF5 701A          		RETL	@0x1A
  2346 00EF6 702A          		RETL	@0x2A
  2347 00EF7 704A          		RETL	@0x4A
  2348 00EF8 708A          		RETL	@0x8A
  2349                     
  2350                     ;================== RAM Test Routine ========================
  2351                     ORG	0x0F00	; ADDR(3840)
  2352 00F00               	TEST_RAM_BANK_0_5:
  2353 00F00 6080          		MOV		A,@0x80		; Write Start SRAM(0x55)
  2354 00F01 0104          		MOV		RSR,A
  2355 00F02 7A40          		GBANK	0
  2356 00F03 6055          		MOV		A,@0x55
  2357 00F04 0100          		MOV		IAR,A
  2358 00F05 1504          		INC		RSR
  2359 00F06 6000          		MOV		A,@0x00
  2360 00F07 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2361 00F08 3A03          		JBS		Z
  2362 00F09 5F03          		JMP		$-6
  2363 00F0A 6080          		MOV		A,@0x80		; Read Start SRAM(0x55)
  2364 00F0B 0104          		MOV		RSR,A
  2365 00F0C 7A40          		GBANK	0
  2366 00F0D 6055          		MOV		A,@0x55
  2367 00F0E 0D00          		XOR		IAR,A
  2368 00F0F 3A03          		JBS		Z
  2369 00F10 506E          		JMP		RAM_FAIL
  2370 00F11 1504          		INC		RSR
  2371 00F12 6000          		MOV		A,@0x00
  2372 00F13 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2373 00F14 3A03          		JBS		Z
  2374 00F15 5F0D          		JMP		$-8
  2375 00F16 0012          		RET
  2376 00F17               	TEST_RAM_BANK_0_A:
  2377 00F17 6080          		MOV		A,@0x80		; Write Start SRAM(0xAA)
  2378 00F18 0104          		MOV		RSR,A
  2379 00F19 7A40          		GBANK	0
  2380 00F1A 60AA          		MOV		A,@0xAA		; SRAM(0xAA)
  2381 00F1B 0100          		MOV		IAR,A
  2382 00F1C 1504          		INC		RSR
  2383 00F1D 6000          		MOV		A,@0x00
  2384 00F1E 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2385 00F1F 3A03          		JBS		Z
  2386 00F20 5F1A          		JMP		$-6
  2387 00F21 6080          		MOV		A,@0x80
  2388 00F22 0104          		MOV		RSR,A
  2389 00F23 7A40          		GBANK	0
  2390 00F24 60AA          		MOV		A,@0xAA
  2391 00F25 0D00          		XOR		IAR,A
  2392 00F26 3A03          		JBS		Z
  2393 00F27 506E          		JMP		RAM_FAIL
  2394 00F28 1504          		INC		RSR
  2395 00F29 6000          		MOV		A,@0x00
  2396 00F2A 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2397 00F2B 3A03          		JBS		Z
  2398 00F2C 5F24          		JMP		$-8
  2399 00F2D 0012          		RET
  2400 00F2E               	TEST_RAM_BANK_1_3:
  2401 00F2E 6080          		MOV		A,@0x80		; Write Start SRAM(0x33)
  2402 00F2F 0104          		MOV		RSR,A
  2403 00F30 7A41          		GBANK	1
  2404 00F31 6033          		MOV		A,@0x33		; SRAM(0x33)
  2405 00F32 0100          		MOV		IAR,A
  2406 00F33 1504          		INC		RSR
  2407 00F34 6000          		MOV		A,@0x00
  2408 00F35 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2409 00F36 3A03          		JBS		Z
  2410 00F37 5F31          		JMP		$-6
  2411 00F38 6080          		MOV		A,@0x80
  2412 00F39 0104          		MOV		RSR,A
  2413 00F3A 7A41          		GBANK	1
  2414 00F3B 6033          		MOV		A,@0x33
  2415 00F3C 0D00          		XOR		IAR,A
  2416 00F3D 3A03          		JBS		Z
  2417 00F3E 506E          		JMP		RAM_FAIL
  2418 00F3F 1504          		INC		RSR
  2419 00F40 6000          		MOV		A,@0x00
  2420 00F41 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2421 00F42 3A03          		JBS		Z
  2422 00F43 5F3B          		JMP		$-8
  2423 00F44 0012          		RET
  2424 00F45               	TEST_RAM_BANK_1_C:
  2425 00F45 6080          		MOV		A,@0x80		; Write Start SRAM(0xCC)
  2426 00F46 0104          		MOV		RSR,A
  2427 00F47 7A41          		GBANK	1
  2428 00F48 60CC          		MOV		A,@0xCC		; SRAM(0xCC)
  2429 00F49 0100          		MOV		IAR,A
  2430 00F4A 1504          		INC		RSR
  2431 00F4B 6000          		MOV		A,@0x00
  2432 00F4C 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2433 00F4D 3A03          		JBS		Z
  2434 00F4E 5F48          		JMP		$-6
  2435 00F4F 6080          		MOV		A,@0x80
  2436 00F50 0104          		MOV		RSR,A
  2437 00F51 7A41          		GBANK	1
  2438 00F52 60CC          		MOV		A,@0xCC
  2439 00F53 0D00          		XOR		IAR,A
  2440 00F54 3A03          		JBS		Z
  2441 00F55 506E          		JMP		RAM_FAIL
  2442 00F56 1504          		INC		RSR
  2443 00F57 6000          		MOV		A,@0x00
  2444 00F58 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2445 00F59 3A03          		JBS		Z
  2446 00F5A 5F52          		JMP		$-8
  2447 00F5B 0012          		RET
  2448                     
  2449                     
  2450                     ;================== Long Sub Routine ========================
  2451                     ORG	0x1000	; >4K
  2452 01000               	LCALL_Test:
  2453 01000 1551          		INC		0x51
  2454 01001 0012          		RET
  0 Error(s), 0 Warning(s), 0 User Message(s)