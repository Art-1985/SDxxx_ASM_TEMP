     1                     ;============================================================
     2                     ;	Project:		MTF351_ASM_TEMP
     3                     ;	FILE:			MTF351_ASM_TEMP.asm
     4                     ;  	Target:  		MTF351
     5                     ;	Author:			Arthur (Lu Hungche)
     6                     ;	Date:			2020/03/11
     7                     ;------------------------------------------------------------
     8                     ;	Description:	For MTF351 Instruction and EFT Verify
     9                     ;	Active-Low: P50(Red-PWR)、P51(Yel-PUSH)、
    10                     ;					
    11                     ;------------------------------------------------------------
    12                     ; History:
    13                     ; Ver  | dd-mmm-yyyy |  Who  | Description of changes
    14                     ; =====|=============|=======|===============================
    15                     ;  0.1 | 11 Mat 2020 |Arthur | Original Release.
    16                     ; -----|-------------|-------|-------------------------------
    17                     ;  0.2 |
    18                     ; -----|-------------|-------|-------------------------------
    19                     ;============================================================
    20                     
    21                     ;==================== Project Include ====================
    22                     Include	"MTF351.INC"
     1            C        ;======================================================;
     2            C        ;  Title:       EM88F758N Include File                 ;
     3            C        ;  Description: The Definition of EM88F758N Registers  ;
     4            C        ;  Company:     ELAN MICROELECTRONICS LTD.	       	   ;
     5            C        ;  Date:        2014/12/03                             ;
     6            C        ;======================================================;
     7            C        
     8            C        ;======================================================;
     9            C        ; Operational Registers Define                         ;
    10            C        ;======================================================;
    11            C        ;======================================================;
    12            C        ; Registers R0~R4                                      ;
    13            C        ;======================================================;
    14            C        ; IAR: Indirect Address Register
    15       2000 C        IAR     ==    0x00:rpage 0
    15 00000 0010 C        IAR     ==    0x00:rpage 0
    16            C        
    17            C        ; BSR: Bank Selection Control Register
    18       2001 C        BSR     ==    0x01:rpage 0
    18 00000 0010 C        BSR     ==    0x01:rpage 0
    19       2001 C        	SBS1	==	BSR.5
    19 00000 0540 C        	SBS1	==	BSR.5
    20       2001 C        	SBS0	==	BSR.4
    20 00000 0440 C        	SBS0	==	BSR.4
    21       2001 C        	GBS0	==	BSR.0
    21 00000 0040 C        	GBS0	==	BSR.0
    22            C        
    23            C        ; PC: Program Counter Low
    24       2002 C        PCL      ==    0x02:rpage 0
    24 00000 0010 C        PCL      ==    0x02:rpage 0
    25            C        
    26            C        ; PSR: Process Status Register
    27       2003 C        STATUS  ==    0x03:rpage 0
    27 00000 0010 C        STATUS  ==    0x03:rpage 0
    28       2003 C        	IT	==  STATUS.7    ; Interrupt mask bit
    28 00000 0740 C        	IT	==  STATUS.7    ; Interrupt mask bit
    29       2003 C        	N       ==  STATUS.6    ; Negative bit
    29 00000 0640 C        	N       ==  STATUS.6    ; Negative bit
    30       2003 C        	OV      ==  STATUS.5    ; Overflow bit
    30 00000 0540 C        	OV      ==  STATUS.5    ; Overflow bit
    31       2003 C        	T       ==  STATUS.4    ; Time-out bit
    31 00000 0440 C        	T       ==  STATUS.4    ; Time-out bit
    32       2003 C        	P       ==  STATUS.3    ; Power-down bit
    32 00000 0340 C        	P       ==  STATUS.3    ; Power-down bit
    33       2003 C        	Z       ==  STATUS.2    ; Zero flag
    33 00000 0240 C        	Z       ==  STATUS.2    ; Zero flag
    34       2003 C        	DC      ==  STATUS.1    ; Auxiliary carry flag
    34 00000 0140 C        	DC      ==  STATUS.1    ; Auxiliary carry flag
    35       2003 C        	C       ==  STATUS.0    ; Carry flag
    35 00000 0040 C        	C       ==  STATUS.0    ; Carry flag
    36            C        
    37            C        ; RSR: RAM Select Register
    38       2004 C        RSR     ==    0x04:rpage 0
    38 00000 0010 C        RSR     ==    0x04:rpage 0
    39            C        
    40            C        
    41            C        ;======================================================
    42            C        ;      BANK 0 Registers                                   
    43            C        ;======================================================
    44            C        ; R5 ~ RA: I/O Port Address
    45       2005 C        P5      ==    0x05:rpage 0
    45 00000 0010 C        P5      ==    0x05:rpage 0
    46       2006 C        P6      ==    0x06:rpage 0
    46 00000 0010 C        P6      ==    0x06:rpage 0
    47       2007 C        P7	==    0x07:rpage 0
    47 00000 0010 C        P7	==    0x07:rpage 0
    48       2005 C        PORT5   ==    0x05:rpage 0
    48 00000 0010 C        PORT5   ==    0x05:rpage 0
    49       2006 C        PORT6   ==    0x06:rpage 0
    49 00000 0010 C        PORT6   ==    0x06:rpage 0
    50       2007 C        PORT7   ==    0x07:rpage 0
    50 00000 0010 C        PORT7   ==    0x07:rpage 0
    51            C        
    52            C        ; RB ~ RD: I/O Control Register
    53       200B C        IOCR5	==    0x0B:rpage 0
    53 00000 0010 C        IOCR5	==    0x0B:rpage 0
    54       200C C        IOCR6	==    0x0C:rpage 0
    54 00000 0010 C        IOCR6	==    0x0C:rpage 0
    55       200D C        IOCR7	==    0x0D:rpage 0
    55 00000 0010 C        IOCR7	==    0x0D:rpage 0
    56            C        
    57            C        ; OMCR:Operating Mode Control Register
    58       200E C        OMCR 	==    0x0E:rpage 0
    58 00000 0010 C        OMCR 	==    0x0E:rpage 0
    59       200E C        	CPUS	==	OMCR.7			;CPU Osillator Source Select
    59 00000 0740 C        	CPUS	==	OMCR.7			;CPU Osillator Source Select
    60       200E C        	IDLE	==	OMCR.6			;Idle Mode Enable Bit.
    60 00000 0640 C        	IDLE	==	OMCR.6			;Idle Mode Enable Bit.
    61       200E C        	CLK2	==	OMCR.5
    61 00000 0540 C        	CLK2	==	OMCR.5
    62       200E C        	CLK1	==	OMCR.4
    62 00000 0440 C        	CLK1	==	OMCR.4
    63       200E C        	CLK0	==	OMCR.3
    63 00000 0340 C        	CLK0	==	OMCR.3
    64            C        	
    65       200E C        	RCM1	==	OMCR.1
    65 00000 0140 C        	RCM1	==	OMCR.1
    66       200E C        	RCM0	==	OMCR.0
    66 00000 0040 C        	RCM0	==	OMCR.0
    67            C        						
    68            C        ; EIESCR:External interrupt Edge Select Register
    69       200F C        EIESCR  ==    0x0F:rpage 0
    69 00000 0010 C        EIESCR  ==    0x0F:rpage 0
    70       200F C        	EIES1	==	EIESCR.3
    70 00000 0340 C        	EIES1	==	EIESCR.3
    71       200F C        	EIES0	==	EIESCR.2
    71 00000 0240 C        	EIES0	==	EIESCR.2
    72            C        
    73            C        ; WUCR1:Wake-up Control Register 1
    74       2010 C        WUCR1 	==    0x10:rpage 0
    74 00000 0010 C        WUCR1 	==    0x10:rpage 0
    75       2010 C        	CMP2WK	==	WUCR1.7
    75 00000 0740 C        	CMP2WK	==	WUCR1.7
    76       2010 C        	CMP1WK	==	WUCR1.6
    76 00000 0640 C        	CMP1WK	==	WUCR1.6
    77       2010 C        	LVDWK	==	WUCR1.5
    77 00000 0540 C        	LVDWK	==	WUCR1.5
    78       2010 C        	ADWK	==	WUCR1.4
    78 00000 0440 C        	ADWK	==	WUCR1.4
    79       2010 C        	INT1WK	==	WUCR1.3
    79 00000 0340 C        	INT1WK	==	WUCR1.3
    80       2010 C        	INT0WK	==	WUCR1.2
    80 00000 0240 C        	INT0WK	==	WUCR1.2
    81            C        
    82            C        ; Reserver 0x11
    83            C        
    84            C        ; WUCR3:Wake-up Control Register 3
    85       2012 C        WUCR3  ==    0x12:rpage 0
    85 00000 0010 C        WUCR3  ==    0x12:rpage 0
    86       2012 C        	ICWKP7	==	WUCR3.6
    86 00000 0640 C        	ICWKP7	==	WUCR3.6
    87       2012 C        	ICWKP6	==	WUCR3.5
    87 00000 0540 C        	ICWKP6	==	WUCR3.5
    88       2012 C        	ICWKP5	==	WUCR3.4
    88 00000 0440 C        	ICWKP5	==	WUCR3.4
    89            C        
    90            C        ; SFR1:Status Flag Register 1
    91       2014 C        SFR1 	==    0x14:rpage 0
    91 00000 0010 C        SFR1 	==    0x14:rpage 0
    92       2014 C        	CMP2SF	==	SFR1.7
    92 00000 0740 C        	CMP2SF	==	SFR1.7
    93       2014 C        	CMP1SF	==	SFR1.6
    93 00000 0640 C        	CMP1SF	==	SFR1.6
    94       2014 C        	LVDSF	==	SFR1.5
    94 00000 0540 C        	LVDSF	==	SFR1.5
    95       2014 C        	ADSF	==	SFR1.4
    95 00000 0440 C        	ADSF	==	SFR1.4
    96       2014 C        	EXSF1	==	SFR1.3
    96 00000 0340 C        	EXSF1	==	SFR1.3
    97       2014 C        	EXSF0	==	SFR1.2
    97 00000 0240 C        	EXSF0	==	SFR1.2
    98            C        
    99            C        ; SFR2:Status Flag Register 2
   100            C        ;SFR2 	==    0x15:rpage 0
   101            C        
   102            C        ; SFR3:Status Flag Register 3
   103            C        ;SFR3 	==    0x16:rpage 0
   104            C        
   105            C        ; SFR4:Status Flag Register 4
   106       2017 C        SFR4	==    0x17:rpage 0
   106 00000 0010 C        SFR4	==    0x17:rpage 0
   107       2017 C        	P7ICSF	==	SFR4.6
   107 00000 0640 C        	P7ICSF	==	SFR4.6
   108       2017 C        	P6ICSF	==	SFR4.5
   108 00000 0540 C        	P6ICSF	==	SFR4.5
   109       2017 C        	P5ICSF	==	SFR4.4
   109 00000 0440 C        	P5ICSF	==	SFR4.4
   110            C        
   111            C        ; SFR6:Status Flag Register 6
   112       2019 C        SFR6	==    0x19:rpage 0
   112 00000 0010 C        SFR6	==    0x19:rpage 0
   113       2019 C        	SHSF	==	SFR6.7
   113 00000 0740 C        	SHSF	==	SFR6.7
   114            C        
   115            C        ; IMR1:Interrupt Mask Register 1
   116       201B C        IMR1 	==    0x1B:rpage 0
   116 00000 0010 C        IMR1 	==    0x1B:rpage 0
   117       201B C        	CMP2IE	==	IMR1.7
   117 00000 0740 C        	CMP2IE	==	IMR1.7
   118       201B C        	CMP1IE	==	IMR1.6
   118 00000 0640 C        	CMP1IE	==	IMR1.6
   119       201B C        	LVDIE	==	IMR1.5
   119 00000 0540 C        	LVDIE	==	IMR1.5
   120       201B C        	ADIE	==	IMR1.4
   120 00000 0440 C        	ADIE	==	IMR1.4
   121       201B C        	EXIE1	==	IMR1.3
   121 00000 0340 C        	EXIE1	==	IMR1.3
   122       201B C        	EXIE0	==	IMR1.2
   122 00000 0240 C        	EXIE0	==	IMR1.2
   123            C        
   124            C        ; IMR2:Interrupt Mask Register 2
   125            C        ;IMR2 	==    0x1C:rpage 0
   126            C        ;	CMP4IE	==	IMR2.7
   127            C        ;	CMP3IE	==	IMR2.6
   128            C        
   129            C        ; IMR3:Interrupt Mask Register 3
   130            C        ;IMR3 	==    0x1D:rpage 0
   131            C        
   132            C        ; IMR4:Interrupt Mask Register 4
   133       201E C        IMR4 	==    0x1E:rpage 0
   133 00000 0010 C        IMR4 	==    0x1E:rpage 0
   134       201E C        	P7ICIE	==	IMR4.6
   134 00000 0640 C        	P7ICIE	==	IMR4.6
   135       201E C        	P6ICIE	==	IMR4.5
   135 00000 0540 C        	P6ICIE	==	IMR4.5
   136       201E C        	P5ICIE	==	IMR4.4
   136 00000 0440 C        	P5ICIE	==	IMR4.4
   137            C        
   138            C        ; IMR6:Interrupt Mask Register 6
   139       2020 C        IMR6 	==    0x20:rpage 0
   139 00000 0010 C        IMR6 	==    0x20:rpage 0
   140       2020 C        	SHIE	==	IMR6.7
   140 00000 0740 C        	SHIE	==	IMR6.7
   141            C        
   142            C        ; WDTCR:Watch Dog Timer Control Register
   143       2021 C        WDTCR 	==    0x21:rpage 0
   143 00000 0010 C        WDTCR 	==    0x21:rpage 0
   144       2021 C        	WDTE	==	WDTCR.7
   144 00000 0740 C        	WDTE	==	WDTCR.7
   145       2021 C        	PSWE	==	WDTCR.3
   145 00000 0340 C        	PSWE	==	WDTCR.3
   146       2021 C        	WPSR2	==	WDTCR.2
   146 00000 0240 C        	WPSR2	==	WDTCR.2
   147       2021 C        	WPSR1	==	WDTCR.1
   147 00000 0140 C        	WPSR1	==	WDTCR.1
   148       2021 C        	WPSR0	==	WDTCR.0
   148 00000 0040 C        	WPSR0	==	WDTCR.0
   149            C        
   150            C        ; Reserver 0x22~0x3D
   151            C        
   152            C        ; ADCR1:ADC Control Register 1
   153       203E C        ADCR1	==   0x3E:rpage 0
   153 00000 0010 C        ADCR1	==   0x3E:rpage 0
   154       203E C        	CKR2		==	ADCR1.7
   154 00000 0740 C        	CKR2		==	ADCR1.7
   155       203E C        	CKR1		==	ADCR1.6
   155 00000 0640 C        	CKR1		==	ADCR1.6
   156       203E C        	CKR0		==	ADCR1.5
   156 00000 0540 C        	CKR0		==	ADCR1.5
   157       203E C        	ADRUN		==	ADCR1.4
   157 00000 0440 C        	ADRUN		==	ADCR1.4
   158       203E C        	ADP		==	ADCR1.3
   158 00000 0340 C        	ADP		==	ADCR1.3
   159       203E C        	ADOM		==	ADCR1.2
   159 00000 0240 C        	ADOM		==	ADCR1.2
   160       203E C        	SHS1		==	ADCR1.1
   160 00000 0140 C        	SHS1		==	ADCR1.1
   161       203E C        	SHS0		==	ADCR1.0
   161 00000 0040 C        	SHS0		==	ADCR1.0
   162            C        
   163            C        ; ADCR2:ADC Control Register 2
   164       203F C        ADCR2	==   0x3F:rpage 0
   164 00000 0010 C        ADCR2	==   0x3F:rpage 0
   165       203F C        	VPIS2		==	ADCR2.6
   165 00000 0640 C        	VPIS2		==	ADCR2.6
   166       203F C        	ADIM		==	ADCR2.5
   166 00000 0540 C        	ADIM		==	ADCR2.5
   167       203F C        	ADCMS		==	ADCR2.4
   167 00000 0440 C        	ADCMS		==	ADCR2.4
   168       203F C        	VPIS1		==	ADCR2.3
   168 00000 0340 C        	VPIS1		==	ADCR2.3
   169       203F C        	VPIS0		==	ADCR2.2
   169 00000 0240 C        	VPIS0		==	ADCR2.2
   170       203F C        	VREFP		==	ADCR2.1
   170 00000 0140 C        	VREFP		==	ADCR2.1
   171            C        
   172            C        ; ADISR:ADC Input Channel Selection Register
   173       2040 C        ADISR	==   0x40:rpage 0
   173 00000 0010 C        ADISR	==   0x40:rpage 0
   174       2040 C        	STPMK		==	ADISR.7
   174 00000 0740 C        	STPMK		==	ADISR.7
   175            C        
   176       2040 C        	ADIS3		==	ADISR.3
   176 00000 0340 C        	ADIS3		==	ADISR.3
   177       2040 C        	ADIS2		==	ADISR.2
   177 00000 0240 C        	ADIS2		==	ADISR.2
   178       2040 C        	ADIS1		==	ADISR.1
   178 00000 0140 C        	ADIS1		==	ADISR.1
   179       2040 C        	ADIS0		==	ADISR.0	
   179 00000 0040 C        	ADIS0		==	ADISR.0	
   180            C        
   181            C        ; ADER1:ADC Input Control Register 1
   182       2041 C        ADER1	==   0x41:rpage 0
   182 00000 0010 C        ADER1	==   0x41:rpage 0
   183       2041 C        	ADE7		==	ADER1.7
   183 00000 0740 C        	ADE7		==	ADER1.7
   184       2041 C        	ADE6		==	ADER1.6
   184 00000 0640 C        	ADE6		==	ADER1.6
   185       2041 C        	ADE5		==	ADER1.5
   185 00000 0540 C        	ADE5		==	ADER1.5
   186       2041 C        	ADE4		==	ADER1.4
   186 00000 0440 C        	ADE4		==	ADER1.4
   187       2041 C        	ADE3		==	ADER1.3
   187 00000 0340 C        	ADE3		==	ADER1.3
   188       2041 C        	ADE2		==	ADER1.2
   188 00000 0240 C        	ADE2		==	ADER1.2
   189       2041 C        	ADE1		==	ADER1.1
   189 00000 0140 C        	ADE1		==	ADER1.1
   190       2041 C        	ADE0		==	ADER1.0
   190 00000 0040 C        	ADE0		==	ADER1.0
   191            C        
   192            C        ; Reserve 0x42
   193            C        
   194            C        ; ADDL:Low Byte of ADC Data Buffer
   195       2043 C        ADDL	==   0x43:rpage 0
   195 00000 0010 C        ADDL	==   0x43:rpage 0
   196            C        
   197            C        ; ADDH:High Byte of ADC Data Buffer
   198       2044 C        ADDH	==   0x44:rpage 0
   198 00000 0010 C        ADDH	==   0x44:rpage 0
   199            C        
   200            C        ; ADCVL:Low Byte of ADC Comparison
   201       2045 C        ADCVL	==   0x45:rpage 0
   201 00000 0010 C        ADCVL	==   0x45:rpage 0
   202            C        
   203            C        ; ADCVH:High Byte of ADC Comparison
   204       2046 C        ADCVH	==   0x46:rpage 0
   204 00000 0010 C        ADCVH	==   0x46:rpage 0
   205            C        
   206            C        ; ADCONBUF:High Byte of ADC Comparison
   207       2047 C        ADCONBUF==   0x47:rpage 0
   207 00000 0010 C        ADCONBUF==   0x47:rpage 0
   208       2047 C        	ADBFEN		==	ADCONBUF.7
   208 00000 0740 C        	ADBFEN		==	ADCONBUF.7
   209       2047 C        	ADBFOVR		==	ADCONBUF.6
   209 00000 0640 C        	ADBFOVR		==	ADCONBUF.6
   210       2047 C        	ADBFINT		==	ADCONBUF.5
   210 00000 0540 C        	ADBFINT		==	ADCONBUF.5
   211            C        
   212       2047 C        	ADBFPTR2	==	ADCONBUF.2
   212 00000 0240 C        	ADBFPTR2	==	ADCONBUF.2
   213       2047 C        	ADBFPTR1	==	ADCONBUF.1
   213 00000 0140 C        	ADBFPTR1	==	ADCONBUF.1
   214       2047 C        	ADBFPTR0	==	ADCONBUF.0
   214 00000 0040 C        	ADBFPTR0	==	ADCONBUF.0
   215            C        
   216            C        ;Reserve 0x48~0x4F
   217            C        
   218            C        ;======================================================
   219            C        ;      BANK 1 Registers                                
   220            C        ;======================================================
   221            C        ; P5PHCR:Port 5 Pull-high Control Rgister
   222       2008 C        P5PHCR	==    0x08:rpage 1
   222 00000 0011 C        P5PHCR	==    0x08:rpage 1
   223            C        
   224            C        ; P6PHCR:Port 6 Pull-high Control Rgister
   225       2009 C        P6PHCR	==    0x09:rpage 1
   225 00000 0011 C        P6PHCR	==    0x09:rpage 1
   226            C        
   227            C        ; P7PHCR:Port 7 Pull-high Control Rgister
   228       200A C        P7PHCR ==    0x0A:rpage 1
   228 00000 0011 C        P7PHCR ==    0x0A:rpage 1
   229       200A C        	P7LPH		==	P7PHCR.0
   229 00000 0041 C        	P7LPH		==	P7PHCR.0
   230            C        
   231            C        ; P5PLCR:Port 5 Pull-low Control Register
   232       200B C        P5PLCR	==    0x0B:rpage 1
   232 00000 0011 C        P5PLCR	==    0x0B:rpage 1
   233            C        
   234            C        ; P6PLCR:Port 6 Pull-low Control Register
   235       200C C        P6PLCR	==    0x0C:rpage 1
   235 00000 0011 C        P6PLCR	==    0x0C:rpage 1
   236            C        
   237            C        ; P7PLCR:Port 7 Pull-low Control Register
   238       200D C        P7PLCR ==    0x0D:rpage 1
   238 00000 0011 C        P7PLCR ==    0x0D:rpage 1
   239       200D C        	P7LPL		==	P7PLCR.0
   239 00000 0041 C        	P7LPL		==	P7PLCR.0
   240            C        
   241            C        ; P5HDSCR:Port 5 High Drive Control Register
   242       200E C        P5HDSCR	==    0x0E:rpage 1
   242 00000 0011 C        P5HDSCR	==    0x0E:rpage 1
   243            C        
   244            C        ; P6HDSCR:Port 6 High Drive Control Register
   245       200F C        P6HDSCR	==    0x0F:rpage 1
   245 00000 0011 C        P6HDSCR	==    0x0F:rpage 1
   246            C        
   247            C        ; P7HDSCR:Port 7 High Drive Control Register
   248       2010 C        P7HDSCR ==    0x10:rpage 1
   248 00000 0011 C        P7HDSCR ==    0x10:rpage 1
   249       2010 C        	P7LHDS		==	P7HDSCR.0
   249 00000 0041 C        	P7LHDS		==	P7HDSCR.0
   250            C        
   251            C        ; P5ODCR:Port 5 Open-drain control Register
   252       2011 C        P5ODCR	==    0x11:rpage 1
   252 00000 0011 C        P5ODCR	==    0x11:rpage 1
   253            C        
   254            C        ; P6ODCR:Port 6 Open-drain control Register
   255       2012 C        P6ODCR	==    0x12:rpage 1
   255 00000 0011 C        P6ODCR	==    0x12:rpage 1
   256            C        
   257            C        ; P7ODCR:Port 7 Open-drain control Register
   258       2013 C        P7ODCR ==    0x13:rpage 1
   258 00000 0011 C        P7ODCR ==    0x13:rpage 1
   259       2013 C        	P7LOD		==	P7ODCR.0
   259 00000 0041 C        	P7LOD		==	P7ODCR.0
   260            C        
   261            C        ;Reserve 0x14~0x43
   262            C        
   263            C        ; FLKR:Flash Key Register for Table Write
   264       2044 C        FLKR	==    0x44:rpage 1
   264 00000 0011 C        FLKR	==    0x44:rpage 1
   265            C        
   266            C        ; TBPTL:Table Point Low Register
   267       2045 C        TBPTL	==    0x45:rpage 1
   267 00000 0011 C        TBPTL	==    0x45:rpage 1
   268            C        
   269            C        ; TBPTH:Table Point High Register
   270       2046 C        TBPTH	==    0x46:rpage 1
   270 00000 0011 C        TBPTH	==    0x46:rpage 1
   271       2046 C        	HLB		==	TBPTH.7
   271 00000 0741 C        	HLB		==	TBPTH.7
   272       2046 C        	RDS		==	TBPTH.6
   272 00000 0641 C        	RDS		==	TBPTH.6
   273            C        
   274            C        ; STKMON:Stack Point
   275       2047 C        STKMON	==    0x47:rpage 1
   275 00000 0011 C        STKMON	==    0x47:rpage 1
   276       2047 C        	STOV	==	STKMON.7
   276 00000 0741 C        	STOV	==	STKMON.7
   277       2047 C        	STL2	==	STKMON.2
   277 00000 0241 C        	STL2	==	STKMON.2
   278       2047 C        	STL1	==	STKMON.1
   278 00000 0141 C        	STL1	==	STKMON.1
   279       2047 C        	STL0	==	STKMON.0
   279 00000 0041 C        	STL0	==	STKMON.0
   280            C        
   281            C        ; PCH:Program Counter High
   282       2048 C        PCH	==    0x48:rpage 1
   282 00000 0011 C        PCH	==    0x48:rpage 1
   283            C        
   284            C        ; LVDCR:Low Voltage Detector Control Register
   285       2049 C        LVDCR	==    0x49:rpage 1
   285 00000 0011 C        LVDCR	==    0x49:rpage 1
   286       2049 C        	LVDEN		==	LVDCR.7
   286 00000 0741 C        	LVDEN		==	LVDCR.7
   287       2049 C        	LVDB		==	LVDCR.3		; LVD Status
   287 00000 0341 C        	LVDB		==	LVDCR.3		; LVD Status
   288            C        
   289            C        ; COBS1:Code Option Bit Selection Register 1
   290       204A C        COBS1	==    0x4A:rpage 1
   290 00000 0011 C        COBS1	==    0x4A:rpage 1
   291       204A C        	HLFS		==	COBS1.7
   291 00000 0741 C        	HLFS		==	COBS1.7
   292       204A C        	RESETEN		==	COBS1.6
   292 00000 0641 C        	RESETEN		==	COBS1.6
   293       204A C        	ENWDT		==	COBS1.5
   293 00000 0541 C        	ENWDT		==	COBS1.5
   294       204A C        	ADFM		==	COBS1.2
   294 00000 0241 C        	ADFM		==	COBS1.2
   295            C        
   296            C        ; COBS2:Code Option Bit Selection Register 2
   297            C        ;COBS2	==    0x4B:rpage 1
   298            C        
   299            C        ; COBS3:Code Option Bit Selection Register 3
   300       204C C        COBS3	==    0x4C:rpage 1
   300 00000 0011 C        COBS3	==    0x4C:rpage 1
   301       204C C        	FSS0		==	COBS3.5
   301 00000 0541 C        	FSS0		==	COBS3.5
   302       204C C        	SC4		==	COBS3.4
   302 00000 0441 C        	SC4		==	COBS3.4
   303       204C C        	SC3		==	COBS3.3
   303 00000 0341 C        	SC3		==	COBS3.3
   304       204C C        	SC2		==	COBS3.2
   304 00000 0241 C        	SC2		==	COBS3.2
   305       204C C        	SC1		==	COBS3.1
   305 00000 0141 C        	SC1		==	COBS3.1
   306       204C C        	SC0		==	COBS3.0
   306 00000 0041 C        	SC0		==	COBS3.0
   307            C        
   308            C        ; TBWCR:Table Write Control Register
   309       204D C        TBWCR	==    0x4D:rpage 1
   309 00000 0011 C        TBWCR	==    0x4D:rpage 1
   310       204D C        	IAPEN		==	TBWCR.0
   310 00000 0041 C        	IAPEN		==	TBWCR.0
   311            C        
   312            C        ; TBWAL:Table Write Start Address Low Byte
   313       204E C        TBWAL	==    0x4E:rpage 1
   313 00000 0011 C        TBWAL	==    0x4E:rpage 1
   314            C        
   315            C        ; TBWAH:Table Write Start Address Low Byte
   316       204F C        TBWAH	==    0x4F:rpage 1
   316 00000 0011 C        TBWAH	==    0x4F:rpage 1
   317            C        
   318            C        
   319            C        ;======================================================
   320            C        ;      BANK 2 Registers                                
   321            C        ;======================================================
   322            C        ; TM1CR1:
   323       2005 C        TM1CR1	==    0x05:rpage 2
   323 00000 0012 C        TM1CR1	==    0x05:rpage 2
   324       2005 C        	TM1S		==	TM1CR1.7
   324 00000 0742 C        	TM1S		==	TM1CR1.7
   325       2005 C        	TM1RC		==	TM1CR1.6
   325 00000 0642 C        	TM1RC		==	TM1CR1.6
   326       2005 C        	TM1SS1		==	TM1CR1.5
   326 00000 0542 C        	TM1SS1		==	TM1CR1.5
   327            C        
   328       2005 C        	TM1FF		==	TM1CR1.3
   328 00000 0342 C        	TM1FF		==	TM1CR1.3
   329       2005 C        	TM1MOS		==	TM1CR1.2
   329 00000 0242 C        	TM1MOS		==	TM1CR1.2
   330       2005 C        	TM1IS1		==	TM1CR1.1
   330 00000 0142 C        	TM1IS1		==	TM1CR1.1
   331       2005 C        	TM1IS0		==	TM1CR1.0
   331 00000 0042 C        	TM1IS0		==	TM1CR1.0
   332            C        
   333            C        ; TM1CR2:
   334       2006 C        TM1CR2	==    0x06:rpage 2
   334 00000 0012 C        TM1CR2	==    0x06:rpage 2
   335            C        
   336            C        ; TM1DBH:
   337       2007 C        TM1DBH	==    0x07:rpage 2
   337 00000 0012 C        TM1DBH	==    0x07:rpage 2
   338            C        
   339            C        ; TM1DBL:
   340       2008 C        TM1DBL	==    0x08:rpage 2
   340 00000 0012 C        TM1DBL	==    0x08:rpage 2
   341            C        
   342            C        ; TM1DAH:
   343       2009 C        TM1DAH	==    0x09:rpage 2
   343 00000 0012 C        TM1DAH	==    0x09:rpage 2
   344            C        
   345            C        ; TM1DAL:
   346       200A C        TM1DAL	==    0x0A:rpage 2
   346 00000 0012 C        TM1DAL	==    0x0A:rpage 2
   347            C        
   348            C        ; TM2CR1:
   349       200B C        TM2CR1	==    0x0B:rpage 2
   349 00000 0012 C        TM2CR1	==    0x0B:rpage 2
   350       200B C        	TM2S		==	TM2CR1.7
   350 00000 0742 C        	TM2S		==	TM2CR1.7
   351       200B C        	TM2RC		==	TM2CR1.6
   351 00000 0642 C        	TM2RC		==	TM2CR1.6
   352       200B C        	TM2SS1		==	TM2CR1.5
   352 00000 0542 C        	TM2SS1		==	TM2CR1.5
   353       200B C        	TM2FF		==	TM2CR1.3
   353 00000 0342 C        	TM2FF		==	TM2CR1.3
   354       200B C        	TM2MOS		==	TM2CR1.2
   354 00000 0242 C        	TM2MOS		==	TM2CR1.2
   355       200B C        	TM2IS1		==	TM2CR1.1
   355 00000 0142 C        	TM2IS1		==	TM2CR1.1
   356       200B C        	TM2IS0		==	TM2CR1.0
   356 00000 0042 C        	TM2IS0		==	TM2CR1.0
   357            C        
   358            C        ; TM2CR2:
   359       200C C        TM2CR2	==    0x0C:rpage 2
   359 00000 0012 C        TM2CR2	==    0x0C:rpage 2
   360            C        
   361            C        ; TM2DBH:
   362       200D C        TM2DBH	==    0x0D:rpage 2
   362 00000 0012 C        TM2DBH	==    0x0D:rpage 2
   363            C        
   364            C        ; TM2DBL:
   365       200E C        TM2DBL	==    0x0E:rpage 2
   365 00000 0012 C        TM2DBL	==    0x0E:rpage 2
   366            C        
   367            C        ; TM2DAH:
   368       200F C        TM2DAH	==    0x0F:rpage 2
   368 00000 0012 C        TM2DAH	==    0x0F:rpage 2
   369            C        
   370            C        ; TM2DAL:
   371       2010 C        TM2DAL	==    0x10:rpage 2
   371 00000 0012 C        TM2DAL	==    0x10:rpage 2
   372            C        
   373            C        ; TM3CR1:
   374       2011 C        TM3CR1	==    0x11:rpage 2
   374 00000 0012 C        TM3CR1	==    0x11:rpage 2
   375       2011 C        	TM3S		==	TM3CR1.7
   375 00000 0742 C        	TM3S		==	TM3CR1.7
   376       2011 C        	TM3RC		==	TM3CR1.6
   376 00000 0642 C        	TM3RC		==	TM3CR1.6
   377       2011 C        	TM3SS1		==	TM3CR1.5
   377 00000 0542 C        	TM3SS1		==	TM3CR1.5
   378       2011 C        	TM3FF		==	TM3CR1.3
   378 00000 0342 C        	TM3FF		==	TM3CR1.3
   379       2011 C        	TM3MOS		==	TM3CR1.2
   379 00000 0242 C        	TM3MOS		==	TM3CR1.2
   380       2011 C        	TM3IS1		==	TM3CR1.1
   380 00000 0142 C        	TM3IS1		==	TM3CR1.1
   381       2011 C        	TM3IS0		==	TM3CR1.0
   381 00000 0042 C        	TM3IS0		==	TM3CR1.0
   382            C        
   383            C        ; TM3CR2:
   384       2012 C        TM3CR2	==    0x12:rpage 2
   384 00000 0012 C        TM3CR2	==    0x12:rpage 2
   385            C        
   386            C        ; TM3DBH:
   387       2013 C        TM3DBH	==    0x13:rpage 2
   387 00000 0012 C        TM3DBH	==    0x13:rpage 2
   388            C        
   389            C        ; TM3DBL:
   390       2014 C        TM3DBL	==    0x14:rpage 2
   390 00000 0012 C        TM3DBL	==    0x14:rpage 2
   391            C        
   392            C        ; TM3DAH:
   393       2015 C        TM3DAH	==    0x15:rpage 2
   393 00000 0012 C        TM3DAH	==    0x15:rpage 2
   394            C        
   395            C        ; TM3DAL:
   396       2016 C        TM3DAL	==    0x16:rpage 2
   396 00000 0012 C        TM3DAL	==    0x16:rpage 2
   397            C        
   398            C        ; TM4CR1:
   399       2017 C        TM4CR1	==    0x17:rpage 2
   399 00000 0012 C        TM4CR1	==    0x17:rpage 2
   400       2017 C        	TM4S		==	TM4CR1.7
   400 00000 0742 C        	TM4S		==	TM4CR1.7
   401       2017 C        	TM4RC		==	TM4CR1.6
   401 00000 0642 C        	TM4RC		==	TM4CR1.6
   402       2017 C        	TM4SS1		==	TM4CR1.5
   402 00000 0542 C        	TM4SS1		==	TM4CR1.5
   403       2017 C        	TM4FF		==	TM4CR1.3
   403 00000 0342 C        	TM4FF		==	TM4CR1.3
   404       2017 C        	TM4MOS		==	TM4CR1.2
   404 00000 0242 C        	TM4MOS		==	TM4CR1.2
   405       2017 C        	TM4IS1		==	TM4CR1.1
   405 00000 0142 C        	TM4IS1		==	TM4CR1.1
   406       2017 C        	TM4IS0		==	TM4CR1.0
   406 00000 0042 C        	TM4IS0		==	TM4CR1.0
   407            C        
   408            C        ; TM4CR2:
   409       2018 C        TM4CR2	==    0x18:rpage 2
   409 00000 0012 C        TM4CR2	==    0x18:rpage 2
   410            C        
   411            C        ; TM4DBH:
   412       2019 C        TM4DBH	==    0x19:rpage 2
   412 00000 0012 C        TM4DBH	==    0x19:rpage 2
   413            C        
   414            C        ; TM4DBL:
   415       201A C        TM4DBL	==    0x1A:rpage 2
   415 00000 0012 C        TM4DBL	==    0x1A:rpage 2
   416            C        
   417            C        ; TM4DAH:
   418       201B C        TM4DAH	==    0x1B:rpage 2
   418 00000 0012 C        TM4DAH	==    0x1B:rpage 2
   419            C        
   420            C        ; TM4DAL:
   421       201C C        TM4DAL	==    0x1C:rpage 2
   421 00000 0012 C        TM4DAL	==    0x1C:rpage 2
   422            C        
   423            C        ; EI01NCR:
   424       201D C        EI01NCR	==    0x1D:rpage 2
   424 00000 0012 C        EI01NCR	==    0x1D:rpage 2
   425       201D C        	EI1NRE		==	EI01NCR.7
   425 00000 0742 C        	EI1NRE		==	EI01NCR.7
   426       201D C        	EI1NR1		==	EI01NCR.5
   426 00000 0542 C        	EI1NR1		==	EI01NCR.5
   427       201D C        	EI1NR0		==	EI01NCR.4
   427 00000 0442 C        	EI1NR0		==	EI01NCR.4
   428       201D C        	EI0NRE		==	EI01NCR.3
   428 00000 0342 C        	EI0NRE		==	EI01NCR.3
   429       201D C        	EI0NR1		==	EI01NCR.1
   429 00000 0142 C        	EI0NR1		==	EI01NCR.1
   430       201D C        	EI0NR0		==	EI01NCR.0
   430 00000 0042 C        	EI0NR0		==	EI01NCR.0
   431            C        
   432            C        ; CMP1CR:
   433       201E C        CMP1CR	==    0x1E:rpage 2
   433 00000 0012 C        CMP1CR	==    0x1E:rpage 2
   434       201E C        	C1PRS1		==	CMP1CR.7
   434 00000 0742 C        	C1PRS1		==	CMP1CR.7
   435       201E C        	C1PRS0		==	CMP1CR.6
   435 00000 0642 C        	C1PRS0		==	CMP1CR.6
   436       201E C        	C1NRS1		==	CMP1CR.5
   436 00000 0542 C        	C1NRS1		==	CMP1CR.5
   437       201E C        	C1NRS0		==	CMP1CR.4
   437 00000 0442 C        	C1NRS0		==	CMP1CR.4
   438       201E C        	CMP1EN		==	CMP1CR.2
   438 00000 0242 C        	CMP1EN		==	CMP1CR.2
   439       201E C        	CMP1OE		==	CMP1CR.1
   439 00000 0142 C        	CMP1OE		==	CMP1CR.1
   440       201E C        	CMP1OUT		==	CMP1CR.0
   440 00000 0042 C        	CMP1OUT		==	CMP1CR.0
   441            C        
   442            C        ; CMP2CR:
   443       201F C        CMP2CR	==    0x1F:rpage 2
   443 00000 0012 C        CMP2CR	==    0x1F:rpage 2
   444       201F C        	C2PRS1		==	CMP2CR.7
   444 00000 0742 C        	C2PRS1		==	CMP2CR.7
   445       201F C        	C2PRS0		==	CMP2CR.6
   445 00000 0642 C        	C2PRS0		==	CMP2CR.6
   446       201F C        	C2NRS1		==	CMP2CR.5
   446 00000 0542 C        	C2NRS1		==	CMP2CR.5
   447       201F C        	C2NRS0		==	CMP2CR.4
   447 00000 0442 C        	C2NRS0		==	CMP2CR.4
   448       201F C        	HYSEN2		==	CMP2CR.3
   448 00000 0342 C        	HYSEN2		==	CMP2CR.3
   449       201F C        	CMP2EN		==	CMP2CR.2
   449 00000 0242 C        	CMP2EN		==	CMP2CR.2
   450       201F C        	CMP2OE		==	CMP2CR.1
   450 00000 0142 C        	CMP2OE		==	CMP2CR.1
   451       201F C        	CMP2OUT		==	CMP2CR.0
   451 00000 0042 C        	CMP2OUT		==	CMP2CR.0
   452            C        
   453            C        ;Reserve 0x20~0x21
   454            C        
   455            C        ; CMPESCR:
   456       2022 C        CMPESCR	==    0x22:rpage 2
   456 00000 0012 C        CMPESCR	==    0x22:rpage 2
   457       2022 C        	CMP2ES		==	CMPESCR.1
   457 00000 0142 C        	CMP2ES		==	CMPESCR.1
   458       2022 C        	CMP1ES		==	CMPESCR.0
   458 00000 0042 C        	CMP1ES		==	CMPESCR.0
   459            C        
   460            C        ; CMP12NCR:
   461       2023 C        CMP12NCR==    0x23:rpage 2
   461 00000 0012 C        CMP12NCR==    0x23:rpage 2
   462       2023 C        	CO2NRE		==	CMP12NCR.7
   462 00000 0742 C        	CO2NRE		==	CMP12NCR.7
   463       2023 C        	CO2NR1		==	CMP12NCR.5
   463 00000 0542 C        	CO2NR1		==	CMP12NCR.5
   464       2023 C        	CO2NR0		==	CMP12NCR.4
   464 00000 0442 C        	CO2NR0		==	CMP12NCR.4
   465       2023 C        	CO1NRE		==	CMP12NCR.3
   465 00000 0342 C        	CO1NRE		==	CMP12NCR.3
   466       2023 C        	CO1NR1		==	CMP12NCR.1
   466 00000 0142 C        	CO1NR1		==	CMP12NCR.1
   467       2023 C        	CO1NR0		==	CMP12NCR.0
   467 00000 0042 C        	CO1NR0		==	CMP12NCR.0
   468            C        
   469            C        ;Reserve 0x24
   470            C        
   471            C        ; CMPTCR1:
   472       2025 C        CMPTCR1	==    0x25:rpage 2
   472 00000 0012 C        CMPTCR1	==    0x25:rpage 2
   473       2025 C        	CMPTEN		==	CMPTCR1.7
   473 00000 0742 C        	CMPTEN		==	CMPTCR1.7
   474       2025 C        	VOSFS2		==	CMPTCR1.6
   474 00000 0642 C        	VOSFS2		==	CMPTCR1.6
   475       2025 C        	VOSFS1		==	CMPTCR1.5
   475 00000 0542 C        	VOSFS1		==	CMPTCR1.5
   476       2025 C        	VOSFS0		==	CMPTCR1.4
   476 00000 0442 C        	VOSFS0		==	CMPTCR1.4
   477       2025 C        	TRIMDU2		==	CMPTCR1.1
   477 00000 0142 C        	TRIMDU2		==	CMPTCR1.1
   478       2025 C        	TRIMDU1		==	CMPTCR1.0
   478 00000 0042 C        	TRIMDU1		==	CMPTCR1.0
   479            C        
   480            C        ; CMPTCR2:
   481       2026 C        CMPTCR2	==    0x26:rpage 2
   481 00000 0012 C        CMPTCR2	==    0x26:rpage 2
   482       2026 C        	TRIMOS		==	CMPTCR2.4
   482 00000 0442 C        	TRIMOS		==	CMPTCR2.4
   483       2026 C        	TRIMIS2		==	CMPTCR2.1
   483 00000 0142 C        	TRIMIS2		==	CMPTCR2.1
   484       2026 C        	TRIMIS1		==	CMPTCR2.0
   484 00000 0042 C        	TRIMIS1		==	CMPTCR2.0
   485            C        
   486            C        ; TCMP1H:
   487       2027 C        TCMP1H	==    0x27:rpage 2
   487 00000 0012 C        TCMP1H	==    0x27:rpage 2
   488       2027 C        	TCMP1HS		==	TCMP1H.7
   488 00000 0742 C        	TCMP1HS		==	TCMP1H.7
   489       2027 C        	TCMP1H4		==	TCMP1H.4
   489 00000 0442 C        	TCMP1H4		==	TCMP1H.4
   490       2027 C        	TCMP1H3		==	TCMP1H.3
   490 00000 0342 C        	TCMP1H3		==	TCMP1H.3
   491       2027 C        	TCMP1H2		==	TCMP1H.2
   491 00000 0242 C        	TCMP1H2		==	TCMP1H.2
   492       2027 C        	TCMP1H1		==	TCMP1H.1
   492 00000 0142 C        	TCMP1H1		==	TCMP1H.1
   493       2027 C        	TCMP1H0		==	TCMP1H.0
   493 00000 0042 C        	TCMP1H0		==	TCMP1H.0
   494            C        
   495            C        ; TCMP1L:
   496       2028 C        TCMP1L	==    0x28:rpage 2
   496 00000 0012 C        TCMP1L	==    0x28:rpage 2
   497       2028 C        	TCMP1LS		==	TCMP1L.7
   497 00000 0742 C        	TCMP1LS		==	TCMP1L.7
   498       2028 C        	TCMP1L4		==	TCMP1L.4
   498 00000 0442 C        	TCMP1L4		==	TCMP1L.4
   499       2028 C        	TCMP1L3		==	TCMP1L.3
   499 00000 0342 C        	TCMP1L3		==	TCMP1L.3
   500       2028 C        	TCMP1L2		==	TCMP1L.2
   500 00000 0242 C        	TCMP1L2		==	TCMP1L.2
   501       2028 C        	TCMP1L1		==	TCMP1L.1
   501 00000 0142 C        	TCMP1L1		==	TCMP1L.1
   502       2028 C        	TCMP1L0		==	TCMP1L.0
   502 00000 0042 C        	TCMP1L0		==	TCMP1L.0
   503            C        
   504            C        ;Reserve 0x29~0x2A
   505            C        
   506            C        ; THCMP2H:
   507       202B C        THCMP2H	==    0x2B:rpage 2
   507 00000 0012 C        THCMP2H	==    0x2B:rpage 2
   508       202B C        	THCMP2HS	==	THCMP2H.7
   508 00000 0742 C        	THCMP2HS	==	THCMP2H.7
   509            C        
   510       202B C        	THCMP2H5	==	THCMP2H.5
   510 00000 0542 C        	THCMP2H5	==	THCMP2H.5
   511       202B C        	THCMP2H4	==	THCMP2H.4
   511 00000 0442 C        	THCMP2H4	==	THCMP2H.4
   512       202B C        	THCMP2H3	==	THCMP2H.3
   512 00000 0342 C        	THCMP2H3	==	THCMP2H.3
   513       202B C        	THCMP2H2	==	THCMP2H.2
   513 00000 0242 C        	THCMP2H2	==	THCMP2H.2
   514       202B C        	THCMP2H1	==	THCMP2H.1
   514 00000 0142 C        	THCMP2H1	==	THCMP2H.1
   515       202B C        	THCMP2H0	==	THCMP2H.0
   515 00000 0042 C        	THCMP2H0	==	THCMP2H.0
   516            C        
   517            C        ; TLCMP2H:
   518       202C C        TLCMP2H	==    0x2C:rpage 2
   518 00000 0012 C        TLCMP2H	==    0x2C:rpage 2
   519       202C C        	TLCMP2HS	==	TLCMP2H.7
   519 00000 0742 C        	TLCMP2HS	==	TLCMP2H.7
   520            C        
   521       202C C        	TLCMP2H5	==	TLCMP2H.5
   521 00000 0542 C        	TLCMP2H5	==	TLCMP2H.5
   522       202C C        	TLCMP2H4	==	TLCMP2H.4
   522 00000 0442 C        	TLCMP2H4	==	TLCMP2H.4
   523       202C C        	TLCMP2H3	==	TLCMP2H.3
   523 00000 0342 C        	TLCMP2H3	==	TLCMP2H.3
   524       202C C        	TLCMP2H2	==	TLCMP2H.2
   524 00000 0242 C        	TLCMP2H2	==	TLCMP2H.2
   525       202C C        	TLCMP2H1	==	TLCMP2H.1
   525 00000 0142 C        	TLCMP2H1	==	TLCMP2H.1
   526       202C C        	TLCMP2H0	==	TLCMP2H.0
   526 00000 0042 C        	TLCMP2H0	==	TLCMP2H.0
   527            C        
   528            C        ; THCMP2L:
   529       202D C        THCMP2L	==    0x2D:rpage 2
   529 00000 0012 C        THCMP2L	==    0x2D:rpage 2
   530       202D C        	THCMP2LS	==	THCMP2L.7
   530 00000 0742 C        	THCMP2LS	==	THCMP2L.7
   531            C        
   532       202D C        	THCMP2L5	==	THCMP2L.5
   532 00000 0542 C        	THCMP2L5	==	THCMP2L.5
   533       202D C        	THCMP2L4	==	THCMP2L.4
   533 00000 0442 C        	THCMP2L4	==	THCMP2L.4
   534       202D C        	THCMP2L3	==	THCMP2L.3
   534 00000 0342 C        	THCMP2L3	==	THCMP2L.3
   535       202D C        	THCMP2L2	==	THCMP2L.2
   535 00000 0242 C        	THCMP2L2	==	THCMP2L.2
   536       202D C        	THCMP2L1	==	THCMP2L.1
   536 00000 0142 C        	THCMP2L1	==	THCMP2L.1
   537       202D C        	THCMP2L0	==	THCMP2L.0
   537 00000 0042 C        	THCMP2L0	==	THCMP2L.0
   538            C        
   539            C        ; TLCMP2L:
   540       202E C        TLCMP2L	==    0x2E:rpage 2
   540 00000 0012 C        TLCMP2L	==    0x2E:rpage 2
   541       202E C        	TLCMP2LS	==	TLCMP2L.7
   541 00000 0742 C        	TLCMP2LS	==	TLCMP2L.7
   542            C        
   543       202E C        	TLCMP2L5	==	TLCMP2L.5
   543 00000 0542 C        	TLCMP2L5	==	TLCMP2L.5
   544       202E C        	TLCMP2L4	==	TLCMP2L.4
   544 00000 0442 C        	TLCMP2L4	==	TLCMP2L.4
   545       202E C        	TLCMP2L3	==	TLCMP2L.3
   545 00000 0342 C        	TLCMP2L3	==	TLCMP2L.3
   546       202E C        	TLCMP2L2	==	TLCMP2L.2
   546 00000 0242 C        	TLCMP2L2	==	TLCMP2L.2
   547       202E C        	TLCMP2L1	==	TLCMP2L.1
   547 00000 0142 C        	TLCMP2L1	==	TLCMP2L.1
   548       202E C        	TLCMP2L0	==	TLCMP2L.0
   548 00000 0042 C        	TLCMP2L0	==	TLCMP2L.0
   549            C        
   550            C        ;Reserve 0x2F~0x3B
   551            C        
   552            C        ; COBS4
   553       203C C        COBS4	==    0x3C:rpage 2
   553 00000 0012 C        COBS4	==    0x3C:rpage 2
   554            C        
   555            C        ; COBS5
   556       203D C        COBS5	==    0x3D:rpage 2
   556 00000 0012 C        COBS5	==    0x3D:rpage 2
   557            C        
   558            C        ; COBS6
   559       203E C        COBS6	==    0x3E:rpage 2
   559 00000 0012 C        COBS6	==    0x3E:rpage 2
   560            C        
   561            C        ; COBS7
   562       203F C        COBS7	==    0x3F:rpage 2
   562 00000 0012 C        COBS7	==    0x3F:rpage 2
   563            C        
   564            C        ; MULMOD:
   565       2040 C        MULMOD	==    0x40:rpage 2
   565 00000 0012 C        MULMOD	==    0x40:rpage 2
   566       2040 C        	PROD16		==	MULMOD.4
   566 00000 0442 C        	PROD16		==	MULMOD.4
   567       2040 C        	MACEN		==	MULMOD.3
   567 00000 0342 C        	MACEN		==	MULMOD.3
   568       2040 C        	MACM		==	MULMOD.2
   568 00000 0242 C        	MACM		==	MULMOD.2
   569       2040 C        	SMCAND		==	MULMOD.1
   569 00000 0142 C        	SMCAND		==	MULMOD.1
   570       2040 C        	SMIER		==	MULMOD.0
   570 00000 0042 C        	SMIER		==	MULMOD.0
   571            C        
   572            C        ; PRODH:
   573       2041 C        PRODH	==    0x41:rpage 2
   573 00000 0012 C        PRODH	==    0x41:rpage 2
   574            C        
   575            C        ; PRODL:
   576       2042 C        PRODL	==    0x42:rpage 2
   576 00000 0012 C        PRODL	==    0x42:rpage 2
   577            C        
   578            C        ; SFR7:
   579       2043 C        SFR7	==    0x43:rpage 2
   579 00000 0012 C        SFR7	==    0x43:rpage 2
   580       2043 C        	TM4SF	== SFR7.3
   580 00000 0342 C        	TM4SF	== SFR7.3
   581       2043 C        	TM3SF	== SFR7.2
   581 00000 0242 C        	TM3SF	== SFR7.2
   582       2043 C        	TM2SF	== SFR7.1
   582 00000 0142 C        	TM2SF	== SFR7.1
   583       2043 C        	TM1SF	== SFR7.0
   583 00000 0042 C        	TM1SF	== SFR7.0
   584            C        
   585            C        ;Reserve 0x44
   586            C        
   587            C        ; IMR7:
   588       2045 C        IMR7	==    0x45:rpage 2
   588 00000 0012 C        IMR7	==    0x45:rpage 2
   589       2045 C        	TM4IE	== IMR7.3
   589 00000 0342 C        	TM4IE	== IMR7.3
   590       2045 C        	TM3IE	== IMR7.2
   590 00000 0242 C        	TM3IE	== IMR7.2
   591       2045 C        	TM2IE	== IMR7.1
   591 00000 0142 C        	TM2IE	== IMR7.1
   592       2045 C        	TM1IE	== IMR7.0
   592 00000 0042 C        	TM1IE	== IMR7.0
   593            C        
   594            C        ;Reserve 0x46
   595            C        
   596            C        ; LOCKPR:Lock Page Number Register
   597       2047 C        LOCKPR	==	  0x47:rpage 2
   597 00000 0012 C        LOCKPR	==	  0x47:rpage 2
   598            C        
   599            C        ; LOCKPR:Lock Page Number Register
   600       2048 C        LOCKCR	==	  0x48:rpage 2
   600 00000 0012 C        LOCKCR	==	  0x48:rpage 2
   601       2048 C        	LOCKEN	== LOCKCR.7
   601 00000 0742 C        	LOCKEN	== LOCKCR.7
   602            C        
   603            C        ; ICEMR3:ICE Monitor Register 3
   604       2049 C        ICEMR3	==    0x49:rpage 2
   604 00000 0012 C        ICEMR3	==    0x49:rpage 2
   605            C        
   606            C        ; ICEMR2:ICE Monitor Register 2
   607       204A C        ICEMR2	==    0x4A:rpage 2
   607 00000 0012 C        ICEMR2	==    0x4A:rpage 2
   608            C        
   609            C        ; ICEMR1:ICE Monitor Register 1
   610       204B C        ICEMR1	==    0x4B:rpage 2
   610 00000 0012 C        ICEMR1	==    0x4B:rpage 2
   611            C        
   612            C        ; ICEACK:ICE Monitor ACK egister
   613       204C C        ICEACK	==    0x4C:rpage 2
   613 00000 0012 C        ICEACK	==    0x4C:rpage 2
   614            C        
   615            C        ; ICEBUF:ICE Monitor Buffer Register
   616       204D C        ICEBUF	==    0x4D:rpage 2
   616 00000 0012 C        ICEBUF	==    0x4D:rpage 2
   617            C        
   618            C        
   619            C        ;======================================================
   620            C        ;      BANK 3 Registers                                
   621            C        ;======================================================
   622            C        
   623            C        ; EIOPWMPE0
   624       2005 C        EIOPWMPE0	==    0x05:rpage 3
   624 00000 0013 C        EIOPWMPE0	==    0x05:rpage 3
   625            C        
   626            C        ; EOPWMPE0
   627       2006 C        EOPWMPE0	==    0x06:rpage 3
   627 00000 0013 C        EOPWMPE0	==    0x06:rpage 3
   628            C        
   629            C        ; EIOPHAPE
   630       2007 C        EIOPHAPE	==    0x07:rpage 3
   630 00000 0013 C        EIOPHAPE	==    0x07:rpage 3
   631            C        
   632            C        ;Reserve 0x08
   633            C        
   634            C        ; T5CRH
   635       2009 C        T5CRH		==    0x09:rpage 3
   635 00000 0013 C        T5CRH		==    0x09:rpage 3
   636            C        
   637            C        ; T5CRL
   638       200A C        T5CRL		==    0x0A:rpage 3
   638 00000 0013 C        T5CRL		==    0x0A:rpage 3
   639            C        
   640            C        ; T6CRH
   641       200B C        T6CRH		==    0x0B:rpage 3
   641 00000 0013 C        T6CRH		==    0x0B:rpage 3
   642            C        
   643            C        ; T6CRL
   644       200C C        T6CRL		==    0x0C:rpage 3
   644 00000 0013 C        T6CRL		==    0x0C:rpage 3
   645            C        
   646            C        ; PWMCR1H
   647       200D C        PWMCR1H		==    0x0D:rpage 3
   647 00000 0013 C        PWMCR1H		==    0x0D:rpage 3
   648            C        
   649            C        ; PWMCR1L
   650       200E C        PWMCR1L		==    0x0E:rpage 3
   650 00000 0013 C        PWMCR1L		==    0x0E:rpage 3
   651            C        
   652            C        ; PWMCR2H
   653       200F C        PWMCR2H		==    0x0F:rpage 3
   653 00000 0013 C        PWMCR2H		==    0x0F:rpage 3
   654            C        
   655            C        ; PWMCR2L
   656       2010 C        PWMCR2L		==    0x10:rpage 3
   656 00000 0013 C        PWMCR2L		==    0x10:rpage 3
   657            C        
   658            C        ; T5OPMS
   659       2011 C        T5OPMS		==    0x11:rpage 3
   659 00000 0013 C        T5OPMS		==    0x11:rpage 3
   660            C        
   661            C        ; T6OPMS
   662       2012 C        T6OPMS		==    0x12:rpage 3
   662 00000 0013 C        T6OPMS		==    0x12:rpage 3
   663            C        
   664            C        ; ASPWM
   665       2013 C        ASPWM		==    0x13:rpage 3
   665 00000 0013 C        ASPWM		==    0x13:rpage 3
   666            C        
   667            C        ; LVPWM
   668       2014 C        LVPWM		==    0x14:rpage 3
   668 00000 0013 C        LVPWM		==    0x14:rpage 3
   669            C        
   670            C        ; SLPWM
   671       2015 C        SLPWM		==    0x15:rpage 3
   671 00000 0013 C        SLPWM		==    0x15:rpage 3
   672            C        
   673            C        ; COPH
   674       2016 C        COPH		==    0x16:rpage 3
   674 00000 0013 C        COPH		==    0x16:rpage 3
   675            C        
   676            C        ; COPL
   677       2017 C        COPL		==    0x17:rpage 3
   677 00000 0013 C        COPL		==    0x17:rpage 3
   678            C        
   679            C        ; MCOPH
   680       2018 C        MCOPH		==    0x18:rpage 3
   680 00000 0013 C        MCOPH		==    0x18:rpage 3
   681            C        
   682            C        ; MCOPL
   683       2019 C        MCOP		==    0x19:rpage 3
   683 00000 0013 C        MCOP		==    0x19:rpage 3
   684            C        
   685            C        ; T5DECR
   686       201A C        T5DECR		==    0x1A:rpage 3
   686 00000 0013 C        T5DECR		==    0x1A:rpage 3
   687            C        
   688            C        ; T5DEB
   689       201B C        T5DEB		==    0x1B:rpage 3
   689 00000 0013 C        T5DEB		==    0x1B:rpage 3
   690            C        
   691            C        ; HACRH
   692       201C C        HACRH		==    0x1C:rpage 3
   692 00000 0013 C        HACRH		==    0x1C:rpage 3
   693            C        
   694            C        ; HACRL
   695       201D C        HACRL		==    0x1D:rpage 3
   695 00000 0013 C        HACRL		==    0x1D:rpage 3
   696            C        
   697            C        ; BRKCR1H
   698       201E C        BRKCR1H		==    0x1E:rpage 3
   698 00000 0013 C        BRKCR1H		==    0x1E:rpage 3
   699            C        
   700            C        ; BRKCR1L
   701       201F C        BRKCR1L		==    0x1F:rpage 3
   701 00000 0013 C        BRKCR1L		==    0x1F:rpage 3
   702            C        
   703            C        ; BRKCR2H
   704       2020 C        BRKCR2H		==    0x20:rpage 3
   704 00000 0013 C        BRKCR2H		==    0x20:rpage 3
   705            C        
   706            C        ; BRKCR2L
   707       2021 C        BRKCR2L		==    0x21:rpage 3
   707 00000 0013 C        BRKCR2L		==    0x21:rpage 3
   708            C        
   709            C        ; TRADCR
   710       2022 C        TRADCR		==    0x22:rpage 3
   710 00000 0013 C        TRADCR		==    0x22:rpage 3
   711            C        
   712            C        ; TSF1H
   713       2023 C        TSF1H		==    0x23:rpage 3
   713 00000 0013 C        TSF1H		==    0x23:rpage 3
   714            C        
   715            C        ; TSF1L
   716       2024 C        TSF1L		==    0x24:rpage 3
   716 00000 0013 C        TSF1L		==    0x24:rpage 3
   717            C        
   718            C        ; SETM1H
   719       2025 C        SETM1H		==    0x25:rpage 3
   719 00000 0013 C        SETM1H		==    0x25:rpage 3
   720       2025 C        	IEHC		==	SETM1H.7
   720 00000 0743 C        	IEHC		==	SETM1H.7
   721       2025 C        	MTRS		==	SETM1H.6
   721 00000 0643 C        	MTRS		==	SETM1H.6
   722       2025 C        	COIDS		==	SETM1H.3
   722 00000 0343 C        	COIDS		==	SETM1H.3
   723       2025 C        	BRKFS		==	SETM1H.2
   723 00000 0243 C        	BRKFS		==	SETM1H.2
   724            C        
   725            C        ; SETM1L
   726       2026 C        SETM1L		==    0x26:rpage 3
   726 00000 0013 C        SETM1L		==    0x26:rpage 3
   727       2026 C        	T6MTS		==	SETM1L.3
   727 00000 0343 C        	T6MTS		==	SETM1L.3
   728       2026 C        	T6RS		==	SETM1L.2
   728 00000 0243 C        	T6RS		==	SETM1L.2
   729       2026 C        	T5MTS		==	SETM1L.1
   729 00000 0143 C        	T5MTS		==	SETM1L.1
   730       2026 C        	T5RS		==	SETM1L.0
   730 00000 0043 C        	T5RS		==	SETM1L.0
   731            C        
   732            C        
   733            C        ; RSTM1H
   734       2027 C        RSTM1H		==    0x27:rpage 3
   734 00000 0013 C        RSTM1H		==    0x27:rpage 3
   735       2027 C        	MTRR		==	RSTM1H.6
   735 00000 0643 C        	MTRR		==	RSTM1H.6
   736       2027 C        	COIDR		==	RSTM1H.3
   736 00000 0343 C        	COIDR		==	RSTM1H.3
   737       2027 C        	BRKFR		==	RSTM1H.2
   737 00000 0243 C        	BRKFR		==	RSTM1H.2
   738            C        
   739            C        ; RSTM1L
   740       2028 C        RSTM1L		==    0x28:rpage 3
   740 00000 0013 C        RSTM1L		==    0x28:rpage 3
   741       2028 C        	T6MTR		==	RSTM1L.3
   741 00000 0343 C        	T6MTR		==	RSTM1L.3
   742       2028 C        	T6RR		==	RSTM1L.2
   742 00000 0243 C        	T6RR		==	RSTM1L.2
   743       2028 C        	T5MTR		==	RSTM1L.1
   743 00000 0143 C        	T5MTR		==	RSTM1L.1
   744       2028 C        	T5RR		==	RSTM1L.0
   744 00000 0043 C        	T5RR		==	RSTM1L.0
   745            C        
   746            C        ;Reserve 0x29~0x2A
   747            C        
   748            C        ; T5VALH
   749       202B C        T5VALH		==    0x2B:rpage 3
   749 00000 0013 C        T5VALH		==    0x2B:rpage 3
   750            C        
   751            C        ; T5VALL
   752       202C C        T5VALL		==    0x2C:rpage 3
   752 00000 0013 C        T5VALL		==    0x2C:rpage 3
   753            C        
   754            C        ; T5PDH
   755       202D C        T5PDH		==    0x2D:rpage 3
   755 00000 0013 C        T5PDH		==    0x2D:rpage 3
   756            C        
   757            C        ; T5PDL
   758       202E C        T5PDL		==    0x2E:rpage 3
   758 00000 0013 C        T5PDL		==    0x2E:rpage 3
   759            C        
   760            C        ; T5ACDH
   761       202F C        T5ACDH		==    0x2F:rpage 3
   761 00000 0013 C        T5ACDH		==    0x2F:rpage 3
   762            C        
   763            C        ; T5ACDL
   764       2030 C        T5ACDL		==    0x30:rpage 3
   764 00000 0013 C        T5ACDL		==    0x30:rpage 3
   765            C        
   766            C        ; T5BCDH
   767       2031 C        T5BCDH		==    0x31:rpage 3
   767 00000 0013 C        T5BCDH		==    0x31:rpage 3
   768            C        
   769            C        ; T5BCDL
   770       2032 C        T5BCDL		==    0x32:rpage 3
   770 00000 0013 C        T5BCDL		==    0x32:rpage 3
   771            C        
   772            C        ; T5CCDH
   773       2033 C        T5CCDH		==    0x33:rpage 3
   773 00000 0013 C        T5CCDH		==    0x33:rpage 3
   774            C        
   775            C        ; T5CCDL
   776       2034 C        T5CCDL		==    0x34:rpage 3
   776 00000 0013 C        T5CCDL		==    0x34:rpage 3
   777            C        
   778            C        ; T5ACDMH
   779       2035 C        T5ACDMH		==    0x35:rpage 3
   779 00000 0013 C        T5ACDMH		==    0x35:rpage 3
   780            C        
   781            C        ; T5ACDML
   782       2036 C        T5ACDML		==    0x36:rpage 3
   782 00000 0013 C        T5ACDML		==    0x36:rpage 3
   783            C        
   784            C        ; T5BCDMH
   785       2037 C        T5BCDMH		==    0x37:rpage 3
   785 00000 0013 C        T5BCDMH		==    0x37:rpage 3
   786            C        
   787            C        ; T5BCDML
   788       2038 C        T5BCDML		==    0x38:rpage 3
   788 00000 0013 C        T5BCDML		==    0x38:rpage 3
   789            C        
   790            C        ; T5CCDMH
   791       2039 C        T5CCDMH		==    0x39:rpage 3
   791 00000 0013 C        T5CCDMH		==    0x39:rpage 3
   792            C        
   793            C        ; T5CCDML
   794       203A C        T5CCDML		==    0x3A:rpage 3
   794 00000 0013 C        T5CCDML		==    0x3A:rpage 3
   795            C        
   796            C        ; TRAD1VH
   797       203B C        TRAD1VH		==    0x3B:rpage 3
   797 00000 0013 C        TRAD1VH		==    0x3B:rpage 3
   798            C        
   799            C        ; TRAD1VL
   800       203C C        TRAD1VL		==    0x3C:rpage 3
   800 00000 0013 C        TRAD1VL		==    0x3C:rpage 3
   801            C        
   802            C        ; TRAD2VH
   803       203D C        TRAD2VH		==    0x3D:rpage 3
   803 00000 0013 C        TRAD2VH		==    0x3D:rpage 3
   804            C        
   805            C        ; TRAD2VL
   806       203E C        TRAD2VL		==    0x3E:rpage 3
   806 00000 0013 C        TRAD2VL		==    0x3E:rpage 3
   807            C        
   808            C        ; T6VALH
   809       203F C        T6VALH		==    0x3F:rpage 3
   809 00000 0013 C        T6VALH		==    0x3F:rpage 3
   810            C        
   811            C        ; T6VALL
   812       2040 C        T6VALL		==    0x40:rpage 3
   812 00000 0013 C        T6VALL		==    0x40:rpage 3
   813            C        
   814            C        ; T6PDH
   815       2041 C        T6PDH		==    0x41:rpage 3
   815 00000 0013 C        T6PDH		==    0x41:rpage 3
   816            C        
   817            C        ; T6PDL
   818       2042 C        T6PDL		==    0x42:rpage 3
   818 00000 0013 C        T6PDL		==    0x42:rpage 3
   819            C        
   820            C        ; T6CDH
   821       2043 C        T6CDH		==    0x43:rpage 3
   821 00000 0013 C        T6CDH		==    0x43:rpage 3
   822            C        
   823            C        ; T6CDL
   824       2044 C        T6CDL		==    0x44:rpage 3
   824 00000 0013 C        T6CDL		==    0x44:rpage 3
   825            C        
   826            C        ; T6CDMH
   827       2045 C        T6CDMH		==    0x45:rpage 3
   827 00000 0013 C        T6CDMH		==    0x45:rpage 3
   828            C        
   829            C        ; T6CDML
   830       2046 C        T6CDML		==    0x46:rpage 3
   830 00000 0013 C        T6CDML		==    0x46:rpage 3
   831            C        
   832            C        ;Reserve 0x47~0x4B
   833            C        
   834            C        ; SFR9
   835       204C C        SFR9		==    0x4C:rpage 3
   835 00000 0013 C        SFR9		==    0x4C:rpage 3
   836       204C C        	T5PDMSF		==	SFR9.7
   836 00000 0743 C        	T5PDMSF		==	SFR9.7
   837       204C C        	T5ONEMSF	==	SFR9.6
   837 00000 0643 C        	T5ONEMSF	==	SFR9.6
   838       204C C        	IRT5CSF		==	SFR9.5
   838 00000 0543 C        	IRT5CSF		==	SFR9.5
   839       204C C        	IRT5BSF		==	SFR9.4
   839 00000 0443 C        	IRT5BSF		==	SFR9.4
   840       204C C        	IRT5ASF		==	SFR9.3
   840 00000 0343 C        	IRT5ASF		==	SFR9.3
   841       204C C        	IFT5CSF		==	SFR9.2
   841 00000 0243 C        	IFT5CSF		==	SFR9.2
   842       204C C        	IFT5BSF		==	SFR9.1
   842 00000 0143 C        	IFT5BSF		==	SFR9.1
   843       204C C        	IFT5ASF		==	SFR9.0
   843 00000 0043 C        	IFT5ASF		==	SFR9.0
   844            C        
   845            C        ; SFR10
   846       204D C        SFR10		==    0x4D:rpage 3
   846 00000 0013 C        SFR10		==    0x4D:rpage 3
   847       204D C        	MTRSF		==	SFR10.7
   847 00000 0743 C        	MTRSF		==	SFR10.7
   848       204D C        	BRKSF		==	SFR10.6
   848 00000 0643 C        	BRKSF		==	SFR10.6
   849       204D C        	HAEGSF		==	SFR10.5
   849 00000 0543 C        	HAEGSF		==	SFR10.5
   850       204D C        	HACOSF		==	SFR10.4
   850 00000 0443 C        	HACOSF		==	SFR10.4
   851       204D C        	HAERRSF		==	SFR10.3
   851 00000 0343 C        	HAERRSF		==	SFR10.3
   852       204D C        	T6PDMSF		==	SFR10.2
   852 00000 0243 C        	T6PDMSF		==	SFR10.2
   853       204D C        	IRT6SF		==	SFR10.1
   853 00000 0143 C        	IRT6SF		==	SFR10.1
   854       204D C        	IFT6SF		==	SFR10.0
   854 00000 0043 C        	IFT6SF		==	SFR10.0
   855            C        
   856            C        ; IMR9
   857       204E C        IMR9		==    0x4E:rpage 3
   857 00000 0013 C        IMR9		==    0x4E:rpage 3
   858       204E C        	T5PDMIE		==	IMR9.7
   858 00000 0743 C        	T5PDMIE		==	IMR9.7
   859       204E C        	T5ONEMIE	==	IMR9.6
   859 00000 0643 C        	T5ONEMIE	==	IMR9.6
   860       204E C        	IRT5CIE		==	IMR9.5
   860 00000 0543 C        	IRT5CIE		==	IMR9.5
   861       204E C        	IRT5BIE		==	IMR9.4
   861 00000 0443 C        	IRT5BIE		==	IMR9.4
   862       204E C        	IRT5AIE		==	IMR9.3
   862 00000 0343 C        	IRT5AIE		==	IMR9.3
   863       204E C        	IFT5CIE		==	IMR9.2
   863 00000 0243 C        	IFT5CIE		==	IMR9.2
   864       204E C        	IFT5BIE		==	IMR9.1
   864 00000 0143 C        	IFT5BIE		==	IMR9.1
   865       204E C        	IFT5AIE		==	IMR9.0
   865 00000 0043 C        	IFT5AIE		==	IMR9.0
   866            C        
   867            C        ; IMR10
   868       204F C        IMR10		==    0x4F:rpage 3
   868 00000 0013 C        IMR10		==    0x4F:rpage 3
   869       204F C        	MTRIE		==	IMR10.7
   869 00000 0743 C        	MTRIE		==	IMR10.7
   870       204F C        	BRKIE		==	IMR10.6
   870 00000 0643 C        	BRKIE		==	IMR10.6
   871       204F C        	HAEGIE		==	IMR10.5
   871 00000 0543 C        	HAEGIE		==	IMR10.5
   872       204F C        	HACOIE		==	IMR10.4
   872 00000 0443 C        	HACOIE		==	IMR10.4
   873       204F C        	HAERRIE		==	IMR10.3
   873 00000 0343 C        	HAERRIE		==	IMR10.3
   874       204F C        	T6PDMIE		==	IMR10.2
   874 00000 0243 C        	T6PDMIE		==	IMR10.2
   875       204F C        	IRT6IE		==	IMR10.1
   875 00000 0143 C        	IRT6IE		==	IMR10.1
   876       204F C        	IFT6IE		==	IMR10.0
   876 00000 0043 C        	IFT6IE		==	IMR10.0
   877            C        
   878            C        
   879            C        
    23                     
    24                     ;================ General Purpose Register ===============
    25       0050          	TMP50	== 0x50
    26       0051          	TMP51	== 0x51
    27       0052          	TMP52	== 0x52
    28       0053          	TMP53	== 0x53
    29       0054          	TMP54	== 0x54
    30       0055          	TMP55	== 0x55
    31       0056          	TMP56	== 0x56
    32       0057          	TMP57	== 0x57
    33       0058          	TMP58	== 0x58
    34       0059          	TMP59	== 0x59
    35       005A          	TMP5A	== 0x5A
    36       005B          	TMP5B	== 0x5B
    37       005C          	TMP5C	== 0x5C
    38       005D          	TMP5D	== 0x5D
    39       005E          	TMP5E	== 0x5E
    40       005F          	TMP5F	== 0x5F
    41                     	
    42       005A          	INST	== 0x5A
    43                     
    44       0080          	TMP80	== 0x80
    45       0081          	TMP81	== 0x81
    46       0082          	TMP82	== 0x82
    47       0083          	TMP83	== 0x83
    48       0084          	TMP84	== 0x84
    49       0085          	TMP85	== 0x85
    50       0086          	TMP86	== 0x86
    51       0087          	TMP87	== 0x87
    52       0088          	TMP88	== 0x88
    53       0089          	TMP89	== 0x89
    54       008A          	TMP8A	== 0x8A
    55       008B          	TMP8B	== 0x8B
    56       008C          	TMP8C	== 0x8C
    57       008D          	TMP8D	== 0x8D
    58       008E          	TMP8E	== 0x8E
    59       008F          	TMP8F	== 0x8F
    60                     
    61                     ;================ Interrupt Vector Table =================
    62                     	ORG 	0x0000
    63 00000 5050          	JMP 	MAIN
    64                     	ORG		0x0002
    65 00002 506E          	JMP 	JMP_FAIL	;0x0002
    66 00003 506E          	JMP 	JMP_FAIL	;0x0003
    67 00004 506E          	JMP 	JMP_FAIL	;0x0004
    68 00005 506E          	JMP 	JMP_FAIL	;0x0005
    69 00006 506E          	JMP 	JMP_FAIL	;0x0006
    70 00007 506E          	JMP 	JMP_FAIL	;0x0007
    71 00008 506E          	JMP 	JMP_FAIL	;0x0008
    72 00009 506E          	JMP 	JMP_FAIL	;0x0009
    73 0000A 506E          	JMP 	JMP_FAIL	;0x000A
    74 0000B 506E          	JMP 	JMP_FAIL	;0x000B
    75 0000C 506E          	JMP 	JMP_FAIL	;0x000C
    76 0000D 506E          	JMP 	JMP_FAIL	;0x000D
    77 0000E 506E          	JMP 	JMP_FAIL	;0x000E
    78 0000F 506E          	JMP 	JMP_FAIL	;0x000F
    79 00010 506E          	JMP 	JMP_FAIL	;0x0010
    80 00011 506E          	JMP 	JMP_FAIL	;0x0011
    81 00012 506E          	JMP 	JMP_FAIL	;0x0012
    82 00013 506E          	JMP 	JMP_FAIL	;0x0013
    83 00014 506E          	JMP 	JMP_FAIL	;0x0014
    84 00015 506E          	JMP 	JMP_FAIL	;0x0015
    85 00016 506E          	JMP 	JMP_FAIL	;0x0016
    86 00017 506E          	JMP 	JMP_FAIL	;0x0017
    87 00018 506E          	JMP 	JMP_FAIL	;0x0018
    88 00019 506E          	JMP 	JMP_FAIL	;0x0019
    89 0001A 506E          	JMP 	JMP_FAIL	;0x001A
    90 0001B 506E          	JMP 	JMP_FAIL	;0x001B
    91 0001C 506E          	JMP 	JMP_FAIL	;0x001C
    92 0001D 506E          	JMP 	JMP_FAIL	;0x001D
    93 0001E 506E          	JMP 	JMP_FAIL	;0x001E
    94 0001F 506E          	JMP 	JMP_FAIL	;0x001F
    95 00020 506E          	JMP 	JMP_FAIL	;0x0020
    96 00021 506E          	JMP 	JMP_FAIL	;0x0021
    97 00022 506E          	JMP 	JMP_FAIL	;0x0022
    98 00023 506E          	JMP 	JMP_FAIL	;0x0023
    99 00024 506E          	JMP 	JMP_FAIL	;0x0024
   100 00025 506E          	JMP 	JMP_FAIL	;0x0025
   101 00026 506E          	JMP 	JMP_FAIL	;0x0026
   102 00027 506E          	JMP 	JMP_FAIL	;0x0027
   103 00028 506E          	JMP 	JMP_FAIL	;0x0028
   104 00029 506E          	JMP 	JMP_FAIL	;0x0029
   105 0002A 506E          	JMP 	JMP_FAIL	;0x002A
   106 0002B 506E          	JMP 	JMP_FAIL	;0x002B
   107 0002C 506E          	JMP 	JMP_FAIL	;0x002C
   108 0002D 506E          	JMP 	JMP_FAIL	;0x002D
   109 0002E 506E          	JMP 	JMP_FAIL	;0x002E
   110 0002F 506E          	JMP 	JMP_FAIL	;0x002F
   111 00030 506E          	JMP 	JMP_FAIL	;0x0030
   112 00031 506E          	JMP 	JMP_FAIL	;0x0031
   113 00032 506E          	JMP 	JMP_FAIL	;0x0032
   114 00033 506E          	JMP 	JMP_FAIL	;0x0033
   115 00034 506E          	JMP 	JMP_FAIL	;0x0034
   116 00035 506E          	JMP 	JMP_FAIL	;0x0035
   117 00036 506E          	JMP 	JMP_FAIL	;0x0036
   118 00037 506E          	JMP 	JMP_FAIL	;0x0037
   119 00038 506E          	JMP 	JMP_FAIL	;0x0038
   120 00039 506E          	JMP 	JMP_FAIL	;0x0039
   121 0003A 506E          	JMP 	JMP_FAIL	;0x003A
   122 0003B 506E          	JMP 	JMP_FAIL	;0x003B
   123 0003C 506E          	JMP 	JMP_FAIL	;0x003C
   124 0003D 506E          	JMP 	JMP_FAIL	;0x003D
   125 0003E 506E          	JMP 	JMP_FAIL	;0x003E
   126 0003F 506E          	JMP 	JMP_FAIL	;0x003F
   127 00040 506E          	JMP 	JMP_FAIL	;0x0040
   128 00041 506E          	JMP 	JMP_FAIL	;0x0041
   129 00042 506E          	JMP 	JMP_FAIL	;0x0042
   130 00043 506E          	JMP 	JMP_FAIL	;0x0043
   131 00044 506E          	JMP 	JMP_FAIL	;0x0044
   132 00045 506E          	JMP 	JMP_FAIL	;0x0045
   133 00046 506E          	JMP 	JMP_FAIL	;0x0046
   134 00047 506E          	JMP 	JMP_FAIL	;0x0047
   135 00048 506E          	JMP 	JMP_FAIL	;0x0048
   136 00049 506E          	JMP 	JMP_FAIL	;0x0049
   137 0004A 506E          	JMP 	JMP_FAIL	;0x004A
   138 0004B 506E          	JMP 	JMP_FAIL	;0x004B
   139 0004C 506E          	JMP 	JMP_FAIL	;0x004C
   140 0004D 506E          	JMP 	JMP_FAIL	;0x004D
   141 0004E 506E          	JMP 	JMP_FAIL	;0x004E
   142 0004F 506E          	JMP 	JMP_FAIL	;0x004F
   143                     ;==================== Main Function ======================
   144                     	ORG		0x0050
   145 00050               MAIN:
   146                     	;CALL 	EFT_INIT
   147 00050 4080          	CALL	SYS_INIT
   148 00051 408B          	CALL	GPIO_INIT	
   149 00052 0003          	SLEP
   150 00053 0003          	SLEP
   151 00054 0003          	SLEP
   152 00055 0003          	SLEP
   153                     	;CALL	WAKE_INIT
   154                     	;CALL	KEY_DEBOUNCE
   155 00056 40BD          	CALL	RAM_SHA_INIT
   156 00057 40C7          	CALL	RAM_IND_INIT
   157                     	;CALL	TEST_EEPROM (Do not loop forever)
   158                     	;CALL	TEST_FLASH (Do not loop forever)
   159                     
   160                     ;====================== BACK_GROUND_LOOP ================
   161 00058               BACK_GROUND_LOOP:
   162 00058 7A00          	SBANK	0
   163 00059 40E6          	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
   164 0005A 4490          	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
   165 0005B 45BF          	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
   166 0005C 4687          	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
   167 0005D 46BF          	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
   168 0005E 46C0          	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
   169 0005F 46FF          	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
   170 00060 473E          	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
   171 00061 4765          	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
   172 00062 4770          	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
   173 00063 47B9          	CALL	TEST_READ_ROM			;TBRD, TBRDA
   174 00064 4F00          	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
   175 00065 4F17          	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
   176 00066 4F2E          	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
   177 00067 4F45          	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
   178 00068               	JMP_PASS:
   179 00068 0085          	BTG		P5,0
   180 00069 2105          	BC		P5,1
   181 0006A 2A05          	BS		P5,2
   182 0006B 2305          	BC		P5,3
   183 0006C 2C05          	BS		P5,4	
   184 0006D 5058          	JMP		BACK_GROUND_LOOP
   185                     
   186                     ;====================== ERROR_LOOP =====================
   187 0006E               JMP_FAIL:
   188 0006E 7A00          	SBANK	0
   189 0006F 2905          	BS		P5,1
   190 00070 2205          	BC		P5,2
   191 00071 2B05          	BS		P5,3
   192 00072 2405          	BC		P5,4
   193 00073 506E          	JMP		JMP_FAIL
   194 00074               RAM_FAIL:
   195 00074 7A00          	SBANK	0
   196 00075 2905          	BS		P5,1
   197 00076 2205          	BC		P5,2
   198 00077 2B05          	BS		P5,3
   199 00078 2405          	BC		P5,4
   200 00079 5074          	JMP		RAM_FAIL
   201 0007A               INS_FAIL:
   202 0007A 7A00          	SBANK	0
   203 0007B 2905          	BS		P5,1
   204 0007C 2205          	BC		P5,2
   205 0007D 2B05          	BS		P5,3
   206 0007E 2405          	BC		P5,4	
   207 0007F 507A          	JMP		INS_FAIL
   208                     
   209                     ;================== PEIPHERAL_INITIAL ==================
   210                     	;-------------------------------;
   211 00080               	SYS_INIT:	
   212 00080 7A00          		SBANK	0
   213                     		;BS		CPUS	;FSYS=FM
   214 00081 260E          		BC		IDLE	;SLEEP_MODE
   215 00082 6000          		MOV		A,@0x00
   216 00083 0114          		MOV		SFR1,A
   217 00084 0117          		MOV		SFR4,A
   218 00085 0119          		MOV		SFR6,A
   219 00086 7A03          		SBANK	3
   220 00087 6000          		MOV		A,@0x00
   221 00088 014C          		MOV		SFR9,A
   222 00089 014D          		MOV		SFR10,A
   223 0008A 0012          		RET
   224                     	;-------------------------------;		
   225 0008B               	GPIO_INIT:
   226 0008B 7A00          		SBANK	0
   227                     		;CLR		P5
   228                     		;MOV		A,@0xE0
   229                     		;MOV		IOCR5,A
   230                     		;MOV		A,@0xFF	;Turn-Off LED (Active-Low)
   231                     		;MOV		P5,A
   232 0008C 6000          		MOV		A,@0x00
   233 0008D 010B          		MOV		IOCR5,A
   234 0008E 010C          		MOV		IOCR6,A
   235 0008F 010D          		MOV		IOCR7,A
   236 00090 0305          		CLR		P5
   237 00091 0306          		CLR		P6
   238 00092 0307          		CLR		P7
   239 00093 0012          		RET
   240                     
   241                     	;-------------------------------;
   242 00094               	WAKE_INIT:
   243 00094 7A00          		SBANK	0
   244 00095 3B03          		JBS		P			; PWR ON reset(1)/RST pin reset(0)
   245 00096 5099          		JMP		$+3
   246 00097 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   247 00098 0003          		SLEP
   248 00099 3B03          		JBS		P
   249 0009A 509D          		JMP		$+3
   250 0009B 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   251 0009C 0003          		SLEP
   252 0009D 3B03          		JBS		P
   253 0009E 50A1          		JMP		$+3
   254 0009F 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   255 000A0 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   256 000A1 0003          		SLEP		
   257 000A2 0012          		RET
   258                     	;-------------------------------;
   259 000A3               	KEY_DEBOUNCE:
   260 000A3 3D05          		JBS		P5,5		; Push, or not
   261 000A4 50A6          		JMP		$+2
   262 000A5 50A3          		JMP		$-2
   263 000A6 3D05          		JBS		P5,5
   264 000A7 50A3          		JMP		KEY_DEBOUNCE
   265 000A8 3D05          		JBS		P5,5
   266 000A9 50A3          		JMP		KEY_DEBOUNCE
   267 000AA 3D05          		JBS		P5,5
   268 000AB 50A3          		JMP		KEY_DEBOUNCE
   269 000AC 3D05          		JBS		P5,5
   270 000AD 50A3          		JMP		KEY_DEBOUNCE
   271 000AE 3D05          		JBS		P5,5
   272 000AF 50A3          		JMP		KEY_DEBOUNCE
   273 000B0 3D05          		JBS		P5,5
   274 000B1 50A3          		JMP		KEY_DEBOUNCE
   275 000B2 3D05          		JBS		P5,5
   276 000B3 50A3          		JMP		KEY_DEBOUNCE
   277 000B4 3D05          		JBS		P5,5
   278 000B5 50A3          		JMP		KEY_DEBOUNCE
   279 000B6 3D05          		JBS		P5,5
   280 000B7 50A3          		JMP		KEY_DEBOUNCE
   281 000B8 3D05          		JBS		P5,5
   282 000B9 50B7          		JMP		$-2
   283 000BA 60FF          		MOV		A,@0xFF		; Turn Off all LED
   284 000BB 0105          		MOV		P5,A		
   285 000BC 0012          		RET
   286                     	;-------------------------------;
   287 000BD               	RAM_SHA_INIT:
   288 000BD 6050          		MOV		A,@0x50
   289 000BE 0104          		MOV		RSR,A
   290 000BF 60FF          		MOV		A,@0xFF		;RAM_SHA_LOOP
   291 000C0 0100          		MOV		IAR,A
   292 000C1 1504          		INC		RSR
   293 000C2 6080          		MOV		A,@0x80
   294 000C3 0C04          		XOR		A,RSR
   295 000C4 3A03          		JBS		Z
   296 000C5 50BF          		JMP		$-6
   297                     		
   298                     		;MOV		A,@0x50
   299                     		;MOV		RSR,A
   300                     		;MOV		A,@0xFF
   301                     		;XOR		A,IAR
   302                     		;JBS		Z
   303                     		;JMP		RAM_FAIL
   304                     		;INC		RSR
   305                     		;MOV		A,@0x80
   306                     		;XOR		A,RSR
   307                     		;JBS		Z
   308                     		;JMP		$-8
   309 000C6 0012          		RET
   310                     	;-------------------------------;		
   311 000C7               	RAM_IND_INIT:
   312 000C7 6080          		MOV		A,@0x80
   313 000C8 0104          		MOV		RSR,A
   314 000C9               		RAM_IND_LOOP_0:
   315 000C9 7A40          		GBANK	0
   316 000CA 60FF          		MOV		A,@0xFF
   317 000CB 0100          		MOV		IAR,A
   318 000CC 1504          		INC		RSR
   319 000CD 6000          		MOV		A,@0x00
   320 000CE 0C04          		XOR		A,RSR
   321 000CF 3A03          		JBS		Z
   322 000D0 50C9          		JMP		RAM_IND_LOOP_0
   323 000D1 6080          		MOV		A,@0x80
   324 000D2 0104          		MOV		RSR,A
   325 000D3               		RAM_IND_LOOP_1:
   326 000D3 7A41          		GBANK	1
   327 000D4 60FF          		MOV		A,@0xFF
   328 000D5 0100          		MOV		IAR,A
   329 000D6 1504          		INC		RSR
   330 000D7 6000          		MOV		A,@0x00
   331 000D8 0C04          		XOR		A,RSR
   332 000D9 3A03          		JBS		Z
   333 000DA 50D3          		JMP		RAM_IND_LOOP_1
   334 000DB 6080          		MOV		A,@0x80
   335 000DC 0104          		MOV		RSR,A
   336 000DD 0012          		RET
   337                     	;-------------------------------;
   338 000DE               	STATUS_CLEAR:
   339 000DE 6000          		MOV		A,@0x00
   340 000DF 0103          		MOV		STATUS,A
   341 000E0 0012          		RET
   342                     	;-------------------------------;
   343 000E1               	INST_XOR_JUDGE:
   344 000E1 3A03          		JBS		Z			; IF(Z=1) BRANCH
   345 000E2 507A          		JMP		INS_FAIL
   346 000E3 3603          		JBC		N			; IF(N=0) BRANCH
   347 000E4 507A          		JMP		INS_FAIL
   348 000E5 0012          		RET
   349                     ;================== Jmp Sub Function ==================
   350 000E6               	TEST_INST_ARITHEMATIC:
   351 000E6               		INST_DAA:			;-------Instruction Test => DAA , C?
   352 000E6 6001          			MOV		A,@0x01
   353 000E7 015A          			MOV		INST,A
   354 000E8 40DE          			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
   355 000E9 60AA          			MOV		A,@0xAA
   356 000EA 0001          			DAA
   357 000EB 3803          			JBS		C			; Check C = 1?
   358 000EC 507A          			JMP	INS_FAIL
   359 000ED 3103          			JBC		DC			; Check DC = 0?
   360 000EE 507A          			JMP	INS_FAIL
   361 000EF 3203          			JBC		Z			; Check Z = 0?
   362 000F0 507A          			JMP	INS_FAIL
   363 000F1 3503          			JBC		OV			; Check OV = 0?
   364 000F2 507A          			JMP	INS_FAIL
   365 000F3 3603          			JBC		N			; Check N = 0?
   366 000F4 507A          			JMP	INS_FAIL
   367 000F5 6C10          			XOR		A,@0x10		; Check Result ?
   368 000F6 3A03          			JBS		Z			; Check Z = 1?
   369 000F7 507A          			JMP	INS_FAIL
   370 000F8 3603          			JBC		N			; Check N = 0?
   371 000F9 507A          			JMP	INS_FAIL
   372 000FA 40DE          			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
   373 000FB 6080          			MOV		A,@0x80
   374 000FC 0150          			MOV		0x50,A		; [0x50] = 0x80
   375 000FD 607F          			MOV		A,@0x7F		; 
   376 000FE 0E50          			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
   377 000FF 0001          			DAA
   378 00100 3803          			JBS		C			; Check C = 1?
   379 00101 507A          			JMP	INS_FAIL
   380 00102 3103          			JBC		DC			; Check DC = 0?
   381 00103 507A          			JMP	INS_FAIL
   382 00104 3203          			JBC		Z			; Check Z = 0?
   383 00105 507A          			JMP	INS_FAIL
   384 00106 3503          			JBC		OV			; Check OV = 0?
   385 00107 507A          			JMP	INS_FAIL
   386 00108 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   387 00109 507A          			JMP	INS_FAIL
   388 0010A 2203          			BC		Z
   389 0010B 2603          			BC		N
   390 0010C 6C65          			XOR		A,@0x65		; Check Result ?
   391 0010D 3A03          			JBS		Z			; Check Z = 1?
   392 0010E 507A          			JMP	INS_FAIL
   393 0010F 3603          			JBC		N			; Check N = 0?
   394 00110 507A          			JMP	INS_FAIL
   395 00111 0000          			NOP
   396 00112 6000          			MOV		A,@0x00
   397 00113 0103          			MOV		STATUS,A
   398                     			;-------DAA(0x00)=66
   399 00114 2803          			BS		C
   400 00115 6080          			MOV		A,@0x80
   401 00116 0150          			MOV		0x50,A		; [0x50] = 0x80
   402 00117 607F          			MOV		A,@0x7F		; 
   403 00118 7E50          			ADC		A,0x50		; A = 0x7F + 0x80
   404 00119 0001          			DAA
   405 0011A 3803          			JBS		C			; Check C = 1? 	/ By ADC
   406 0011B 507A          			JMP	INS_FAIL
   407 0011C 3903          			JBS		DC			; Check DC = 1? / By ADC
   408 0011D 507A          			JMP	INS_FAIL
   409 0011E 3A03          			JBS		Z			; Check Z = 1? 	/ By ADC
   410 0011F 507A          			JMP	INS_FAIL
   411 00120 3503          			JBC		OV			; Check OV = 0?
   412 00121 507A          			JMP	INS_FAIL
   413 00122 3603          			JBC		N			; Check N = 0?
   414 00123 507A          			JMP	INS_FAIL
   415 00124 6C66          			XOR		A,@0x66		; Check Result ?
   416 00125 3A03          			JBS		Z			; Check Z = 1?
   417 00126 507A          			JMP	INS_FAIL
   418 00127 3603          			JBC		N			; Check N = 0?
   419 00128 507A          			JMP	INS_FAIL
   420 00129 6000          			MOV		A,@0x00
   421 0012A 0103          			MOV		STATUS,A
   422                     			;-------DAA(0x80)=E6
   423 0012B 60FF          			MOV		A,@0xFF
   424 0012C 0150          			MOV		0x50,A		; [0x50] = 0xFF
   425 0012D 607F          			MOV		A,@0x7F		; 
   426 0012E 0450          			SUB		A,0x50		; A = 0xFF - 0x7F
   427 0012F 0001          			DAA
   428 00130 3803          			JBS		C			; Check C = 1? 	/ By SUB
   429 00131 507A          			JMP	INS_FAIL
   430 00132 3903          			JBS		DC			; Check DC = 1? / By SUB
   431 00133 507A          			JMP	INS_FAIL
   432 00134 3203          			JBC		Z			; Check Z = 0?
   433 00135 507A          			JMP	INS_FAIL
   434 00136 3503          			JBC		OV			; Check OV = 0?
   435 00137 507A          			JMP	INS_FAIL
   436 00138 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   437 00139 507A          			JMP	INS_FAIL
   438 0013A 2203          			BC		Z
   439 0013B 2603          			BC		N
   440 0013C 6CE6          			XOR		A,@0xE6		; Check Result ?
   441 0013D 3A03          			JBS		Z			; Check Z = 1?
   442 0013E 507A          			JMP	INS_FAIL
   443 0013F 3603          			JBC		N			; Check N = 0?
   444 00140 507A          			JMP	INS_FAIL
   445 00141               		INST_CLA:			;-------Instruction Test => CLA
   446 00141 6008          			MOV		A,@0x08
   447 00142 015A          			MOV		INST,A
   448 00143 605A          			MOV		A,@0x5A
   449 00144 6C5A          			XOR		A,@0x5A		; Check Result ?
   450 00145 3A03          			JBS		Z			; Check Z = 1?
   451 00146 507A          			JMP	INS_FAIL
   452 00147 3603          			JBC		N			; Check N = 0?
   453 00148 507A          			JMP	INS_FAIL
   454 00149 605A          			MOV		A,@0x5A
   455 0014A 0200          			CLRA
   456 0014B 3A03          			JBS		Z			; Check Z = 1?
   457 0014C 507A          			JMP	INS_FAIL
   458 0014D 2203          			BC		Z
   459 0014E 6C00          			XOR		A,@0x00		; Check Result ?
   460 0014F 3A03          			JBS		Z			; Check Z = 1?
   461 00150 507A          			JMP	INS_FAIL
   462 00151 3603          			JBC		N			; Check N = 0?
   463 00152 507A          			JMP	INS_FAIL
   464 00153               		INST_CLR:			;-------Instruction Test => CLR
   465 00153 6009          			MOV		A,@0x09
   466 00154 015A          			MOV		INST,A
   467 00155 60AA          			MOV		A,@0xAA
   468 00156 0150          			MOV		0x50,A
   469 00157 1050          			MOV		A,0x50
   470 00158 6CAA          			XOR		A,@0xAA		; Check Result ?
   471 00159 3A03          			JBS		Z			; Check Z = 1?
   472 0015A 507A          			JMP	INS_FAIL
   473 0015B 3603          			JBC		N			; Check N = 0?
   474 0015C 507A          			JMP	INS_FAIL
   475 0015D 0350          			CLR		0x50
   476 0015E 3A03          			JBS		Z			; Check Z = 1?
   477 0015F 507A          			JMP	INS_FAIL
   478 00160 2203          			BC		Z
   479 00161 1050          			MOV		A,0x50
   480 00162 6C00          			XOR		A,@0x00		; Check Result ?
   481 00163 3A03          			JBS		Z			; Check Z = 1?
   482 00164 507A          			JMP	INS_FAIL
   483 00165 3603          			JBC		N			; Check N = 0?
   484 00166 507A          			JMP	INS_FAIL
   485 00167               		INST_SUB_A_R:		;-------Instruction Test => SUB A,R
   486 00167 600A          			MOV		A,@0x0A
   487 00168 015A          			MOV		INST,A
   488 00169 6000          			MOV		A,@0x00
   489 0016A 0103          			MOV		STATUS,A
   490 0016B 6002          			MOV		A,@0x02		; SUB(2-1)=1
   491 0016C 0150          			MOV		0x50,A		; [0x50] = 0x02
   492 0016D 6001          			MOV		A,@0x01
   493 0016E 0450          			SUB		A,0x50		; A = [0x50] - A
   494 0016F 3803          			JBS		C			; Check C = 1? 	; Resulet is Positive
   495 00170 507A          			JMP	INS_FAIL
   496 00171 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   497 00172 507A          			JMP	INS_FAIL
   498 00173 3203          			JBC		Z			; Check Z = 0?
   499 00174 507A          			JMP	INS_FAIL
   500 00175 3503          			JBC		OV			; Check OV = 0?
   501 00176 507A          			JMP	INS_FAIL
   502 00177 3603          			JBC		N			; Check N = 0?
   503 00178 507A          			JMP	INS_FAIL
   504 00179 2203          			BC		Z
   505 0017A 6C01          			XOR		A,@0x01		; Check Result ?
   506 0017B 3A03          			JBS		Z			; Check Z = 1?
   507 0017C 507A          			JMP	INS_FAIL
   508 0017D 3603          			JBC		N			; Check N = 0?
   509 0017E 507A          			JMP	INS_FAIL
   510 0017F 6000          			MOV		A,@0x00
   511 00180 0103          			MOV		STATUS,A
   512 00181 6002          			MOV		A,@0x02		; SUB(2-2)=0
   513 00182 0150          			MOV		0x50,A		; [0x50] = 0x02
   514 00183 6002          			MOV		A,@0x02
   515 00184 0450          			SUB		A,0x50		; A = [0x50] - A
   516 00185 3803          			JBS		C			; Check C = 1?	; Result is Positive
   517 00186 507A          			JMP	INS_FAIL
   518 00187 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   519 00188 507A          			JMP	INS_FAIL
   520 00189 3A03          			JBS		Z			; Check Z = 1?	; Result is Zero
   521 0018A 507A          			JMP	INS_FAIL
   522 0018B 3503          			JBC		OV			; Check OV = 0?
   523 0018C 507A          			JMP	INS_FAIL
   524 0018D 3603          			JBC		N			; Check N = 0?
   525 0018E 507A          			JMP	INS_FAIL
   526 0018F 2203          			BC		Z
   527 00190 6C00          			XOR		A,@0x00		; Check Result ?
   528 00191 3A03          			JBS		Z			; Check Z = 1?
   529 00192 507A          			JMP	INS_FAIL
   530 00193 3603          			JBC		N			; Check N = 0?
   531 00194 507A          			JMP	INS_FAIL
   532 00195 6000          			MOV		A,@0x00
   533 00196 0103          			MOV		STATUS,A
   534 00197 60FF          			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
   535 00198 0150          			MOV		0x50,A		; [0x50] = 0xFF
   536 00199 607F          			MOV		A,@0x7F
   537 0019A 0450          			SUB		A,0x50		; A = [0x50] - A
   538 0019B 3803          			JBS		C			; Check C = 1?
   539 0019C 507A          			JMP	INS_FAIL
   540 0019D 3903          			JBS		DC			; Check DC = 1?
   541 0019E 507A          			JMP	INS_FAIL
   542 0019F 3203          			JBC		Z			; Check Z = 0?
   543 001A0 507A          			JMP	INS_FAIL
   544 001A1 3503          			JBC		OV			; Check OV = 0?
   545 001A2 507A          			JMP	INS_FAIL
   546 001A3 3E03          			JBS		N			; Check N = 1?
   547 001A4 507A          			JMP	INS_FAIL
   548 001A5 2203          			BC		Z
   549 001A6 2603          			BC		N
   550 001A7 6C80          			XOR		A,@0x80		; Check Result ?
   551 001A8 3A03          			JBS		Z			; Check Z = 1?
   552 001A9 507A          			JMP	INS_FAIL
   553 001AA 3603          			JBC		N			; Check N = 0?
   554 001AB 507A          			JMP	INS_FAIL
   555 001AC 6000          			MOV		A,@0x00
   556 001AD 0103          			MOV		STATUS,A
   557 001AE 6080          			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
   558 001AF 0150          			MOV		0x50,A		; [0x50] = 0x80
   559 001B0 607F          			MOV		A,@0x7F
   560 001B1 0450          			SUB		A,0x50		; A = [0x50] - A
   561 001B2 3803          			JBS		C			; Check C = 1?
   562 001B3 507A          			JMP	INS_FAIL
   563 001B4 3103          			JBC		DC			; Check DC = 0?
   564 001B5 507A          			JMP	INS_FAIL
   565 001B6 3203          			JBC		Z			; Check Z = 0?
   566 001B7 507A          			JMP	INS_FAIL
   567 001B8 3D03          			JBS		OV			; Check OV = 1?
   568 001B9 507A          			JMP	INS_FAIL
   569 001BA 3603          			JBC		N			; Check N = 0?
   570 001BB 507A          			JMP	INS_FAIL
   571 001BC 2203          			BC		Z
   572 001BD 2603          			BC		N
   573 001BE 6C01          			XOR		A,@0x01		; Check Result ?
   574 001BF 3A03          			JBS		Z			; Check Z = 1?
   575 001C0 507A          			JMP	INS_FAIL
   576 001C1 3603          			JBC		N			; Check N = 0?
   577 001C2 507A          			JMP	INS_FAIL
   578 001C3 6000          			MOV		A,@0x00
   579 001C4 0103          			MOV		STATUS,A
   580 001C5 6001          			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
   581 001C6 0150          			MOV		0x50,A		; [0x50] = 0x01
   582 001C7 6003          			MOV		A,@0x03
   583 001C8 0450          			SUB		A,0x50		; A = [0x50] - A
   584 001C9 3003          			JBC		C			; Check C = 0?
   585 001CA 507A          			JMP	INS_FAIL
   586 001CB 3103          			JBC		DC			; Check DC = 0?
   587 001CC 507A          			JMP	INS_FAIL
   588 001CD 3203          			JBC		Z			; Check Z = 0?
   589 001CE 507A          			JMP	INS_FAIL
   590 001CF 3503          			JBC		OV			; Check OV = 0?
   591 001D0 507A          			JMP	INS_FAIL
   592 001D1 3E03          			JBS		N			; Check N = 1?
   593 001D2 507A          			JMP	INS_FAIL
   594 001D3 2203          			BC		Z
   595 001D4 2603          			BC		N
   596 001D5 6CFE          			XOR		A,@0xFE		; Check Result ?
   597 001D6 3A03          			JBS		Z			; Check Z = 1?
   598 001D7 507A          			JMP	INS_FAIL
   599 001D8 3603          			JBC		N			; Check N = 0?
   600 001D9 507A          			JMP	INS_FAIL
   601 001DA               		INST_SUB_R_A:		;-------Instruction Test => SUB R,A
   602 001DA 600B          			MOV		A,@0x0B
   603 001DB 015A          			MOV		INST,A
   604 001DC 6000          			MOV		A,@0x00
   605 001DD 0103          			MOV		STATUS,A
   606 001DE 6002          			MOV		A,@0x02
   607 001DF 0150          			MOV		0x50,A		; [0x50] = 0x02
   608 001E0 6001          			MOV		A,@0x01
   609 001E1 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   610 001E2 1003          			MOV		A,STATUS
   611 001E3 6C1B          			XOR		A,@0x1B		; for non reset
   612                     			;;XOR		A,@0x13
   613 001E4 40E1          			CALL	INST_XOR_JUDGE
   614 001E5 2203          			BC		Z
   615 001E6 2603          			BC		N
   616 001E7 1050          			MOV		A,0x50
   617 001E8 6C01          			XOR		A,@0x01		; Check Result ?
   618 001E9 40E1          			CALL	INST_XOR_JUDGE
   619 001EA 6000          			MOV		A,@0x00
   620 001EB 0103          			MOV		STATUS,A
   621 001EC 6002          			MOV		A,@0x02
   622 001ED 0150          			MOV		0x50,A		; [0x50] = 0x02
   623 001EE 6002          			MOV		A,@0x02
   624 001EF 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x02
   625 001F0 1003          			MOV		A,STATUS
   626 001F1 6C1F          			XOR		A,@0x1F		; for nono reset
   627                     			;;XOR		A,@0x17
   628 001F2 40E1          			CALL	INST_XOR_JUDGE
   629 001F3 2203          			BC		Z
   630 001F4 2603          			BC		N
   631 001F5 1050          			MOV		A,0x50
   632 001F6 6C00          			XOR		A,@0x00		; Check Result ?
   633 001F7 3A03          			JBS		Z			; Check Z = 1?
   634 001F8 507A          			JMP	INS_FAIL
   635 001F9 3603          			JBC		N			; Check N = 0?
   636 001FA 507A          			JMP	INS_FAIL
   637 001FB 6000          			MOV		A,@0x00
   638 001FC 0103          			MOV		STATUS,A
   639 001FD 6080          			MOV		A,@0x80
   640 001FE 0150          			MOV		0x50,A		; [0x50] = 0x80
   641 001FF 6001          			MOV		A,@0x01
   642 00200 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   643 00201 1003          			MOV		A,STATUS
   644 00202 6C39          			XOR		A,@0x39	;; for non reset
   645                     			;;XOR		A,@0x31
   646 00203 40E1          			CALL	INST_XOR_JUDGE
   647 00204 2203          			BC		Z
   648 00205 2603          			BC		N
   649 00206 1050          			MOV		A,0x50
   650 00207 6C7F          			XOR		A,@0x7F		; Check Result ?
   651 00208 40E1          			CALL	INST_XOR_JUDGE
   652 00209               		INST_SUB_A_K:		;-------Instruction Test => SUB A,k
   653 00209 6030          			MOV		A,@0x30
   654 0020A 015A          			MOV		INST,A
   655 0020B 40DE          			CALL	STATUS_CLEAR
   656 0020C 60FF          			MOV		A,@0xFF		; 0xFF-0xFF
   657 0020D 74FF          			SUB		A,@0xFF		; A = 0xFF - 0xFF
   658 0020E 3803          			JBS		C			; Check C = 1?
   659 0020F 507A          			JMP	INS_FAIL
   660 00210 3903          			JBS		DC			; Check DC = 1?
   661 00211 507A          			JMP	INS_FAIL
   662 00212 3A03          			JBS		Z			; Check Z = 1?
   663 00213 507A          			JMP	INS_FAIL
   664 00214 3503          			JBC		OV			; Check OV = 0?
   665 00215 507A          			JMP	INS_FAIL
   666 00216 3603          			JBC		N			; Check N = 0?
   667 00217 507A          			JMP	INS_FAIL
   668 00218 6C00          			XOR		A,@0x00		; Check Result ?
   669 00219 40E1          			CALL	INST_XOR_JUDGE
   670 0021A 40DE          			CALL	STATUS_CLEAR
   671 0021B 607F          			MOV		A,@0x7F		; 0x00-0x7F
   672 0021C 7400          			SUB		A,@0x00		; A = 0x00 - 0x7F
   673 0021D 3003          			JBC		C			; Check C = 0?
   674 0021E 507A          			JMP	INS_FAIL
   675 0021F 3103          			JBC		DC			; Check DC = 0?
   676 00220 507A          			JMP	INS_FAIL
   677 00221 3203          			JBC		Z			; Check Z = 0?
   678 00222 507A          			JMP	INS_FAIL
   679 00223 3503          			JBC		OV			; Check OV = 0?
   680 00224 507A          			JMP	INS_FAIL
   681 00225 3E03          			JBS		N			; Check N = 1?
   682 00226 507A          			JMP	INS_FAIL
   683 00227 6C81          			XOR		A,@0x81		; Check Result ?
   684 00228 40E1          			CALL	INST_XOR_JUDGE
   685 00229 40DE          			CALL	STATUS_CLEAR
   686 0022A 6001          			MOV		A,@0x01		; 0x80-0x01
   687 0022B 7480          			SUB		A,@0x80		; A = 0x80 - 0x01
   688 0022C 3803          			JBS		C			; Check C = 1?
   689 0022D 507A          			JMP	INS_FAIL
   690 0022E 3103          			JBC		DC			; Check DC = 0?
   691 0022F 507A          			JMP	INS_FAIL
   692 00230 3203          			JBC		Z			; Check Z = 0?
   693 00231 507A          			JMP	INS_FAIL
   694 00232 3D03          			JBS		OV			; Check OV = 1?
   695 00233 507A          			JMP	INS_FAIL
   696 00234 3603          			JBC		N			; Check N = 0?
   697 00235 507A          			JMP	INS_FAIL
   698 00236 6C7F          			XOR		A,@0x7F		; Check Result ?
   699 00237 40E1          			CALL	INST_XOR_JUDGE
   700 00238               		INST_SUBB_A_R:		;-------Instruction Test => SUBB A,R
   701 00238 6031          			MOV		A,@0x31
   702 00239 015A          			MOV		INST,A
   703 0023A 40DE          			CALL	STATUS_CLEAR
   704 0023B 2003          			BC		C			; B = 1
   705 0023C 6000          			MOV		A,@0x00		;0x00-0xF
   706 0023D 0150          			MOV		0x50,A		; [0x50] = 0x00
   707 0023E 60FF          			MOV		A,@0xFF		; A = 0x01
   708 0023F 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   709 00240 3003          			JBC		C			; Check C = 0?
   710 00241 507A          			JMP	INS_FAIL
   711 00242 3103          			JBC		DC			; Check DC = 0?
   712 00243 507A          			JMP	INS_FAIL
   713 00244 3A03          			JBS		Z			; Check Z = 1?
   714 00245 507A          			JMP	INS_FAIL
   715 00246 3503          			JBC		OV			; Check OV = 0?
   716 00247 507A          			JMP	INS_FAIL
   717 00248 3603          			JBC		N			; Check N = 0?
   718 00249 507A          			JMP	INS_FAIL
   719 0024A 6C00          			XOR		A,@0x00		; Check Result ?
   720 0024B 40E1          			CALL	INST_XOR_JUDGE	
   721 0024C 40DE          			CALL	STATUS_CLEAR
   722 0024D 2003          			BC		C			; B = 1
   723 0024E 6000          			MOV		A,@0x00		; 0x00-0x7F
   724 0024F 0150          			MOV		0x50,A		; [0x50] = 0x00
   725 00250 607F          			MOV		A,@0x7F		; A = 0x01
   726 00251 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   727 00252 3003          			JBC		C			; Check C = 0?
   728 00253 507A          			JMP	INS_FAIL
   729 00254 3103          			JBC		DC			; Check DC = 0?
   730 00255 507A          			JMP	INS_FAIL
   731 00256 3203          			JBC		Z			; Check Z = 0?
   732 00257 507A          			JMP	INS_FAIL
   733 00258 3503          			JBC		OV			; Check OV = 0?
   734 00259 507A          			JMP	INS_FAIL
   735 0025A 3E03          			JBS		N			; Check N = 1?
   736 0025B 507A          			JMP	INS_FAIL
   737 0025C 6C80          			XOR		A,@0x80		; Check Result ?
   738 0025D 40E1          			CALL	INST_XOR_JUDGE
   739 0025E 40DE          			CALL	STATUS_CLEAR
   740 0025F 2003          			BC		C			; B = 1
   741 00260 6080          			MOV		A,@0x80		; 0x80-0x01
   742 00261 0150          			MOV		0x50,A		; [0x50] = 0x80
   743 00262 6001          			MOV		A,@0x01		; A = 0x01
   744 00263 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   745 00264 3803          			JBS		C			; Check C = 1?
   746 00265 507A          			JMP	INS_FAIL
   747 00266 3103          			JBC		DC			; Check DC = 0?
   748 00267 507A          			JMP	INS_FAIL
   749 00268 3203          			JBC		Z			; Check Z = 0?
   750 00269 507A          			JMP	INS_FAIL
   751 0026A 3D03          			JBS		OV			; Check OV = 1?
   752 0026B 507A          			JMP	INS_FAIL
   753 0026C 3603          			JBC		N			; Check N = 0?
   754 0026D 507A          			JMP	INS_FAIL
   755 0026E 6C7E          			XOR		A,@0x7E		; Check Result ?
   756 0026F 40E1          			CALL	INST_XOR_JUDGE
   757 00270               		INST_SUBB_R_A:			;-------Instruction Test => SUBB R,A
   758 00270 6032          			MOV		A,@0x32
   759 00271 015A          			MOV		INST,A
   760 00272 40DE          			CALL	STATUS_CLEAR
   761 00273 2003          			BC		C			; B = 1
   762 00274 6000          			MOV		A,@0x00		; 0x00-0xFF
   763 00275 0150          			MOV		0x50,A		; [0x50] = 0x00
   764 00276 60FF          			MOV		A,@0xFF
   765 00277 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
   766 00278 1003          			MOV		A,STATUS
   767 00279 6C1C          			XOR		A,@0x1C		; Check Status ?
   768                     			;;XOR		A,@0x14		; Check Status ?
   769 0027A 40E1          			CALL	INST_XOR_JUDGE
   770 0027B 1050          			MOV		A,0x50
   771 0027C 6C00          			XOR		A,@0x00		; Check Result ?
   772 0027D 40E1          			CALL	INST_XOR_JUDGE
   773 0027E 40DE          			CALL	STATUS_CLEAR
   774 0027F 2003          			BC		C			; B = 1
   775 00280 6000          			MOV		A,@0x00		; 0x00-0x7F
   776 00281 0150          			MOV		0x50,A		; [0x50] = 0x00
   777 00282 607F          			MOV		A,@0x7F
   778 00283 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
   779 00284 1003          			MOV		A,STATUS
   780 00285 6C58          			XOR		A,@0x58		; Check Status ?
   781                     			;;XOR		A,@0x50		; Check Status ?
   782 00286 40E1          			CALL	INST_XOR_JUDGE
   783 00287 1050          			MOV		A,0x50
   784 00288 6C80          			XOR		A,@0x80		; Check Result ?
   785 00289 40E1          			CALL	INST_XOR_JUDGE
   786 0028A 40DE          			CALL	STATUS_CLEAR
   787 0028B 2003          			BC		C			; B = 1
   788 0028C 6080          			MOV		A,@0x80		; ,0x80-0x01
   789 0028D 0150          			MOV		0x50,A		; [0x50] = 0x80
   790 0028E 6001          			MOV		A,@0x01
   791 0028F 7950          			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
   792 00290 1003          			MOV		A,STATUS
   793 00291 6C39          			XOR		A,@0x39		; Check Status ?
   794                     			;;XOR		A,@0x31		; Check Status ?
   795 00292 40E1          			CALL	INST_XOR_JUDGE
   796 00293 1050          			MOV		A,0x50
   797 00294 6C7E          			XOR		A,@0x7E		; Check Result ?
   798 00295 40E1          			CALL	INST_XOR_JUDGE
   799                     
   800 00296               		INST_DECA:			;-------Instruction Test => DECA R
   801 00296 600C          			MOV		A,@0x0C
   802 00297 015A          			MOV		INST,A
   803 00298 6000          			MOV		A,@0x00
   804 00299 0103          			MOV		STATUS,A
   805 0029A 6020          			MOV		A,@0x20		; 0x20-1
   806 0029B 0150          			MOV		0x50,A		; [0x50] = 0x20
   807 0029C 0650          			DECA	0x50		; A = [0x50] - 1
   808 0029D 3803          			JBS		C			; Check C = 1?	; Result is Positive
   809 0029E 507A          			JMP	INS_FAIL
   810 0029F 3103          			JBC		DC			; Check DC = 0?
   811 002A0 507A          			JMP	INS_FAIL
   812 002A1 3203          			JBC		Z			; Check Z = 0?
   813 002A2 507A          			JMP	INS_FAIL
   814 002A3 3503          			JBC		OV			; Check OV = 0?
   815 002A4 507A          			JMP	INS_FAIL
   816 002A5 3603          			JBC		N			; Check N = 0?
   817 002A6 507A          			JMP	INS_FAIL
   818 002A7 6C1F          			XOR		A,@0x1F		; Check Result ?
   819 002A8 3A03          			JBS		Z			; Check Z = 1?
   820 002A9 507A          			JMP	INS_FAIL
   821 002AA 3603          			JBC		N			; Check N = 0?
   822 002AB 507A          			JMP	INS_FAIL
   823 002AC 6000          			MOV		A,@0x00
   824 002AD 0103          			MOV		STATUS,A
   825 002AE 6001          			MOV		A,@0x01		; 0x01-1
   826 002AF 0150          			MOV		0x50,A		; [0x50] = 0x01
   827 002B0 0650          			DECA	0x50		; A = [0x50] - 1
   828 002B1 3803          			JBS		C			; Check C = 1?	; Result is Positive
   829 002B2 507A          			JMP	INS_FAIL
   830 002B3 3903          			JBS		DC			; Check DC = 1?
   831 002B4 507A          			JMP	INS_FAIL
   832 002B5 3A03          			JBS		Z			; Check Z = 1?
   833 002B6 507A          			JMP	INS_FAIL
   834 002B7 3503          			JBC		OV			; Check OV = 0?
   835 002B8 507A          			JMP	INS_FAIL
   836 002B9 3603          			JBC		N			; Check N = 0?
   837 002BA 507A          			JMP	INS_FAIL
   838 002BB 2203          			BC		Z
   839 002BC 6C00          			XOR		A,@0x00		; Check Result ?
   840 002BD 3A03          			JBS		Z			; Check Z = 1?
   841 002BE 507A          			JMP	INS_FAIL
   842 002BF 3603          			JBC		N			; Check N = 0?
   843 002C0 507A          			JMP	INS_FAIL
   844 002C1 6000          			MOV		A,@0x00
   845 002C2 0103          			MOV		STATUS,A
   846 002C3 6000          			MOV		A,@0x00		; 0x00-1
   847 002C4 0150          			MOV		0x50,A		; [0x50] = 0x00
   848 002C5 0650          			DECA	0x50		; A = [0x50] - 1
   849 002C6 3003          			JBC		C			; Check C = 0?
   850 002C7 507A          			JMP	INS_FAIL
   851 002C8 3103          			JBC		DC			; Check DC = 0?
   852 002C9 507A          			JMP	INS_FAIL
   853 002CA 3203          			JBC		Z			; Check Z = 0?
   854 002CB 507A          			JMP	INS_FAIL
   855 002CC 3503          			JBC		OV			; Check OV = 0?
   856 002CD 507A          			JMP	INS_FAIL
   857 002CE 3E03          			JBS		N			; Check N = 1?
   858 002CF 507A          			JMP	INS_FAIL
   859 002D0 2203          			BC		Z
   860 002D1 2603          			BC		N
   861 002D2 6CFF          			XOR		A,@0xFF		; Check Result ?
   862 002D3 3A03          			JBS		Z			; Check Z = 1?
   863 002D4 507A          			JMP	INS_FAIL
   864 002D5 3603          			JBC		N			; Check N = 0?
   865 002D6 507A          			JMP	INS_FAIL
   866 002D7 6000          			MOV		A,@0x00
   867 002D8 0103          			MOV		STATUS,A
   868 002D9 6080          			MOV		A,@0x80		; 0x80-1
   869 002DA 0150          			MOV		0x50,A		; [0x50] = 0x80
   870 002DB 0650          			DECA	0x50		; A = [0x50] - 1
   871 002DC 3803          			JBS		C			; Check C = 1?
   872 002DD 507A          			JMP	INS_FAIL
   873 002DE 3103          			JBC		DC			; Check DC = 0?
   874 002DF 507A          			JMP	INS_FAIL
   875 002E0 3203          			JBC		Z			; Check Z = 0?
   876 002E1 507A          			JMP	INS_FAIL
   877 002E2 3D03          			JBS		OV			; Check OV = 1?
   878 002E3 507A          			JMP	INS_FAIL
   879 002E4 3603          			JBC		N			; Check N = 0?
   880 002E5 507A          			JMP	INS_FAIL
   881 002E6 2203          			BC		Z
   882 002E7 2603          			BC		N
   883 002E8 6C7F          			XOR		A,@0x7F		; Check Result ?
   884 002E9 3A03          			JBS		Z			; Check Z = 1?
   885 002EA 507A          			JMP	INS_FAIL
   886 002EB 3603          			JBC		N			; Check N = 0?
   887 002EC 507A          			JMP	INS_FAIL
   888                     
   889                     
   890                     
   891 002ED               		INST_DEC:			;-------Instruction Test => DEC R
   892 002ED 600D          			MOV		A,@0x0D
   893 002EE 015A          			MOV		INST,A
   894 002EF 6000          			MOV		A,@0x00
   895 002F0 0103          			MOV		STATUS,A
   896 002F1 6020          			MOV		A,@0x20		; 0x20-1
   897 002F2 0150          			MOV		0x50,A		; [0x50] = 0x20
   898 002F3 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   899 002F4 1003          			MOV		A,STATUS
   900 002F5 6C19          			XOR		A,@0x19		; Check Status ? for non rest
   901                     			;;XOR		A,@0x11		; Check Status ?
   902 002F6 3A03          			JBS		Z			; Check Z = 1?
   903 002F7 507A          			JMP	INS_FAIL
   904 002F8 3603          			JBC		N			; Check N = 0?
   905 002F9 507A          			JMP	INS_FAIL
   906 002FA 2203          			BC		Z
   907 002FB 1050          			MOV		A,0x50
   908 002FC 6C1F          			XOR		A,@0x1F		; Check Result ?
   909 002FD 3A03          			JBS		Z			; Check Z = 1?
   910 002FE 507A          			JMP	INS_FAIL
   911 002FF 3603          			JBC		N			; Check N = 0?
   912 00300 507A          			JMP	INS_FAIL
   913 00301 6000          			MOV		A,@0x00
   914 00302 0103          			MOV		STATUS,A
   915 00303 6001          			MOV		A,@0x01		; 0x01-1
   916 00304 0150          			MOV		0x50,A		; [0x50] = 0x01
   917 00305 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   918 00306 1003          			MOV		A,STATUS
   919 00307 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
   920                     			;;XOR		A,@0x17		; Check Status ?
   921 00308 3A03          			JBS		Z			; Check Z = 1?
   922 00309 507A          			JMP	INS_FAIL
   923 0030A 3603          			JBC		N			; Check N = 0?
   924 0030B 507A          			JMP	INS_FAIL
   925 0030C 2203          			BC		Z
   926 0030D 1050          			MOV		A,0x50
   927 0030E 6C00          			XOR		A,@0x00		; Check Result ?
   928 0030F 3A03          			JBS		Z			; Check Z = 1?
   929 00310 507A          			JMP	INS_FAIL
   930 00311 3603          			JBC		N			; Check N = 0?
   931 00312 507A          			JMP	INS_FAIL
   932 00313 6000          			MOV		A,@0x00
   933 00314 0103          			MOV		STATUS,A
   934 00315 6000          			MOV		A,@0x00		; 0x00-1
   935 00316 0150          			MOV		0x50,A		; [0x50] = 0x00
   936 00317 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   937 00318 1003          			MOV		A,STATUS
   938 00319 6C58          			XOR		A,@0x58		; Check Status ? for non reset
   939                     			;;XOR		A,@0x50		; Check Status ?
   940 0031A 3A03          			JBS		Z			; Check Z = 1?
   941 0031B 507A          			JMP	INS_FAIL
   942 0031C 3603          			JBC		N			; Check N = 0?
   943 0031D 507A          			JMP	INS_FAIL
   944 0031E 2203          			BC		Z
   945 0031F 1050          			MOV		A,0x50
   946 00320 6CFF          			XOR		A,@0xFF		; Check Result ?
   947 00321 3A03          			JBS		Z			; Check Z = 1?
   948 00322 507A          			JMP	INS_FAIL
   949 00323 3603          			JBC		N			; Check N = 0?
   950 00324 507A          			JMP	INS_FAIL
   951 00325 6000          			MOV		A,@0x00
   952 00326 0103          			MOV		STATUS,A
   953 00327 6080          			MOV		A,@0x80		; 0x80-1
   954 00328 0150          			MOV		0x50,A		; [0x50] = 0x80
   955 00329 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   956 0032A 1003          			MOV		A,STATUS
   957 0032B 6C39          			XOR		A,@0x39		; Check Status ? for non reset
   958                     			;;XOR		A,@0x31		; Check Status ?
   959 0032C 3A03          			JBS		Z			; Check Z = 1?
   960 0032D 507A          			JMP	INS_FAIL
   961 0032E 3603          			JBC		N			; Check N = 0?
   962 0032F 507A          			JMP	INS_FAIL
   963 00330 2203          			BC		Z
   964 00331 1050          			MOV		A,0x50
   965 00332 6C7F          			XOR		A,@0x7F		; Check Result ?
   966 00333 3A03          			JBS		Z			; Check Z = 1?
   967 00334 507A          			JMP	INS_FAIL
   968 00335 3603          			JBC		N			; Check N = 0?
   969 00336 507A          			JMP	INS_FAIL
   970                     
   971 00337               		INST_ADD_A_R:		;-------Instruction Test => ADD A,R
   972 00337 6012          			MOV		A,@0x12
   973 00338 015A          			MOV		INST,A
   974 00339 40DE          			CALL	STATUS_CLEAR	; 0x80+0x7F
   975 0033A 6080          			MOV		A,@0x80
   976 0033B 0150          			MOV		0x50,A		; [0x50] = 0x80
   977 0033C 607F          			MOV		A,@0x7F		; 
   978 0033D 0E50          			ADD		A,0x50		; A = 0x7F + 0x80
   979 0033E 3003          			JBC		C			; Check C = 0?
   980 0033F 507A          			JMP	INS_FAIL
   981 00340 3103          			JBC		DC			; Check DC = 0?
   982 00341 507A          			JMP	INS_FAIL
   983 00342 3203          			JBC		Z			; Check Z = 0?
   984 00343 507A          			JMP	INS_FAIL
   985 00344 3503          			JBC		OV			; Check OV = 0?
   986 00345 507A          			JMP	INS_FAIL
   987 00346 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   988 00347 507A          			JMP	INS_FAIL
   989 00348 2203          			BC		Z
   990 00349 2603          			BC		N
   991 0034A 6CFF          			XOR		A,@0xFF		; Check Result ?
   992 0034B 3A03          			JBS		Z			; Check Z = 1?
   993 0034C 507A          			JMP	INS_FAIL
   994 0034D 3603          			JBC		N			; Check N = 0?
   995 0034E 507A          			JMP	INS_FAIL
   996 0034F 40DE          			CALL	STATUS_CLEAR	; 0xFF+0x01
   997 00350 60FF          			MOV		A,@0xFF
   998 00351 0150          			MOV		0x50,A		; [0x50] = 0xFF
   999 00352 6001          			MOV		A,@0x01		; 
  1000 00353 0E50          			ADD		A,0x50		; A = 0x01 + 0xFF
  1001 00354 3803          			JBS		C			; Check C = 1?
  1002 00355 507A          			JMP	INS_FAIL
  1003 00356 3903          			JBS		DC			; Check DC = 1?
  1004 00357 507A          			JMP	INS_FAIL
  1005 00358 3A03          			JBS		Z			; Check Z = 1?
  1006 00359 507A          			JMP	INS_FAIL
  1007 0035A 3503          			JBC		OV			; Check OV = 0?
  1008 0035B 507A          			JMP	INS_FAIL
  1009 0035C 3603          			JBC		N			; Check N = 0?
  1010 0035D 507A          			JMP	INS_FAIL
  1011 0035E 2203          			BC		Z
  1012 0035F 2603          			BC		N
  1013 00360 6C00          			XOR		A,@0x00		; Check Result ?
  1014 00361 3A03          			JBS		Z			; Check Z = 1?
  1015 00362 507A          			JMP	INS_FAIL
  1016 00363 3603          			JBC		N			; Check N = 0?
  1017 00364 507A          			JMP	INS_FAIL
  1018 00365 40DE          			CALL	STATUS_CLEAR	; 0x7F+0x01
  1019 00366 607F          			MOV		A,@0x7F
  1020 00367 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1021 00368 6001          			MOV		A,@0x01		; 
  1022 00369 0E50          			ADD		A,0x50		; A = 0x01 + 0x7F
  1023 0036A 3003          			JBC		C			; Check C = 0?
  1024 0036B 507A          			JMP	INS_FAIL
  1025 0036C 3903          			JBS		DC			; Check DC = 1?
  1026 0036D 507A          			JMP	INS_FAIL
  1027 0036E 3203          			JBC		Z			; Check Z = 0?
  1028 0036F 507A          			JMP	INS_FAIL
  1029 00370 3D03          			JBS		OV			; Check OV = 1?
  1030 00371 507A          			JMP	INS_FAIL
  1031 00372 3E03          			JBS		N			; Check N = 1?
  1032 00373 507A          			JMP	INS_FAIL
  1033 00374 2203          			BC		Z
  1034 00375 2603          			BC		N
  1035 00376 6C80          			XOR		A,@0x80		; Check Result ?
  1036 00377 3A03          			JBS		Z			; Check Z = 1?
  1037 00378 507A          			JMP	INS_FAIL
  1038 00379 3603          			JBC		N			; Check N = 0?
  1039 0037A 507A          			JMP	INS_FAIL
  1040 0037B               		INST_ADD_R_A:		;-------Instruction Test => ADD R,A
  1041 0037B 6013          			MOV		A,@0x13
  1042 0037C 015A          			MOV		INST,A
  1043 0037D 40DE          			CALL	STATUS_CLEAR	; 0x80+0x7F
  1044 0037E 6080          			MOV		A,@0x80
  1045 0037F 0150          			MOV		0x50,A		; [0x50] = 0x80
  1046 00380 607F          			MOV		A,@0x7F		; A = 0x7F
  1047 00381 0F50          			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
  1048 00382 1003          			MOV		A,STATUS
  1049 00383 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1050                     			;;XOR		A,@0x50		; Check Status ?
  1051 00384 3A03          			JBS		Z			; Check Z = 1?
  1052 00385 507A          			JMP	INS_FAIL
  1053 00386 3603          			JBC		N			; Check N = 0?
  1054 00387 507A          			JMP	INS_FAIL
  1055 00388 1050          			MOV		A,0x50
  1056 00389 6CFF          			XOR		A,@0xFF		; Check Result ?
  1057 0038A 3A03          			JBS		Z			; Check Z = 1?
  1058 0038B 507A          			JMP	INS_FAIL
  1059 0038C 3603          			JBC		N			; Check N = 0?
  1060 0038D 507A          			JMP	INS_FAIL
  1061 0038E 40DE          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1062 0038F 60FF          			MOV		A,@0xFF
  1063 00390 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1064 00391 6001          			MOV		A,@0x01		; A = 0x01
  1065 00392 0F50          			ADD		0x50,A		; [0x50] = 0xFF + 0x01
  1066 00393 1003          			MOV		A,STATUS
  1067 00394 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
  1068                     			;;XOR		A,@0x17		; Check Status ?
  1069 00395 3A03          			JBS		Z			; Check Z = 1?
  1070 00396 507A          			JMP	INS_FAIL
  1071 00397 3603          			JBC		N			; Check N = 0?
  1072 00398 507A          			JMP	INS_FAIL
  1073 00399 1050          			MOV		A,0x50
  1074 0039A 6C00          			XOR		A,@0x00		; Check Result ?
  1075 0039B 3A03          			JBS		Z			; Check Z = 1?
  1076 0039C 507A          			JMP	INS_FAIL
  1077 0039D 3603          			JBC		N			; Check N = 0?
  1078 0039E 507A          			JMP	INS_FAIL
  1079 0039F 40DE          			CALL	STATUS_CLEAR	;0x7F+0x01
  1080 003A0 607F          			MOV		A,@0x7F
  1081 003A1 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1082 003A2 6001          			MOV		A,@0x01		; A = 0x01
  1083 003A3 0F50          			ADD		0x50,A		; [0x50] = 0x7F + 0x01
  1084 003A4 1003          			MOV		A,STATUS
  1085 003A5 6C7A          			XOR		A,@0x7A		; Check Status ? for non reset
  1086                     			;;XOR		A,@0x72		; Check Status ?
  1087 003A6 3A03          			JBS		Z			; Check Z = 1?
  1088 003A7 507A          			JMP	INS_FAIL
  1089 003A8 3603          			JBC		N			; Check N = 0?
  1090 003A9 507A          			JMP	INS_FAIL
  1091 003AA 1050          			MOV		A,0x50
  1092 003AB 6C80          			XOR		A,@0x80		; Check Result ?
  1093 003AC 3A03          			JBS		Z			; Check Z = 1?
  1094 003AD 507A          			JMP	INS_FAIL
  1095 003AE 3603          			JBC		N			; Check N = 0?
  1096 003AF 507A          			JMP	INS_FAIL
  1097 003B0               		INST_ADD_A_K:		;-------Instruction Test => ADD A,k
  1098 003B0 6034          			MOV		A,@0x34
  1099 003B1 015A          			MOV		INST,A
  1100 003B2 40DE          			CALL	STATUS_CLEAR
  1101 003B3 607F          			MOV		A,@0x7F		;0x7F+0x01
  1102 003B4 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1103 003B5 3003          			JBC		C			; Check C = 0?
  1104 003B6 507A          			JMP	INS_FAIL
  1105 003B7 3903          			JBS		DC			; Check DC = 1?
  1106 003B8 507A          			JMP	INS_FAIL
  1107 003B9 3203          			JBC		Z			; Check Z = 0?
  1108 003BA 507A          			JMP	INS_FAIL
  1109 003BB 3D03          			JBS		OV			; Check OV = 1?
  1110 003BC 507A          			JMP	INS_FAIL
  1111 003BD 3E03          			JBS		N			; Check N = 1?
  1112 003BE 507A          			JMP	INS_FAIL
  1113 003BF 6C80          			XOR		A,@0x80		; Check Result ?
  1114 003C0 40E1          			CALL	INST_XOR_JUDGE
  1115 003C1 40DE          			CALL	STATUS_CLEAR
  1116 003C2 60FF          			MOV		A,@0xFF		;0xFF+0x01
  1117 003C3 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1118 003C4 3803          			JBS		C			; Check C = 1?
  1119 003C5 507A          			JMP	INS_FAIL
  1120 003C6 3903          			JBS		DC			; Check DC = 1?
  1121 003C7 507A          			JMP	INS_FAIL
  1122 003C8 3A03          			JBS		Z			; Check Z = 1?
  1123 003C9 507A          			JMP	INS_FAIL
  1124 003CA 3503          			JBC		OV			; Check OV = 0?
  1125 003CB 507A          			JMP	INS_FAIL
  1126 003CC 3603          			JBC		N			; Check N = 0?
  1127 003CD 507A          			JMP	INS_FAIL
  1128 003CE 6C00          			XOR		A,@0x00		; Check Result ?
  1129 003CF 40E1          			CALL	INST_XOR_JUDGE
  1130 003D0 40DE          			CALL	STATUS_CLEAR
  1131 003D1 607F          			MOV		A,@0x7F		; 0x80+0x7F
  1132 003D2 7C80          			ADD		A,@0x80		; A = 0x80 + A
  1133 003D3 3003          			JBC		C			; Check C = 0?
  1134 003D4 507A          			JMP	INS_FAIL
  1135 003D5 3103          			JBC		DC			; Check DC = 0?
  1136 003D6 507A          			JMP	INS_FAIL
  1137 003D7 3203          			JBC		Z			; Check Z = 0?
  1138 003D8 507A          			JMP	INS_FAIL
  1139 003D9 3503          			JBC		OV			; Check OV = 0?
  1140 003DA 507A          			JMP	INS_FAIL
  1141 003DB 3E03          			JBS		N			; Check N = 1?
  1142 003DC 507A          			JMP	INS_FAIL
  1143 003DD 6CFF          			XOR		A,@0xFF		; Check Result ?
  1144 003DE 40E1          			CALL	INST_XOR_JUDGE
  1145 003DF               		INST_ADC_A_R:		;-------Instruction Test => ADC A,R
  1146 003DF 6036          			MOV		A,@0x36
  1147 003E0 015A          			MOV		INST,A
  1148 003E1 40DE          			CALL	STATUS_CLEAR
  1149 003E2 2803          			BS		C			; 0x7F+0x00
  1150 003E3 607F          			MOV		A,@0x7F		
  1151 003E4 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1152 003E5 6000          			MOV		A,@0x00		; A = 0x00
  1153 003E6 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1154 003E7 3003          			JBC		C			; Check C = 0?
  1155 003E8 507A          			JMP	INS_FAIL
  1156 003E9 3903          			JBS		DC			; Check DC = 1?
  1157 003EA 507A          			JMP	INS_FAIL
  1158 003EB 3203          			JBC		Z			; Check Z = 0?
  1159 003EC 507A          			JMP	INS_FAIL
  1160 003ED 3D03          			JBS		OV			; Check OV = 1?
  1161 003EE 507A          			JMP	INS_FAIL
  1162 003EF 3E03          			JBS		N			; Check N = 1?
  1163 003F0 507A          			JMP	INS_FAIL
  1164 003F1 6C80          			XOR		A,@0x80		; Check Result ?
  1165 003F2 40E1          			CALL	INST_XOR_JUDGE
  1166 003F3 40DE          			CALL	STATUS_CLEAR
  1167 003F4 2803          			BS		C			; 0x80+0x7F
  1168 003F5 6080          			MOV		A,@0x80
  1169 003F6 0150          			MOV		0x50,A		; [0x50] = 0x80
  1170 003F7 607F          			MOV		A,@0x7F		; A = 0x7F
  1171 003F8 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1172 003F9 3803          			JBS		C			; Check C = 1?
  1173 003FA 507A          			JMP	INS_FAIL
  1174 003FB 3903          			JBS		DC			; Check DC = 1?
  1175 003FC 507A          			JMP	INS_FAIL
  1176 003FD 3A03          			JBS		Z			; Check Z = 1?
  1177 003FE 507A          			JMP	INS_FAIL
  1178 003FF 3503          			JBC		OV			; Check OV = 0?
  1179 00400 507A          			JMP	INS_FAIL
  1180 00401 3603          			JBC		N			; Check N = 0?
  1181 00402 507A          			JMP	INS_FAIL
  1182 00403 6C00          			XOR		A,@0x00		; Check Result ?
  1183 00404 40E1          			CALL	INST_XOR_JUDGE
  1184 00405               		INST_ADC_R_A:		;-------Instruction Test => ADC R,A
  1185 00405 6037          			MOV		A,@0x37
  1186 00406 015A          			MOV		INST,A
  1187 00407 40DE          			CALL	STATUS_CLEAR
  1188 00408 2803          			BS		C			;0x7F+0x00
  1189 00409 607F          			MOV		A,@0x7F
  1190 0040A 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1191 0040B 6000          			MOV		A,@0x00		; A = 0x00
  1192 0040C 2203          			BC		Z
  1193 0040D 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1194 0040E 1003          			MOV		A,STATUS
  1195 0040F 6C7A          			XOR		A,@0x7A		; Check Status ?
  1196                     			;;XOR		A,@0x72		; Check Status ?
  1197 00410 40E1          			CALL	INST_XOR_JUDGE
  1198 00411 1050          			MOV		A,0x50
  1199 00412 6C80          			XOR		A,@0x80		; Check Result ?
  1200 00413 40E1          			CALL	INST_XOR_JUDGE
  1201 00414 40DE          			CALL	STATUS_CLEAR
  1202 00415 2803          			BS		C			;0x80+0x7F
  1203 00416 6080          			MOV		A,@0x80
  1204 00417 0150          			MOV		0x50,A		; [0x50] = 0x80
  1205 00418 607F          			MOV		A,@0x7F		; A = 0x7F
  1206 00419 2203          			BC		Z
  1207 0041A 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1208 0041B 1003          			MOV		A,STATUS
  1209 0041C 6C1F          			XOR		A,@0x1F		; Check Status ?
  1210                     			;;XOR		A,@0x17		; Check Status ?
  1211 0041D 40E1          			CALL	INST_XOR_JUDGE
  1212 0041E 1050          			MOV		A,0x50
  1213 0041F 6C00          			XOR		A,@0x00		; Check Result ?
  1214 00420 40E1          			CALL	INST_XOR_JUDGE
  1215                     
  1216 00421               		INST_INCA:			;-------Instruction Test => INCA R
  1217 00421 6017          			MOV		A,@0x17
  1218 00422 015A          			MOV		INST,A
  1219 00423 40DE          			CALL	STATUS_CLEAR	; 0x7F+0x01
  1220 00424 607F          			MOV		A,@0x7F
  1221 00425 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1222 00426 1450          			INCA	0x50		; A = [0x50] +1		
  1223 00427 3003          			JBC		C			; Check C = 0?
  1224 00428 507A          			JMP	INS_FAIL
  1225 00429 3903          			JBS		DC			; Check DC = 1?
  1226 0042A 507A          			JMP	INS_FAIL
  1227 0042B 3203          			JBC		Z			; Check Z = 0?
  1228 0042C 507A          			JMP	INS_FAIL
  1229 0042D 3D03          			JBS		OV			; Check OV = 1?
  1230 0042E 507A          			JMP	INS_FAIL
  1231 0042F 3E03          			JBS		N			; Check N = 1?
  1232 00430 507A          			JMP	INS_FAIL
  1233 00431 2203          			BC		Z
  1234 00432 2603          			BC		N
  1235 00433 6C80          			XOR		A,@0x80		; Check Result ?
  1236 00434 3A03          			JBS		Z			; Check Z = 1?
  1237 00435 507A          			JMP	INS_FAIL
  1238 00436 3603          			JBC		N			; Check N = 0?
  1239 00437 507A          			JMP	INS_FAIL
  1240 00438 40DE          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1241 00439 60FF          			MOV		A,@0xFF
  1242 0043A 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1243 0043B 1450          			INCA	0x50		; A = [0x50] +1		
  1244 0043C 3803          			JBS		C			; Check C = 1?
  1245 0043D 507A          			JMP	INS_FAIL
  1246 0043E 3903          			JBS		DC			; Check DC = 1?
  1247 0043F 507A          			JMP	INS_FAIL
  1248 00440 3A03          			JBS		Z			; Check Z = 1?
  1249 00441 507A          			JMP	INS_FAIL
  1250 00442 3503          			JBC		OV			; Check OV = 0?
  1251 00443 507A          			JMP	INS_FAIL
  1252 00444 3603          			JBC		N			; Check N = 0?
  1253 00445 507A          			JMP	INS_FAIL
  1254 00446 2203          			BC		Z
  1255 00447 2603          			BC		N
  1256 00448 6C00          			XOR		A,@0x00		; Check Result ?
  1257 00449 3A03          			JBS		Z			; Check Z = 1?
  1258 0044A 507A          			JMP	INS_FAIL
  1259 0044B 3603          			JBC		N			; Check N = 0?
  1260 0044C 507A          			JMP	INS_FAIL
  1261                     
  1262 0044D               		INST_INC:			;-------Instruction Test => INC R
  1263 0044D 6018          			MOV		A,@0x18
  1264 0044E 015A          			MOV		INST,A
  1265 0044F 40DE          			CALL 	STATUS_CLEAR	; 0x7F+0x01
  1266 00450 607F          			MOV		A,@0x7F
  1267 00451 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1268 00452 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1269 00453 1003          			MOV		A,STATUS
  1270 00454 6C7A          			XOR		A,@0x7A		; Check Status ?
  1271                     			;;XOR		A,@0x72		; Check Status ?
  1272 00455 3A03          			JBS		Z			; Check Z = 1?
  1273 00456 507A          			JMP	INS_FAIL
  1274 00457 3603          			JBC		N			; Check N = 0?
  1275 00458 507A          			JMP	INS_FAIL
  1276 00459 1050          			MOV		A,0x50
  1277 0045A 6C80          			XOR		A,@0x80		; Check Result ?
  1278 0045B 3A03          			JBS		Z			; Check Z = 1?
  1279 0045C 507A          			JMP	INS_FAIL
  1280 0045D 3603          			JBC		N			; Check N = 0?
  1281 0045E 507A          			JMP	INS_FAIL
  1282 0045F 40DE          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1283 00460 60FF          			MOV		A,@0xFF
  1284 00461 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1285 00462 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1286 00463 1003          			MOV		A,STATUS
  1287 00464 6C1F          			XOR		A,@0x1F		; Check Status ?
  1288                     			;;XOR		A,@0x17		; Check Status ?
  1289 00465 3A03          			JBS		Z			; Check Z = 1?
  1290 00466 507A          			JMP	INS_FAIL
  1291 00467 3603          			JBC		N			; Check N = 0?
  1292 00468 507A          			JMP	INS_FAIL
  1293 00469 1050          			MOV		A,0x50
  1294 0046A 6C00          			XOR		A,@0x00		; Check Result ?
  1295 0046B 3A03          			JBS		Z			; Check Z = 1?
  1296 0046C 507A          			JMP	INS_FAIL
  1297 0046D 3603          			JBC		N			; Check N = 0?
  1298 0046E 507A          			JMP	INS_FAIL
  1299                     
  1300 0046F               		INST_NEG_R:			;-------Instruction Test => NEG R
  1301 0046F 6035          			MOV		A,@0x35
  1302 00470 015A          			MOV		INST,A
  1303 00471 40DE          			CALL	STATUS_CLEAR
  1304 00472 6000          			MOV		A,@0x00		; 0x00
  1305 00473 0150          			MOV		0x50,A		; [0x50] = 0x00
  1306 00474 7D50          			NEG		0x50
  1307 00475 1003          			MOV		A,STATUS
  1308 00476 6C1F          			XOR		A,@0x1F		; Check Status ?
  1309                     			;;XOR		A,@0x17		; Check Status ?
  1310 00477 40E1          			CALL	INST_XOR_JUDGE
  1311 00478 1050          			MOV		A,0x50
  1312 00479 6C00          			XOR		A,@0x00		; Check Result ?
  1313 0047A 40E1          			CALL	INST_XOR_JUDGE
  1314 0047B 40DE          			CALL	STATUS_CLEAR
  1315 0047C 6001          			MOV		A,@0x01		; 0x01
  1316 0047D 0150          			MOV		0x50,A		; [0x50] = 0x01
  1317 0047E 7D50          			NEG		0x50
  1318 0047F 1003          			MOV		A,STATUS
  1319 00480 6C58          			XOR		A,@0x58		; Check Status ?
  1320                     			;;XOR		A,@0x50		; Check Status ?
  1321 00481 40E1          			CALL	INST_XOR_JUDGE
  1322 00482 1050          			MOV		A,0x50
  1323 00483 6CFF          			XOR		A,@0xFF		; Check Result ?
  1324 00484 4677          			CALL	INST_XCH
  1325 00485 40DE          			CALL	STATUS_CLEAR
  1326 00486 6080          			MOV		A,@0x80		; 0x80
  1327 00487 0150          			MOV		0x50,A		; [0x50] = 0x80
  1328 00488 7D50          			NEG		0x50
  1329 00489 1003          			MOV		A,STATUS
  1330 0048A 6C7A          			XOR		A,@0x7A		; Check Status ?
  1331                     			;;XOR		A,@0x72		; Check Status ?
  1332 0048B 40E1          			CALL	INST_XOR_JUDGE
  1333 0048C 1050          			MOV		A,0x50
  1334 0048D 6C80          			XOR		A,@0x80		; Check Result ?
  1335 0048E 40E1          			CALL	INST_XOR_JUDGE
  1336                     
  1337 0048F 0012          		RET
  1338 00490               	TEST_INST_LOGIC_I:
  1339 00490               		INST_BTG:			;-------Instruction Test => BTG R,b	
  1340 00490 6006          			MOV		A,@0x06
  1341 00491 015A          			MOV		INST,A
  1342 00492 40DE          			CALL	STATUS_CLEAR
  1343 00493 60FF          			MOV		A,@0xFF
  1344 00494 0104          			MOV		RSR,A		; Start Address
  1345 00495 0084          			BTG		RSR
  1346 00496 1004          			MOV		A,RSR
  1347 00497 6CFE          			XOR		A,@0xFE		; Check Result ?
  1348 00498 40E1          			CALL	INST_XOR_JUDGE
  1349 00499               		INST_OR_A_R:		;-------Instruction Test => OR A,R
  1350 00499 600E          			MOV		A,@0x0E
  1351 0049A 015A          			MOV		INST,A
  1352 0049B 6000          			MOV		A,@0x00
  1353 0049C 0103          			MOV		STATUS,A
  1354 0049D 6000          			MOV		A,@0x00
  1355 0049E 0150          			MOV		0x50,A		; [0x50] = 0x00
  1356 0049F 6000          			MOV		A,@0x00
  1357 004A0 2203          			BC		Z
  1358 004A1 0850          			OR		A,0x50		; A = A | [0x50]
  1359 004A2 3003          			JBC		C			; Check C = 0?
  1360 004A3 507A          			JMP	INS_FAIL
  1361 004A4 3103          			JBC		DC			; Check DC = 0?
  1362 004A5 507A          			JMP	INS_FAIL
  1363 004A6 3A03          			JBS		Z			; Check Z = 1?
  1364 004A7 507A          			JMP	INS_FAIL
  1365 004A8 3503          			JBC		OV			; Check OV = 0?
  1366 004A9 507A          			JMP	INS_FAIL
  1367 004AA 3603          			JBC		N			; Check N = 0?
  1368 004AB 507A          			JMP	INS_FAIL
  1369 004AC 2203          			BC		Z
  1370 004AD 6C00          			XOR		A,@0x00		; Check Result ?
  1371 004AE 3A03          			JBS		Z			; Check Z = 1?
  1372 004AF 507A          			JMP	INS_FAIL
  1373 004B0 3603          			JBC		N			; Check N = 0?
  1374 004B1 507A          			JMP	INS_FAIL
  1375 004B2 6000          			MOV		A,@0x00
  1376 004B3 0103          			MOV		STATUS,A
  1377 004B4 6055          			MOV		A,@0x55
  1378 004B5 0150          			MOV		0x50,A		; [0x50] = 0x55
  1379 004B6 60AA          			MOV		A,@0xAA
  1380 004B7 2203          			BC		Z
  1381 004B8 0850          			OR		A,0x50		; A = A | [0x50]
  1382 004B9 3003          			JBC		C			; Check C = 0?
  1383 004BA 507A          			JMP	INS_FAIL
  1384 004BB 3103          			JBC		DC			; Check DC = 0?
  1385 004BC 507A          			JMP	INS_FAIL
  1386 004BD 3203          			JBC		Z			; Check Z = 0?
  1387 004BE 507A          			JMP	INS_FAIL
  1388 004BF 3503          			JBC		OV			; Check OV = 0?
  1389 004C0 507A          			JMP	INS_FAIL
  1390 004C1 3E03          			JBS		N			; Check N = 1?
  1391 004C2 507A          			JMP	INS_FAIL
  1392 004C3 2203          			BC		Z
  1393 004C4 6CFF          			XOR		A,@0xFF		; Check Result ?
  1394 004C5 3A03          			JBS		Z			; Check Z = 1?
  1395 004C6 507A          			JMP	INS_FAIL
  1396 004C7 3603          			JBC		N			; Check N = 0?
  1397 004C8 507A          			JMP	INS_FAIL
  1398                     
  1399 004C9               		INST_OR_R_A:		;-------Instruction Test => OR R,A
  1400 004C9 600F          			MOV		A,@0x0F
  1401 004CA 015A          			MOV		INST,A
  1402 004CB 6000          			MOV		A,@0x00
  1403 004CC 0103          			MOV		STATUS,A
  1404 004CD 6000          			MOV		A,@0x00
  1405 004CE 0150          			MOV		0x50,A		; [0x50] = 0x00
  1406 004CF 6000          			MOV		A,@0x00		; A = 0x00
  1407 004D0 2203          			BC		Z
  1408 004D1 0950          			OR		0x50,A		; [0x50] = A | [0x50]
  1409 004D2 1003          			MOV		A,STATUS
  1410 004D3 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1411                     			;;XOR		A,@0x14		; Check Status ?
  1412 004D4 3A03          			JBS		Z			; Check Z = 1?
  1413 004D5 507A          			JMP	INS_FAIL
  1414 004D6 3603          			JBC		N			; Check N = 0?
  1415 004D7 507A          			JMP	INS_FAIL
  1416 004D8 1050          			MOV		A,0x50		; A = Result[0x50]
  1417 004D9 2203          			BC		Z
  1418 004DA 2603          			BC		N
  1419 004DB 6C00          			XOR		A,@0x00		; Check Result ?
  1420 004DC 3A03          			JBS		Z			; Check Z = 1?
  1421 004DD 507A          			JMP	INS_FAIL
  1422 004DE 3603          			JBC		N			; Check N = 0?
  1423 004DF 507A          			JMP	INS_FAIL
  1424 004E0 6000          			MOV		A,@0x00
  1425 004E1 0103          			MOV		STATUS,A
  1426 004E2 6055          			MOV		A,@0x55
  1427 004E3 0150          			MOV		0x50,A		; [0x50] = 0x55
  1428 004E4 60AA          			MOV		A,@0xAA		; A = 0xAA
  1429 004E5 0950          			OR		0x50,A		; [0x50] = 0xAA | 0x55
  1430 004E6 1003          			MOV		A,STATUS
  1431 004E7 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1432                     			;;XOR		A,@0x50		; Check Status ?
  1433 004E8 3A03          			JBS		Z			; Check Z = 1?
  1434 004E9 507A          			JMP	INS_FAIL
  1435 004EA 3603          			JBC		N			; Check N = 0?
  1436 004EB 507A          			JMP	INS_FAIL
  1437 004EC 1050          			MOV		A,0x50
  1438 004ED 2203          			BC		Z
  1439 004EE 2603          			BC		N
  1440 004EF 6CFF          			XOR		A,@0xFF		; Check Result ?
  1441 004F0 3A03          			JBS		Z			; Check Z = 1?
  1442 004F1 507A          			JMP	INS_FAIL
  1443 004F2 3603          			JBC		N			; Check N = 0?
  1444 004F3 507A          			JMP	INS_FAIL
  1445                     
  1446 004F4               		INST_AND_A_R:		;-------Instruction Test => AND A,R
  1447 004F4 6010          			MOV		A,@0x10
  1448 004F5 015A          			MOV		INST,A
  1449 004F6 40DE          			CALL	STATUS_CLEAR
  1450 004F7 6055          			MOV		A,@0x55
  1451 004F8 0150          			MOV		0x50,A		; [0x50] = 0x55
  1452 004F9 60AA          			MOV		A,@0xAA
  1453 004FA 0A50          			AND		A,0x50		; A = 0xAA & 0x55
  1454 004FB 3003          			JBC		C			; Check C = 0?
  1455 004FC 507A          			JMP	INS_FAIL
  1456 004FD 3103          			JBC		DC			; Check DC = 0?
  1457 004FE 507A          			JMP	INS_FAIL
  1458 004FF 3A03          			JBS		Z			; Check Z = 1?
  1459 00500 507A          			JMP	INS_FAIL
  1460 00501 3503          			JBC		OV			; Check OV = 0?
  1461 00502 507A          			JMP	INS_FAIL
  1462 00503 3603          			JBC		N			; Check N = 0?
  1463 00504 507A          			JMP	INS_FAIL
  1464 00505 6C00          			XOR		A,@0x00		; Check Result ?
  1465 00506 3A03          			JBS		Z			; Check Z = 1?
  1466 00507 507A          			JMP	INS_FAIL
  1467 00508 3603          			JBC		N			; Check N = 0?
  1468 00509 507A          			JMP	INS_FAIL
  1469 0050A 40DE          			CALL	STATUS_CLEAR
  1470 0050B 60F5          			MOV		A,@0xF5
  1471 0050C 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1472 0050D 60FA          			MOV		A,@0xFA
  1473 0050E 0A50          			AND		A,0x50		; A = 0xFA & 0xF5
  1474 0050F 3003          			JBC		C			; Check C = 0?
  1475 00510 507A          			JMP	INS_FAIL
  1476 00511 3103          			JBC		DC			; Check DC = 0?
  1477 00512 507A          			JMP	INS_FAIL
  1478 00513 3203          			JBC		Z			; Check Z = 0?
  1479 00514 507A          			JMP	INS_FAIL
  1480 00515 3503          			JBC		OV			; Check OV = 0?
  1481 00516 507A          			JMP	INS_FAIL
  1482 00517 3E03          			JBS		N			; Check N = 1?
  1483 00518 507A          			JMP	INS_FAIL
  1484 00519 6CF0          			XOR		A,@0xF0		; Check Result ?
  1485 0051A 3A03          			JBS		Z			; Check Z = 1?
  1486 0051B 507A          			JMP	INS_FAIL
  1487 0051C 3603          			JBC		N			; Check N = 0?
  1488 0051D 507A          			JMP	INS_FAIL
  1489 0051E               		INST_AND_R_A:		;-------Instruction Test => AND R,A
  1490 0051E 6011          			MOV		A,@0x11
  1491 0051F 015A          			MOV		INST,A
  1492 00520 40DE          			CALL	STATUS_CLEAR
  1493 00521 6055          			MOV		A,@0x55
  1494 00522 0150          			MOV		0x50,A		; [0x50] = 0x55
  1495 00523 60AA          			MOV		A,@0xAA
  1496 00524 0B50          			AND		0x50,A		; [0x50] = 0xAA & 0x55
  1497 00525 1003          			MOV		A,STATUS
  1498 00526 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1499                     			;;XOR		A,@0x14		; Check Status ?
  1500 00527 3A03          			JBS		Z			; Check Z = 1?
  1501 00528 507A          			JMP	INS_FAIL
  1502 00529 3603          			JBC		N			; Check N = 0?
  1503 0052A 507A          			JMP	INS_FAIL
  1504 0052B 2203          			BC		Z
  1505 0052C 1050          			MOV		A,0x50
  1506 0052D 2203          			BC		Z
  1507 0052E 6C00          			XOR		A,@0x00		; Check Result ?
  1508 0052F 3A03          			JBS		Z			; Check Z = 1?
  1509 00530 507A          			JMP	INS_FAIL
  1510 00531 3603          			JBC		N			; Check N = 0?
  1511 00532 507A          			JMP	INS_FAIL
  1512 00533 40DE          			CALL	STATUS_CLEAR
  1513 00534 60F5          			MOV		A,@0xF5
  1514 00535 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1515 00536 60FA          			MOV		A,@0xFA
  1516 00537 0B50          			AND		0x50,A		; [0x50] = 0xFA & 0xF5
  1517 00538 1003          			MOV		A,STATUS
  1518 00539 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1519                     			;;XOR		A,@0x50		; Check Status ?
  1520 0053A 3A03          			JBS		Z			; Check Z = 1?
  1521 0053B 507A          			JMP	INS_FAIL
  1522 0053C 3603          			JBC		N			; Check N = 0?
  1523 0053D 507A          			JMP	INS_FAIL
  1524 0053E 2203          			BC		Z
  1525 0053F 1050          			MOV		A,0x50
  1526 00540 2203          			BC		Z
  1527 00541 6CF0          			XOR		A,@0xF0		; Check Result ?
  1528 00542 3A03          			JBS		Z			; Check Z = 1?
  1529 00543 507A          			JMP	INS_FAIL
  1530 00544 3603          			JBC		N			; Check N = 0?
  1531 00545 507A          			JMP	INS_FAIL
  1532 00546               		INST_AND_A_K:		;-------Instruction Test => AND A,k
  1533 00546 6029          			MOV		A,@0x29
  1534 00547 015A          			MOV		INST,A
  1535 00548 40DE          			CALL	STATUS_CLEAR
  1536 00549 60AA          			MOV		A,@0xAA
  1537 0054A 6855          			AND		A,@0x55		; A = 0xAA & 0x55
  1538 0054B 3003          			JBC		C			; Check C = 0?
  1539 0054C 507A          			JMP	INS_FAIL
  1540 0054D 3103          			JBC		DC			; Check DC = 0?
  1541 0054E 507A          			JMP	INS_FAIL
  1542 0054F 3A03          			JBS		Z			; Check Z = 1?
  1543 00550 507A          			JMP	INS_FAIL
  1544 00551 3503          			JBC		OV			; Check OV = 0?
  1545 00552 507A          			JMP	INS_FAIL
  1546 00553 3603          			JBC		N			; Check N = 0?
  1547 00554 507A          			JMP	INS_FAIL
  1548 00555 6C00          			XOR		A,@0x00		; Check Result ?
  1549 00556 3A03          			JBS		Z			; Check Z = 1?
  1550 00557 507A          			JMP	INS_FAIL
  1551 00558 3603          			JBC		N			; Check N = 0?
  1552 00559 507A          			JMP	INS_FAIL
  1553 0055A 40DE          			CALL	STATUS_CLEAR
  1554 0055B 60AA          			MOV		A,@0xAA
  1555 0055C 68FF          			AND		A,@0xFF		; A = A & 0xFF
  1556 0055D 3003          			JBC		C			; Check C = 0?
  1557 0055E 507A          			JMP	INS_FAIL
  1558 0055F 3103          			JBC		DC			; Check DC = 0?
  1559 00560 507A          			JMP	INS_FAIL
  1560 00561 3203          			JBC		Z			; Check Z = 0?
  1561 00562 507A          			JMP	INS_FAIL
  1562 00563 3503          			JBC		OV			; Check OV = 0?
  1563 00564 507A          			JMP	INS_FAIL
  1564 00565 3E03          			JBS		N			; Check N = 1?
  1565 00566 507A          			JMP	INS_FAIL
  1566 00567 6CAA          			XOR		A,@0xAA		; Check Result ?
  1567 00568 40E1          			CALL	INST_XOR_JUDGE
  1568                     
  1569 00569               		INST_COMA:			;-------Instruction Test => COMA R
  1570 00569 6015          			MOV		A,@0x15
  1571 0056A 015A          			MOV		INST,A
  1572 0056B 40DE          			CALL	STATUS_CLEAR
  1573 0056C 60FF          			MOV		A,@0xFF
  1574 0056D 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1575 0056E 1250          			COMA	0x50		; A = /R
  1576 0056F 3003          			JBC		C			; Check C = 0?
  1577 00570 507A          			JMP	INS_FAIL
  1578 00571 3103          			JBC		DC			; Check DC = 0?
  1579 00572 507A          			JMP	INS_FAIL
  1580 00573 3A03          			JBS		Z			; Check Z = 1?
  1581 00574 507A          			JMP	INS_FAIL
  1582 00575 3503          			JBC		OV			; Check OV = 0?
  1583 00576 507A          			JMP	INS_FAIL
  1584 00577 3603          			JBC		N			; Check N = 0?
  1585 00578 507A          			JMP	INS_FAIL
  1586 00579 6C00          			XOR		A,@0x00		; Check Result ?
  1587 0057A 3A03          			JBS		Z			; Check Z = 1?
  1588 0057B 507A          			JMP	INS_FAIL
  1589 0057C 3603          			JBC		N			; Check N = 0?
  1590 0057D 507A          			JMP	INS_FAIL	
  1591 0057E 40DE          			CALL	STATUS_CLEAR
  1592 0057F 6005          			MOV		A,@0x05
  1593 00580 0150          			MOV		0x50,A		; [0x50] = 0x05
  1594 00581 1250          			COMA	0x50		; A = /R
  1595 00582 3003          			JBC		C			; Check C = 0?
  1596 00583 507A          			JMP	INS_FAIL
  1597 00584 3103          			JBC		DC			; Check DC = 0?
  1598 00585 507A          			JMP	INS_FAIL
  1599 00586 3203          			JBC		Z			; Check Z = 0?
  1600 00587 507A          			JMP	INS_FAIL
  1601 00588 3503          			JBC		OV			; Check OV = 0?
  1602 00589 507A          			JMP	INS_FAIL
  1603 0058A 3E03          			JBS		N			; Check N = 1?
  1604 0058B 507A          			JMP	INS_FAIL
  1605 0058C 6CFA          			XOR		A,@0xFA		; Check Result ?
  1606 0058D 3A03          			JBS		Z			; Check Z = 1?
  1607 0058E 507A          			JMP	INS_FAIL
  1608 0058F 3603          			JBC		N			; Check N = 0?
  1609 00590 507A          			JMP	INS_FAIL
  1610 00591               		INST_COM:			;-------Instruction Test => COM R
  1611 00591 6016          			MOV		A,@0x16
  1612 00592 015A          			MOV		INST,A
  1613 00593 40DE          			CALL	STATUS_CLEAR
  1614 00594 60FF          			MOV		A,@0xFF
  1615 00595 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1616 00596 1350          			COM		0x50		; [0x50] = /[0x50]
  1617 00597 1003          			MOV		A,STATUS
  1618 00598 6C1C          			XOR		A,@0x1C		; Check Status ?
  1619                     			;;XOR		A,@0x14		; Check Status ?
  1620 00599 3A03          			JBS		Z			; Check Z = 1?
  1621 0059A 507A          			JMP	INS_FAIL
  1622 0059B 3603          			JBC		N			; Check N = 0?
  1623 0059C 507A          			JMP	INS_FAIL
  1624 0059D 2203          			BC		Z
  1625 0059E 2603          			BC		N
  1626 0059F 1050          			MOV		A,0x50
  1627 005A0 6C00          			XOR		A,@0x00		; Check Result ?
  1628 005A1 3A03          			JBS		Z			; Check Z = 1?
  1629 005A2 507A          			JMP	INS_FAIL
  1630 005A3 3603          			JBC		N			; Check N = 0?
  1631 005A4 507A          			JMP	INS_FAIL
  1632 005A5 40DE          			CALL	STATUS_CLEAR
  1633 005A6 6000          			MOV		A,@0x00
  1634 005A7 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1635 005A8 1350          			COM		0x50		; [0x50] = /[0x50]
  1636 005A9 1003          			MOV		A,STATUS
  1637 005AA 6C58          			XOR		A,@0x58		; Check Status ?
  1638                     			;;XOR		A,@0x50		; Check Status ?
  1639 005AB 3A03          			JBS		Z			; Check Z = 1?
  1640 005AC 507A          			JMP	INS_FAIL
  1641 005AD 3603          			JBC		N			; Check N = 0?
  1642 005AE 507A          			JMP	INS_FAIL
  1643 005AF 2203          			BC		Z
  1644 005B0 2603          			BC		N
  1645 005B1 1050          			MOV		A,0x50
  1646 005B2 6CFF          			XOR		A,@0xFF		; Check Result ?
  1647 005B3 3A03          			JBS		Z			; Check Z = 1?
  1648 005B4 507A          			JMP	INS_FAIL
  1649 005B5 3603          			JBC		N			; Check N = 0?
  1650 005B6 507A          			JMP	INS_FAIL
  1651 005B7               		INST_OR_A_K:		;-------Instruction Test => OR A,k
  1652 005B7 6026          			MOV		A,@0x26
  1653 005B8 015A          			MOV		INST,A
  1654 005B9 40DE          			CALL	STATUS_CLEAR
  1655 005BA 60A5          			MOV		A,@0xA5
  1656 005BB 645A          			OR		A,@0x5A		; A = 0xA5 | 0x5A
  1657 005BC 6CFF          			XOR		A,@0xFF		; Check Result ?
  1658 005BD 40E1          			CALL	INST_XOR_JUDGE
  1659 005BE 0012          		RET
  1660                     
  1661 005BF               	TEST_INST_LOGIC_II:
  1662 005BF               		INST_RR_R:			;-------Instruction Test => RR R
  1663 005BF 602B          			MOV		A,@0x2B
  1664 005C0 015A          			MOV		INST,A
  1665 005C1 40DE          			CALL	STATUS_CLEAR
  1666 005C2 6055          			MOV		A,@0x55
  1667 005C3 0150          			MOV		0x50,A		; [0x50] = 0x55
  1668 005C4 6F50          			RR		0x50		; [0x50] = [0x50] >> 1
  1669 005C5 1003          			MOV		A,STATUS
  1670 005C6 6C58          			XOR		A,@0x58		; Check Status ?
  1671                     			;;XOR		A,@0x50		; Check Status ?
  1672 005C7 40E1          			CALL	INST_XOR_JUDGE
  1673 005C8 1050          			MOV		A,0x50
  1674 005C9 6CAA          			XOR		A,@0xAA		; Check Result ?
  1675 005CA 40E1          			CALL	INST_XOR_JUDGE
  1676                     
  1677 005CB               		INST_RRA_R:			;-------Instruction Test => RRA R
  1678 005CB 602A          			MOV		A,@0x2A
  1679 005CC 015A          			MOV		INST,A
  1680 005CD 40DE          			CALL 	STATUS_CLEAR
  1681 005CE 6055          			MOV		A,@0x55
  1682 005CF 0150          			MOV		0x50,A		; [0x50] = 0x55
  1683 005D0 6E50          			RRA		0x50		; A = [0x50] >> 1
  1684 005D1 3003          			JBC		C			; Check C = 0?
  1685 005D2 507A          			JMP	INS_FAIL
  1686 005D3 3103          			JBC		DC			; Check DC = 0?
  1687 005D4 507A          			JMP	INS_FAIL
  1688 005D5 3203          			JBC		Z			; Check Z = 0?
  1689 005D6 507A          			JMP	INS_FAIL
  1690 005D7 3503          			JBC		OV			; Check OV = 0?
  1691 005D8 507A          			JMP	INS_FAIL
  1692 005D9 3E03          			JBS		N			; Check N = 1?
  1693 005DA 507A          			JMP	INS_FAIL
  1694 005DB 6CAA          			XOR		A,@0xAA		; Check Result ?
  1695 005DC 40E1          			CALL	INST_XOR_JUDGE
  1696                     
  1697 005DD               		INST_RRCA_R:		;-------Instruction Test => RRCA R
  1698 005DD 601B          			MOV		A,@0x1B
  1699 005DE 015A          			MOV		INST,A
  1700 005DF 40DE          			CALL	STATUS_CLEAR
  1701 005E0 2803          			BS		C
  1702 005E1 60AA          			MOV		A,@0xAA
  1703 005E2 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1704 005E3 1850          			RRCA	0x50		; A = [0x50] >> 1
  1705 005E4 3003          			JBC		C			; Check C = 0?
  1706 005E5 507A          			JMP	INS_FAIL
  1707 005E6 3103          			JBC		DC			; Check DC = 0?
  1708 005E7 507A          			JMP	INS_FAIL
  1709 005E8 3203          			JBC		Z			; Check Z = 0?
  1710 005E9 507A          			JMP	INS_FAIL
  1711 005EA 3503          			JBC		OV			; Check OV = 0?
  1712 005EB 507A          			JMP	INS_FAIL
  1713 005EC 3E03          			JBS		N			; Check N = 1?
  1714 005ED 507A          			JMP	INS_FAIL
  1715 005EE 6CD5          			XOR		A,@0xD5		; Check Result ?
  1716 005EF 40E1          			CALL	INST_XOR_JUDGE
  1717 005F0 40DE          			CALL	STATUS_CLEAR
  1718 005F1 6055          			MOV		A,@0x55
  1719 005F2 0150          			MOV		0x50,A		; [0x50] = 0x55
  1720 005F3 1850          			RRCA	0x50		; A = [0x50] >> 1
  1721 005F4 3803          			JBS		C			; Check C = 1?
  1722 005F5 507A          			JMP	INS_FAIL
  1723 005F6 3103          			JBC		DC			; Check DC = 0?
  1724 005F7 507A          			JMP	INS_FAIL
  1725 005F8 3203          			JBC		Z			; Check Z = 0?
  1726 005F9 507A          			JMP	INS_FAIL
  1727 005FA 3503          			JBC		OV			; Check OV = 0?
  1728 005FB 507A          			JMP	INS_FAIL
  1729 005FC 3603          			JBC		N			; Check N = 0?
  1730 005FD 507A          			JMP	INS_FAIL
  1731 005FE 6C2A          			XOR		A,@0x2A		; Check Result ?
  1732 005FF 40E1          			CALL	INST_XOR_JUDGE
  1733 00600               		INST_RRC_R:			;-------Instruction Test => RRC R
  1734 00600 601C          			MOV		A,@0x1C
  1735 00601 015A          			MOV		INST,A
  1736 00602 40DE          			CALL	STATUS_CLEAR
  1737 00603 2803          			BS		C
  1738 00604 60AA          			MOV		A,@0xAA
  1739 00605 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1740 00606 2203          			BC		Z
  1741 00607 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1742 00608 1003          			MOV		A,STATUS
  1743 00609 6C58          			XOR		A,@0x58		; Check Status ?
  1744                     			;;XOR		A,@0x50		; Check Status ?
  1745 0060A 40E1          			CALL	INST_XOR_JUDGE
  1746 0060B 1050          			MOV		A,0x50
  1747 0060C 6CD5          			XOR		A,@0xD5		; Check Result ?
  1748 0060D 40E1          			CALL	INST_XOR_JUDGE
  1749 0060E 40DE          			CALL	STATUS_CLEAR
  1750 0060F 6055          			MOV		A,@0x55
  1751 00610 0150          			MOV		0x50,A		; [0x50] = 0x55
  1752 00611 2203          			BC		Z
  1753 00612 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1754 00613 1003          			MOV		A,STATUS
  1755 00614 6C19          			XOR		A,@0x19		; Check Status ?
  1756                     			;;XOR		A,@0x11		; Check Status ?
  1757 00615 3A03          			JBS		Z			; Check Z = 1?
  1758 00616 507A          			JMP	INS_FAIL
  1759 00617 3603          			JBC		N			; Check N = 0?
  1760 00618 507A          			JMP	INS_FAIL
  1761 00619 1050          			MOV		A,0x50
  1762 0061A 6C2A          			XOR		A,@0x2A		; Check Result ?
  1763 0061B 40E1          			CALL	INST_XOR_JUDGE
  1764 0061C               		INST_RLCA_R:		;-------Instruction Test => RLCA R
  1765 0061C 601D          			MOV		A,@0x1D
  1766 0061D 015A          			MOV		INST,A
  1767 0061E 40DE          			CALL STATUS_CLEAR
  1768 0061F 2803          			BS		C
  1769 00620 6055          			MOV		A,@0x55
  1770 00621 0150          			MOV		0x50,A		; [0x50] = 0x55
  1771 00622 1A50          			RLCA	0x50		; A = [0x50] << 1
  1772 00623 3003          			JBC		C			; Check C = 0?
  1773 00624 507A          			JMP	INS_FAIL
  1774 00625 3103          			JBC		DC			; Check DC = 0?
  1775 00626 507A          			JMP	INS_FAIL
  1776 00627 3203          			JBC		Z			; Check Z = 0?
  1777 00628 507A          			JMP	INS_FAIL
  1778 00629 3503          			JBC		OV			; Check OV = 0?
  1779 0062A 507A          			JMP	INS_FAIL
  1780 0062B 3E03          			JBS		N			; Check N = 1?
  1781 0062C 507A          			JMP	INS_FAIL
  1782 0062D 6CAB          			XOR		A,@0xAB		; Check Result ?
  1783 0062E 40E1          			CALL	INST_XOR_JUDGE
  1784 0062F 40DE          			CALL	STATUS_CLEAR
  1785 00630 60AA          			MOV		A,@0xAA
  1786 00631 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1787 00632 1A50          			RLCA	0x50		; A = [0x50] << 1
  1788 00633 3803          			JBS		C			; Check C = 1?
  1789 00634 507A          			JMP	INS_FAIL
  1790 00635 3103          			JBC		DC			; Check DC = 0?
  1791 00636 507A          			JMP	INS_FAIL
  1792 00637 3203          			JBC		Z			; Check Z = 0?
  1793 00638 507A          			JMP	INS_FAIL
  1794 00639 3503          			JBC		OV			; Check OV = 0?
  1795 0063A 507A          			JMP	INS_FAIL
  1796 0063B 3603          			JBC		N			; Check N = 0?
  1797 0063C 507A          			JMP	INS_FAIL
  1798 0063D 6C54          			XOR		A,@0x54		; Check Result ?
  1799 0063E 40E1          			CALL	INST_XOR_JUDGE
  1800 0063F               		INST_RLC_R:			;-------Instruction Test => RLC R
  1801 0063F 601E          			MOV		A,@0x1E
  1802 00640 015A          			MOV		INST,A
  1803 00641 40DE          			CALL	STATUS_CLEAR
  1804 00642 2803          			BS		C
  1805 00643 6055          			MOV		A,@0x55
  1806 00644 0150          			MOV		0x50,A		; [0x50] = 0x55
  1807 00645 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1808 00646 1003          			MOV		A,STATUS
  1809 00647 6C58          			XOR		A,@0x58		; Check Status ?
  1810                     			;;XOR		A,@0x50		; Check Status ?
  1811 00648 40E1          			CALL	INST_XOR_JUDGE
  1812 00649 1050          			MOV		A,0x50
  1813 0064A 6CAB          			XOR		A,@0xAB		; Check Result ?
  1814 0064B 40E1          			CALL	INST_XOR_JUDGE
  1815 0064C 40DE          			CALL	STATUS_CLEAR
  1816 0064D 60AA          			MOV		A,@0xAA
  1817 0064E 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1818 0064F 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1819 00650 1003          			MOV		A,STATUS
  1820 00651 6C19          			XOR		A,@0x19		; Check Status ?
  1821                     			;;XOR		A,@0x11		; Check Status ?
  1822 00652 40E1          			CALL	INST_XOR_JUDGE
  1823 00653 1050          			MOV		A,0x50
  1824 00654 6C54          			XOR		A,@0x54		; Check Result ?
  1825 00655 40E1          			CALL	INST_XOR_JUDGE
  1826                     
  1827 00656               		INST_RLA_A:			;-------Instruction Test => RLA R
  1828 00656 602E          			MOV		A,@0x2E
  1829 00657 015A          			MOV		INST,A
  1830 00658 40DE          			CALL	STATUS_CLEAR
  1831 00659 605A          			MOV		A,@0x5A
  1832 0065A 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1833 0065B 7250          			RLA		0x50		; A = [0x50] << 1
  1834 0065C 3003          			JBC		C			; Check C = 0?
  1835 0065D 507A          			JMP	INS_FAIL
  1836 0065E 3103          			JBC		DC			; Check DC = 0?
  1837 0065F 507A          			JMP	INS_FAIL
  1838 00660 3203          			JBC		Z			; Check Z = 0?
  1839 00661 507A          			JMP	INS_FAIL
  1840 00662 3503          			JBC		OV			; Check OV = 0?
  1841 00663 507A          			JMP	INS_FAIL
  1842 00664 3E03          			JBS		N			; Check N = 1?
  1843 00665 507A          			JMP	INS_FAIL
  1844 00666 6CB4          			XOR		A,@0xB4		; Check Result ?
  1845 00667 40E1          			CALL	INST_XOR_JUDGE
  1846                     
  1847 00668               		INST_RL_R:			;-------Instruction Test => RL R
  1848 00668 602F          			MOV		A,@0x2F
  1849 00669 015A          			MOV		INST,A
  1850 0066A 40DE          			CALL	STATUS_CLEAR
  1851 0066B 605A          			MOV		A,@0x5A
  1852 0066C 0150          			MOV		0x50,A		; [0x50] = 0xA5
  1853 0066D 7350          			RL		0x50		; [0x50] = [0x50] << 1
  1854 0066E 1003          			MOV		A,STATUS
  1855 0066F 6C58          			XOR		A,@0x58		; Check Status ?
  1856                     			;;XOR		A,@0x50		; Check Status ?
  1857 00670 3A03          			JBS		Z			; Check Z = 1?
  1858 00671 507A          			JMP	INS_FAIL
  1859 00672 3603          			JBC		N			; Check N = 0?
  1860 00673 507A          			JMP	INS_FAIL
  1861 00674 1050          			MOV		A,0x50
  1862 00675 6CB4          			XOR		A,@0xB4		; Check Result ?
  1863 00676 40E1          			CALL	INST_XOR_JUDGE
  1864 00677               		INST_XCH:			;-------Instruction Test => XCH R
  1865 00677 602D          			MOV		A,@0x2D
  1866 00678 015A          			MOV		INST,A
  1867 00679 40DE          			CALL	STATUS_CLEAR
  1868 0067A 6055          			MOV		A,@0x55
  1869 0067B 0150          			MOV		0x50,A		; [0x50] = 0x55
  1870 0067C 60AA          			MOV		A,@0xAA
  1871 0067D 7150          			XCH		0x50		; [0x50] <-> A
  1872 0067E 6C55          			XOR		A,@0x55		; Check Result ?
  1873 0067F 3A03          			JBS		Z			; Check Z = 1?
  1874 00680 507A          			JMP	INS_FAIL
  1875 00681 3603          			JBC		N			; Check N = 0?
  1876 00682 507A          			JMP	INS_FAIL
  1877 00683 1050          			MOV		A,0x50
  1878 00684 6CAA          			XOR		A,@0xAA		; Check Result ?
  1879 00685 40E1          			CALL	INST_XOR_JUDGE
  1880 00686 0012          		RET
  1881 00687               	TEST_INST_TRANSFER:
  1882 00687               		INST_MOV_R_A:		;-------Instruction Test => MOV R,A
  1883 00687 6007          			MOV		A,@0x07
  1884 00688 015A          			MOV		INST,A
  1885 00689 40DE          			CALL	STATUS_CLEAR
  1886 0068A 60FF          			MOV		A,@0xFF
  1887 0068B 0150          			MOV		0x50,A
  1888 0068C 1003          			MOV		A,STATUS
  1889 0068D 6C18          			XOR		A,@0x18		;At  OCDS
  1890                     			;XOR		A,@0x98		; Check Status ? ;; For not reset
  1891                     			;;XOR		A,@0x10		; Check Status ?
  1892 0068E 40E1          			CALL	INST_XOR_JUDGE
  1893 0068F 1050          			MOV		A,0x50
  1894 00690 6CFF          			XOR		A,@0xFF		; Check Result ?
  1895 00691 40E1          			CALL	INST_XOR_JUDGE
  1896 00692               		INST_MOV_R_R:		;-------Instruction Test => MOV R,R
  1897 00692 6014          			MOV		A,@0x14
  1898 00693 015A          			MOV		INST,A
  1899 00694 40DE          			CALL	STATUS_CLEAR
  1900 00695 6000          			MOV		A,@0x00
  1901 00696 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1902 00697 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1903 00698 1003          			MOV		A,STATUS
  1904 00699 6C1C          			XOR		A,@0x1C		; Check Status ?
  1905                     			;;XOR		A,@0x14		; Check Status ?
  1906 0069A 3A03          			JBS		Z			; Check Z = 1?
  1907 0069B 507A          			JMP	INS_FAIL
  1908 0069C 3603          			JBC		N			; Check N = 0?
  1909 0069D 507A          			JMP	INS_FAIL
  1910 0069E 1050          			MOV		A,0x50
  1911 0069F 2203          			BC		Z
  1912 006A0 6C00          			XOR		A,@0x00		; Check Result ?
  1913 006A1 3A03          			JBS		Z			; Check Z = 1?
  1914 006A2 507A          			JMP	INS_FAIL
  1915 006A3 3603          			JBC		N			; Check N = 0?
  1916 006A4 507A          			JMP	INS_FAIL
  1917 006A5 40DE          			CALL	STATUS_CLEAR
  1918 006A6 6000          			MOV		A,@0x00
  1919 006A7 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1920 006A8 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1921 006A9 2850          			BS		0x50,0
  1922 006AA 1050          			MOV		A,0x50
  1923 006AB 6C01          			XOR		A,@0x01		; Check Result ?
  1924 006AC 40E1          			CALL	INST_XOR_JUDGE
  1925                     
  1926 006AD               		INST_SWAPA_R:		;-------Instruction Test => SWAPA R
  1927 006AD 601F          			MOV		A,@0x1F
  1928 006AE 015A          			MOV		INST,A
  1929 006AF 40DE          			CALL	STATUS_CLEAR
  1930 006B0 605A          			MOV		A,@0x5A
  1931 006B1 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1932 006B2 1C50          			SWAPA	0x50
  1933 006B3 6CA5          			XOR		A,@0xA5		; Check Result ?
  1934 006B4 40E1          			CALL	INST_XOR_JUDGE
  1935 006B5               		INST_SWAP_R:		;-------Instruction Test => SWAP R
  1936 006B5 6020          			MOV		A,@0x20
  1937 006B6 015A          			MOV		INST,A
  1938 006B7 40DE          			CALL	STATUS_CLEAR
  1939 006B8 605A          			MOV		A,@0x5A
  1940 006B9 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1941 006BA 1D50          			SWAP	0x50
  1942 006BB 1050          			MOV		A,0x50
  1943 006BC 6CA5          			XOR		A,@0xA5		; Check Result ?
  1944 006BD 40E1          			CALL	INST_XOR_JUDGE
  1945 006BE 0012          		RET
  1946                     
  1947 006BF               	TEST_INST_MANIPULATION:
  1948 006BF 0012          		RET
  1949                     
  1950 006C0               	TEST_INST_BRANCH_I:
  1951 006C0               		INST_DJZ_R:			;------- Instruction Test => DJZ R
  1952 006C0 601A          			MOV		A,@0x1A
  1953 006C1 015A          			MOV		INST,A
  1954 006C2 40DE          			CALL	STATUS_CLEAR
  1955 006C3 6001          			MOV		A,@0x01
  1956 006C4 0150          			MOV		0x50,A		; [0x50] = 0x01
  1957 006C5 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1958 006C6 507A          			JMP		INS_FAIL
  1959 006C7 1050          			MOV		A,0x50
  1960 006C8 6C00          			XOR		A,@0x00		; Check Result ?
  1961 006C9 40E1          			CALL	INST_XOR_JUDGE	
  1962 006CA 40DE          			CALL	STATUS_CLEAR
  1963 006CB 6002          			MOV		A,@0x02
  1964 006CC 0150          			MOV		0x50,A		; [0x50] = 0x02
  1965 006CD 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1966 006CE 56D0          			JMP		$+2
  1967 006CF 507A          			JMP		INS_FAIL
  1968 006D0               		INST_DJZA_R:		;------- Instruction Test => DJZA R
  1969 006D0 6019          			MOV		A,@0x19
  1970 006D1 015A          			MOV		INST,A
  1971 006D2 40DE          			CALL	STATUS_CLEAR
  1972 006D3 6001          			MOV		A,@0x01
  1973 006D4 0150          			MOV		0x50,A		; [0x50] = 0x01
  1974 006D5 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1975 006D6 507A          			JMP	INS_FAIL
  1976 006D7 6C00          			XOR		A,@0x00		; Check Result ?
  1977 006D8 40E1          			CALL	INST_XOR_JUDGE
  1978 006D9 40DE          			CALL	STATUS_CLEAR
  1979 006DA 6002          			MOV		A,@0x02
  1980 006DB 0150          			MOV		0x50,A		; [0x50] = 0x02
  1981 006DC 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1982 006DD 56DF          			JMP		$+2
  1983 006DE 507A          			JMP	INS_FAIL
  1984 006DF               		INST_JZA_R:			;-------Instruction Test => JZA R
  1985 006DF 6021          			MOV		A,@0x21
  1986 006E0 015A          			MOV		INST,A
  1987 006E1 40DE          			CALL	STATUS_CLEAR
  1988 006E2 60FF          			MOV		A,@0xFF
  1989 006E3 0150          			MOV		0x50,A
  1990 006E4 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1991 006E5 507A          			JMP		INS_FAIL
  1992 006E6 6C00          			XOR		A,@0x00		; Check Result ?
  1993 006E7 40E1          			CALL	INST_XOR_JUDGE
  1994 006E8 40DE          			CALL	STATUS_CLEAR
  1995 006E9 6080          			MOV		A,@0x80
  1996 006EA 0150          			MOV		0x50,A
  1997 006EB 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1998 006EC 56EE          			JMP		$+2
  1999 006ED 507A          			JMP		INS_FAIL
  2000 006EE               		INST_JZ_R:			;-------Instruction Test => JZ R
  2001 006EE 6022          			MOV		A,@0x22
  2002 006EF 015A          			MOV		INST,A
  2003 006F0 40DE          			CALL	STATUS_CLEAR
  2004 006F1 60FF          			MOV		A,@0xFF
  2005 006F2 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2006 006F3 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  2007 006F4 507A          			JMP		INS_FAIL
  2008 006F5 1050          			MOV		A,0x50
  2009 006F6 6C00          			XOR		A,@0x00		; Check Result ?
  2010 006F7 40E1          			CALL	INST_XOR_JUDGE
  2011 006F8 40DE          			CALL	STATUS_CLEAR
  2012 006F9 6080          			MOV		A,@0x80
  2013 006FA 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2014 006FB 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  2015 006FC 56FE          			JMP		$+2
  2016 006FD 507A          			JMP		INS_FAIL
  2017 006FE 0012          		RET
  2018 006FF               	TEST_INST_BRANCH_II:
  2019 006FF               		INST_JE_R:			;-------Instruction Test => JE R
  2020 006FF 6023          			MOV		A,@0x23
  2021 00700 015A          			MOV		INST,A
  2022 00701 40DE          			CALL	STATUS_CLEAR
  2023 00702 605A          			MOV		A,@0x5A
  2024 00703 0150          			MOV		0x50,A		; [0x50] = 0x5A
  2025 00704 6150          			JE		0x50		; [0x50] = A?
  2026 00705 507A          			JMP		INS_FAIL
  2027 00706 605B          			MOV		A,@0x5B
  2028 00707 0150          			MOV		0x50,A		; [0x50] = 0x5B
  2029 00708 605C          			MOV		A,@0x5C
  2030 00709 6150          			JE		0x50		; [0x50] = A(0x5C)?
  2031 0070A 570C          			JMP		$+2
  2032 0070B 507A          			JMP		INS_FAIL
  2033 0070C               		INST_JGE_R:			;-------Instruction Test => JGE R
  2034 0070C 6024          			MOV		A,@0x24
  2035 0070D 015A          			MOV		INST,A
  2036 0070E 40DE          			CALL	STATUS_CLEAR
  2037 0070F 607F          			MOV		A,@0x7F
  2038 00710 0150          			MOV		0x50,A		; [0x50] = 0x7F
  2039 00711 6000          			MOV		A,@0x00
  2040 00712 6250          			JGE		0x50		; [0x50] > A ?
  2041 00713 507A          			JMP		INS_FAIL
  2042 00714 40DE          			CALL	STATUS_CLEAR
  2043 00715 60FF          			MOV		A,@0xFF
  2044 00716 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2045 00717 6080          			MOV		A,@0x80
  2046 00718 6250          			JGE		0x50		; [0x50] > A ?
  2047 00719 507A          			JMP		INS_FAIL
  2048 0071A 40DE          			CALL	STATUS_CLEAR
  2049 0071B 6000          			MOV		A,@0x00
  2050 0071C 0150          			MOV		0x50,A		; [0x50] = 0x00
  2051 0071D 60FF          			MOV		A,@0xFF
  2052 0071E 6250          			JGE		0x50		; [0x50] > A(0xFF) ?x
  2053 0071F 5721          			JMP		$+2
  2054 00720 507A          			JMP		INS_FAIL
  2055                     
  2056 00721               		INST_JLE_R:			;-------Instruction Test => JLE R
  2057 00721 6025          			MOV		A,@0x25
  2058 00722 015A          			MOV		INST,A
  2059 00723 40DE          			CALL	STATUS_CLEAR
  2060 00724 6000          			MOV		A,@0x00
  2061 00725 0150          			MOV		0x50,A		; [0x50] = 0x00
  2062 00726 607F          			MOV		A,@0x7F
  2063 00727 6350          			JLE		0x50		; [0x50] < A ?
  2064 00728 507A          			JMP		INS_FAIL
  2065 00729 6000          			MOV		A,@0x00
  2066 0072A 0103          			MOV		STATUS,A
  2067 0072B 6080          			MOV		A,@0x80
  2068 0072C 0150          			MOV		0x50,A		; [0x50] = 0x80
  2069 0072D 60FF          			MOV		A,@0xFF
  2070 0072E 6350          			JLE		0x50		; [0x50] < A ?
  2071 0072F 507A          			JMP		INS_FAIL
  2072 00730 40DE          			CALL	STATUS_CLEAR
  2073 00731 60FF          			MOV		A,@0xFF
  2074 00732 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2075 00733 6000          			MOV		A,@0x00
  2076 00734 6350          			JLE		0x50		; [0x50] < A(0x00) ?x
  2077 00735 5737          			JMP		$+2
  2078 00736 507A          			JMP		INS_FAIL
  2079 00737               		INST_JE_K:			;-------Instruction Test => JE k
  2080 00737 6027          			MOV		A,@0x27
  2081 00738 015A          			MOV		INST,A
  2082 00739 40DE          			CALL	STATUS_CLEAR
  2083 0073A 607F          			MOV		A,@0x7F
  2084 0073B 657F          			JE		@0x7F
  2085 0073C 507A          			JMP	INS_FAIL
  2086 0073D 0012          		RET
  2087 0073E               	TEST_INST_BRANCH_III:
  2088 0073E               		INST_CALL_K:		;-------Instruction Test => CALL k
  2089 0073E 6002          			MOV	A,@0x02
  2090 0073F 015A          			MOV	INST,A
  2091 00740 40DE          			CALL	STATUS_CLEAR
  2092 00741 6003          			MOV		A,@0x03
  2093 00742 0150          			MOV		0x50,A
  2094 00743 47E4          			CALL	CALL_Test
  2095 00744 1050          			MOV		A,0x50
  2096 00745 6C04          			XOR		A,@0x04
  2097 00746 40E1          			CALL	INST_XOR_JUDGE
  2098                     
  2099 00747               		INST_LCALL_K:		;-------Instruction Test => LCALL k
  2100 00747 6003          			MOV		A,@0x03
  2101 00748 015A          			MOV		INST,A
  2102 00749 40DE          			CALL	STATUS_CLEAR
  2103 0074A 6003          			MOV		A,@0x03
  2104 0074B 0151          			MOV		0x51,A
  2105 0074C 7A80          			LCALL	LCALL_Test
  2105 0074D 0FFE          			LCALL	LCALL_Test
***     Warning A053: The target address of 'lcall' or 'ljmp' instruction is not over page (4K).
  2106 0074E 1051          			MOV		A,0x51
  2107 0074F 6C04          			XOR		A,@0x04		; Check Result ?
  2108 00750 40E1          			CALL	INST_XOR_JUDGE
  2109                     
  2110 00751               		INST_RETL_K:		;-------Instruction Test => RETL k
  2111 00751 602C          			MOV		A,@0x2C
  2112 00752 015A          			MOV		INST,A
  2113 00753 40DE          			CALL	STATUS_CLEAR
  2114 00754 6000          			MOV		A,@0x00
  2115 00755 4EF0          			CALL	INST_RETL_TABLE
  2116 00756 6CA1          			XOR		A,@0xA1
  2117 00757 40E1          			CALL	INST_XOR_JUDGE
  2118 00758 6001          			MOV		A,@0x01
  2119 00759 4EF0          			CALL	INST_RETL_TABLE
  2120 0075A 6CA2          			XOR		A,@0xA2
  2121 0075B 40E1          			CALL	INST_XOR_JUDGE
  2122 0075C 6002          			MOV		A,@0x02
  2123 0075D 4EF0          			CALL	INST_RETL_TABLE
  2124 0075E 6CA4          			XOR		A,@0xA4
  2125 0075F 40E1          			CALL	INST_XOR_JUDGE
  2126 00760 6003          			MOV		A,@0x03
  2127 00761 4EF0          			CALL	INST_RETL_TABLE
  2128 00762 6CA8          			XOR		A,@0xA8
  2129 00763 40E1          			CALL	INST_XOR_JUDGE
  2130 00764 0012          		RET
  2131 00765               	TEST_INST_CONTROL:
  2132 00765               		INST_ENI:			;-------Instruction Test => ENI , IT?
  2133 00765 6004          			MOV		A,@0x04
  2134 00766 015A          			MOV		INST,A
  2135 00767 0010          			ENI
  2136 00768 3F03          			JBS		IT		; Check IT = 1?
  2137 00769 507A          			JMP	INS_FAIL
  2138 0076A               		INST_DISI:			;-------Instruction Test => DISI , IT?
  2139 0076A 6005          			MOV		A,@0x05
  2140 0076B 015A          			MOV		INST,A
  2141 0076C 0011          			DISI
  2142 0076D 3703          			JBC		IT		; Check IT = 0?
  2143 0076E 507A          			JMP	INS_FAIL
  2144 0076F 0012          		RET
  2145                     
  2146 00770               	TEST_SHORT_BRANCH:
  2147                     		;ORG	0x800
  2148 00770 40DE          		CALL	STATUS_CLEAR
  2149 00771 2803          		BS	C
  2150 00772 6903          		SJC		@0x03
  2151 00773 506E          		JMP		JMP_FAIL
  2152 00774 506E          		JMP		JMP_FAIL
  2153 00775 506E          		JMP		JMP_FAIL
  2154 00776 2003          		BC	C
  2155 00777 6A03          		SJNC	bbb		;@0x03
  2156 00778 506E          		JMP		JMP_FAIL
  2157 00779 506E          		JMP		JMP_FAIL
  2158 0077A 506E          		JMP		JMP_FAIL
  2159 0077B               		bbb:		
  2160 0077B 2A03          			BS		Z
  2161 0077C 6B03          			SJZ		@0x03
  2162 0077D 506E          			JMP		JMP_FAIL
  2163 0077E 506E          			JMP		JMP_FAIL
  2164 0077F 506E          			JMP		JMP_FAIL
  2165 00780 0200          			CLRA
  2166 00781 6B03          			SJZ		@0x03
  2167 00782 506E          			JMP		JMP_FAIL
  2168 00783 506E          			JMP		JMP_FAIL
  2169 00784 506E          			JMP		JMP_FAIL
  2170 00785 578D          		JMP		IATEST1		;JMP back Test as below
  2171 00786               		aaa:	
  2172 00786 579A          			JMP	IATEST2		; -9
  2173 00787 506E          			JMP	JMP_FAIL	; -8
  2174 00788 506E          			JMP	JMP_FAIL	; -7
  2175 00789 506E          			JMP	JMP_FAIL	; -6
  2176 0078A 506E          			JMP	JMP_FAIL	; -5
  2177 0078B 506E          			JMP	JMP_FAIL	; -4
  2178 0078C 506E          			JMP	JMP_FAIL	; -3
  2179 0078D               		IATEST1:	
  2180 0078D 2803          			BS		C		; -2
  2181 0078E 69F7          			SJC		aaa		; -1
  2182 0078F 69F7          			SJC		@0xF7	; -1
  2183 00790 506E          			JMP		JMP_FAIL
  2184 00791 506E          			JMP		JMP_FAIL
  2185 00792 506E          			JMP		JMP_FAIL
  2186 00793 57A6          			JMP		IATEST3		; -9
  2187 00794 506E          			JMP		JMP_FAIL	; -8
  2188 00795 506E          			JMP		JMP_FAIL	; -7
  2189 00796 506E          			JMP		JMP_FAIL	; -6
  2190 00797 506E          			JMP		JMP_FAIL	; -5
  2191 00798 506E          			JMP		JMP_FAIL	; -4
  2192 00799 506E          			JMP		JMP_FAIL	; -3
  2193 0079A               		IATEST2:	
  2194 0079A 2003          			BC		C		; -2
  2195 0079B 6AF7          			SJNC		@0xF7	; -1
  2196 0079C 57B7          			JMP		_IPass
  2197 0079D 57B7          			JMP		_IPass
  2198 0079E 57B7          			JMP		_IPass
  2199 0079F 57B2          			JMP		IATEST4		; -9
  2200 007A0 506E          			JMP		JMP_FAIL	; -8
  2201 007A1 506E          			JMP		JMP_FAIL	; -7
  2202 007A2 506E          			JMP		JMP_FAIL	; -6
  2203 007A3 506E          			JMP		JMP_FAIL	; -5
  2204 007A4 506E          			JMP		JMP_FAIL	; -4
  2205 007A5 506E          			JMP		JMP_FAIL	; -3
  2206 007A6               		IATEST3:	
  2207 007A6 2A03          			BS		Z		; -2
  2208 007A7 6BF7          			SJZ		@0xF7	; -1
  2209 007A8 506E          			JMP		JMP_FAIL
  2210 007A9 506E          			JMP		JMP_FAIL
  2211 007AA 506E          			JMP		JMP_FAIL
  2212                     
  2213 007AB 57B7          			JMP		_IPass		; -9
  2214 007AC 506E          			JMP		JMP_FAIL	; -8
  2215 007AD 506E          			JMP		JMP_FAIL	; -7
  2216 007AE 506E          			JMP		JMP_FAIL	; -6
  2217 007AF 506E          			JMP		JMP_FAIL	; -5
  2218 007B0 506E          			JMP		JMP_FAIL	; -4
  2219 007B1 506E          			JMP		JMP_FAIL	; -3
  2220 007B2               		IATEST4:	
  2221 007B2 2203          			BC		Z		; -2
  2222 007B3 6DF7          			SJNZ	@0xF7	; -1
  2223 007B4 506E          			JMP		JMP_FAIL
  2224 007B5 506E          			JMP		JMP_FAIL
  2225 007B6 506E          			JMP		JMP_FAIL
  2226 007B7               		_IPass:
  2227 007B7 0000          				NOP
  2228 007B8 0012          		RET
  2229                     
  2230 007B9               	TEST_READ_ROM:
  2231 007B9               		INST_TBLRD_R:
  2232 007B9 6028          			MOV		A,@0x28
  2233 007BA 015A          			MOV		INST,A
  2234 007BB 7A01          			SBANK	1
  2235 007BC 60F1          			MOV		A,@0xF1		;ADDR(0x0EF1)
  2236 007BD 0145          			MOV		TBPTL,A
  2237 007BE 600E          			MOV		A,@0x0E
  2238 007BF 0146          			MOV		TBPTH,A
  2239 007C0 7A00          			SBANK	0
  2240 007C1 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2241 007C2 6CA1          			XOR		A,@0xA1
  2242 007C3 40E1          			CALL	INST_XOR_JUDGE
  2243 007C4 1050          			MOV		A,0x50
  2244 007C5 6C70          			XOR		A,@0x70
  2245 007C6 40E1          			CALL	INST_XOR_JUDGE
  2246                     
  2247 007C7 7A01          			SBANK	1
  2248                     			;MOV		A,@0xF1		;ADDR(0x0EF1)
  2249                     			;MOV		TBPTL,A
  2250                     			;MOV		A,@0x0E
  2251                     			;MOV		TBPTH,A
  2252 007C8 1545          			INC		TBPTL		;ADDR(0x0EF2)
  2253 007C9 7A00          			SBANK	0
  2254 007CA 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2255 007CB 6CA2          			XOR		A,@0xA2
  2256 007CC 40E1          			CALL	INST_XOR_JUDGE
  2257 007CD 1050          			MOV		A,0x50
  2258 007CE 6C70          			XOR		A,@0x70
  2259 007CF 40E1          			CALL	INST_XOR_JUDGE
  2260 007D0               		INST_TBRD_R:		;-------Instruction Test => TBRD R
  2261 007D0 6033          			MOV		A,@0x33
  2262 007D1 015A          			MOV		INST,A
  2263 007D2 7A01          			SBANK	1
  2264 007D3 60F3          			MOV		A,@0xF3		;ADDR(0x0EF3)
  2265 007D4 0145          			MOV		TBPTL,A
  2266 007D5 600E          			MOV		A,@0x0E
  2267 007D6 0146          			MOV		TBPTH,A
  2268 007D7 7A00          			SBANK	0
  2269 007D8 7B50          			TBRD	0x50
  2270 007D9 1050          			MOV		A,0x50
  2271 007DA 6CA4          			XOR		A,@0xA4
  2272 007DB 40E1          			CALL	INST_XOR_JUDGE
  2273                     
  2274 007DC 7A01          			SBANK	1
  2275                     			;MOV		A,@0xF3
  2276                     			;MOV		TBPTL,A
  2277                     			;MOV		A,@0x0E
  2278                     			;MOV		TBPTH,A
  2279 007DD 1545          			INC		TBPTL		;ADDR(0x0EF4)
  2280 007DE 7A00          			SBANK	0
  2281 007DF 7B50          			TBRD	0x50
  2282 007E0 1050          			MOV		A,0x50
  2283 007E1 6CA8          			XOR		A,@0xA8
  2284 007E2 40E1          			CALL	INST_XOR_JUDGE
  2285 007E3 0012          		RET
  2286                     
  2287                     
  2288 007E4               	CALL_Test:
  2289 007E4 1550          		INC		0x50
  2290 007E5 0012          		RET
  2291                     ORG	0x800 ; ADDR(2048)
  2292 00800 506E          	JMP		JMP_FAIL
  2293 00801 506E          	JMP		JMP_FAIL
  2294 00802 506E          	JMP		JMP_FAIL
  2295                     ;================== EEPROM Test Routine =====================
  2296                     
  2297                     
  2298                     ;================== Return Table ============================
  2299                     ORG	0x0EF0	; ADDR(3824)
  2300 00EF0               	INST_RETL_TABLE:
  2301 00EF0 0F02          		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
  2302 00EF1 70A1          		RETL	@0xA1
  2303 00EF2 70A2          		RETL	@0xA2
  2304 00EF3 70A4          		RETL	@0xA4
  2305 00EF4 70A8          		RETL	@0xA8
  2306 00EF5 701A          		RETL	@0x1A
  2307 00EF6 702A          		RETL	@0x2A
  2308 00EF7 704A          		RETL	@0x4A
  2309 00EF8 708A          		RETL	@0x8A
  2310                     
  2311                     ;================== RAM Test Routine ========================
  2312                     ORG	0x0F00	; ADDR(3840)
  2313 00F00               	TEST_RAM_BANK_0_5:
  2314 00F00 6080          		MOV		A,@0x80		; Write Start SRAM(0x55)
  2315 00F01 0104          		MOV		RSR,A
  2316 00F02 7A40          		GBANK	0
  2317 00F03 6055          		MOV		A,@0x55
  2318 00F04 0100          		MOV		IAR,A
  2319 00F05 1504          		INC		RSR
  2320 00F06 6000          		MOV		A,@0x00
  2321 00F07 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2322 00F08 3A03          		JBS		Z
  2323 00F09 5F03          		JMP		$-6
  2324 00F0A 6080          		MOV		A,@0x80		; Read Start SRAM(0x55)
  2325 00F0B 0104          		MOV		RSR,A
  2326 00F0C 7A40          		GBANK	0
  2327 00F0D 6055          		MOV		A,@0x55
  2328 00F0E 0D00          		XOR		IAR,A
  2329 00F0F 3A03          		JBS		Z
  2330 00F10 5074          		JMP		RAM_FAIL
  2331 00F11 1504          		INC		RSR
  2332 00F12 6000          		MOV		A,@0x00
  2333 00F13 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2334 00F14 3A03          		JBS		Z
  2335 00F15 5F0D          		JMP		$-8
  2336 00F16 0012          		RET
  2337 00F17               	TEST_RAM_BANK_0_A:
  2338 00F17 6080          		MOV		A,@0x80		; Write Start SRAM(0xAA)
  2339 00F18 0104          		MOV		RSR,A
  2340 00F19 7A40          		GBANK	0
  2341 00F1A 60AA          		MOV		A,@0xAA		; SRAM(0xAA)
  2342 00F1B 0100          		MOV		IAR,A
  2343 00F1C 1504          		INC		RSR
  2344 00F1D 6000          		MOV		A,@0x00
  2345 00F1E 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2346 00F1F 3A03          		JBS		Z
  2347 00F20 5F1A          		JMP		$-6
  2348 00F21 6080          		MOV		A,@0x80
  2349 00F22 0104          		MOV		RSR,A
  2350 00F23 7A40          		GBANK	0
  2351 00F24 60AA          		MOV		A,@0xAA
  2352 00F25 0D00          		XOR		IAR,A
  2353 00F26 3A03          		JBS		Z
  2354 00F27 5074          		JMP		RAM_FAIL
  2355 00F28 1504          		INC		RSR
  2356 00F29 6000          		MOV		A,@0x00
  2357 00F2A 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2358 00F2B 3A03          		JBS		Z
  2359 00F2C 5F24          		JMP		$-8
  2360 00F2D 0012          		RET
  2361 00F2E               	TEST_RAM_BANK_1_3:
  2362 00F2E 6080          		MOV		A,@0x80		; Write Start SRAM(0x33)
  2363 00F2F 0104          		MOV		RSR,A
  2364 00F30 7A41          		GBANK	1
  2365 00F31 6033          		MOV		A,@0x33		; SRAM(0x33)
  2366 00F32 0100          		MOV		IAR,A
  2367 00F33 1504          		INC		RSR
  2368 00F34 6000          		MOV		A,@0x00
  2369 00F35 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2370 00F36 3A03          		JBS		Z
  2371 00F37 5F31          		JMP		$-6
  2372 00F38 6080          		MOV		A,@0x80
  2373 00F39 0104          		MOV		RSR,A
  2374 00F3A 7A41          		GBANK	1
  2375 00F3B 6033          		MOV		A,@0x33
  2376 00F3C 0D00          		XOR		IAR,A
  2377 00F3D 3A03          		JBS		Z
  2378 00F3E 5074          		JMP		RAM_FAIL
  2379 00F3F 1504          		INC		RSR
  2380 00F40 6000          		MOV		A,@0x00
  2381 00F41 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2382 00F42 3A03          		JBS		Z
  2383 00F43 5F3B          		JMP		$-8
  2384 00F44 0012          		RET
  2385 00F45               	TEST_RAM_BANK_1_C:
  2386 00F45 6080          		MOV		A,@0x80		; Write Start SRAM(0xCC)
  2387 00F46 0104          		MOV		RSR,A
  2388 00F47 7A41          		GBANK	1
  2389 00F48 60CC          		MOV		A,@0xCC		; SRAM(0xCC)
  2390 00F49 0100          		MOV		IAR,A
  2391 00F4A 1504          		INC		RSR
  2392 00F4B 6000          		MOV		A,@0x00
  2393 00F4C 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2394 00F4D 3A03          		JBS		Z
  2395 00F4E 5F48          		JMP		$-6
  2396 00F4F 6080          		MOV		A,@0x80
  2397 00F50 0104          		MOV		RSR,A
  2398 00F51 7A41          		GBANK	1
  2399 00F52 60CC          		MOV		A,@0xCC
  2400 00F53 0D00          		XOR		IAR,A
  2401 00F54 3A03          		JBS		Z
  2402 00F55 5074          		JMP		RAM_FAIL
  2403 00F56 1504          		INC		RSR
  2404 00F57 6000          		MOV		A,@0x00
  2405 00F58 0C04          		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
  2406 00F59 3A03          		JBS		Z
  2407 00F5A 5F52          		JMP		$-8
  2408 00F5B 0012          		RET
  2409                     
  2410                     ;================== Long Sub Routine ========================
  2411                     ORG	0x0FFE	; >4K
  2412 00FFE               	LCALL_Test:
  2413 00FFE 1551          		INC		0x51
  2414 00FFF 0012          		RET
  0 Error(s), 1 Warning(s), 0 User Message(s)