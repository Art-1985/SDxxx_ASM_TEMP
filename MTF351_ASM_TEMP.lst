     1                     ;============================================================
     2                     ;	Project:		MTF351_ASM_TEMP
     3                     ;	FILE:			MTF351_ASM_TEMP.asm
     4                     ;  	Target:  		MTF351
     5                     ;	Author:			Arthur (Lu Hungche)
     6                     ;	Date:			2020/03/11
     7                     ;------------------------------------------------------------
     8                     ;	Description:	For MTF351 Instruction and EFT Verify
     9                     ;	Active-Low: P50(Red-PWR)、P51(Yel-PUSH)、
    10                     ;					
    11                     ;------------------------------------------------------------
    12                     ; History:
    13                     ; Ver  | dd-mmm-yyyy |  Who  | Description of changes
    14                     ; =====|=============|=======|===============================
    15                     ;  0.1 | 11 Mat 2020 |Arthur | Original Release.
    16                     ; -----|-------------|-------|-------------------------------
    17                     ;  0.2 |
    18                     ; -----|-------------|-------|-------------------------------
    19                     ;============================================================
    20                     
    21                     ;==================== Project Include ====================
    22                     Include	"MTF351.INC"
     1            C        ;======================================================;
     2            C        ;  Title:       EM88F758N Include File                 ;
     3            C        ;  Description: The Definition of EM88F758N Registers  ;
     4            C        ;  Company:     ELAN MICROELECTRONICS LTD.	       	   ;
     5            C        ;  Date:        2014/12/03                             ;
     6            C        ;======================================================;
     7            C        
     8            C        ;======================================================;
     9            C        ; Operational Registers Define                         ;
    10            C        ;======================================================;
    11            C        ;======================================================;
    12            C        ; Registers R0~R4                                      ;
    13            C        ;======================================================;
    14            C        ; IAR: Indirect Address Register
    15       2000 C        IAR     ==    0x00:rpage 0
    15 00000 0010 C        IAR     ==    0x00:rpage 0
    16            C        
    17            C        ; BSR: Bank Selection Control Register
    18       2001 C        BSR     ==    0x01:rpage 0
    18 00000 0010 C        BSR     ==    0x01:rpage 0
    19       2001 C        	SBS1	==	BSR.5
    19 00000 0540 C        	SBS1	==	BSR.5
    20       2001 C        	SBS0	==	BSR.4
    20 00000 0440 C        	SBS0	==	BSR.4
    21       2001 C        	GBS0	==	BSR.0
    21 00000 0040 C        	GBS0	==	BSR.0
    22            C        
    23            C        ; PC: Program Counter Low
    24       2002 C        PCL      ==    0x02:rpage 0
    24 00000 0010 C        PCL      ==    0x02:rpage 0
    25            C        
    26            C        ; PSR: Process Status Register
    27       2003 C        STATUS  ==    0x03:rpage 0
    27 00000 0010 C        STATUS  ==    0x03:rpage 0
    28       2003 C        	IT	==  STATUS.7    ; Interrupt mask bit
    28 00000 0740 C        	IT	==  STATUS.7    ; Interrupt mask bit
    29       2003 C        	N       ==  STATUS.6    ; Negative bit
    29 00000 0640 C        	N       ==  STATUS.6    ; Negative bit
    30       2003 C        	OV      ==  STATUS.5    ; Overflow bit
    30 00000 0540 C        	OV      ==  STATUS.5    ; Overflow bit
    31       2003 C        	T       ==  STATUS.4    ; Time-out bit
    31 00000 0440 C        	T       ==  STATUS.4    ; Time-out bit
    32       2003 C        	P       ==  STATUS.3    ; Power-down bit
    32 00000 0340 C        	P       ==  STATUS.3    ; Power-down bit
    33       2003 C        	Z       ==  STATUS.2    ; Zero flag
    33 00000 0240 C        	Z       ==  STATUS.2    ; Zero flag
    34       2003 C        	DC      ==  STATUS.1    ; Auxiliary carry flag
    34 00000 0140 C        	DC      ==  STATUS.1    ; Auxiliary carry flag
    35       2003 C        	C       ==  STATUS.0    ; Carry flag
    35 00000 0040 C        	C       ==  STATUS.0    ; Carry flag
    36            C        
    37            C        ; RSR: RAM Select Register
    38       2004 C        RSR     ==    0x04:rpage 0
    38 00000 0010 C        RSR     ==    0x04:rpage 0
    39            C        
    40            C        
    41            C        ;======================================================
    42            C        ;      BANK 0 Registers                                   
    43            C        ;======================================================
    44            C        ; R5 ~ RA: I/O Port Address
    45       2005 C        P5      ==    0x05:rpage 0
    45 00000 0010 C        P5      ==    0x05:rpage 0
    46       2006 C        P6      ==    0x06:rpage 0
    46 00000 0010 C        P6      ==    0x06:rpage 0
    47       2007 C        P7	==    0x07:rpage 0
    47 00000 0010 C        P7	==    0x07:rpage 0
    48       2005 C        PORT5   ==    0x05:rpage 0
    48 00000 0010 C        PORT5   ==    0x05:rpage 0
    49       2006 C        PORT6   ==    0x06:rpage 0
    49 00000 0010 C        PORT6   ==    0x06:rpage 0
    50       2007 C        PORT7   ==    0x07:rpage 0
    50 00000 0010 C        PORT7   ==    0x07:rpage 0
    51            C        
    52            C        ; RB ~ RD: I/O Control Register
    53       200B C        IOCR5	==    0x0B:rpage 0
    53 00000 0010 C        IOCR5	==    0x0B:rpage 0
    54       200C C        IOCR6	==    0x0C:rpage 0
    54 00000 0010 C        IOCR6	==    0x0C:rpage 0
    55       200D C        IOCR7	==    0x0D:rpage 0
    55 00000 0010 C        IOCR7	==    0x0D:rpage 0
    56            C        
    57            C        ; OMCR:Operating Mode Control Register
    58       200E C        OMCR 	==    0x0E:rpage 0
    58 00000 0010 C        OMCR 	==    0x0E:rpage 0
    59       200E C        	CPUS	==	OMCR.7			;CPU Osillator Source Select
    59 00000 0740 C        	CPUS	==	OMCR.7			;CPU Osillator Source Select
    60       200E C        	IDLE	==	OMCR.6			;Idle Mode Enable Bit.
    60 00000 0640 C        	IDLE	==	OMCR.6			;Idle Mode Enable Bit.
    61       200E C        	CLK2	==	OMCR.5
    61 00000 0540 C        	CLK2	==	OMCR.5
    62       200E C        	CLK1	==	OMCR.4
    62 00000 0440 C        	CLK1	==	OMCR.4
    63       200E C        	CLK0	==	OMCR.3
    63 00000 0340 C        	CLK0	==	OMCR.3
    64            C        	
    65       200E C        	RCM1	==	OMCR.1
    65 00000 0140 C        	RCM1	==	OMCR.1
    66       200E C        	RCM0	==	OMCR.0
    66 00000 0040 C        	RCM0	==	OMCR.0
    67            C        						
    68            C        ; EIESCR:External interrupt Edge Select Register
    69       200F C        EIESCR  ==    0x0F:rpage 0
    69 00000 0010 C        EIESCR  ==    0x0F:rpage 0
    70       200F C        	EIES1	==	EIESCR.3
    70 00000 0340 C        	EIES1	==	EIESCR.3
    71       200F C        	EIES0	==	EIESCR.2
    71 00000 0240 C        	EIES0	==	EIESCR.2
    72            C        
    73            C        ; WUCR1:Wake-up Control Register 1
    74       2010 C        WUCR1 	==    0x10:rpage 0
    74 00000 0010 C        WUCR1 	==    0x10:rpage 0
    75       2010 C        	CMP2WK	==	WUCR1.7
    75 00000 0740 C        	CMP2WK	==	WUCR1.7
    76       2010 C        	CMP1WK	==	WUCR1.6
    76 00000 0640 C        	CMP1WK	==	WUCR1.6
    77       2010 C        	LVDWK	==	WUCR1.5
    77 00000 0540 C        	LVDWK	==	WUCR1.5
    78       2010 C        	ADWK	==	WUCR1.4
    78 00000 0440 C        	ADWK	==	WUCR1.4
    79       2010 C        	INT1WK	==	WUCR1.3
    79 00000 0340 C        	INT1WK	==	WUCR1.3
    80       2010 C        	INT0WK	==	WUCR1.2
    80 00000 0240 C        	INT0WK	==	WUCR1.2
    81            C        
    82            C        ; Reserver 0x11
    83            C        
    84            C        ; WUCR3:Wake-up Control Register 3
    85       2012 C        WUCR3  ==    0x12:rpage 0
    85 00000 0010 C        WUCR3  ==    0x12:rpage 0
    86       2012 C        	ICWKP7	==	WUCR3.6
    86 00000 0640 C        	ICWKP7	==	WUCR3.6
    87       2012 C        	ICWKP6	==	WUCR3.5
    87 00000 0540 C        	ICWKP6	==	WUCR3.5
    88       2012 C        	ICWKP5	==	WUCR3.4
    88 00000 0440 C        	ICWKP5	==	WUCR3.4
    89            C        
    90            C        ; SFR1:Status Flag Register 1
    91       2014 C        SFR1 	==    0x14:rpage 0
    91 00000 0010 C        SFR1 	==    0x14:rpage 0
    92       2014 C        	CMP2SF	==	SFR1.7
    92 00000 0740 C        	CMP2SF	==	SFR1.7
    93       2014 C        	CMP1SF	==	SFR1.6
    93 00000 0640 C        	CMP1SF	==	SFR1.6
    94       2014 C        	LVDSF	==	SFR1.5
    94 00000 0540 C        	LVDSF	==	SFR1.5
    95       2014 C        	ADSF	==	SFR1.4
    95 00000 0440 C        	ADSF	==	SFR1.4
    96       2014 C        	EXSF1	==	SFR1.3
    96 00000 0340 C        	EXSF1	==	SFR1.3
    97       2014 C        	EXSF0	==	SFR1.2
    97 00000 0240 C        	EXSF0	==	SFR1.2
    98            C        
    99            C        ; SFR2:Status Flag Register 2
   100            C        ;SFR2 	==    0x15:rpage 0
   101            C        
   102            C        ; SFR3:Status Flag Register 3
   103            C        ;SFR3 	==    0x16:rpage 0
   104            C        
   105            C        ; SFR4:Status Flag Register 4
   106       2017 C        SFR4	==    0x17:rpage 0
   106 00000 0010 C        SFR4	==    0x17:rpage 0
   107       2017 C        	P7ICSF	==	SFR4.6
   107 00000 0640 C        	P7ICSF	==	SFR4.6
   108       2017 C        	P6ICSF	==	SFR4.5
   108 00000 0540 C        	P6ICSF	==	SFR4.5
   109       2017 C        	P5ICSF	==	SFR4.4
   109 00000 0440 C        	P5ICSF	==	SFR4.4
   110            C        
   111            C        ; SFR6:Status Flag Register 6
   112       2019 C        SFR6	==    0x19:rpage 0
   112 00000 0010 C        SFR6	==    0x19:rpage 0
   113       2019 C        	SHSF	==	SFR6.7
   113 00000 0740 C        	SHSF	==	SFR6.7
   114            C        
   115            C        ; IMR1:Interrupt Mask Register 1
   116       201B C        IMR1 	==    0x1B:rpage 0
   116 00000 0010 C        IMR1 	==    0x1B:rpage 0
   117       201B C        	CMP2IE	==	IMR1.7
   117 00000 0740 C        	CMP2IE	==	IMR1.7
   118       201B C        	CMP1IE	==	IMR1.6
   118 00000 0640 C        	CMP1IE	==	IMR1.6
   119       201B C        	LVDIE	==	IMR1.5
   119 00000 0540 C        	LVDIE	==	IMR1.5
   120       201B C        	ADIE	==	IMR1.4
   120 00000 0440 C        	ADIE	==	IMR1.4
   121       201B C        	EXIE1	==	IMR1.3
   121 00000 0340 C        	EXIE1	==	IMR1.3
   122       201B C        	EXIE0	==	IMR1.2
   122 00000 0240 C        	EXIE0	==	IMR1.2
   123            C        
   124            C        ; IMR2:Interrupt Mask Register 2
   125            C        ;IMR2 	==    0x1C:rpage 0
   126            C        ;	CMP4IE	==	IMR2.7
   127            C        ;	CMP3IE	==	IMR2.6
   128            C        
   129            C        ; IMR3:Interrupt Mask Register 3
   130            C        ;IMR3 	==    0x1D:rpage 0
   131            C        
   132            C        ; IMR4:Interrupt Mask Register 4
   133       201E C        IMR4 	==    0x1E:rpage 0
   133 00000 0010 C        IMR4 	==    0x1E:rpage 0
   134       201E C        	P7ICIE	==	IMR4.6
   134 00000 0640 C        	P7ICIE	==	IMR4.6
   135       201E C        	P6ICIE	==	IMR4.5
   135 00000 0540 C        	P6ICIE	==	IMR4.5
   136       201E C        	P5ICIE	==	IMR4.4
   136 00000 0440 C        	P5ICIE	==	IMR4.4
   137            C        
   138            C        ; IMR6:Interrupt Mask Register 6
   139       2020 C        IMR6 	==    0x20:rpage 0
   139 00000 0010 C        IMR6 	==    0x20:rpage 0
   140       2020 C        	SHIE	==	IMR6.7
   140 00000 0740 C        	SHIE	==	IMR6.7
   141            C        
   142            C        ; WDTCR:Watch Dog Timer Control Register
   143       2021 C        WDTCR 	==    0x21:rpage 0
   143 00000 0010 C        WDTCR 	==    0x21:rpage 0
   144       2021 C        	WDTE	==	WDTCR.7
   144 00000 0740 C        	WDTE	==	WDTCR.7
   145       2021 C        	PSWE	==	WDTCR.3
   145 00000 0340 C        	PSWE	==	WDTCR.3
   146       2021 C        	WPSR2	==	WDTCR.2
   146 00000 0240 C        	WPSR2	==	WDTCR.2
   147       2021 C        	WPSR1	==	WDTCR.1
   147 00000 0140 C        	WPSR1	==	WDTCR.1
   148       2021 C        	WPSR0	==	WDTCR.0
   148 00000 0040 C        	WPSR0	==	WDTCR.0
   149            C        
   150            C        ; Reserver 0x22~0x3D
   151            C        
   152            C        ; ADCR1:ADC Control Register 1
   153       203E C        ADCR1	==   0x3E:rpage 0
   153 00000 0010 C        ADCR1	==   0x3E:rpage 0
   154       203E C        	CKR2		==	ADCR1.7
   154 00000 0740 C        	CKR2		==	ADCR1.7
   155       203E C        	CKR1		==	ADCR1.6
   155 00000 0640 C        	CKR1		==	ADCR1.6
   156       203E C        	CKR0		==	ADCR1.5
   156 00000 0540 C        	CKR0		==	ADCR1.5
   157       203E C        	ADRUN		==	ADCR1.4
   157 00000 0440 C        	ADRUN		==	ADCR1.4
   158       203E C        	ADP		==	ADCR1.3
   158 00000 0340 C        	ADP		==	ADCR1.3
   159       203E C        	ADOM		==	ADCR1.2
   159 00000 0240 C        	ADOM		==	ADCR1.2
   160       203E C        	SHS1		==	ADCR1.1
   160 00000 0140 C        	SHS1		==	ADCR1.1
   161       203E C        	SHS0		==	ADCR1.0
   161 00000 0040 C        	SHS0		==	ADCR1.0
   162            C        
   163            C        ; ADCR2:ADC Control Register 2
   164       203F C        ADCR2	==   0x3F:rpage 0
   164 00000 0010 C        ADCR2	==   0x3F:rpage 0
   165       203F C        	VPIS2		==	ADCR2.6
   165 00000 0640 C        	VPIS2		==	ADCR2.6
   166       203F C        	ADIM		==	ADCR2.5
   166 00000 0540 C        	ADIM		==	ADCR2.5
   167       203F C        	ADCMS		==	ADCR2.4
   167 00000 0440 C        	ADCMS		==	ADCR2.4
   168       203F C        	VPIS1		==	ADCR2.3
   168 00000 0340 C        	VPIS1		==	ADCR2.3
   169       203F C        	VPIS0		==	ADCR2.2
   169 00000 0240 C        	VPIS0		==	ADCR2.2
   170       203F C        	VREFP		==	ADCR2.1
   170 00000 0140 C        	VREFP		==	ADCR2.1
   171            C        
   172            C        ; ADISR:ADC Input Channel Selection Register
   173       2040 C        ADISR	==   0x40:rpage 0
   173 00000 0010 C        ADISR	==   0x40:rpage 0
   174       2040 C        	STPMK		==	ADISR.7
   174 00000 0740 C        	STPMK		==	ADISR.7
   175            C        
   176       2040 C        	ADIS3		==	ADISR.3
   176 00000 0340 C        	ADIS3		==	ADISR.3
   177       2040 C        	ADIS2		==	ADISR.2
   177 00000 0240 C        	ADIS2		==	ADISR.2
   178       2040 C        	ADIS1		==	ADISR.1
   178 00000 0140 C        	ADIS1		==	ADISR.1
   179       2040 C        	ADIS0		==	ADISR.0	
   179 00000 0040 C        	ADIS0		==	ADISR.0	
   180            C        
   181            C        ; ADER1:ADC Input Control Register 1
   182       2041 C        ADER1	==   0x41:rpage 0
   182 00000 0010 C        ADER1	==   0x41:rpage 0
   183       2041 C        	ADE7		==	ADER1.7
   183 00000 0740 C        	ADE7		==	ADER1.7
   184       2041 C        	ADE6		==	ADER1.6
   184 00000 0640 C        	ADE6		==	ADER1.6
   185       2041 C        	ADE5		==	ADER1.5
   185 00000 0540 C        	ADE5		==	ADER1.5
   186       2041 C        	ADE4		==	ADER1.4
   186 00000 0440 C        	ADE4		==	ADER1.4
   187       2041 C        	ADE3		==	ADER1.3
   187 00000 0340 C        	ADE3		==	ADER1.3
   188       2041 C        	ADE2		==	ADER1.2
   188 00000 0240 C        	ADE2		==	ADER1.2
   189       2041 C        	ADE1		==	ADER1.1
   189 00000 0140 C        	ADE1		==	ADER1.1
   190       2041 C        	ADE0		==	ADER1.0
   190 00000 0040 C        	ADE0		==	ADER1.0
   191            C        
   192            C        ; Reserve 0x42
   193            C        
   194            C        ; ADDL:Low Byte of ADC Data Buffer
   195       2043 C        ADDL	==   0x43:rpage 0
   195 00000 0010 C        ADDL	==   0x43:rpage 0
   196            C        
   197            C        ; ADDH:High Byte of ADC Data Buffer
   198       2044 C        ADDH	==   0x44:rpage 0
   198 00000 0010 C        ADDH	==   0x44:rpage 0
   199            C        
   200            C        ; ADCVL:Low Byte of ADC Comparison
   201       2045 C        ADCVL	==   0x45:rpage 0
   201 00000 0010 C        ADCVL	==   0x45:rpage 0
   202            C        
   203            C        ; ADCVH:High Byte of ADC Comparison
   204       2046 C        ADCVH	==   0x46:rpage 0
   204 00000 0010 C        ADCVH	==   0x46:rpage 0
   205            C        
   206            C        ; ADCONBUF:High Byte of ADC Comparison
   207       2047 C        ADCONBUF==   0x47:rpage 0
   207 00000 0010 C        ADCONBUF==   0x47:rpage 0
   208       2047 C        	ADBFEN		==	ADCONBUF.7
   208 00000 0740 C        	ADBFEN		==	ADCONBUF.7
   209       2047 C        	ADBFOVR		==	ADCONBUF.6
   209 00000 0640 C        	ADBFOVR		==	ADCONBUF.6
   210       2047 C        	ADBFINT		==	ADCONBUF.5
   210 00000 0540 C        	ADBFINT		==	ADCONBUF.5
   211            C        
   212       2047 C        	ADBFPTR2	==	ADCONBUF.2
   212 00000 0240 C        	ADBFPTR2	==	ADCONBUF.2
   213       2047 C        	ADBFPTR1	==	ADCONBUF.1
   213 00000 0140 C        	ADBFPTR1	==	ADCONBUF.1
   214       2047 C        	ADBFPTR0	==	ADCONBUF.0
   214 00000 0040 C        	ADBFPTR0	==	ADCONBUF.0
   215            C        
   216            C        ;Reserve 0x48~0x4F
   217            C        
   218            C        ;======================================================
   219            C        ;      BANK 1 Registers                                
   220            C        ;======================================================
   221            C        ; P5PHCR:Port 5 Pull-high Control Rgister
   222       2008 C        P5PHCR	==    0x08:rpage 1
   222 00000 0011 C        P5PHCR	==    0x08:rpage 1
   223            C        
   224            C        ; P6PHCR:Port 6 Pull-high Control Rgister
   225       2009 C        P6PHCR	==    0x09:rpage 1
   225 00000 0011 C        P6PHCR	==    0x09:rpage 1
   226            C        
   227            C        ; P7PHCR:Port 7 Pull-high Control Rgister
   228       200A C        P7PHCR ==    0x0A:rpage 1
   228 00000 0011 C        P7PHCR ==    0x0A:rpage 1
   229       200A C        	P7LPH		==	P7PHCR.0
   229 00000 0041 C        	P7LPH		==	P7PHCR.0
   230            C        
   231            C        ; P5PLCR:Port 5 Pull-low Control Register
   232       200B C        P5PLCR	==    0x0B:rpage 1
   232 00000 0011 C        P5PLCR	==    0x0B:rpage 1
   233            C        
   234            C        ; P6PLCR:Port 6 Pull-low Control Register
   235       200C C        P6PLCR	==    0x0C:rpage 1
   235 00000 0011 C        P6PLCR	==    0x0C:rpage 1
   236            C        
   237            C        ; P7PLCR:Port 7 Pull-low Control Register
   238       200D C        P7PLCR ==    0x0D:rpage 1
   238 00000 0011 C        P7PLCR ==    0x0D:rpage 1
   239       200D C        	P7LPL		==	P7PLCR.0
   239 00000 0041 C        	P7LPL		==	P7PLCR.0
   240            C        
   241            C        ; P5HDSCR:Port 5 High Drive Control Register
   242       200E C        P5HDSCR	==    0x0E:rpage 1
   242 00000 0011 C        P5HDSCR	==    0x0E:rpage 1
   243            C        
   244            C        ; P6HDSCR:Port 6 High Drive Control Register
   245       200F C        P6HDSCR	==    0x0F:rpage 1
   245 00000 0011 C        P6HDSCR	==    0x0F:rpage 1
   246            C        
   247            C        ; P7HDSCR:Port 7 High Drive Control Register
   248       2010 C        P7HDSCR ==    0x10:rpage 1
   248 00000 0011 C        P7HDSCR ==    0x10:rpage 1
   249       2010 C        	P7LHDS		==	P7HDSCR.0
   249 00000 0041 C        	P7LHDS		==	P7HDSCR.0
   250            C        
   251            C        ; P5ODCR:Port 5 Open-drain control Register
   252       2011 C        P5ODCR	==    0x11:rpage 1
   252 00000 0011 C        P5ODCR	==    0x11:rpage 1
   253            C        
   254            C        ; P6ODCR:Port 6 Open-drain control Register
   255       2012 C        P6ODCR	==    0x12:rpage 1
   255 00000 0011 C        P6ODCR	==    0x12:rpage 1
   256            C        
   257            C        ; P7ODCR:Port 7 Open-drain control Register
   258       2013 C        P7ODCR ==    0x13:rpage 1
   258 00000 0011 C        P7ODCR ==    0x13:rpage 1
   259       2013 C        	P7LOD		==	P7ODCR.0
   259 00000 0041 C        	P7LOD		==	P7ODCR.0
   260            C        
   261            C        ;Reserve 0x14~0x43
   262            C        
   263            C        ; FLKR:Flash Key Register for Table Write
   264       2044 C        FLKR	==    0x44:rpage 1
   264 00000 0011 C        FLKR	==    0x44:rpage 1
   265            C        
   266            C        ; TBPTL:Table Point Low Register
   267       2045 C        TBPTL	==    0x45:rpage 1
   267 00000 0011 C        TBPTL	==    0x45:rpage 1
   268            C        
   269            C        ; TBPTH:Table Point High Register
   270       2046 C        TBPTH	==    0x46:rpage 1
   270 00000 0011 C        TBPTH	==    0x46:rpage 1
   271       2046 C        	HLB		==	TBPTH.7
   271 00000 0741 C        	HLB		==	TBPTH.7
   272       2046 C        	RDS		==	TBPTH.6
   272 00000 0641 C        	RDS		==	TBPTH.6
   273            C        
   274            C        ; STKMON:Stack Point
   275       2047 C        STKMON	==    0x47:rpage 1
   275 00000 0011 C        STKMON	==    0x47:rpage 1
   276       2047 C        	STOV	==	STKMON.7
   276 00000 0741 C        	STOV	==	STKMON.7
   277       2047 C        	STL2	==	STKMON.2
   277 00000 0241 C        	STL2	==	STKMON.2
   278       2047 C        	STL1	==	STKMON.1
   278 00000 0141 C        	STL1	==	STKMON.1
   279       2047 C        	STL0	==	STKMON.0
   279 00000 0041 C        	STL0	==	STKMON.0
   280            C        
   281            C        ; PCH:Program Counter High
   282       2048 C        PCH	==    0x48:rpage 1
   282 00000 0011 C        PCH	==    0x48:rpage 1
   283            C        
   284            C        ; LVDCR:Low Voltage Detector Control Register
   285       2049 C        LVDCR	==    0x49:rpage 1
   285 00000 0011 C        LVDCR	==    0x49:rpage 1
   286       2049 C        	LVDEN		==	LVDCR.7
   286 00000 0741 C        	LVDEN		==	LVDCR.7
   287       2049 C        	LVDB		==	LVDCR.3		; LVD Status
   287 00000 0341 C        	LVDB		==	LVDCR.3		; LVD Status
   288            C        
   289            C        ; COBS1:Code Option Bit Selection Register 1
   290       204A C        COBS1	==    0x4A:rpage 1
   290 00000 0011 C        COBS1	==    0x4A:rpage 1
   291       204A C        	HLFS		==	COBS1.7
   291 00000 0741 C        	HLFS		==	COBS1.7
   292       204A C        	RESETEN		==	COBS1.6
   292 00000 0641 C        	RESETEN		==	COBS1.6
   293       204A C        	ENWDT		==	COBS1.5
   293 00000 0541 C        	ENWDT		==	COBS1.5
   294       204A C        	ADFM		==	COBS1.2
   294 00000 0241 C        	ADFM		==	COBS1.2
   295            C        
   296            C        ; COBS2:Code Option Bit Selection Register 2
   297            C        ;COBS2	==    0x4B:rpage 1
   298            C        
   299            C        ; COBS3:Code Option Bit Selection Register 3
   300       204C C        COBS3	==    0x4C:rpage 1
   300 00000 0011 C        COBS3	==    0x4C:rpage 1
   301       204C C        	FSS0		==	COBS3.5
   301 00000 0541 C        	FSS0		==	COBS3.5
   302       204C C        	SC4		==	COBS3.4
   302 00000 0441 C        	SC4		==	COBS3.4
   303       204C C        	SC3		==	COBS3.3
   303 00000 0341 C        	SC3		==	COBS3.3
   304       204C C        	SC2		==	COBS3.2
   304 00000 0241 C        	SC2		==	COBS3.2
   305       204C C        	SC1		==	COBS3.1
   305 00000 0141 C        	SC1		==	COBS3.1
   306       204C C        	SC0		==	COBS3.0
   306 00000 0041 C        	SC0		==	COBS3.0
   307            C        
   308            C        ; TBWCR:Table Write Control Register
   309       204D C        TBWCR	==    0x4D:rpage 1
   309 00000 0011 C        TBWCR	==    0x4D:rpage 1
   310       204D C        	IAPEN		==	TBWCR.0
   310 00000 0041 C        	IAPEN		==	TBWCR.0
   311            C        
   312            C        ; TBWAL:Table Write Start Address Low Byte
   313       204E C        TBWAL	==    0x4E:rpage 1
   313 00000 0011 C        TBWAL	==    0x4E:rpage 1
   314            C        
   315            C        ; TBWAH:Table Write Start Address Low Byte
   316       204F C        TBWAH	==    0x4F:rpage 1
   316 00000 0011 C        TBWAH	==    0x4F:rpage 1
   317            C        
   318            C        
   319            C        ;======================================================
   320            C        ;      BANK 2 Registers                                
   321            C        ;======================================================
   322            C        ; TM1CR1:
   323       2005 C        TM1CR1	==    0x05:rpage 2
   323 00000 0012 C        TM1CR1	==    0x05:rpage 2
   324       2005 C        	TM1S		==	TM1CR1.7
   324 00000 0742 C        	TM1S		==	TM1CR1.7
   325       2005 C        	TM1RC		==	TM1CR1.6
   325 00000 0642 C        	TM1RC		==	TM1CR1.6
   326       2005 C        	TM1SS1		==	TM1CR1.5
   326 00000 0542 C        	TM1SS1		==	TM1CR1.5
   327            C        
   328       2005 C        	TM1FF		==	TM1CR1.3
   328 00000 0342 C        	TM1FF		==	TM1CR1.3
   329       2005 C        	TM1MOS		==	TM1CR1.2
   329 00000 0242 C        	TM1MOS		==	TM1CR1.2
   330       2005 C        	TM1IS1		==	TM1CR1.1
   330 00000 0142 C        	TM1IS1		==	TM1CR1.1
   331       2005 C        	TM1IS0		==	TM1CR1.0
   331 00000 0042 C        	TM1IS0		==	TM1CR1.0
   332            C        
   333            C        ; TM1CR2:
   334       2006 C        TM1CR2	==    0x06:rpage 2
   334 00000 0012 C        TM1CR2	==    0x06:rpage 2
   335            C        
   336            C        ; TM1DBH:
   337       2007 C        TM1DBH	==    0x07:rpage 2
   337 00000 0012 C        TM1DBH	==    0x07:rpage 2
   338            C        
   339            C        ; TM1DBL:
   340       2008 C        TM1DBL	==    0x08:rpage 2
   340 00000 0012 C        TM1DBL	==    0x08:rpage 2
   341            C        
   342            C        ; TM1DAH:
   343       2009 C        TM1DAH	==    0x09:rpage 2
   343 00000 0012 C        TM1DAH	==    0x09:rpage 2
   344            C        
   345            C        ; TM1DAL:
   346       200A C        TM1DAL	==    0x0A:rpage 2
   346 00000 0012 C        TM1DAL	==    0x0A:rpage 2
   347            C        
   348            C        ; TM2CR1:
   349       200B C        TM2CR1	==    0x0B:rpage 2
   349 00000 0012 C        TM2CR1	==    0x0B:rpage 2
   350       200B C        	TM2S		==	TM2CR1.7
   350 00000 0742 C        	TM2S		==	TM2CR1.7
   351       200B C        	TM2RC		==	TM2CR1.6
   351 00000 0642 C        	TM2RC		==	TM2CR1.6
   352       200B C        	TM2SS1		==	TM2CR1.5
   352 00000 0542 C        	TM2SS1		==	TM2CR1.5
   353       200B C        	TM2FF		==	TM2CR1.3
   353 00000 0342 C        	TM2FF		==	TM2CR1.3
   354       200B C        	TM2MOS		==	TM2CR1.2
   354 00000 0242 C        	TM2MOS		==	TM2CR1.2
   355       200B C        	TM2IS1		==	TM2CR1.1
   355 00000 0142 C        	TM2IS1		==	TM2CR1.1
   356       200B C        	TM2IS0		==	TM2CR1.0
   356 00000 0042 C        	TM2IS0		==	TM2CR1.0
   357            C        
   358            C        ; TM2CR2:
   359       200C C        TM2CR2	==    0x0C:rpage 2
   359 00000 0012 C        TM2CR2	==    0x0C:rpage 2
   360            C        
   361            C        ; TM2DBH:
   362       200D C        TM2DBH	==    0x0D:rpage 2
   362 00000 0012 C        TM2DBH	==    0x0D:rpage 2
   363            C        
   364            C        ; TM2DBL:
   365       200E C        TM2DBL	==    0x0E:rpage 2
   365 00000 0012 C        TM2DBL	==    0x0E:rpage 2
   366            C        
   367            C        ; TM2DAH:
   368       200F C        TM2DAH	==    0x0F:rpage 2
   368 00000 0012 C        TM2DAH	==    0x0F:rpage 2
   369            C        
   370            C        ; TM2DAL:
   371       2010 C        TM2DAL	==    0x10:rpage 2
   371 00000 0012 C        TM2DAL	==    0x10:rpage 2
   372            C        
   373            C        ; TM3CR1:
   374       2011 C        TM3CR1	==    0x11:rpage 2
   374 00000 0012 C        TM3CR1	==    0x11:rpage 2
   375       2011 C        	TM3S		==	TM3CR1.7
   375 00000 0742 C        	TM3S		==	TM3CR1.7
   376       2011 C        	TM3RC		==	TM3CR1.6
   376 00000 0642 C        	TM3RC		==	TM3CR1.6
   377       2011 C        	TM3SS1		==	TM3CR1.5
   377 00000 0542 C        	TM3SS1		==	TM3CR1.5
   378       2011 C        	TM3FF		==	TM3CR1.3
   378 00000 0342 C        	TM3FF		==	TM3CR1.3
   379       2011 C        	TM3MOS		==	TM3CR1.2
   379 00000 0242 C        	TM3MOS		==	TM3CR1.2
   380       2011 C        	TM3IS1		==	TM3CR1.1
   380 00000 0142 C        	TM3IS1		==	TM3CR1.1
   381       2011 C        	TM3IS0		==	TM3CR1.0
   381 00000 0042 C        	TM3IS0		==	TM3CR1.0
   382            C        
   383            C        ; TM3CR2:
   384       2012 C        TM3CR2	==    0x12:rpage 2
   384 00000 0012 C        TM3CR2	==    0x12:rpage 2
   385            C        
   386            C        ; TM3DBH:
   387       2013 C        TM3DBH	==    0x13:rpage 2
   387 00000 0012 C        TM3DBH	==    0x13:rpage 2
   388            C        
   389            C        ; TM3DBL:
   390       2014 C        TM3DBL	==    0x14:rpage 2
   390 00000 0012 C        TM3DBL	==    0x14:rpage 2
   391            C        
   392            C        ; TM3DAH:
   393       2015 C        TM3DAH	==    0x15:rpage 2
   393 00000 0012 C        TM3DAH	==    0x15:rpage 2
   394            C        
   395            C        ; TM3DAL:
   396       2016 C        TM3DAL	==    0x16:rpage 2
   396 00000 0012 C        TM3DAL	==    0x16:rpage 2
   397            C        
   398            C        ; TM4CR1:
   399       2017 C        TM4CR1	==    0x17:rpage 2
   399 00000 0012 C        TM4CR1	==    0x17:rpage 2
   400       2017 C        	TM4S		==	TM4CR1.7
   400 00000 0742 C        	TM4S		==	TM4CR1.7
   401       2017 C        	TM4RC		==	TM4CR1.6
   401 00000 0642 C        	TM4RC		==	TM4CR1.6
   402       2017 C        	TM4SS1		==	TM4CR1.5
   402 00000 0542 C        	TM4SS1		==	TM4CR1.5
   403       2017 C        	TM4FF		==	TM4CR1.3
   403 00000 0342 C        	TM4FF		==	TM4CR1.3
   404       2017 C        	TM4MOS		==	TM4CR1.2
   404 00000 0242 C        	TM4MOS		==	TM4CR1.2
   405       2017 C        	TM4IS1		==	TM4CR1.1
   405 00000 0142 C        	TM4IS1		==	TM4CR1.1
   406       2017 C        	TM4IS0		==	TM4CR1.0
   406 00000 0042 C        	TM4IS0		==	TM4CR1.0
   407            C        
   408            C        ; TM4CR2:
   409       2018 C        TM4CR2	==    0x18:rpage 2
   409 00000 0012 C        TM4CR2	==    0x18:rpage 2
   410            C        
   411            C        ; TM4DBH:
   412       2019 C        TM4DBH	==    0x19:rpage 2
   412 00000 0012 C        TM4DBH	==    0x19:rpage 2
   413            C        
   414            C        ; TM4DBL:
   415       201A C        TM4DBL	==    0x1A:rpage 2
   415 00000 0012 C        TM4DBL	==    0x1A:rpage 2
   416            C        
   417            C        ; TM4DAH:
   418       201B C        TM4DAH	==    0x1B:rpage 2
   418 00000 0012 C        TM4DAH	==    0x1B:rpage 2
   419            C        
   420            C        ; TM4DAL:
   421       201C C        TM4DAL	==    0x1C:rpage 2
   421 00000 0012 C        TM4DAL	==    0x1C:rpage 2
   422            C        
   423            C        ; EI01NCR:
   424       201D C        EI01NCR	==    0x1D:rpage 2
   424 00000 0012 C        EI01NCR	==    0x1D:rpage 2
   425       201D C        	EI1NRE		==	EI01NCR.7
   425 00000 0742 C        	EI1NRE		==	EI01NCR.7
   426       201D C        	EI1NR1		==	EI01NCR.5
   426 00000 0542 C        	EI1NR1		==	EI01NCR.5
   427       201D C        	EI1NR0		==	EI01NCR.4
   427 00000 0442 C        	EI1NR0		==	EI01NCR.4
   428       201D C        	EI0NRE		==	EI01NCR.3
   428 00000 0342 C        	EI0NRE		==	EI01NCR.3
   429       201D C        	EI0NR1		==	EI01NCR.1
   429 00000 0142 C        	EI0NR1		==	EI01NCR.1
   430       201D C        	EI0NR0		==	EI01NCR.0
   430 00000 0042 C        	EI0NR0		==	EI01NCR.0
   431            C        
   432            C        ; CMP1CR:
   433       201E C        CMP1CR	==    0x1E:rpage 2
   433 00000 0012 C        CMP1CR	==    0x1E:rpage 2
   434       201E C        	C1PRS1		==	CMP1CR.7
   434 00000 0742 C        	C1PRS1		==	CMP1CR.7
   435       201E C        	C1PRS0		==	CMP1CR.6
   435 00000 0642 C        	C1PRS0		==	CMP1CR.6
   436       201E C        	C1NRS1		==	CMP1CR.5
   436 00000 0542 C        	C1NRS1		==	CMP1CR.5
   437       201E C        	C1NRS0		==	CMP1CR.4
   437 00000 0442 C        	C1NRS0		==	CMP1CR.4
   438       201E C        	CMP1EN		==	CMP1CR.2
   438 00000 0242 C        	CMP1EN		==	CMP1CR.2
   439       201E C        	CMP1OE		==	CMP1CR.1
   439 00000 0142 C        	CMP1OE		==	CMP1CR.1
   440       201E C        	CMP1OUT		==	CMP1CR.0
   440 00000 0042 C        	CMP1OUT		==	CMP1CR.0
   441            C        
   442            C        ; CMP2CR:
   443       201F C        CMP2CR	==    0x1F:rpage 2
   443 00000 0012 C        CMP2CR	==    0x1F:rpage 2
   444       201F C        	C2PRS1		==	CMP2CR.7
   444 00000 0742 C        	C2PRS1		==	CMP2CR.7
   445       201F C        	C2PRS0		==	CMP2CR.6
   445 00000 0642 C        	C2PRS0		==	CMP2CR.6
   446       201F C        	C2NRS1		==	CMP2CR.5
   446 00000 0542 C        	C2NRS1		==	CMP2CR.5
   447       201F C        	C2NRS0		==	CMP2CR.4
   447 00000 0442 C        	C2NRS0		==	CMP2CR.4
   448       201F C        	HYSEN2		==	CMP2CR.3
   448 00000 0342 C        	HYSEN2		==	CMP2CR.3
   449       201F C        	CMP2EN		==	CMP2CR.2
   449 00000 0242 C        	CMP2EN		==	CMP2CR.2
   450       201F C        	CMP2OE		==	CMP2CR.1
   450 00000 0142 C        	CMP2OE		==	CMP2CR.1
   451       201F C        	CMP2OUT		==	CMP2CR.0
   451 00000 0042 C        	CMP2OUT		==	CMP2CR.0
   452            C        
   453            C        ;Reserve 0x20~0x21
   454            C        
   455            C        ; CMPESCR:
   456       2022 C        CMPESCR	==    0x22:rpage 2
   456 00000 0012 C        CMPESCR	==    0x22:rpage 2
   457       2022 C        	CMP2ES		==	CMPESCR.1
   457 00000 0142 C        	CMP2ES		==	CMPESCR.1
   458       2022 C        	CMP1ES		==	CMPESCR.0
   458 00000 0042 C        	CMP1ES		==	CMPESCR.0
   459            C        
   460            C        ; CMP12NCR:
   461       2023 C        CMP12NCR==    0x23:rpage 2
   461 00000 0012 C        CMP12NCR==    0x23:rpage 2
   462       2023 C        	CO2NRE		==	CMP12NCR.7
   462 00000 0742 C        	CO2NRE		==	CMP12NCR.7
   463       2023 C        	CO2NR1		==	CMP12NCR.5
   463 00000 0542 C        	CO2NR1		==	CMP12NCR.5
   464       2023 C        	CO2NR0		==	CMP12NCR.4
   464 00000 0442 C        	CO2NR0		==	CMP12NCR.4
   465       2023 C        	CO1NRE		==	CMP12NCR.3
   465 00000 0342 C        	CO1NRE		==	CMP12NCR.3
   466       2023 C        	CO1NR1		==	CMP12NCR.1
   466 00000 0142 C        	CO1NR1		==	CMP12NCR.1
   467       2023 C        	CO1NR0		==	CMP12NCR.0
   467 00000 0042 C        	CO1NR0		==	CMP12NCR.0
   468            C        
   469            C        ;Reserve 0x24
   470            C        
   471            C        ; CMPTCR1:
   472       2025 C        CMPTCR1	==    0x25:rpage 2
   472 00000 0012 C        CMPTCR1	==    0x25:rpage 2
   473       2025 C        	CMPTEN		==	CMPTCR1.7
   473 00000 0742 C        	CMPTEN		==	CMPTCR1.7
   474       2025 C        	VOSFS2		==	CMPTCR1.6
   474 00000 0642 C        	VOSFS2		==	CMPTCR1.6
   475       2025 C        	VOSFS1		==	CMPTCR1.5
   475 00000 0542 C        	VOSFS1		==	CMPTCR1.5
   476       2025 C        	VOSFS0		==	CMPTCR1.4
   476 00000 0442 C        	VOSFS0		==	CMPTCR1.4
   477       2025 C        	TRIMDU2		==	CMPTCR1.1
   477 00000 0142 C        	TRIMDU2		==	CMPTCR1.1
   478       2025 C        	TRIMDU1		==	CMPTCR1.0
   478 00000 0042 C        	TRIMDU1		==	CMPTCR1.0
   479            C        
   480            C        ; CMPTCR2:
   481       2026 C        CMPTCR2	==    0x26:rpage 2
   481 00000 0012 C        CMPTCR2	==    0x26:rpage 2
   482       2026 C        	TRIMOS		==	CMPTCR2.4
   482 00000 0442 C        	TRIMOS		==	CMPTCR2.4
   483       2026 C        	TRIMIS2		==	CMPTCR2.1
   483 00000 0142 C        	TRIMIS2		==	CMPTCR2.1
   484       2026 C        	TRIMIS1		==	CMPTCR2.0
   484 00000 0042 C        	TRIMIS1		==	CMPTCR2.0
   485            C        
   486            C        ; TCMP1H:
   487       2027 C        TCMP1H	==    0x27:rpage 2
   487 00000 0012 C        TCMP1H	==    0x27:rpage 2
   488       2027 C        	TCMP1HS		==	TCMP1H.7
   488 00000 0742 C        	TCMP1HS		==	TCMP1H.7
   489       2027 C        	TCMP1H4		==	TCMP1H.4
   489 00000 0442 C        	TCMP1H4		==	TCMP1H.4
   490       2027 C        	TCMP1H3		==	TCMP1H.3
   490 00000 0342 C        	TCMP1H3		==	TCMP1H.3
   491       2027 C        	TCMP1H2		==	TCMP1H.2
   491 00000 0242 C        	TCMP1H2		==	TCMP1H.2
   492       2027 C        	TCMP1H1		==	TCMP1H.1
   492 00000 0142 C        	TCMP1H1		==	TCMP1H.1
   493       2027 C        	TCMP1H0		==	TCMP1H.0
   493 00000 0042 C        	TCMP1H0		==	TCMP1H.0
   494            C        
   495            C        ; TCMP1L:
   496       2028 C        TCMP1L	==    0x28:rpage 2
   496 00000 0012 C        TCMP1L	==    0x28:rpage 2
   497       2028 C        	TCMP1LS		==	TCMP1L.7
   497 00000 0742 C        	TCMP1LS		==	TCMP1L.7
   498       2028 C        	TCMP1L4		==	TCMP1L.4
   498 00000 0442 C        	TCMP1L4		==	TCMP1L.4
   499       2028 C        	TCMP1L3		==	TCMP1L.3
   499 00000 0342 C        	TCMP1L3		==	TCMP1L.3
   500       2028 C        	TCMP1L2		==	TCMP1L.2
   500 00000 0242 C        	TCMP1L2		==	TCMP1L.2
   501       2028 C        	TCMP1L1		==	TCMP1L.1
   501 00000 0142 C        	TCMP1L1		==	TCMP1L.1
   502       2028 C        	TCMP1L0		==	TCMP1L.0
   502 00000 0042 C        	TCMP1L0		==	TCMP1L.0
   503            C        
   504            C        ;Reserve 0x29~0x2A
   505            C        
   506            C        ; THCMP2H:
   507       202B C        THCMP2H	==    0x2B:rpage 2
   507 00000 0012 C        THCMP2H	==    0x2B:rpage 2
   508       202B C        	THCMP2HS	==	THCMP2H.7
   508 00000 0742 C        	THCMP2HS	==	THCMP2H.7
   509            C        
   510       202B C        	THCMP2H5	==	THCMP2H.5
   510 00000 0542 C        	THCMP2H5	==	THCMP2H.5
   511       202B C        	THCMP2H4	==	THCMP2H.4
   511 00000 0442 C        	THCMP2H4	==	THCMP2H.4
   512       202B C        	THCMP2H3	==	THCMP2H.3
   512 00000 0342 C        	THCMP2H3	==	THCMP2H.3
   513       202B C        	THCMP2H2	==	THCMP2H.2
   513 00000 0242 C        	THCMP2H2	==	THCMP2H.2
   514       202B C        	THCMP2H1	==	THCMP2H.1
   514 00000 0142 C        	THCMP2H1	==	THCMP2H.1
   515       202B C        	THCMP2H0	==	THCMP2H.0
   515 00000 0042 C        	THCMP2H0	==	THCMP2H.0
   516            C        
   517            C        ; TLCMP2H:
   518       202C C        TLCMP2H	==    0x2C:rpage 2
   518 00000 0012 C        TLCMP2H	==    0x2C:rpage 2
   519       202C C        	TLCMP2HS	==	TLCMP2H.7
   519 00000 0742 C        	TLCMP2HS	==	TLCMP2H.7
   520            C        
   521       202C C        	TLCMP2H5	==	TLCMP2H.5
   521 00000 0542 C        	TLCMP2H5	==	TLCMP2H.5
   522       202C C        	TLCMP2H4	==	TLCMP2H.4
   522 00000 0442 C        	TLCMP2H4	==	TLCMP2H.4
   523       202C C        	TLCMP2H3	==	TLCMP2H.3
   523 00000 0342 C        	TLCMP2H3	==	TLCMP2H.3
   524       202C C        	TLCMP2H2	==	TLCMP2H.2
   524 00000 0242 C        	TLCMP2H2	==	TLCMP2H.2
   525       202C C        	TLCMP2H1	==	TLCMP2H.1
   525 00000 0142 C        	TLCMP2H1	==	TLCMP2H.1
   526       202C C        	TLCMP2H0	==	TLCMP2H.0
   526 00000 0042 C        	TLCMP2H0	==	TLCMP2H.0
   527            C        
   528            C        ; THCMP2L:
   529       202D C        THCMP2L	==    0x2D:rpage 2
   529 00000 0012 C        THCMP2L	==    0x2D:rpage 2
   530       202D C        	THCMP2LS	==	THCMP2L.7
   530 00000 0742 C        	THCMP2LS	==	THCMP2L.7
   531            C        
   532       202D C        	THCMP2L5	==	THCMP2L.5
   532 00000 0542 C        	THCMP2L5	==	THCMP2L.5
   533       202D C        	THCMP2L4	==	THCMP2L.4
   533 00000 0442 C        	THCMP2L4	==	THCMP2L.4
   534       202D C        	THCMP2L3	==	THCMP2L.3
   534 00000 0342 C        	THCMP2L3	==	THCMP2L.3
   535       202D C        	THCMP2L2	==	THCMP2L.2
   535 00000 0242 C        	THCMP2L2	==	THCMP2L.2
   536       202D C        	THCMP2L1	==	THCMP2L.1
   536 00000 0142 C        	THCMP2L1	==	THCMP2L.1
   537       202D C        	THCMP2L0	==	THCMP2L.0
   537 00000 0042 C        	THCMP2L0	==	THCMP2L.0
   538            C        
   539            C        ; TLCMP2L:
   540       202E C        TLCMP2L	==    0x2E:rpage 2
   540 00000 0012 C        TLCMP2L	==    0x2E:rpage 2
   541       202E C        	TLCMP2LS	==	TLCMP2L.7
   541 00000 0742 C        	TLCMP2LS	==	TLCMP2L.7
   542            C        
   543       202E C        	TLCMP2L5	==	TLCMP2L.5
   543 00000 0542 C        	TLCMP2L5	==	TLCMP2L.5
   544       202E C        	TLCMP2L4	==	TLCMP2L.4
   544 00000 0442 C        	TLCMP2L4	==	TLCMP2L.4
   545       202E C        	TLCMP2L3	==	TLCMP2L.3
   545 00000 0342 C        	TLCMP2L3	==	TLCMP2L.3
   546       202E C        	TLCMP2L2	==	TLCMP2L.2
   546 00000 0242 C        	TLCMP2L2	==	TLCMP2L.2
   547       202E C        	TLCMP2L1	==	TLCMP2L.1
   547 00000 0142 C        	TLCMP2L1	==	TLCMP2L.1
   548       202E C        	TLCMP2L0	==	TLCMP2L.0
   548 00000 0042 C        	TLCMP2L0	==	TLCMP2L.0
   549            C        
   550            C        ;Reserve 0x2F~0x3B
   551            C        
   552            C        ; COBS4
   553       203C C        COBS4	==    0x3C:rpage 2
   553 00000 0012 C        COBS4	==    0x3C:rpage 2
   554            C        
   555            C        ; COBS5
   556       203D C        COBS5	==    0x3D:rpage 2
   556 00000 0012 C        COBS5	==    0x3D:rpage 2
   557            C        
   558            C        ; COBS6
   559       203E C        COBS6	==    0x3E:rpage 2
   559 00000 0012 C        COBS6	==    0x3E:rpage 2
   560            C        
   561            C        ; COBS7
   562       203F C        COBS7	==    0x3F:rpage 2
   562 00000 0012 C        COBS7	==    0x3F:rpage 2
   563            C        
   564            C        ; MULMOD:
   565       2040 C        MULMOD	==    0x40:rpage 2
   565 00000 0012 C        MULMOD	==    0x40:rpage 2
   566       2040 C        	PROD16		==	MULMOD.4
   566 00000 0442 C        	PROD16		==	MULMOD.4
   567       2040 C        	MACEN		==	MULMOD.3
   567 00000 0342 C        	MACEN		==	MULMOD.3
   568       2040 C        	MACM		==	MULMOD.2
   568 00000 0242 C        	MACM		==	MULMOD.2
   569       2040 C        	SMCAND		==	MULMOD.1
   569 00000 0142 C        	SMCAND		==	MULMOD.1
   570       2040 C        	SMIER		==	MULMOD.0
   570 00000 0042 C        	SMIER		==	MULMOD.0
   571            C        
   572            C        ; PRODH:
   573       2041 C        PRODH	==    0x41:rpage 2
   573 00000 0012 C        PRODH	==    0x41:rpage 2
   574            C        
   575            C        ; PRODL:
   576       2042 C        PRODL	==    0x42:rpage 2
   576 00000 0012 C        PRODL	==    0x42:rpage 2
   577            C        
   578            C        ; SFR7:
   579       2043 C        SFR7	==    0x43:rpage 2
   579 00000 0012 C        SFR7	==    0x43:rpage 2
   580       2043 C        	TM4SF	== SFR7.3
   580 00000 0342 C        	TM4SF	== SFR7.3
   581       2043 C        	TM3SF	== SFR7.2
   581 00000 0242 C        	TM3SF	== SFR7.2
   582       2043 C        	TM2SF	== SFR7.1
   582 00000 0142 C        	TM2SF	== SFR7.1
   583       2043 C        	TM1SF	== SFR7.0
   583 00000 0042 C        	TM1SF	== SFR7.0
   584            C        
   585            C        ;Reserve 0x44
   586            C        
   587            C        ; IMR7:
   588       2045 C        IMR7	==    0x45:rpage 2
   588 00000 0012 C        IMR7	==    0x45:rpage 2
   589       2045 C        	TM4IE	== IMR7.3
   589 00000 0342 C        	TM4IE	== IMR7.3
   590       2045 C        	TM3IE	== IMR7.2
   590 00000 0242 C        	TM3IE	== IMR7.2
   591       2045 C        	TM2IE	== IMR7.1
   591 00000 0142 C        	TM2IE	== IMR7.1
   592       2045 C        	TM1IE	== IMR7.0
   592 00000 0042 C        	TM1IE	== IMR7.0
   593            C        
   594            C        ;Reserve 0x46
   595            C        
   596            C        ; LOCKPR:Lock Page Number Register
   597       2047 C        LOCKPR	==	  0x47:rpage 2
   597 00000 0012 C        LOCKPR	==	  0x47:rpage 2
   598            C        
   599            C        ; LOCKPR:Lock Page Number Register
   600       2048 C        LOCKCR	==	  0x48:rpage 2
   600 00000 0012 C        LOCKCR	==	  0x48:rpage 2
   601       2048 C        	LOCKEN	== LOCKCR.7
   601 00000 0742 C        	LOCKEN	== LOCKCR.7
   602            C        
   603            C        ; ICEMR3:ICE Monitor Register 3
   604       2049 C        ICEMR3	==    0x49:rpage 2
   604 00000 0012 C        ICEMR3	==    0x49:rpage 2
   605            C        
   606            C        ; ICEMR2:ICE Monitor Register 2
   607       204A C        ICEMR2	==    0x4A:rpage 2
   607 00000 0012 C        ICEMR2	==    0x4A:rpage 2
   608            C        
   609            C        ; ICEMR1:ICE Monitor Register 1
   610       204B C        ICEMR1	==    0x4B:rpage 2
   610 00000 0012 C        ICEMR1	==    0x4B:rpage 2
   611            C        
   612            C        ; ICEACK:ICE Monitor ACK egister
   613       204C C        ICEACK	==    0x4C:rpage 2
   613 00000 0012 C        ICEACK	==    0x4C:rpage 2
   614            C        
   615            C        ; ICEBUF:ICE Monitor Buffer Register
   616       204D C        ICEBUF	==    0x4D:rpage 2
   616 00000 0012 C        ICEBUF	==    0x4D:rpage 2
   617            C        
   618            C        
   619            C        ;======================================================
   620            C        ;      BANK 3 Registers                                
   621            C        ;======================================================
   622            C        
   623            C        ; EIOPWMPE0
   624       2005 C        EIOPWMPE0	==    0x05:rpage 3
   624 00000 0013 C        EIOPWMPE0	==    0x05:rpage 3
   625            C        
   626            C        ; EOPWMPE0
   627       2006 C        EOPWMPE0	==    0x06:rpage 3
   627 00000 0013 C        EOPWMPE0	==    0x06:rpage 3
   628            C        
   629            C        ; EIOPHAPE
   630       2007 C        EIOPHAPE	==    0x07:rpage 3
   630 00000 0013 C        EIOPHAPE	==    0x07:rpage 3
   631            C        
   632            C        ;Reserve 0x08
   633            C        
   634            C        ; T5CRH
   635       2009 C        T5CRH		==    0x09:rpage 3
   635 00000 0013 C        T5CRH		==    0x09:rpage 3
   636            C        
   637            C        ; T5CRL
   638       200A C        T5CRL		==    0x0A:rpage 3
   638 00000 0013 C        T5CRL		==    0x0A:rpage 3
   639            C        
   640            C        ; T6CRH
   641       200B C        T6CRH		==    0x0B:rpage 3
   641 00000 0013 C        T6CRH		==    0x0B:rpage 3
   642            C        
   643            C        ; T6CRL
   644       200C C        T6CRL		==    0x0C:rpage 3
   644 00000 0013 C        T6CRL		==    0x0C:rpage 3
   645            C        
   646            C        ; PWMCR1H
   647       200D C        PWMCR1H		==    0x0D:rpage 3
   647 00000 0013 C        PWMCR1H		==    0x0D:rpage 3
   648            C        
   649            C        ; PWMCR1L
   650       200E C        PWMCR1L		==    0x0E:rpage 3
   650 00000 0013 C        PWMCR1L		==    0x0E:rpage 3
   651            C        
   652            C        ; PWMCR2H
   653       200F C        PWMCR2H		==    0x0F:rpage 3
   653 00000 0013 C        PWMCR2H		==    0x0F:rpage 3
   654            C        
   655            C        ; PWMCR2L
   656       2010 C        PWMCR2L		==    0x10:rpage 3
   656 00000 0013 C        PWMCR2L		==    0x10:rpage 3
   657            C        
   658            C        ; T5OPMS
   659       2011 C        T5OPMS		==    0x11:rpage 3
   659 00000 0013 C        T5OPMS		==    0x11:rpage 3
   660            C        
   661            C        ; T6OPMS
   662       2012 C        T6OPMS		==    0x12:rpage 3
   662 00000 0013 C        T6OPMS		==    0x12:rpage 3
   663            C        
   664            C        ; ASPWM
   665       2013 C        ASPWM		==    0x13:rpage 3
   665 00000 0013 C        ASPWM		==    0x13:rpage 3
   666            C        
   667            C        ; LVPWM
   668       2014 C        LVPWM		==    0x14:rpage 3
   668 00000 0013 C        LVPWM		==    0x14:rpage 3
   669            C        
   670            C        ; SLPWM
   671       2015 C        SLPWM		==    0x15:rpage 3
   671 00000 0013 C        SLPWM		==    0x15:rpage 3
   672            C        
   673            C        ; COPH
   674       2016 C        COPH		==    0x16:rpage 3
   674 00000 0013 C        COPH		==    0x16:rpage 3
   675            C        
   676            C        ; COPL
   677       2017 C        COPL		==    0x17:rpage 3
   677 00000 0013 C        COPL		==    0x17:rpage 3
   678            C        
   679            C        ; MCOPH
   680       2018 C        MCOPH		==    0x18:rpage 3
   680 00000 0013 C        MCOPH		==    0x18:rpage 3
   681            C        
   682            C        ; MCOPL
   683       2019 C        MCOP		==    0x19:rpage 3
   683 00000 0013 C        MCOP		==    0x19:rpage 3
   684            C        
   685            C        ; T5DECR
   686       201A C        T5DECR		==    0x1A:rpage 3
   686 00000 0013 C        T5DECR		==    0x1A:rpage 3
   687            C        
   688            C        ; T5DEB
   689       201B C        T5DEB		==    0x1B:rpage 3
   689 00000 0013 C        T5DEB		==    0x1B:rpage 3
   690            C        
   691            C        ; HACRH
   692       201C C        HACRH		==    0x1C:rpage 3
   692 00000 0013 C        HACRH		==    0x1C:rpage 3
   693            C        
   694            C        ; HACRL
   695       201D C        HACRL		==    0x1D:rpage 3
   695 00000 0013 C        HACRL		==    0x1D:rpage 3
   696            C        
   697            C        ; BRKCR1H
   698       201E C        BRKCR1H		==    0x1E:rpage 3
   698 00000 0013 C        BRKCR1H		==    0x1E:rpage 3
   699            C        
   700            C        ; BRKCR1L
   701       201F C        BRKCR1L		==    0x1F:rpage 3
   701 00000 0013 C        BRKCR1L		==    0x1F:rpage 3
   702            C        
   703            C        ; BRKCR2H
   704       2020 C        BRKCR2H		==    0x20:rpage 3
   704 00000 0013 C        BRKCR2H		==    0x20:rpage 3
   705            C        
   706            C        ; BRKCR2L
   707       2021 C        BRKCR2L		==    0x21:rpage 3
   707 00000 0013 C        BRKCR2L		==    0x21:rpage 3
   708            C        
   709            C        ; TRADCR
   710       2022 C        TRADCR		==    0x22:rpage 3
   710 00000 0013 C        TRADCR		==    0x22:rpage 3
   711            C        
   712            C        ; TSF1H
   713       2023 C        TSF1H		==    0x23:rpage 3
   713 00000 0013 C        TSF1H		==    0x23:rpage 3
   714            C        
   715            C        ; TSF1L
   716       2024 C        TSF1L		==    0x24:rpage 3
   716 00000 0013 C        TSF1L		==    0x24:rpage 3
   717            C        
   718            C        ; SETM1H
   719       2025 C        SETM1H		==    0x25:rpage 3
   719 00000 0013 C        SETM1H		==    0x25:rpage 3
   720       2025 C        	IEHC		==	SETM1H.7
   720 00000 0743 C        	IEHC		==	SETM1H.7
   721       2025 C        	MTRS		==	SETM1H.6
   721 00000 0643 C        	MTRS		==	SETM1H.6
   722       2025 C        	COIDS		==	SETM1H.3
   722 00000 0343 C        	COIDS		==	SETM1H.3
   723       2025 C        	BRKFS		==	SETM1H.2
   723 00000 0243 C        	BRKFS		==	SETM1H.2
   724            C        
   725            C        ; SETM1L
   726       2026 C        SETM1L		==    0x26:rpage 3
   726 00000 0013 C        SETM1L		==    0x26:rpage 3
   727       2026 C        	T6MTS		==	SETM1L.3
   727 00000 0343 C        	T6MTS		==	SETM1L.3
   728       2026 C        	T6RS		==	SETM1L.2
   728 00000 0243 C        	T6RS		==	SETM1L.2
   729       2026 C        	T5MTS		==	SETM1L.1
   729 00000 0143 C        	T5MTS		==	SETM1L.1
   730       2026 C        	T5RS		==	SETM1L.0
   730 00000 0043 C        	T5RS		==	SETM1L.0
   731            C        
   732            C        
   733            C        ; RSTM1H
   734       2027 C        RSTM1H		==    0x27:rpage 3
   734 00000 0013 C        RSTM1H		==    0x27:rpage 3
   735       2027 C        	MTRR		==	RSTM1H.6
   735 00000 0643 C        	MTRR		==	RSTM1H.6
   736       2027 C        	COIDR		==	RSTM1H.3
   736 00000 0343 C        	COIDR		==	RSTM1H.3
   737       2027 C        	BRKFR		==	RSTM1H.2
   737 00000 0243 C        	BRKFR		==	RSTM1H.2
   738            C        
   739            C        ; RSTM1L
   740       2028 C        RSTM1L		==    0x28:rpage 3
   740 00000 0013 C        RSTM1L		==    0x28:rpage 3
   741       2028 C        	T6MTR		==	RSTM1L.3
   741 00000 0343 C        	T6MTR		==	RSTM1L.3
   742       2028 C        	T6RR		==	RSTM1L.2
   742 00000 0243 C        	T6RR		==	RSTM1L.2
   743       2028 C        	T5MTR		==	RSTM1L.1
   743 00000 0143 C        	T5MTR		==	RSTM1L.1
   744       2028 C        	T5RR		==	RSTM1L.0
   744 00000 0043 C        	T5RR		==	RSTM1L.0
   745            C        
   746            C        ;Reserve 0x29~0x2A
   747            C        
   748            C        ; T5VALH
   749       202B C        T5VALH		==    0x2B:rpage 3
   749 00000 0013 C        T5VALH		==    0x2B:rpage 3
   750            C        
   751            C        ; T5VALL
   752       202C C        T5VALL		==    0x2C:rpage 3
   752 00000 0013 C        T5VALL		==    0x2C:rpage 3
   753            C        
   754            C        ; T5PDH
   755       202D C        T5PDH		==    0x2D:rpage 3
   755 00000 0013 C        T5PDH		==    0x2D:rpage 3
   756            C        
   757            C        ; T5PDL
   758       202E C        T5PDL		==    0x2E:rpage 3
   758 00000 0013 C        T5PDL		==    0x2E:rpage 3
   759            C        
   760            C        ; T5ACDH
   761       202F C        T5ACDH		==    0x2F:rpage 3
   761 00000 0013 C        T5ACDH		==    0x2F:rpage 3
   762            C        
   763            C        ; T5ACDL
   764       2030 C        T5ACDL		==    0x30:rpage 3
   764 00000 0013 C        T5ACDL		==    0x30:rpage 3
   765            C        
   766            C        ; T5BCDH
   767       2031 C        T5BCDH		==    0x31:rpage 3
   767 00000 0013 C        T5BCDH		==    0x31:rpage 3
   768            C        
   769            C        ; T5BCDL
   770       2032 C        T5BCDL		==    0x32:rpage 3
   770 00000 0013 C        T5BCDL		==    0x32:rpage 3
   771            C        
   772            C        ; T5CCDH
   773       2033 C        T5CCDH		==    0x33:rpage 3
   773 00000 0013 C        T5CCDH		==    0x33:rpage 3
   774            C        
   775            C        ; T5CCDL
   776       2034 C        T5CCDL		==    0x34:rpage 3
   776 00000 0013 C        T5CCDL		==    0x34:rpage 3
   777            C        
   778            C        ; T5ACDMH
   779       2035 C        T5ACDMH		==    0x35:rpage 3
   779 00000 0013 C        T5ACDMH		==    0x35:rpage 3
   780            C        
   781            C        ; T5ACDML
   782       2036 C        T5ACDML		==    0x36:rpage 3
   782 00000 0013 C        T5ACDML		==    0x36:rpage 3
   783            C        
   784            C        ; T5BCDMH
   785       2037 C        T5BCDMH		==    0x37:rpage 3
   785 00000 0013 C        T5BCDMH		==    0x37:rpage 3
   786            C        
   787            C        ; T5BCDML
   788       2038 C        T5BCDML		==    0x38:rpage 3
   788 00000 0013 C        T5BCDML		==    0x38:rpage 3
   789            C        
   790            C        ; T5CCDMH
   791       2039 C        T5CCDMH		==    0x39:rpage 3
   791 00000 0013 C        T5CCDMH		==    0x39:rpage 3
   792            C        
   793            C        ; T5CCDML
   794       203A C        T5CCDML		==    0x3A:rpage 3
   794 00000 0013 C        T5CCDML		==    0x3A:rpage 3
   795            C        
   796            C        ; TRAD1VH
   797       203B C        TRAD1VH		==    0x3B:rpage 3
   797 00000 0013 C        TRAD1VH		==    0x3B:rpage 3
   798            C        
   799            C        ; TRAD1VL
   800       203C C        TRAD1VL		==    0x3C:rpage 3
   800 00000 0013 C        TRAD1VL		==    0x3C:rpage 3
   801            C        
   802            C        ; TRAD2VH
   803       203D C        TRAD2VH		==    0x3D:rpage 3
   803 00000 0013 C        TRAD2VH		==    0x3D:rpage 3
   804            C        
   805            C        ; TRAD2VL
   806       203E C        TRAD2VL		==    0x3E:rpage 3
   806 00000 0013 C        TRAD2VL		==    0x3E:rpage 3
   807            C        
   808            C        ; T6VALH
   809       203F C        T6VALH		==    0x3F:rpage 3
   809 00000 0013 C        T6VALH		==    0x3F:rpage 3
   810            C        
   811            C        ; T6VALL
   812       2040 C        T6VALL		==    0x40:rpage 3
   812 00000 0013 C        T6VALL		==    0x40:rpage 3
   813            C        
   814            C        ; T6PDH
   815       2041 C        T6PDH		==    0x41:rpage 3
   815 00000 0013 C        T6PDH		==    0x41:rpage 3
   816            C        
   817            C        ; T6PDL
   818       2042 C        T6PDL		==    0x42:rpage 3
   818 00000 0013 C        T6PDL		==    0x42:rpage 3
   819            C        
   820            C        ; T6CDH
   821       2043 C        T6CDH		==    0x43:rpage 3
   821 00000 0013 C        T6CDH		==    0x43:rpage 3
   822            C        
   823            C        ; T6CDL
   824       2044 C        T6CDL		==    0x44:rpage 3
   824 00000 0013 C        T6CDL		==    0x44:rpage 3
   825            C        
   826            C        ; T6CDMH
   827       2045 C        T6CDMH		==    0x45:rpage 3
   827 00000 0013 C        T6CDMH		==    0x45:rpage 3
   828            C        
   829            C        ; T6CDML
   830       2046 C        T6CDML		==    0x46:rpage 3
   830 00000 0013 C        T6CDML		==    0x46:rpage 3
   831            C        
   832            C        ;Reserve 0x47~0x4B
   833            C        
   834            C        ; SFR9
   835       204C C        SFR9		==    0x4C:rpage 3
   835 00000 0013 C        SFR9		==    0x4C:rpage 3
   836       204C C        	T5PDMSF		==	SFR9.7
   836 00000 0743 C        	T5PDMSF		==	SFR9.7
   837       204C C        	T5ONEMSF	==	SFR9.6
   837 00000 0643 C        	T5ONEMSF	==	SFR9.6
   838       204C C        	IRT5CSF		==	SFR9.5
   838 00000 0543 C        	IRT5CSF		==	SFR9.5
   839       204C C        	IRT5BSF		==	SFR9.4
   839 00000 0443 C        	IRT5BSF		==	SFR9.4
   840       204C C        	IRT5ASF		==	SFR9.3
   840 00000 0343 C        	IRT5ASF		==	SFR9.3
   841       204C C        	IFT5CSF		==	SFR9.2
   841 00000 0243 C        	IFT5CSF		==	SFR9.2
   842       204C C        	IFT5BSF		==	SFR9.1
   842 00000 0143 C        	IFT5BSF		==	SFR9.1
   843       204C C        	IFT5ASF		==	SFR9.0
   843 00000 0043 C        	IFT5ASF		==	SFR9.0
   844            C        
   845            C        ; SFR10
   846       204D C        SFR10		==    0x4D:rpage 3
   846 00000 0013 C        SFR10		==    0x4D:rpage 3
   847       204D C        	MTRSF		==	SFR10.7
   847 00000 0743 C        	MTRSF		==	SFR10.7
   848       204D C        	BRKSF		==	SFR10.6
   848 00000 0643 C        	BRKSF		==	SFR10.6
   849       204D C        	HAEGSF		==	SFR10.5
   849 00000 0543 C        	HAEGSF		==	SFR10.5
   850       204D C        	HACOSF		==	SFR10.4
   850 00000 0443 C        	HACOSF		==	SFR10.4
   851       204D C        	HAERRSF		==	SFR10.3
   851 00000 0343 C        	HAERRSF		==	SFR10.3
   852       204D C        	T6PDMSF		==	SFR10.2
   852 00000 0243 C        	T6PDMSF		==	SFR10.2
   853       204D C        	IRT6SF		==	SFR10.1
   853 00000 0143 C        	IRT6SF		==	SFR10.1
   854       204D C        	IFT6SF		==	SFR10.0
   854 00000 0043 C        	IFT6SF		==	SFR10.0
   855            C        
   856            C        ; IMR9
   857       204E C        IMR9		==    0x4E:rpage 3
   857 00000 0013 C        IMR9		==    0x4E:rpage 3
   858       204E C        	T5PDMIE		==	IMR9.7
   858 00000 0743 C        	T5PDMIE		==	IMR9.7
   859       204E C        	T5ONEMIE	==	IMR9.6
   859 00000 0643 C        	T5ONEMIE	==	IMR9.6
   860       204E C        	IRT5CIE		==	IMR9.5
   860 00000 0543 C        	IRT5CIE		==	IMR9.5
   861       204E C        	IRT5BIE		==	IMR9.4
   861 00000 0443 C        	IRT5BIE		==	IMR9.4
   862       204E C        	IRT5AIE		==	IMR9.3
   862 00000 0343 C        	IRT5AIE		==	IMR9.3
   863       204E C        	IFT5CIE		==	IMR9.2
   863 00000 0243 C        	IFT5CIE		==	IMR9.2
   864       204E C        	IFT5BIE		==	IMR9.1
   864 00000 0143 C        	IFT5BIE		==	IMR9.1
   865       204E C        	IFT5AIE		==	IMR9.0
   865 00000 0043 C        	IFT5AIE		==	IMR9.0
   866            C        
   867            C        ; IMR10
   868       204F C        IMR10		==    0x4F:rpage 3
   868 00000 0013 C        IMR10		==    0x4F:rpage 3
   869       204F C        	MTRIE		==	IMR10.7
   869 00000 0743 C        	MTRIE		==	IMR10.7
   870       204F C        	BRKIE		==	IMR10.6
   870 00000 0643 C        	BRKIE		==	IMR10.6
   871       204F C        	HAEGIE		==	IMR10.5
   871 00000 0543 C        	HAEGIE		==	IMR10.5
   872       204F C        	HACOIE		==	IMR10.4
   872 00000 0443 C        	HACOIE		==	IMR10.4
   873       204F C        	HAERRIE		==	IMR10.3
   873 00000 0343 C        	HAERRIE		==	IMR10.3
   874       204F C        	T6PDMIE		==	IMR10.2
   874 00000 0243 C        	T6PDMIE		==	IMR10.2
   875       204F C        	IRT6IE		==	IMR10.1
   875 00000 0143 C        	IRT6IE		==	IMR10.1
   876       204F C        	IFT6IE		==	IMR10.0
   876 00000 0043 C        	IFT6IE		==	IMR10.0
   877            C        
   878            C        
   879            C        
    23                     
    24                     ;================ General Purpose Register ===============
    25       0050          	TMP50	== 0x50
    26       0051          	TMP51	== 0x51
    27       0052          	TMP52	== 0x52
    28       0053          	TMP53	== 0x53
    29       0054          	TMP54	== 0x54
    30       0055          	TMP55	== 0x55
    31       0056          	TMP56	== 0x56
    32       0057          	TMP57	== 0x57
    33       0058          	TMP58	== 0x58
    34       0059          	TMP59	== 0x59
    35       005A          	TMP5A	== 0x5A
    36       005B          	TMP5B	== 0x5B
    37       005C          	TMP5C	== 0x5C
    38       005D          	TMP5D	== 0x5D
    39       005E          	TMP5E	== 0x5E
    40       005F          	TMP5F	== 0x5F
    41                     	
    42       005A          	INST	== 0x5A
    43                     
    44       0080          	TMP80	== 0x80
    45       0081          	TMP81	== 0x81
    46       0082          	TMP82	== 0x82
    47       0083          	TMP83	== 0x83
    48       0084          	TMP84	== 0x84
    49       0085          	TMP85	== 0x85
    50       0086          	TMP86	== 0x86
    51       0087          	TMP87	== 0x87
    52       0088          	TMP88	== 0x88
    53       0089          	TMP89	== 0x89
    54       008A          	TMP8A	== 0x8A
    55       008B          	TMP8B	== 0x8B
    56       008C          	TMP8C	== 0x8C
    57       008D          	TMP8D	== 0x8D
    58       008E          	TMP8E	== 0x8E
    59       008F          	TMP8F	== 0x8F
    60                     
    61                     ;================ Interrupt Vector Table =================
    62                     	ORG 	0x0000
    63 00000 5050          	JMP 	MAIN
    64                     	ORG		0x0002
    65 00002 5066          	JMP 	JMP_FAIL	;0x0003
    66 00003 5066          	JMP 	JMP_FAIL	;0x0004
    67 00004 5066          	JMP 	JMP_FAIL	;0x0005
    68 00005 5066          	JMP 	JMP_FAIL	;0x0006
    69 00006 5066          	JMP 	JMP_FAIL	;0x0007
    70 00007 5066          	JMP 	JMP_FAIL	;0x0008
    71 00008 5066          	JMP 	JMP_FAIL	;0x0009
    72 00009 5066          	JMP 	JMP_FAIL	;0x000A
    73 0000A 5066          	JMP 	JMP_FAIL	;0x000B
    74 0000B 5066          	JMP 	JMP_FAIL	;0x000C
    75 0000C 5066          	JMP 	JMP_FAIL	;0x000D
    76 0000D 5066          	JMP 	JMP_FAIL	;0x000E
    77 0000E 5066          	JMP 	JMP_FAIL	;0x000F
    78 0000F 5066          	JMP 	JMP_FAIL	;0x0010
    79 00010 5066          	JMP 	JMP_FAIL	;0x0011
    80 00011 5066          	JMP 	JMP_FAIL	;0x0012
    81 00012 5066          	JMP 	JMP_FAIL	;0x0013
    82 00013 5066          	JMP 	JMP_FAIL	;0x0014
    83 00014 5066          	JMP 	JMP_FAIL	;0x0015
    84 00015 5066          	JMP 	JMP_FAIL	;0x0016
    85 00016 5066          	JMP 	JMP_FAIL	;0x0017
    86 00017 5066          	JMP 	JMP_FAIL	;0x0018
    87 00018 5066          	JMP 	JMP_FAIL	;0x0019
    88 00019 5066          	JMP 	JMP_FAIL	;0x001A
    89 0001A 5066          	JMP 	JMP_FAIL	;0x001B
    90 0001B 5066          	JMP 	JMP_FAIL	;0x001C
    91 0001C 5066          	JMP 	JMP_FAIL	;0x001D
    92 0001D 5066          	JMP 	JMP_FAIL	;0x001E
    93 0001E 5066          	JMP 	JMP_FAIL	;0x001F
    94 0001F 5066          	JMP 	JMP_FAIL	;0x0020
    95 00020 5066          	JMP 	JMP_FAIL	;0x0021
    96 00021 5066          	JMP 	JMP_FAIL	;0x0022
    97 00022 5066          	JMP 	JMP_FAIL	;0x0023
    98 00023 5066          	JMP 	JMP_FAIL	;0x0024
    99 00024 5066          	JMP 	JMP_FAIL	;0x0025
   100 00025 5066          	JMP 	JMP_FAIL	;0x0026
   101 00026 5066          	JMP 	JMP_FAIL	;0x0027
   102 00027 5066          	JMP 	JMP_FAIL	;0x0028
   103 00028 5066          	JMP 	JMP_FAIL	;0x0029
   104 00029 5066          	JMP 	JMP_FAIL	;0x002A
   105 0002A 5066          	JMP 	JMP_FAIL	;0x002B
   106 0002B 5066          	JMP 	JMP_FAIL	;0x002C
   107 0002C 5066          	JMP 	JMP_FAIL	;0x002D
   108 0002D 5066          	JMP 	JMP_FAIL	;0x002E
   109 0002E 5066          	JMP 	JMP_FAIL	;0x002F
   110 0002F 5066          	JMP 	JMP_FAIL	;0x0030
   111 00030 5066          	JMP 	JMP_FAIL	;0x0031
   112 00031 5066          	JMP 	JMP_FAIL	;0x0032
   113 00032 5066          	JMP 	JMP_FAIL	;0x0033
   114 00033 5066          	JMP 	JMP_FAIL	;0x0034
   115 00034 5066          	JMP 	JMP_FAIL	;0x0035
   116 00035 5066          	JMP 	JMP_FAIL	;0x0036
   117 00036 5066          	JMP 	JMP_FAIL	;0x0037
   118 00037 5066          	JMP 	JMP_FAIL	;0x0038
   119 00038 5066          	JMP 	JMP_FAIL	;0x0039
   120 00039 5066          	JMP 	JMP_FAIL	;0x003A
   121 0003A 5066          	JMP 	JMP_FAIL	;0x003B
   122 0003B 5066          	JMP 	JMP_FAIL	;0x003C
   123 0003C 5066          	JMP 	JMP_FAIL	;0x003D
   124 0003D 5066          	JMP 	JMP_FAIL	;0x003E
   125 0003E 5066          	JMP 	JMP_FAIL	;0x003F
   126 0003F 5066          	JMP 	JMP_FAIL	;0x0040
   127 00040 5066          	JMP 	JMP_FAIL	;0x0041
   128 00041 5066          	JMP 	JMP_FAIL	;0x0042
   129 00042 5066          	JMP 	JMP_FAIL	;0x0043
   130 00043 5066          	JMP 	JMP_FAIL	;0x0044
   131 00044 5066          	JMP 	JMP_FAIL	;0x0045
   132 00045 5066          	JMP 	JMP_FAIL	;0x0046
   133 00046 5066          	JMP 	JMP_FAIL	;0x0047
   134 00047 5066          	JMP 	JMP_FAIL	;0x0048
   135 00048 5066          	JMP 	JMP_FAIL	;0x0049
   136 00049 5066          	JMP 	JMP_FAIL	;0x004A
   137 0004A 5066          	JMP 	JMP_FAIL	;0x004B
   138 0004B 5066          	JMP 	JMP_FAIL	;0x004C
   139 0004C 5066          	JMP 	JMP_FAIL	;0x004D
   140 0004D 5066          	JMP 	JMP_FAIL	;0x004E
   141 0004E 5066          	JMP 	JMP_FAIL	;0x004F
   142                     ;==================== Main Function ======================
   143                     	ORG		0x0050
   144 00050               MAIN:
   145                     	;CALL 	EFT_INIT
   146 00050 406F          	CALL	SYS_INIT
   147 00051 407A          	CALL	GPIO_INIT
   148                     	;CALL	WAKE_INIT
   149                     	;CALL	KEY_DEBOUNCE
   150 00052 40AA          	CALL	RAM_SHA_INIT
   151 00053 40B4          	CALL	RAM_IND_INIT
   152                     	;CALL	TEST_EEPROM (Do not loop forever)
   153                     	;CALL	TEST_FLASH (Do not loop forever)
   154                     
   155                     ;====================== BACK_GROUND_LOOP ================
   156 00054               BACK_GROUND_LOOP:
   157 00054 7A00          	SBANK	0
   158 00055 40D3          	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
   159 00056 447D          	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
   160 00057 45AC          	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
   161 00058 4674          	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
   162 00059 46AC          	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
   163 0005A 46AD          	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
   164 0005B 46EC          	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
   165 0005C 472B          	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
   166 0005D 4751          	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
   167 0005E 475C          	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
   168 0005F 47A5          	CALL	TEST_READ_ROM			;TBRD, TBRDA
   169 00060 4F00          	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
   170 00061 4F17          	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
   171 00062 4F2E          	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
   172 00063 4F45          	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
   173 00064               	JMP_PASS:
   174 00064 0095          	BTG		P5,1
   175 00065 5054          	JMP		BACK_GROUND_LOOP
   176                     
   177                     ;====================== ERROR_LOOP =====================
   178 00066               JMP_FAIL:
   179 00066 7A00          	SBANK	0
   180 00067 2205          	BC		P5,2
   181 00068 5066          	JMP		JMP_FAIL
   182 00069               RAM_FAIL:
   183 00069 7A00          	SBANK	0
   184 0006A 2305          	BC		P5,3
   185 0006B 5069          	JMP		RAM_FAIL
   186 0006C               INS_FAIL:
   187 0006C 7A00          	SBANK	0
   188 0006D 2405          	BC		P5,4
   189 0006E 506C          	JMP		INS_FAIL
   190                     
   191                     ;================== PEIPHERAL_INITIAL ==================
   192                     	;-------------------------------;
   193 0006F               	SYS_INIT:	
   194 0006F 7A00          		SBANK	0
   195                     		;BS		CPUS	;FSYS=FM
   196 00070 260E          		BC		IDLE	;SLEEP_MODE
   197 00071 6000          		MOV		A,@0x00
   198 00072 0114          		MOV		SFR1,A
   199 00073 0117          		MOV		SFR4,A
   200 00074 0119          		MOV		SFR6,A
   201 00075 7A03          		SBANK	3
   202 00076 6000          		MOV		A,@0x00
   203 00077 014C          		MOV		SFR9,A
   204 00078 014D          		MOV		SFR10,A
   205 00079 0012          		RET
   206                     	;-------------------------------;		
   207 0007A               	GPIO_INIT:
   208 0007A 7A00          		SBANK	0
   209 0007B 0305          		CLR		P5
   210 0007C 60F0          		MOV		A,@0xF0
   211 0007D 010B          		MOV		IOCR5,A
   212 0007E 60FF          		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
   213 0007F 0105          		MOV		P5,A
   214 00080 0012          		RET
   215                     
   216                     	;-------------------------------;
   217 00081               	WAKE_INIT:
   218 00081 7A00          		SBANK	0
   219 00082 3B03          		JBS		P			; PWR ON reset(1)/RST pin reset(0)
   220 00083 5086          		JMP		$+3
   221 00084 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   222 00085 0003          		SLEP
   223 00086 3B03          		JBS		P
   224 00087 508A          		JMP		$+3
   225 00088 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   226 00089 0003          		SLEP
   227 0008A 3B03          		JBS		P
   228 0008B 508E          		JMP		$+3
   229 0008C 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   230 0008D 2005          		BC		P5,0		; PWR ON reset,Light PWR_LED
   231 0008E 0003          		SLEP		
   232 0008F 0012          		RET
   233                     	;-------------------------------;
   234 00090               	KEY_DEBOUNCE:
   235 00090 3D05          		JBS		P5,5		; Push, or not
   236 00091 5093          		JMP		$+2
   237 00092 5090          		JMP		$-2
   238 00093 3D05          		JBS		P5,5
   239 00094 5090          		JMP		KEY_DEBOUNCE
   240 00095 3D05          		JBS		P5,5
   241 00096 5090          		JMP		KEY_DEBOUNCE
   242 00097 3D05          		JBS		P5,5
   243 00098 5090          		JMP		KEY_DEBOUNCE
   244 00099 3D05          		JBS		P5,5
   245 0009A 5090          		JMP		KEY_DEBOUNCE
   246 0009B 3D05          		JBS		P5,5
   247 0009C 5090          		JMP		KEY_DEBOUNCE
   248 0009D 3D05          		JBS		P5,5
   249 0009E 5090          		JMP		KEY_DEBOUNCE
   250 0009F 3D05          		JBS		P5,5
   251 000A0 5090          		JMP		KEY_DEBOUNCE
   252 000A1 3D05          		JBS		P5,5
   253 000A2 5090          		JMP		KEY_DEBOUNCE
   254 000A3 3D05          		JBS		P5,5
   255 000A4 5090          		JMP		KEY_DEBOUNCE
   256 000A5 3D05          		JBS		P5,5
   257 000A6 50A4          		JMP		$-2
   258 000A7 60FF          		MOV		A,@0xFF		; Turn Off all LED
   259 000A8 0105          		MOV		P5,A		
   260 000A9 0012          		RET
   261                     	;-------------------------------;
   262 000AA               	RAM_SHA_INIT:
   263 000AA 6050          		MOV		A,@0x50
   264 000AB 0104          		MOV		RSR,A
   265 000AC 60FF          		MOV		A,@0xFF		;RAM_SHA_LOOP
   266 000AD 0100          		MOV		IAR,A
   267 000AE 1504          		INC		RSR
   268 000AF 6080          		MOV		A,@0x80
   269 000B0 0D04          		XOR		RSR,A
   270 000B1 3A03          		JBS		Z
   271 000B2 50AC          		JMP		$-6
   272 000B3 0012          		RET
   273                     	;-------------------------------;		
   274 000B4               	RAM_IND_INIT:
   275 000B4 6080          		MOV		A,@0x80
   276 000B5 0104          		MOV		RSR,A
   277 000B6               		RAM_IND_LOOP_0:
   278 000B6 7A40          		GBANK	0
   279 000B7 60FF          		MOV		A,@0xFF
   280 000B8 0100          		MOV		IAR,A
   281 000B9 1504          		INC		RSR
   282 000BA 6000          		MOV		A,@0x00
   283 000BB 0D04          		XOR		RSR,A
   284 000BC 3A03          		JBS		Z
   285 000BD 50B6          		JMP		RAM_IND_LOOP_0
   286 000BE 6080          		MOV		A,@0x80
   287 000BF 0104          		MOV		RSR,A
   288 000C0               		RAM_IND_LOOP_1:
   289 000C0 7A41          		GBANK	1
   290 000C1 60FF          		MOV		A,@0xFF
   291 000C2 0100          		MOV		IAR,A
   292 000C3 1504          		INC		RSR
   293 000C4 6000          		MOV		A,@0x00
   294 000C5 0D04          		XOR		RSR,A
   295 000C6 3A03          		JBS		Z
   296 000C7 50C0          		JMP		RAM_IND_LOOP_1
   297 000C8 6080          		MOV		A,@0x80
   298 000C9 0104          		MOV		RSR,A
   299 000CA 0012          		RET
   300                     	;-------------------------------;
   301 000CB               	STATUS_CLEAR:
   302 000CB 6000          		MOV		A,@0x00
   303 000CC 0103          		MOV		STATUS,A
   304 000CD 0012          		RET
   305                     	;-------------------------------;
   306 000CE               	INST_XOR_JUDGE:
   307 000CE 3A03          		JBS		Z			; IF(Z=1) BRANCH
   308 000CF 506C          		JMP		INS_FAIL
   309 000D0 3603          		JBC		N			; IF(N=0) BRANCH
   310 000D1 506C          		JMP		INS_FAIL
   311 000D2 0012          		RET
   312                     ;================== Jmp Sub Function ==================
   313 000D3               	TEST_INST_ARITHEMATIC:
   314 000D3               		INST_DAA:			;-------Instruction Test => DAA , C?
   315 000D3 6001          			MOV		A,@0x01
   316 000D4 015A          			MOV		INST,A
   317 000D5 40CB          			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
   318 000D6 60AA          			MOV		A,@0xAA
   319 000D7 0001          			DAA
   320 000D8 3803          			JBS		C			; Check C = 1?
   321 000D9 506C          			JMP	INS_FAIL
   322 000DA 3103          			JBC		DC			; Check DC = 0?
   323 000DB 506C          			JMP	INS_FAIL
   324 000DC 3203          			JBC		Z			; Check Z = 0?
   325 000DD 506C          			JMP	INS_FAIL
   326 000DE 3503          			JBC		OV			; Check OV = 0?
   327 000DF 506C          			JMP	INS_FAIL
   328 000E0 3603          			JBC		N			; Check N = 0?
   329 000E1 506C          			JMP	INS_FAIL
   330 000E2 6C10          			XOR		A,@0x10		; Check Result ?
   331 000E3 3A03          			JBS		Z			; Check Z = 1?
   332 000E4 506C          			JMP	INS_FAIL
   333 000E5 3603          			JBC		N			; Check N = 0?
   334 000E6 506C          			JMP	INS_FAIL
   335 000E7 40CB          			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
   336 000E8 6080          			MOV		A,@0x80
   337 000E9 0150          			MOV		0x50,A		; [0x50] = 0x80
   338 000EA 607F          			MOV		A,@0x7F		; 
   339 000EB 0E50          			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
   340 000EC 0001          			DAA
   341 000ED 3803          			JBS		C			; Check C = 1?
   342 000EE 506C          			JMP	INS_FAIL
   343 000EF 3103          			JBC		DC			; Check DC = 0?
   344 000F0 506C          			JMP	INS_FAIL
   345 000F1 3203          			JBC		Z			; Check Z = 0?
   346 000F2 506C          			JMP	INS_FAIL
   347 000F3 3503          			JBC		OV			; Check OV = 0?
   348 000F4 506C          			JMP	INS_FAIL
   349 000F5 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   350 000F6 506C          			JMP	INS_FAIL
   351 000F7 2203          			BC		Z
   352 000F8 2603          			BC		N
   353 000F9 6C65          			XOR		A,@0x65		; Check Result ?
   354 000FA 3A03          			JBS		Z			; Check Z = 1?
   355 000FB 506C          			JMP	INS_FAIL
   356 000FC 3603          			JBC		N			; Check N = 0?
   357 000FD 506C          			JMP	INS_FAIL
   358 000FE 0000          			NOP
   359 000FF 6000          			MOV		A,@0x00
   360 00100 0103          			MOV		STATUS,A
   361                     			;-------DAA(0x00)=66
   362 00101 2803          			BS		C
   363 00102 6080          			MOV		A,@0x80
   364 00103 0150          			MOV		0x50,A		; [0x50] = 0x80
   365 00104 607F          			MOV		A,@0x7F		; 
   366 00105 7E50          			ADC		A,0x50		; A = 0x7F + 0x80
   367 00106 0001          			DAA
   368 00107 3803          			JBS		C			; Check C = 1? 	/ By ADC
   369 00108 506C          			JMP	INS_FAIL
   370 00109 3903          			JBS		DC			; Check DC = 1? / By ADC
   371 0010A 506C          			JMP	INS_FAIL
   372 0010B 3A03          			JBS		Z			; Check Z = 1? 	/ By ADC
   373 0010C 506C          			JMP	INS_FAIL
   374 0010D 3503          			JBC		OV			; Check OV = 0?
   375 0010E 506C          			JMP	INS_FAIL
   376 0010F 3603          			JBC		N			; Check N = 0?
   377 00110 506C          			JMP	INS_FAIL
   378 00111 6C66          			XOR		A,@0x66		; Check Result ?
   379 00112 3A03          			JBS		Z			; Check Z = 1?
   380 00113 506C          			JMP	INS_FAIL
   381 00114 3603          			JBC		N			; Check N = 0?
   382 00115 506C          			JMP	INS_FAIL
   383 00116 6000          			MOV		A,@0x00
   384 00117 0103          			MOV		STATUS,A
   385                     			;-------DAA(0x80)=E6
   386 00118 60FF          			MOV		A,@0xFF
   387 00119 0150          			MOV		0x50,A		; [0x50] = 0xFF
   388 0011A 607F          			MOV		A,@0x7F		; 
   389 0011B 0450          			SUB		A,0x50		; A = 0xFF - 0x7F
   390 0011C 0001          			DAA
   391 0011D 3803          			JBS		C			; Check C = 1? 	/ By SUB
   392 0011E 506C          			JMP	INS_FAIL
   393 0011F 3903          			JBS		DC			; Check DC = 1? / By SUB
   394 00120 506C          			JMP	INS_FAIL
   395 00121 3203          			JBC		Z			; Check Z = 0?
   396 00122 506C          			JMP	INS_FAIL
   397 00123 3503          			JBC		OV			; Check OV = 0?
   398 00124 506C          			JMP	INS_FAIL
   399 00125 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   400 00126 506C          			JMP	INS_FAIL
   401 00127 2203          			BC		Z
   402 00128 2603          			BC		N
   403 00129 6CE6          			XOR		A,@0xE6		; Check Result ?
   404 0012A 3A03          			JBS		Z			; Check Z = 1?
   405 0012B 506C          			JMP	INS_FAIL
   406 0012C 3603          			JBC		N			; Check N = 0?
   407 0012D 506C          			JMP	INS_FAIL
   408                     
   409                     		
   410 0012E               		INST_CLA:			;-------Instruction Test => CLA
   411 0012E 6008          			MOV		A,@0x08
   412 0012F 015A          			MOV		INST,A
   413 00130 605A          			MOV		A,@0x5A
   414 00131 6C5A          			XOR		A,@0x5A		; Check Result ?
   415 00132 3A03          			JBS		Z			; Check Z = 1?
   416 00133 506C          			JMP	INS_FAIL
   417 00134 3603          			JBC		N			; Check N = 0?
   418 00135 506C          			JMP	INS_FAIL
   419 00136 605A          			MOV		A,@0x5A
   420 00137 0200          			CLRA
   421 00138 3A03          			JBS		Z			; Check Z = 1?
   422 00139 506C          			JMP	INS_FAIL
   423 0013A 2203          			BC		Z
   424 0013B 6C00          			XOR		A,@0x00		; Check Result ?
   425 0013C 3A03          			JBS		Z			; Check Z = 1?
   426 0013D 506C          			JMP	INS_FAIL
   427 0013E 3603          			JBC		N			; Check N = 0?
   428 0013F 506C          			JMP	INS_FAIL
   429 00140               		INST_CLR:			;-------Instruction Test => CLR
   430 00140 6009          			MOV		A,@0x09
   431 00141 015A          			MOV		INST,A
   432 00142 60AA          			MOV		A,@0xAA
   433 00143 0150          			MOV		0x50,A
   434 00144 1050          			MOV		A,0x50
   435 00145 6CAA          			XOR		A,@0xAA		; Check Result ?
   436 00146 3A03          			JBS		Z			; Check Z = 1?
   437 00147 506C          			JMP	INS_FAIL
   438 00148 3603          			JBC		N			; Check N = 0?
   439 00149 506C          			JMP	INS_FAIL
   440 0014A 0350          			CLR		0x50
   441 0014B 3A03          			JBS		Z			; Check Z = 1?
   442 0014C 506C          			JMP	INS_FAIL
   443 0014D 2203          			BC		Z
   444 0014E 1050          			MOV		A,0x50
   445 0014F 6C00          			XOR		A,@0x00		; Check Result ?
   446 00150 3A03          			JBS		Z			; Check Z = 1?
   447 00151 506C          			JMP	INS_FAIL
   448 00152 3603          			JBC		N			; Check N = 0?
   449 00153 506C          			JMP	INS_FAIL
   450 00154               		INST_SUB_A_R:		;-------Instruction Test => SUB A,R
   451 00154 600A          			MOV		A,@0x0A
   452 00155 015A          			MOV		INST,A
   453 00156 6000          			MOV		A,@0x00
   454 00157 0103          			MOV		STATUS,A
   455 00158 6002          			MOV		A,@0x02		; SUB(2-1)=1
   456 00159 0150          			MOV		0x50,A		; [0x50] = 0x02
   457 0015A 6001          			MOV		A,@0x01
   458 0015B 0450          			SUB		A,0x50		; A = [0x50] - A
   459 0015C 3803          			JBS		C			; Check C = 1? 	; Resulet is Positive
   460 0015D 506C          			JMP	INS_FAIL
   461 0015E 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   462 0015F 506C          			JMP	INS_FAIL
   463 00160 3203          			JBC		Z			; Check Z = 0?
   464 00161 506C          			JMP	INS_FAIL
   465 00162 3503          			JBC		OV			; Check OV = 0?
   466 00163 506C          			JMP	INS_FAIL
   467 00164 3603          			JBC		N			; Check N = 0?
   468 00165 506C          			JMP	INS_FAIL
   469 00166 2203          			BC		Z
   470 00167 6C01          			XOR		A,@0x01		; Check Result ?
   471 00168 3A03          			JBS		Z			; Check Z = 1?
   472 00169 506C          			JMP	INS_FAIL
   473 0016A 3603          			JBC		N			; Check N = 0?
   474 0016B 506C          			JMP	INS_FAIL
   475 0016C 6000          			MOV		A,@0x00
   476 0016D 0103          			MOV		STATUS,A
   477 0016E 6002          			MOV		A,@0x02		; SUB(2-2)=0
   478 0016F 0150          			MOV		0x50,A		; [0x50] = 0x02
   479 00170 6002          			MOV		A,@0x02
   480 00171 0450          			SUB		A,0x50		; A = [0x50] - A
   481 00172 3803          			JBS		C			; Check C = 1?	; Result is Positive
   482 00173 506C          			JMP	INS_FAIL
   483 00174 3903          			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
   484 00175 506C          			JMP	INS_FAIL
   485 00176 3A03          			JBS		Z			; Check Z = 1?	; Result is Zero
   486 00177 506C          			JMP	INS_FAIL
   487 00178 3503          			JBC		OV			; Check OV = 0?
   488 00179 506C          			JMP	INS_FAIL
   489 0017A 3603          			JBC		N			; Check N = 0?
   490 0017B 506C          			JMP	INS_FAIL
   491 0017C 2203          			BC		Z
   492 0017D 6C00          			XOR		A,@0x00		; Check Result ?
   493 0017E 3A03          			JBS		Z			; Check Z = 1?
   494 0017F 506C          			JMP	INS_FAIL
   495 00180 3603          			JBC		N			; Check N = 0?
   496 00181 506C          			JMP	INS_FAIL
   497 00182 6000          			MOV		A,@0x00
   498 00183 0103          			MOV		STATUS,A
   499 00184 60FF          			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
   500 00185 0150          			MOV		0x50,A		; [0x50] = 0xFF
   501 00186 607F          			MOV		A,@0x7F
   502 00187 0450          			SUB		A,0x50		; A = [0x50] - A
   503 00188 3803          			JBS		C			; Check C = 1?
   504 00189 506C          			JMP	INS_FAIL
   505 0018A 3903          			JBS		DC			; Check DC = 1?
   506 0018B 506C          			JMP	INS_FAIL
   507 0018C 3203          			JBC		Z			; Check Z = 0?
   508 0018D 506C          			JMP	INS_FAIL
   509 0018E 3503          			JBC		OV			; Check OV = 0?
   510 0018F 506C          			JMP	INS_FAIL
   511 00190 3E03          			JBS		N			; Check N = 1?
   512 00191 506C          			JMP	INS_FAIL
   513 00192 2203          			BC		Z
   514 00193 2603          			BC		N
   515 00194 6C80          			XOR		A,@0x80		; Check Result ?
   516 00195 3A03          			JBS		Z			; Check Z = 1?
   517 00196 506C          			JMP	INS_FAIL
   518 00197 3603          			JBC		N			; Check N = 0?
   519 00198 506C          			JMP	INS_FAIL
   520 00199 6000          			MOV		A,@0x00
   521 0019A 0103          			MOV		STATUS,A
   522 0019B 6080          			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
   523 0019C 0150          			MOV		0x50,A		; [0x50] = 0x80
   524 0019D 607F          			MOV		A,@0x7F
   525 0019E 0450          			SUB		A,0x50		; A = [0x50] - A
   526 0019F 3803          			JBS		C			; Check C = 1?
   527 001A0 506C          			JMP	INS_FAIL
   528 001A1 3103          			JBC		DC			; Check DC = 0?
   529 001A2 506C          			JMP	INS_FAIL
   530 001A3 3203          			JBC		Z			; Check Z = 0?
   531 001A4 506C          			JMP	INS_FAIL
   532 001A5 3D03          			JBS		OV			; Check OV = 1?
   533 001A6 506C          			JMP	INS_FAIL
   534 001A7 3603          			JBC		N			; Check N = 0?
   535 001A8 506C          			JMP	INS_FAIL
   536 001A9 2203          			BC		Z
   537 001AA 2603          			BC		N
   538 001AB 6C01          			XOR		A,@0x01		; Check Result ?
   539 001AC 3A03          			JBS		Z			; Check Z = 1?
   540 001AD 506C          			JMP	INS_FAIL
   541 001AE 3603          			JBC		N			; Check N = 0?
   542 001AF 506C          			JMP	INS_FAIL
   543 001B0 6000          			MOV		A,@0x00
   544 001B1 0103          			MOV		STATUS,A
   545 001B2 6001          			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
   546 001B3 0150          			MOV		0x50,A		; [0x50] = 0x01
   547 001B4 6003          			MOV		A,@0x03
   548 001B5 0450          			SUB		A,0x50		; A = [0x50] - A
   549 001B6 3003          			JBC		C			; Check C = 0?
   550 001B7 506C          			JMP	INS_FAIL
   551 001B8 3103          			JBC		DC			; Check DC = 0?
   552 001B9 506C          			JMP	INS_FAIL
   553 001BA 3203          			JBC		Z			; Check Z = 0?
   554 001BB 506C          			JMP	INS_FAIL
   555 001BC 3503          			JBC		OV			; Check OV = 0?
   556 001BD 506C          			JMP	INS_FAIL
   557 001BE 3E03          			JBS		N			; Check N = 1?
   558 001BF 506C          			JMP	INS_FAIL
   559 001C0 2203          			BC		Z
   560 001C1 2603          			BC		N
   561 001C2 6CFE          			XOR		A,@0xFE		; Check Result ?
   562 001C3 3A03          			JBS		Z			; Check Z = 1?
   563 001C4 506C          			JMP	INS_FAIL
   564 001C5 3603          			JBC		N			; Check N = 0?
   565 001C6 506C          			JMP	INS_FAIL
   566 001C7               		INST_SUB_R_A:		;-------Instruction Test => SUB R,A
   567 001C7 600B          			MOV		A,@0x0B
   568 001C8 015A          			MOV		INST,A
   569 001C9 6000          			MOV		A,@0x00
   570 001CA 0103          			MOV		STATUS,A
   571 001CB 6002          			MOV		A,@0x02
   572 001CC 0150          			MOV		0x50,A		; [0x50] = 0x02
   573 001CD 6001          			MOV		A,@0x01
   574 001CE 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   575 001CF 1003          			MOV		A,STATUS
   576 001D0 6C1B          			XOR		A,@0x1B		; for non reset
   577                     			;;XOR		A,@0x13
   578 001D1 40CE          			CALL	INST_XOR_JUDGE
   579 001D2 2203          			BC		Z
   580 001D3 2603          			BC		N
   581 001D4 1050          			MOV		A,0x50
   582 001D5 6C01          			XOR		A,@0x01		; Check Result ?
   583 001D6 40CE          			CALL	INST_XOR_JUDGE
   584 001D7 6000          			MOV		A,@0x00
   585 001D8 0103          			MOV		STATUS,A
   586 001D9 6002          			MOV		A,@0x02
   587 001DA 0150          			MOV		0x50,A		; [0x50] = 0x02
   588 001DB 6002          			MOV		A,@0x02
   589 001DC 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x02
   590 001DD 1003          			MOV		A,STATUS
   591 001DE 6C1F          			XOR		A,@0x1F		; for nono reset
   592                     			;;XOR		A,@0x17
   593 001DF 40CE          			CALL	INST_XOR_JUDGE
   594 001E0 2203          			BC		Z
   595 001E1 2603          			BC		N
   596 001E2 1050          			MOV		A,0x50
   597 001E3 6C00          			XOR		A,@0x00		; Check Result ?
   598 001E4 3A03          			JBS		Z			; Check Z = 1?
   599 001E5 506C          			JMP	INS_FAIL
   600 001E6 3603          			JBC		N			; Check N = 0?
   601 001E7 506C          			JMP	INS_FAIL
   602 001E8 6000          			MOV		A,@0x00
   603 001E9 0103          			MOV		STATUS,A
   604 001EA 6080          			MOV		A,@0x80
   605 001EB 0150          			MOV		0x50,A		; [0x50] = 0x80
   606 001EC 6001          			MOV		A,@0x01
   607 001ED 0550          			SUB		0x50,A		; [0x50] = [0x50] - 0x01
   608 001EE 1003          			MOV		A,STATUS
   609 001EF 6C39          			XOR		A,@0x39	;; for non reset
   610                     			;;XOR		A,@0x31
   611 001F0 40CE          			CALL	INST_XOR_JUDGE
   612 001F1 2203          			BC		Z
   613 001F2 2603          			BC		N
   614 001F3 1050          			MOV		A,0x50
   615 001F4 6C7F          			XOR		A,@0x7F		; Check Result ?
   616 001F5 40CE          			CALL	INST_XOR_JUDGE
   617 001F6               		INST_SUB_A_K:		;-------Instruction Test => SUB A,k
   618 001F6 6030          			MOV		A,@0x30
   619 001F7 015A          			MOV		INST,A
   620 001F8 40CB          			CALL	STATUS_CLEAR
   621 001F9 60FF          			MOV		A,@0xFF		; 0xFF-0xFF
   622 001FA 74FF          			SUB		A,@0xFF		; A = 0xFF - 0xFF
   623 001FB 3803          			JBS		C			; Check C = 1?
   624 001FC 506C          			JMP	INS_FAIL
   625 001FD 3903          			JBS		DC			; Check DC = 1?
   626 001FE 506C          			JMP	INS_FAIL
   627 001FF 3A03          			JBS		Z			; Check Z = 1?
   628 00200 506C          			JMP	INS_FAIL
   629 00201 3503          			JBC		OV			; Check OV = 0?
   630 00202 506C          			JMP	INS_FAIL
   631 00203 3603          			JBC		N			; Check N = 0?
   632 00204 506C          			JMP	INS_FAIL
   633 00205 6C00          			XOR		A,@0x00		; Check Result ?
   634 00206 40CE          			CALL	INST_XOR_JUDGE
   635 00207 40CB          			CALL	STATUS_CLEAR
   636 00208 607F          			MOV		A,@0x7F		; 0x00-0x7F
   637 00209 7400          			SUB		A,@0x00		; A = 0x00 - 0x7F
   638 0020A 3003          			JBC		C			; Check C = 0?
   639 0020B 506C          			JMP	INS_FAIL
   640 0020C 3103          			JBC		DC			; Check DC = 0?
   641 0020D 506C          			JMP	INS_FAIL
   642 0020E 3203          			JBC		Z			; Check Z = 0?
   643 0020F 506C          			JMP	INS_FAIL
   644 00210 3503          			JBC		OV			; Check OV = 0?
   645 00211 506C          			JMP	INS_FAIL
   646 00212 3E03          			JBS		N			; Check N = 1?
   647 00213 506C          			JMP	INS_FAIL
   648 00214 6C81          			XOR		A,@0x81		; Check Result ?
   649 00215 40CE          			CALL	INST_XOR_JUDGE
   650 00216 40CB          			CALL	STATUS_CLEAR
   651 00217 6001          			MOV		A,@0x01		; 0x80-0x01
   652 00218 7480          			SUB		A,@0x80		; A = 0x80 - 0x01
   653 00219 3803          			JBS		C			; Check C = 1?
   654 0021A 506C          			JMP	INS_FAIL
   655 0021B 3103          			JBC		DC			; Check DC = 0?
   656 0021C 506C          			JMP	INS_FAIL
   657 0021D 3203          			JBC		Z			; Check Z = 0?
   658 0021E 506C          			JMP	INS_FAIL
   659 0021F 3D03          			JBS		OV			; Check OV = 1?
   660 00220 506C          			JMP	INS_FAIL
   661 00221 3603          			JBC		N			; Check N = 0?
   662 00222 506C          			JMP	INS_FAIL
   663 00223 6C7F          			XOR		A,@0x7F		; Check Result ?
   664 00224 40CE          			CALL	INST_XOR_JUDGE
   665 00225               		INST_SUBB_A_R:		;-------Instruction Test => SUBB A,R
   666 00225 6031          			MOV		A,@0x31
   667 00226 015A          			MOV		INST,A
   668 00227 40CB          			CALL	STATUS_CLEAR
   669 00228 2003          			BC		C			; B = 1
   670 00229 6000          			MOV		A,@0x00		;0x00-0xF
   671 0022A 0150          			MOV		0x50,A		; [0x50] = 0x00
   672 0022B 60FF          			MOV		A,@0xFF		; A = 0x01
   673 0022C 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   674 0022D 3003          			JBC		C			; Check C = 0?
   675 0022E 506C          			JMP	INS_FAIL
   676 0022F 3103          			JBC		DC			; Check DC = 0?
   677 00230 506C          			JMP	INS_FAIL
   678 00231 3A03          			JBS		Z			; Check Z = 1?
   679 00232 506C          			JMP	INS_FAIL
   680 00233 3503          			JBC		OV			; Check OV = 0?
   681 00234 506C          			JMP	INS_FAIL
   682 00235 3603          			JBC		N			; Check N = 0?
   683 00236 506C          			JMP	INS_FAIL
   684 00237 6C00          			XOR		A,@0x00		; Check Result ?
   685 00238 40CE          			CALL	INST_XOR_JUDGE	
   686 00239 40CB          			CALL	STATUS_CLEAR
   687 0023A 2003          			BC		C			; B = 1
   688 0023B 6000          			MOV		A,@0x00		; 0x00-0x7F
   689 0023C 0150          			MOV		0x50,A		; [0x50] = 0x00
   690 0023D 607F          			MOV		A,@0x7F		; A = 0x01
   691 0023E 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   692 0023F 3003          			JBC		C			; Check C = 0?
   693 00240 506C          			JMP	INS_FAIL
   694 00241 3103          			JBC		DC			; Check DC = 0?
   695 00242 506C          			JMP	INS_FAIL
   696 00243 3203          			JBC		Z			; Check Z = 0?
   697 00244 506C          			JMP	INS_FAIL
   698 00245 3503          			JBC		OV			; Check OV = 0?
   699 00246 506C          			JMP	INS_FAIL
   700 00247 3E03          			JBS		N			; Check N = 1?
   701 00248 506C          			JMP	INS_FAIL
   702 00249 6C80          			XOR		A,@0x80		; Check Result ?
   703 0024A 40CE          			CALL	INST_XOR_JUDGE
   704 0024B 40CB          			CALL	STATUS_CLEAR
   705 0024C 2003          			BC		C			; B = 1
   706 0024D 6080          			MOV		A,@0x80		; 0x80-0x01
   707 0024E 0150          			MOV		0x50,A		; [0x50] = 0x80
   708 0024F 6001          			MOV		A,@0x01		; A = 0x01
   709 00250 7850          			SUBB	A,0x50		; A = [0x50] - A - B
   710 00251 3803          			JBS		C			; Check C = 1?
   711 00252 506C          			JMP	INS_FAIL
   712 00253 3103          			JBC		DC			; Check DC = 0?
   713 00254 506C          			JMP	INS_FAIL
   714 00255 3203          			JBC		Z			; Check Z = 0?
   715 00256 506C          			JMP	INS_FAIL
   716 00257 3D03          			JBS		OV			; Check OV = 1?
   717 00258 506C          			JMP	INS_FAIL
   718 00259 3603          			JBC		N			; Check N = 0?
   719 0025A 506C          			JMP	INS_FAIL
   720 0025B 6C7E          			XOR		A,@0x7E		; Check Result ?
   721 0025C 40CE          			CALL	INST_XOR_JUDGE
   722 0025D               		INST_SUBB_R_A:			;-------Instruction Test => SUBB R,A
   723 0025D 6032          			MOV		A,@0x32
   724 0025E 015A          			MOV		INST,A
   725 0025F 40CB          			CALL	STATUS_CLEAR
   726 00260 2003          			BC		C			; B = 1
   727 00261 6000          			MOV		A,@0x00		; 0x00-0xFF
   728 00262 0150          			MOV		0x50,A		; [0x50] = 0x00
   729 00263 60FF          			MOV		A,@0xFF
   730 00264 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
   731 00265 1003          			MOV		A,STATUS
   732 00266 6C1C          			XOR		A,@0x1C		; Check Status ?
   733                     			;;XOR		A,@0x14		; Check Status ?
   734 00267 40CE          			CALL	INST_XOR_JUDGE
   735 00268 1050          			MOV		A,0x50
   736 00269 6C00          			XOR		A,@0x00		; Check Result ?
   737 0026A 40CE          			CALL	INST_XOR_JUDGE
   738 0026B 40CB          			CALL	STATUS_CLEAR
   739 0026C 2003          			BC		C			; B = 1
   740 0026D 6000          			MOV		A,@0x00		; 0x00-0x7F
   741 0026E 0150          			MOV		0x50,A		; [0x50] = 0x00
   742 0026F 607F          			MOV		A,@0x7F
   743 00270 7950          			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
   744 00271 1003          			MOV		A,STATUS
   745 00272 6C58          			XOR		A,@0x58		; Check Status ?
   746                     			;;XOR		A,@0x50		; Check Status ?
   747 00273 40CE          			CALL	INST_XOR_JUDGE
   748 00274 1050          			MOV		A,0x50
   749 00275 6C80          			XOR		A,@0x80		; Check Result ?
   750 00276 40CE          			CALL	INST_XOR_JUDGE
   751 00277 40CB          			CALL	STATUS_CLEAR
   752 00278 2003          			BC		C			; B = 1
   753 00279 6080          			MOV		A,@0x80		; ,0x80-0x01
   754 0027A 0150          			MOV		0x50,A		; [0x50] = 0x80
   755 0027B 6001          			MOV		A,@0x01
   756 0027C 7950          			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
   757 0027D 1003          			MOV		A,STATUS
   758 0027E 6C39          			XOR		A,@0x39		; Check Status ?
   759                     			;;XOR		A,@0x31		; Check Status ?
   760 0027F 40CE          			CALL	INST_XOR_JUDGE
   761 00280 1050          			MOV		A,0x50
   762 00281 6C7E          			XOR		A,@0x7E		; Check Result ?
   763 00282 40CE          			CALL	INST_XOR_JUDGE
   764                     
   765 00283               		INST_DECA:			;-------Instruction Test => DECA R
   766 00283 600C          			MOV		A,@0x0C
   767 00284 015A          			MOV		INST,A
   768 00285 6000          			MOV		A,@0x00
   769 00286 0103          			MOV		STATUS,A
   770 00287 6020          			MOV		A,@0x20		; 0x20-1
   771 00288 0150          			MOV		0x50,A		; [0x50] = 0x20
   772 00289 0650          			DECA	0x50		; A = [0x50] - 1
   773 0028A 3803          			JBS		C			; Check C = 1?	; Result is Positive
   774 0028B 506C          			JMP	INS_FAIL
   775 0028C 3103          			JBC		DC			; Check DC = 0?
   776 0028D 506C          			JMP	INS_FAIL
   777 0028E 3203          			JBC		Z			; Check Z = 0?
   778 0028F 506C          			JMP	INS_FAIL
   779 00290 3503          			JBC		OV			; Check OV = 0?
   780 00291 506C          			JMP	INS_FAIL
   781 00292 3603          			JBC		N			; Check N = 0?
   782 00293 506C          			JMP	INS_FAIL
   783 00294 6C1F          			XOR		A,@0x1F		; Check Result ?
   784 00295 3A03          			JBS		Z			; Check Z = 1?
   785 00296 506C          			JMP	INS_FAIL
   786 00297 3603          			JBC		N			; Check N = 0?
   787 00298 506C          			JMP	INS_FAIL
   788 00299 6000          			MOV		A,@0x00
   789 0029A 0103          			MOV		STATUS,A
   790 0029B 6001          			MOV		A,@0x01		; 0x01-1
   791 0029C 0150          			MOV		0x50,A		; [0x50] = 0x01
   792 0029D 0650          			DECA	0x50		; A = [0x50] - 1
   793 0029E 3803          			JBS		C			; Check C = 1?	; Result is Positive
   794 0029F 506C          			JMP	INS_FAIL
   795 002A0 3903          			JBS		DC			; Check DC = 1?
   796 002A1 506C          			JMP	INS_FAIL
   797 002A2 3A03          			JBS		Z			; Check Z = 1?
   798 002A3 506C          			JMP	INS_FAIL
   799 002A4 3503          			JBC		OV			; Check OV = 0?
   800 002A5 506C          			JMP	INS_FAIL
   801 002A6 3603          			JBC		N			; Check N = 0?
   802 002A7 506C          			JMP	INS_FAIL
   803 002A8 2203          			BC		Z
   804 002A9 6C00          			XOR		A,@0x00		; Check Result ?
   805 002AA 3A03          			JBS		Z			; Check Z = 1?
   806 002AB 506C          			JMP	INS_FAIL
   807 002AC 3603          			JBC		N			; Check N = 0?
   808 002AD 506C          			JMP	INS_FAIL
   809 002AE 6000          			MOV		A,@0x00
   810 002AF 0103          			MOV		STATUS,A
   811 002B0 6000          			MOV		A,@0x00		; 0x00-1
   812 002B1 0150          			MOV		0x50,A		; [0x50] = 0x00
   813 002B2 0650          			DECA	0x50		; A = [0x50] - 1
   814 002B3 3003          			JBC		C			; Check C = 0?
   815 002B4 506C          			JMP	INS_FAIL
   816 002B5 3103          			JBC		DC			; Check DC = 0?
   817 002B6 506C          			JMP	INS_FAIL
   818 002B7 3203          			JBC		Z			; Check Z = 0?
   819 002B8 506C          			JMP	INS_FAIL
   820 002B9 3503          			JBC		OV			; Check OV = 0?
   821 002BA 506C          			JMP	INS_FAIL
   822 002BB 3E03          			JBS		N			; Check N = 1?
   823 002BC 506C          			JMP	INS_FAIL
   824 002BD 2203          			BC		Z
   825 002BE 2603          			BC		N
   826 002BF 6CFF          			XOR		A,@0xFF		; Check Result ?
   827 002C0 3A03          			JBS		Z			; Check Z = 1?
   828 002C1 506C          			JMP	INS_FAIL
   829 002C2 3603          			JBC		N			; Check N = 0?
   830 002C3 506C          			JMP	INS_FAIL
   831 002C4 6000          			MOV		A,@0x00
   832 002C5 0103          			MOV		STATUS,A
   833 002C6 6080          			MOV		A,@0x80		; 0x80-1
   834 002C7 0150          			MOV		0x50,A		; [0x50] = 0x80
   835 002C8 0650          			DECA	0x50		; A = [0x50] - 1
   836 002C9 3803          			JBS		C			; Check C = 1?
   837 002CA 506C          			JMP	INS_FAIL
   838 002CB 3103          			JBC		DC			; Check DC = 0?
   839 002CC 506C          			JMP	INS_FAIL
   840 002CD 3203          			JBC		Z			; Check Z = 0?
   841 002CE 506C          			JMP	INS_FAIL
   842 002CF 3D03          			JBS		OV			; Check OV = 1?
   843 002D0 506C          			JMP	INS_FAIL
   844 002D1 3603          			JBC		N			; Check N = 0?
   845 002D2 506C          			JMP	INS_FAIL
   846 002D3 2203          			BC		Z
   847 002D4 2603          			BC		N
   848 002D5 6C7F          			XOR		A,@0x7F		; Check Result ?
   849 002D6 3A03          			JBS		Z			; Check Z = 1?
   850 002D7 506C          			JMP	INS_FAIL
   851 002D8 3603          			JBC		N			; Check N = 0?
   852 002D9 506C          			JMP	INS_FAIL
   853                     
   854                     
   855                     
   856 002DA               		INST_DEC:			;-------Instruction Test => DEC R
   857 002DA 600D          			MOV		A,@0x0D
   858 002DB 015A          			MOV		INST,A
   859 002DC 6000          			MOV		A,@0x00
   860 002DD 0103          			MOV		STATUS,A
   861 002DE 6020          			MOV		A,@0x20		; 0x20-1
   862 002DF 0150          			MOV		0x50,A		; [0x50] = 0x20
   863 002E0 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   864 002E1 1003          			MOV		A,STATUS
   865 002E2 6C19          			XOR		A,@0x19		; Check Status ? for non rest
   866                     			;;XOR		A,@0x11		; Check Status ?
   867 002E3 3A03          			JBS		Z			; Check Z = 1?
   868 002E4 506C          			JMP	INS_FAIL
   869 002E5 3603          			JBC		N			; Check N = 0?
   870 002E6 506C          			JMP	INS_FAIL
   871 002E7 2203          			BC		Z
   872 002E8 1050          			MOV		A,0x50
   873 002E9 6C1F          			XOR		A,@0x1F		; Check Result ?
   874 002EA 3A03          			JBS		Z			; Check Z = 1?
   875 002EB 506C          			JMP	INS_FAIL
   876 002EC 3603          			JBC		N			; Check N = 0?
   877 002ED 506C          			JMP	INS_FAIL
   878 002EE 6000          			MOV		A,@0x00
   879 002EF 0103          			MOV		STATUS,A
   880 002F0 6001          			MOV		A,@0x01		; 0x01-1
   881 002F1 0150          			MOV		0x50,A		; [0x50] = 0x01
   882 002F2 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   883 002F3 1003          			MOV		A,STATUS
   884 002F4 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
   885                     			;;XOR		A,@0x17		; Check Status ?
   886 002F5 3A03          			JBS		Z			; Check Z = 1?
   887 002F6 506C          			JMP	INS_FAIL
   888 002F7 3603          			JBC		N			; Check N = 0?
   889 002F8 506C          			JMP	INS_FAIL
   890 002F9 2203          			BC		Z
   891 002FA 1050          			MOV		A,0x50
   892 002FB 6C00          			XOR		A,@0x00		; Check Result ?
   893 002FC 3A03          			JBS		Z			; Check Z = 1?
   894 002FD 506C          			JMP	INS_FAIL
   895 002FE 3603          			JBC		N			; Check N = 0?
   896 002FF 506C          			JMP	INS_FAIL
   897 00300 6000          			MOV		A,@0x00
   898 00301 0103          			MOV		STATUS,A
   899 00302 6000          			MOV		A,@0x00		; 0x00-1
   900 00303 0150          			MOV		0x50,A		; [0x50] = 0x00
   901 00304 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   902 00305 1003          			MOV		A,STATUS
   903 00306 6C58          			XOR		A,@0x58		; Check Status ? for non reset
   904                     			;;XOR		A,@0x50		; Check Status ?
   905 00307 3A03          			JBS		Z			; Check Z = 1?
   906 00308 506C          			JMP	INS_FAIL
   907 00309 3603          			JBC		N			; Check N = 0?
   908 0030A 506C          			JMP	INS_FAIL
   909 0030B 2203          			BC		Z
   910 0030C 1050          			MOV		A,0x50
   911 0030D 6CFF          			XOR		A,@0xFF		; Check Result ?
   912 0030E 3A03          			JBS		Z			; Check Z = 1?
   913 0030F 506C          			JMP	INS_FAIL
   914 00310 3603          			JBC		N			; Check N = 0?
   915 00311 506C          			JMP	INS_FAIL
   916 00312 6000          			MOV		A,@0x00
   917 00313 0103          			MOV		STATUS,A
   918 00314 6080          			MOV		A,@0x80		; 0x80-1
   919 00315 0150          			MOV		0x50,A		; [0x50] = 0x80
   920 00316 0750          			DEC		0x50		; [0x50] = [0x50] - 0x01
   921 00317 1003          			MOV		A,STATUS
   922 00318 6C39          			XOR		A,@0x39		; Check Status ? for non reset
   923                     			;;XOR		A,@0x31		; Check Status ?
   924 00319 3A03          			JBS		Z			; Check Z = 1?
   925 0031A 506C          			JMP	INS_FAIL
   926 0031B 3603          			JBC		N			; Check N = 0?
   927 0031C 506C          			JMP	INS_FAIL
   928 0031D 2203          			BC		Z
   929 0031E 1050          			MOV		A,0x50
   930 0031F 6C7F          			XOR		A,@0x7F		; Check Result ?
   931 00320 3A03          			JBS		Z			; Check Z = 1?
   932 00321 506C          			JMP	INS_FAIL
   933 00322 3603          			JBC		N			; Check N = 0?
   934 00323 506C          			JMP	INS_FAIL
   935                     
   936 00324               		INST_ADD_A_R:		;-------Instruction Test => ADD A,R
   937 00324 6012          			MOV		A,@0x12
   938 00325 015A          			MOV		INST,A
   939 00326 40CB          			CALL	STATUS_CLEAR	; 0x80+0x7F
   940 00327 6080          			MOV		A,@0x80
   941 00328 0150          			MOV		0x50,A		; [0x50] = 0x80
   942 00329 607F          			MOV		A,@0x7F		; 
   943 0032A 0E50          			ADD		A,0x50		; A = 0x7F + 0x80
   944 0032B 3003          			JBC		C			; Check C = 0?
   945 0032C 506C          			JMP	INS_FAIL
   946 0032D 3103          			JBC		DC			; Check DC = 0?
   947 0032E 506C          			JMP	INS_FAIL
   948 0032F 3203          			JBC		Z			; Check Z = 0?
   949 00330 506C          			JMP	INS_FAIL
   950 00331 3503          			JBC		OV			; Check OV = 0?
   951 00332 506C          			JMP	INS_FAIL
   952 00333 3E03          			JBS		N			; Check N = 1?	; Result is Negative
   953 00334 506C          			JMP	INS_FAIL
   954 00335 2203          			BC		Z
   955 00336 2603          			BC		N
   956 00337 6CFF          			XOR		A,@0xFF		; Check Result ?
   957 00338 3A03          			JBS		Z			; Check Z = 1?
   958 00339 506C          			JMP	INS_FAIL
   959 0033A 3603          			JBC		N			; Check N = 0?
   960 0033B 506C          			JMP	INS_FAIL
   961 0033C 40CB          			CALL	STATUS_CLEAR	; 0xFF+0x01
   962 0033D 60FF          			MOV		A,@0xFF
   963 0033E 0150          			MOV		0x50,A		; [0x50] = 0xFF
   964 0033F 6001          			MOV		A,@0x01		; 
   965 00340 0E50          			ADD		A,0x50		; A = 0x01 + 0xFF
   966 00341 3803          			JBS		C			; Check C = 1?
   967 00342 506C          			JMP	INS_FAIL
   968 00343 3903          			JBS		DC			; Check DC = 1?
   969 00344 506C          			JMP	INS_FAIL
   970 00345 3A03          			JBS		Z			; Check Z = 1?
   971 00346 506C          			JMP	INS_FAIL
   972 00347 3503          			JBC		OV			; Check OV = 0?
   973 00348 506C          			JMP	INS_FAIL
   974 00349 3603          			JBC		N			; Check N = 0?
   975 0034A 506C          			JMP	INS_FAIL
   976 0034B 2203          			BC		Z
   977 0034C 2603          			BC		N
   978 0034D 6C00          			XOR		A,@0x00		; Check Result ?
   979 0034E 3A03          			JBS		Z			; Check Z = 1?
   980 0034F 506C          			JMP	INS_FAIL
   981 00350 3603          			JBC		N			; Check N = 0?
   982 00351 506C          			JMP	INS_FAIL
   983 00352 40CB          			CALL	STATUS_CLEAR	; 0x7F+0x01
   984 00353 607F          			MOV		A,@0x7F
   985 00354 0150          			MOV		0x50,A		; [0x50] = 0x7F
   986 00355 6001          			MOV		A,@0x01		; 
   987 00356 0E50          			ADD		A,0x50		; A = 0x01 + 0x7F
   988 00357 3003          			JBC		C			; Check C = 0?
   989 00358 506C          			JMP	INS_FAIL
   990 00359 3903          			JBS		DC			; Check DC = 1?
   991 0035A 506C          			JMP	INS_FAIL
   992 0035B 3203          			JBC		Z			; Check Z = 0?
   993 0035C 506C          			JMP	INS_FAIL
   994 0035D 3D03          			JBS		OV			; Check OV = 1?
   995 0035E 506C          			JMP	INS_FAIL
   996 0035F 3E03          			JBS		N			; Check N = 1?
   997 00360 506C          			JMP	INS_FAIL
   998 00361 2203          			BC		Z
   999 00362 2603          			BC		N
  1000 00363 6C80          			XOR		A,@0x80		; Check Result ?
  1001 00364 3A03          			JBS		Z			; Check Z = 1?
  1002 00365 506C          			JMP	INS_FAIL
  1003 00366 3603          			JBC		N			; Check N = 0?
  1004 00367 506C          			JMP	INS_FAIL
  1005 00368               		INST_ADD_R_A:		;-------Instruction Test => ADD R,A
  1006 00368 6013          			MOV		A,@0x13
  1007 00369 015A          			MOV		INST,A
  1008 0036A 40CB          			CALL	STATUS_CLEAR	; 0x80+0x7F
  1009 0036B 6080          			MOV		A,@0x80
  1010 0036C 0150          			MOV		0x50,A		; [0x50] = 0x80
  1011 0036D 607F          			MOV		A,@0x7F		; A = 0x7F
  1012 0036E 0F50          			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
  1013 0036F 1003          			MOV		A,STATUS
  1014 00370 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1015                     			;;XOR		A,@0x50		; Check Status ?
  1016 00371 3A03          			JBS		Z			; Check Z = 1?
  1017 00372 506C          			JMP	INS_FAIL
  1018 00373 3603          			JBC		N			; Check N = 0?
  1019 00374 506C          			JMP	INS_FAIL
  1020 00375 1050          			MOV		A,0x50
  1021 00376 6CFF          			XOR		A,@0xFF		; Check Result ?
  1022 00377 3A03          			JBS		Z			; Check Z = 1?
  1023 00378 506C          			JMP	INS_FAIL
  1024 00379 3603          			JBC		N			; Check N = 0?
  1025 0037A 506C          			JMP	INS_FAIL
  1026 0037B 40CB          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1027 0037C 60FF          			MOV		A,@0xFF
  1028 0037D 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1029 0037E 6001          			MOV		A,@0x01		; A = 0x01
  1030 0037F 0F50          			ADD		0x50,A		; [0x50] = 0xFF + 0x01
  1031 00380 1003          			MOV		A,STATUS
  1032 00381 6C1F          			XOR		A,@0x1F		; Check Status ? for non reset
  1033                     			;;XOR		A,@0x17		; Check Status ?
  1034 00382 3A03          			JBS		Z			; Check Z = 1?
  1035 00383 506C          			JMP	INS_FAIL
  1036 00384 3603          			JBC		N			; Check N = 0?
  1037 00385 506C          			JMP	INS_FAIL
  1038 00386 1050          			MOV		A,0x50
  1039 00387 6C00          			XOR		A,@0x00		; Check Result ?
  1040 00388 3A03          			JBS		Z			; Check Z = 1?
  1041 00389 506C          			JMP	INS_FAIL
  1042 0038A 3603          			JBC		N			; Check N = 0?
  1043 0038B 506C          			JMP	INS_FAIL
  1044 0038C 40CB          			CALL	STATUS_CLEAR	;0x7F+0x01
  1045 0038D 607F          			MOV		A,@0x7F
  1046 0038E 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1047 0038F 6001          			MOV		A,@0x01		; A = 0x01
  1048 00390 0F50          			ADD		0x50,A		; [0x50] = 0x7F + 0x01
  1049 00391 1003          			MOV		A,STATUS
  1050 00392 6C7A          			XOR		A,@0x7A		; Check Status ? for non reset
  1051                     			;;XOR		A,@0x72		; Check Status ?
  1052 00393 3A03          			JBS		Z			; Check Z = 1?
  1053 00394 506C          			JMP	INS_FAIL
  1054 00395 3603          			JBC		N			; Check N = 0?
  1055 00396 506C          			JMP	INS_FAIL
  1056 00397 1050          			MOV		A,0x50
  1057 00398 6C80          			XOR		A,@0x80		; Check Result ?
  1058 00399 3A03          			JBS		Z			; Check Z = 1?
  1059 0039A 506C          			JMP	INS_FAIL
  1060 0039B 3603          			JBC		N			; Check N = 0?
  1061 0039C 506C          			JMP	INS_FAIL
  1062 0039D               		INST_ADD_A_K:		;-------Instruction Test => ADD A,k
  1063 0039D 6034          			MOV		A,@0x34
  1064 0039E 015A          			MOV		INST,A
  1065 0039F 40CB          			CALL	STATUS_CLEAR
  1066 003A0 607F          			MOV		A,@0x7F		;0x7F+0x01
  1067 003A1 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1068 003A2 3003          			JBC		C			; Check C = 0?
  1069 003A3 506C          			JMP	INS_FAIL
  1070 003A4 3903          			JBS		DC			; Check DC = 1?
  1071 003A5 506C          			JMP	INS_FAIL
  1072 003A6 3203          			JBC		Z			; Check Z = 0?
  1073 003A7 506C          			JMP	INS_FAIL
  1074 003A8 3D03          			JBS		OV			; Check OV = 1?
  1075 003A9 506C          			JMP	INS_FAIL
  1076 003AA 3E03          			JBS		N			; Check N = 1?
  1077 003AB 506C          			JMP	INS_FAIL
  1078 003AC 6C80          			XOR		A,@0x80		; Check Result ?
  1079 003AD 40CE          			CALL	INST_XOR_JUDGE
  1080 003AE 40CB          			CALL	STATUS_CLEAR
  1081 003AF 60FF          			MOV		A,@0xFF		;0xFF+0x01
  1082 003B0 7C01          			ADD		A,@0x01		; A = 0x01 + A
  1083 003B1 3803          			JBS		C			; Check C = 1?
  1084 003B2 506C          			JMP	INS_FAIL
  1085 003B3 3903          			JBS		DC			; Check DC = 1?
  1086 003B4 506C          			JMP	INS_FAIL
  1087 003B5 3A03          			JBS		Z			; Check Z = 1?
  1088 003B6 506C          			JMP	INS_FAIL
  1089 003B7 3503          			JBC		OV			; Check OV = 0?
  1090 003B8 506C          			JMP	INS_FAIL
  1091 003B9 3603          			JBC		N			; Check N = 0?
  1092 003BA 506C          			JMP	INS_FAIL
  1093 003BB 6C00          			XOR		A,@0x00		; Check Result ?
  1094 003BC 40CE          			CALL	INST_XOR_JUDGE
  1095 003BD 40CB          			CALL	STATUS_CLEAR
  1096 003BE 607F          			MOV		A,@0x7F		; 0x80+0x7F
  1097 003BF 7C80          			ADD		A,@0x80		; A = 0x80 + A
  1098 003C0 3003          			JBC		C			; Check C = 0?
  1099 003C1 506C          			JMP	INS_FAIL
  1100 003C2 3103          			JBC		DC			; Check DC = 0?
  1101 003C3 506C          			JMP	INS_FAIL
  1102 003C4 3203          			JBC		Z			; Check Z = 0?
  1103 003C5 506C          			JMP	INS_FAIL
  1104 003C6 3503          			JBC		OV			; Check OV = 0?
  1105 003C7 506C          			JMP	INS_FAIL
  1106 003C8 3E03          			JBS		N			; Check N = 1?
  1107 003C9 506C          			JMP	INS_FAIL
  1108 003CA 6CFF          			XOR		A,@0xFF		; Check Result ?
  1109 003CB 40CE          			CALL	INST_XOR_JUDGE
  1110 003CC               		INST_ADC_A_R:		;-------Instruction Test => ADC A,R
  1111 003CC 6036          			MOV		A,@0x36
  1112 003CD 015A          			MOV		INST,A
  1113 003CE 40CB          			CALL	STATUS_CLEAR
  1114 003CF 2803          			BS		C			; 0x7F+0x00
  1115 003D0 607F          			MOV		A,@0x7F		
  1116 003D1 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1117 003D2 6000          			MOV		A,@0x00		; A = 0x00
  1118 003D3 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1119 003D4 3003          			JBC		C			; Check C = 0?
  1120 003D5 506C          			JMP	INS_FAIL
  1121 003D6 3903          			JBS		DC			; Check DC = 1?
  1122 003D7 506C          			JMP	INS_FAIL
  1123 003D8 3203          			JBC		Z			; Check Z = 0?
  1124 003D9 506C          			JMP	INS_FAIL
  1125 003DA 3D03          			JBS		OV			; Check OV = 1?
  1126 003DB 506C          			JMP	INS_FAIL
  1127 003DC 3E03          			JBS		N			; Check N = 1?
  1128 003DD 506C          			JMP	INS_FAIL
  1129 003DE 6C80          			XOR		A,@0x80		; Check Result ?
  1130 003DF 40CE          			CALL	INST_XOR_JUDGE
  1131 003E0 40CB          			CALL	STATUS_CLEAR
  1132 003E1 2803          			BS		C			; 0x80+0x7F
  1133 003E2 6080          			MOV		A,@0x80
  1134 003E3 0150          			MOV		0x50,A		; [0x50] = 0x80
  1135 003E4 607F          			MOV		A,@0x7F		; A = 0x7F
  1136 003E5 7E50          			ADC		A,0x50		; A = A + [0x50] + C
  1137 003E6 3803          			JBS		C			; Check C = 1?
  1138 003E7 506C          			JMP	INS_FAIL
  1139 003E8 3903          			JBS		DC			; Check DC = 1?
  1140 003E9 506C          			JMP	INS_FAIL
  1141 003EA 3A03          			JBS		Z			; Check Z = 1?
  1142 003EB 506C          			JMP	INS_FAIL
  1143 003EC 3503          			JBC		OV			; Check OV = 0?
  1144 003ED 506C          			JMP	INS_FAIL
  1145 003EE 3603          			JBC		N			; Check N = 0?
  1146 003EF 506C          			JMP	INS_FAIL
  1147 003F0 6C00          			XOR		A,@0x00		; Check Result ?
  1148 003F1 40CE          			CALL	INST_XOR_JUDGE
  1149 003F2               		INST_ADC_R_A:		;-------Instruction Test => ADC R,A
  1150 003F2 6037          			MOV		A,@0x37
  1151 003F3 015A          			MOV		INST,A
  1152 003F4 40CB          			CALL	STATUS_CLEAR
  1153 003F5 2803          			BS		C			;0x7F+0x00
  1154 003F6 607F          			MOV		A,@0x7F
  1155 003F7 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1156 003F8 6000          			MOV		A,@0x00		; A = 0x00
  1157 003F9 2203          			BC		Z
  1158 003FA 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1159 003FB 1003          			MOV		A,STATUS
  1160 003FC 6C7A          			XOR		A,@0x7A		; Check Status ?
  1161                     			;;XOR		A,@0x72		; Check Status ?
  1162 003FD 40CE          			CALL	INST_XOR_JUDGE
  1163 003FE 1050          			MOV		A,0x50
  1164 003FF 6C80          			XOR		A,@0x80		; Check Result ?
  1165 00400 40CE          			CALL	INST_XOR_JUDGE
  1166 00401 40CB          			CALL	STATUS_CLEAR
  1167 00402 2803          			BS		C			;0x80+0x7F
  1168 00403 6080          			MOV		A,@0x80
  1169 00404 0150          			MOV		0x50,A		; [0x50] = 0x80
  1170 00405 607F          			MOV		A,@0x7F		; A = 0x7F
  1171 00406 2203          			BC		Z
  1172 00407 7F50          			ADC		0x50,A		; TMP1 = A + [0x50] + C
  1173 00408 1003          			MOV		A,STATUS
  1174 00409 6C1F          			XOR		A,@0x1F		; Check Status ?
  1175                     			;;XOR		A,@0x17		; Check Status ?
  1176 0040A 40CE          			CALL	INST_XOR_JUDGE
  1177 0040B 1050          			MOV		A,0x50
  1178 0040C 6C00          			XOR		A,@0x00		; Check Result ?
  1179 0040D 40CE          			CALL	INST_XOR_JUDGE
  1180                     
  1181 0040E               		INST_INCA:			;-------Instruction Test => INCA R
  1182 0040E 6017          			MOV		A,@0x17
  1183 0040F 015A          			MOV		INST,A
  1184 00410 40CB          			CALL	STATUS_CLEAR	; 0x7F+0x01
  1185 00411 607F          			MOV		A,@0x7F
  1186 00412 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1187 00413 1450          			INCA	0x50		; A = [0x50] +1		
  1188 00414 3003          			JBC		C			; Check C = 0?
  1189 00415 506C          			JMP	INS_FAIL
  1190 00416 3903          			JBS		DC			; Check DC = 1?
  1191 00417 506C          			JMP	INS_FAIL
  1192 00418 3203          			JBC		Z			; Check Z = 0?
  1193 00419 506C          			JMP	INS_FAIL
  1194 0041A 3D03          			JBS		OV			; Check OV = 1?
  1195 0041B 506C          			JMP	INS_FAIL
  1196 0041C 3E03          			JBS		N			; Check N = 1?
  1197 0041D 506C          			JMP	INS_FAIL
  1198 0041E 2203          			BC		Z
  1199 0041F 2603          			BC		N
  1200 00420 6C80          			XOR		A,@0x80		; Check Result ?
  1201 00421 3A03          			JBS		Z			; Check Z = 1?
  1202 00422 506C          			JMP	INS_FAIL
  1203 00423 3603          			JBC		N			; Check N = 0?
  1204 00424 506C          			JMP	INS_FAIL
  1205 00425 40CB          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1206 00426 60FF          			MOV		A,@0xFF
  1207 00427 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1208 00428 1450          			INCA	0x50		; A = [0x50] +1		
  1209 00429 3803          			JBS		C			; Check C = 1?
  1210 0042A 506C          			JMP	INS_FAIL
  1211 0042B 3903          			JBS		DC			; Check DC = 1?
  1212 0042C 506C          			JMP	INS_FAIL
  1213 0042D 3A03          			JBS		Z			; Check Z = 1?
  1214 0042E 506C          			JMP	INS_FAIL
  1215 0042F 3503          			JBC		OV			; Check OV = 0?
  1216 00430 506C          			JMP	INS_FAIL
  1217 00431 3603          			JBC		N			; Check N = 0?
  1218 00432 506C          			JMP	INS_FAIL
  1219 00433 2203          			BC		Z
  1220 00434 2603          			BC		N
  1221 00435 6C00          			XOR		A,@0x00		; Check Result ?
  1222 00436 3A03          			JBS		Z			; Check Z = 1?
  1223 00437 506C          			JMP	INS_FAIL
  1224 00438 3603          			JBC		N			; Check N = 0?
  1225 00439 506C          			JMP	INS_FAIL
  1226                     
  1227 0043A               		INST_INC:			;-------Instruction Test => INC R
  1228 0043A 6018          			MOV		A,@0x18
  1229 0043B 015A          			MOV		INST,A
  1230 0043C 40CB          			CALL 	STATUS_CLEAR	; 0x7F+0x01
  1231 0043D 607F          			MOV		A,@0x7F
  1232 0043E 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1233 0043F 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1234 00440 1003          			MOV		A,STATUS
  1235 00441 6C7A          			XOR		A,@0x7A		; Check Status ?
  1236                     			;;XOR		A,@0x72		; Check Status ?
  1237 00442 3A03          			JBS		Z			; Check Z = 1?
  1238 00443 506C          			JMP	INS_FAIL
  1239 00444 3603          			JBC		N			; Check N = 0?
  1240 00445 506C          			JMP	INS_FAIL
  1241 00446 1050          			MOV		A,0x50
  1242 00447 6C80          			XOR		A,@0x80		; Check Result ?
  1243 00448 3A03          			JBS		Z			; Check Z = 1?
  1244 00449 506C          			JMP	INS_FAIL
  1245 0044A 3603          			JBC		N			; Check N = 0?
  1246 0044B 506C          			JMP	INS_FAIL
  1247 0044C 40CB          			CALL	STATUS_CLEAR	; 0xFF+0x01
  1248 0044D 60FF          			MOV		A,@0xFF
  1249 0044E 0150          			MOV		0x50,A		; [0x50] = 0x7F
  1250 0044F 1550          			INC		0x50		; [0x50] = [0x50] + 0x01
  1251 00450 1003          			MOV		A,STATUS
  1252 00451 6C1F          			XOR		A,@0x1F		; Check Status ?
  1253                     			;;XOR		A,@0x17		; Check Status ?
  1254 00452 3A03          			JBS		Z			; Check Z = 1?
  1255 00453 506C          			JMP	INS_FAIL
  1256 00454 3603          			JBC		N			; Check N = 0?
  1257 00455 506C          			JMP	INS_FAIL
  1258 00456 1050          			MOV		A,0x50
  1259 00457 6C00          			XOR		A,@0x00		; Check Result ?
  1260 00458 3A03          			JBS		Z			; Check Z = 1?
  1261 00459 506C          			JMP	INS_FAIL
  1262 0045A 3603          			JBC		N			; Check N = 0?
  1263 0045B 506C          			JMP	INS_FAIL
  1264                     
  1265 0045C               		INST_NEG_R:			;-------Instruction Test => NEG R
  1266 0045C 6035          			MOV		A,@0x35
  1267 0045D 015A          			MOV		INST,A
  1268 0045E 40CB          			CALL	STATUS_CLEAR
  1269 0045F 6000          			MOV		A,@0x00		; 0x00
  1270 00460 0150          			MOV		0x50,A		; [0x50] = 0x00
  1271 00461 7D50          			NEG		0x50
  1272 00462 1003          			MOV		A,STATUS
  1273 00463 6C1F          			XOR		A,@0x1F		; Check Status ?
  1274                     			;;XOR		A,@0x17		; Check Status ?
  1275 00464 40CE          			CALL	INST_XOR_JUDGE
  1276 00465 1050          			MOV		A,0x50
  1277 00466 6C00          			XOR		A,@0x00		; Check Result ?
  1278 00467 40CE          			CALL	INST_XOR_JUDGE
  1279 00468 40CB          			CALL	STATUS_CLEAR
  1280 00469 6001          			MOV		A,@0x01		; 0x01
  1281 0046A 0150          			MOV		0x50,A		; [0x50] = 0x01
  1282 0046B 7D50          			NEG		0x50
  1283 0046C 1003          			MOV		A,STATUS
  1284 0046D 6C58          			XOR		A,@0x58		; Check Status ?
  1285                     			;;XOR		A,@0x50		; Check Status ?
  1286 0046E 40CE          			CALL	INST_XOR_JUDGE
  1287 0046F 1050          			MOV		A,0x50
  1288 00470 6CFF          			XOR		A,@0xFF		; Check Result ?
  1289 00471 4664          			CALL	INST_XCH
  1290 00472 40CB          			CALL	STATUS_CLEAR
  1291 00473 6080          			MOV		A,@0x80		; 0x80
  1292 00474 0150          			MOV		0x50,A		; [0x50] = 0x80
  1293 00475 7D50          			NEG		0x50
  1294 00476 1003          			MOV		A,STATUS
  1295 00477 6C7A          			XOR		A,@0x7A		; Check Status ?
  1296                     			;;XOR		A,@0x72		; Check Status ?
  1297 00478 40CE          			CALL	INST_XOR_JUDGE
  1298 00479 1050          			MOV		A,0x50
  1299 0047A 6C80          			XOR		A,@0x80		; Check Result ?
  1300 0047B 40CE          			CALL	INST_XOR_JUDGE
  1301                     
  1302 0047C 0012          		RET
  1303 0047D               	TEST_INST_LOGIC_I:
  1304 0047D               		INST_BTG:			;-------Instruction Test => BTG R,b	
  1305 0047D 6006          			MOV		A,@0x06
  1306 0047E 015A          			MOV		INST,A
  1307 0047F 40CB          			CALL	STATUS_CLEAR
  1308 00480 60FF          			MOV		A,@0xFF
  1309 00481 0104          			MOV		RSR,A		; Start Address
  1310 00482 0084          			BTG		RSR
  1311 00483 1004          			MOV		A,RSR
  1312 00484 6CFE          			XOR		A,@0xFE		; Check Result ?
  1313 00485 40CE          			CALL	INST_XOR_JUDGE
  1314 00486               		INST_OR_A_R:		;-------Instruction Test => OR A,R
  1315 00486 600E          			MOV		A,@0x0E
  1316 00487 015A          			MOV		INST,A
  1317 00488 6000          			MOV		A,@0x00
  1318 00489 0103          			MOV		STATUS,A
  1319 0048A 6000          			MOV		A,@0x00
  1320 0048B 0150          			MOV		0x50,A		; [0x50] = 0x00
  1321 0048C 6000          			MOV		A,@0x00
  1322 0048D 2203          			BC		Z
  1323 0048E 0850          			OR		A,0x50		; A = A | [0x50]
  1324 0048F 3003          			JBC		C			; Check C = 0?
  1325 00490 506C          			JMP	INS_FAIL
  1326 00491 3103          			JBC		DC			; Check DC = 0?
  1327 00492 506C          			JMP	INS_FAIL
  1328 00493 3A03          			JBS		Z			; Check Z = 1?
  1329 00494 506C          			JMP	INS_FAIL
  1330 00495 3503          			JBC		OV			; Check OV = 0?
  1331 00496 506C          			JMP	INS_FAIL
  1332 00497 3603          			JBC		N			; Check N = 0?
  1333 00498 506C          			JMP	INS_FAIL
  1334 00499 2203          			BC		Z
  1335 0049A 6C00          			XOR		A,@0x00		; Check Result ?
  1336 0049B 3A03          			JBS		Z			; Check Z = 1?
  1337 0049C 506C          			JMP	INS_FAIL
  1338 0049D 3603          			JBC		N			; Check N = 0?
  1339 0049E 506C          			JMP	INS_FAIL
  1340 0049F 6000          			MOV		A,@0x00
  1341 004A0 0103          			MOV		STATUS,A
  1342 004A1 6055          			MOV		A,@0x55
  1343 004A2 0150          			MOV		0x50,A		; [0x50] = 0x55
  1344 004A3 60AA          			MOV		A,@0xAA
  1345 004A4 2203          			BC		Z
  1346 004A5 0850          			OR		A,0x50		; A = A | [0x50]
  1347 004A6 3003          			JBC		C			; Check C = 0?
  1348 004A7 506C          			JMP	INS_FAIL
  1349 004A8 3103          			JBC		DC			; Check DC = 0?
  1350 004A9 506C          			JMP	INS_FAIL
  1351 004AA 3203          			JBC		Z			; Check Z = 0?
  1352 004AB 506C          			JMP	INS_FAIL
  1353 004AC 3503          			JBC		OV			; Check OV = 0?
  1354 004AD 506C          			JMP	INS_FAIL
  1355 004AE 3E03          			JBS		N			; Check N = 1?
  1356 004AF 506C          			JMP	INS_FAIL
  1357 004B0 2203          			BC		Z
  1358 004B1 6CFF          			XOR		A,@0xFF		; Check Result ?
  1359 004B2 3A03          			JBS		Z			; Check Z = 1?
  1360 004B3 506C          			JMP	INS_FAIL
  1361 004B4 3603          			JBC		N			; Check N = 0?
  1362 004B5 506C          			JMP	INS_FAIL
  1363                     
  1364 004B6               		INST_OR_R_A:		;-------Instruction Test => OR R,A
  1365 004B6 600F          			MOV		A,@0x0F
  1366 004B7 015A          			MOV		INST,A
  1367 004B8 6000          			MOV		A,@0x00
  1368 004B9 0103          			MOV		STATUS,A
  1369 004BA 6000          			MOV		A,@0x00
  1370 004BB 0150          			MOV		0x50,A		; [0x50] = 0x00
  1371 004BC 6000          			MOV		A,@0x00		; A = 0x00
  1372 004BD 2203          			BC		Z
  1373 004BE 0950          			OR		0x50,A		; [0x50] = A | [0x50]
  1374 004BF 1003          			MOV		A,STATUS
  1375 004C0 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1376                     			;;XOR		A,@0x14		; Check Status ?
  1377 004C1 3A03          			JBS		Z			; Check Z = 1?
  1378 004C2 506C          			JMP	INS_FAIL
  1379 004C3 3603          			JBC		N			; Check N = 0?
  1380 004C4 506C          			JMP	INS_FAIL
  1381 004C5 1050          			MOV		A,0x50		; A = Result[0x50]
  1382 004C6 2203          			BC		Z
  1383 004C7 2603          			BC		N
  1384 004C8 6C00          			XOR		A,@0x00		; Check Result ?
  1385 004C9 3A03          			JBS		Z			; Check Z = 1?
  1386 004CA 506C          			JMP	INS_FAIL
  1387 004CB 3603          			JBC		N			; Check N = 0?
  1388 004CC 506C          			JMP	INS_FAIL
  1389 004CD 6000          			MOV		A,@0x00
  1390 004CE 0103          			MOV		STATUS,A
  1391 004CF 6055          			MOV		A,@0x55
  1392 004D0 0150          			MOV		0x50,A		; [0x50] = 0x55
  1393 004D1 60AA          			MOV		A,@0xAA		; A = 0xAA
  1394 004D2 0950          			OR		0x50,A		; [0x50] = 0xAA | 0x55
  1395 004D3 1003          			MOV		A,STATUS
  1396 004D4 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1397                     			;;XOR		A,@0x50		; Check Status ?
  1398 004D5 3A03          			JBS		Z			; Check Z = 1?
  1399 004D6 506C          			JMP	INS_FAIL
  1400 004D7 3603          			JBC		N			; Check N = 0?
  1401 004D8 506C          			JMP	INS_FAIL
  1402 004D9 1050          			MOV		A,0x50
  1403 004DA 2203          			BC		Z
  1404 004DB 2603          			BC		N
  1405 004DC 6CFF          			XOR		A,@0xFF		; Check Result ?
  1406 004DD 3A03          			JBS		Z			; Check Z = 1?
  1407 004DE 506C          			JMP	INS_FAIL
  1408 004DF 3603          			JBC		N			; Check N = 0?
  1409 004E0 506C          			JMP	INS_FAIL
  1410                     
  1411 004E1               		INST_AND_A_R:		;-------Instruction Test => AND A,R
  1412 004E1 6010          			MOV		A,@0x10
  1413 004E2 015A          			MOV		INST,A
  1414 004E3 40CB          			CALL	STATUS_CLEAR
  1415 004E4 6055          			MOV		A,@0x55
  1416 004E5 0150          			MOV		0x50,A		; [0x50] = 0x55
  1417 004E6 60AA          			MOV		A,@0xAA
  1418 004E7 0A50          			AND		A,0x50		; A = 0xAA & 0x55
  1419 004E8 3003          			JBC		C			; Check C = 0?
  1420 004E9 506C          			JMP	INS_FAIL
  1421 004EA 3103          			JBC		DC			; Check DC = 0?
  1422 004EB 506C          			JMP	INS_FAIL
  1423 004EC 3A03          			JBS		Z			; Check Z = 1?
  1424 004ED 506C          			JMP	INS_FAIL
  1425 004EE 3503          			JBC		OV			; Check OV = 0?
  1426 004EF 506C          			JMP	INS_FAIL
  1427 004F0 3603          			JBC		N			; Check N = 0?
  1428 004F1 506C          			JMP	INS_FAIL
  1429 004F2 6C00          			XOR		A,@0x00		; Check Result ?
  1430 004F3 3A03          			JBS		Z			; Check Z = 1?
  1431 004F4 506C          			JMP	INS_FAIL
  1432 004F5 3603          			JBC		N			; Check N = 0?
  1433 004F6 506C          			JMP	INS_FAIL
  1434 004F7 40CB          			CALL	STATUS_CLEAR
  1435 004F8 60F5          			MOV		A,@0xF5
  1436 004F9 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1437 004FA 60FA          			MOV		A,@0xFA
  1438 004FB 0A50          			AND		A,0x50		; A = 0xFA & 0xF5
  1439 004FC 3003          			JBC		C			; Check C = 0?
  1440 004FD 506C          			JMP	INS_FAIL
  1441 004FE 3103          			JBC		DC			; Check DC = 0?
  1442 004FF 506C          			JMP	INS_FAIL
  1443 00500 3203          			JBC		Z			; Check Z = 0?
  1444 00501 506C          			JMP	INS_FAIL
  1445 00502 3503          			JBC		OV			; Check OV = 0?
  1446 00503 506C          			JMP	INS_FAIL
  1447 00504 3E03          			JBS		N			; Check N = 1?
  1448 00505 506C          			JMP	INS_FAIL
  1449 00506 6CF0          			XOR		A,@0xF0		; Check Result ?
  1450 00507 3A03          			JBS		Z			; Check Z = 1?
  1451 00508 506C          			JMP	INS_FAIL
  1452 00509 3603          			JBC		N			; Check N = 0?
  1453 0050A 506C          			JMP	INS_FAIL
  1454 0050B               		INST_AND_R_A:		;-------Instruction Test => AND R,A
  1455 0050B 6011          			MOV		A,@0x11
  1456 0050C 015A          			MOV		INST,A
  1457 0050D 40CB          			CALL	STATUS_CLEAR
  1458 0050E 6055          			MOV		A,@0x55
  1459 0050F 0150          			MOV		0x50,A		; [0x50] = 0x55
  1460 00510 60AA          			MOV		A,@0xAA
  1461 00511 0B50          			AND		0x50,A		; [0x50] = 0xAA & 0x55
  1462 00512 1003          			MOV		A,STATUS
  1463 00513 6C1C          			XOR		A,@0x1C		; Check Status ? for non reset
  1464                     			;;XOR		A,@0x14		; Check Status ?
  1465 00514 3A03          			JBS		Z			; Check Z = 1?
  1466 00515 506C          			JMP	INS_FAIL
  1467 00516 3603          			JBC		N			; Check N = 0?
  1468 00517 506C          			JMP	INS_FAIL
  1469 00518 2203          			BC		Z
  1470 00519 1050          			MOV		A,0x50
  1471 0051A 2203          			BC		Z
  1472 0051B 6C00          			XOR		A,@0x00		; Check Result ?
  1473 0051C 3A03          			JBS		Z			; Check Z = 1?
  1474 0051D 506C          			JMP	INS_FAIL
  1475 0051E 3603          			JBC		N			; Check N = 0?
  1476 0051F 506C          			JMP	INS_FAIL
  1477 00520 40CB          			CALL	STATUS_CLEAR
  1478 00521 60F5          			MOV		A,@0xF5
  1479 00522 0150          			MOV		0x50,A		; [0x50] = 0xF5
  1480 00523 60FA          			MOV		A,@0xFA
  1481 00524 0B50          			AND		0x50,A		; [0x50] = 0xFA & 0xF5
  1482 00525 1003          			MOV		A,STATUS
  1483 00526 6C58          			XOR		A,@0x58		; Check Status ? for non reset
  1484                     			;;XOR		A,@0x50		; Check Status ?
  1485 00527 3A03          			JBS		Z			; Check Z = 1?
  1486 00528 506C          			JMP	INS_FAIL
  1487 00529 3603          			JBC		N			; Check N = 0?
  1488 0052A 506C          			JMP	INS_FAIL
  1489 0052B 2203          			BC		Z
  1490 0052C 1050          			MOV		A,0x50
  1491 0052D 2203          			BC		Z
  1492 0052E 6CF0          			XOR		A,@0xF0		; Check Result ?
  1493 0052F 3A03          			JBS		Z			; Check Z = 1?
  1494 00530 506C          			JMP	INS_FAIL
  1495 00531 3603          			JBC		N			; Check N = 0?
  1496 00532 506C          			JMP	INS_FAIL
  1497 00533               		INST_AND_A_K:		;-------Instruction Test => AND A,k
  1498 00533 6029          			MOV		A,@0x29
  1499 00534 015A          			MOV		INST,A
  1500 00535 40CB          			CALL	STATUS_CLEAR
  1501 00536 60AA          			MOV		A,@0xAA
  1502 00537 6855          			AND		A,@0x55		; A = 0xAA & 0x55
  1503 00538 3003          			JBC		C			; Check C = 0?
  1504 00539 506C          			JMP	INS_FAIL
  1505 0053A 3103          			JBC		DC			; Check DC = 0?
  1506 0053B 506C          			JMP	INS_FAIL
  1507 0053C 3A03          			JBS		Z			; Check Z = 1?
  1508 0053D 506C          			JMP	INS_FAIL
  1509 0053E 3503          			JBC		OV			; Check OV = 0?
  1510 0053F 506C          			JMP	INS_FAIL
  1511 00540 3603          			JBC		N			; Check N = 0?
  1512 00541 506C          			JMP	INS_FAIL
  1513 00542 6C00          			XOR		A,@0x00		; Check Result ?
  1514 00543 3A03          			JBS		Z			; Check Z = 1?
  1515 00544 506C          			JMP	INS_FAIL
  1516 00545 3603          			JBC		N			; Check N = 0?
  1517 00546 506C          			JMP	INS_FAIL
  1518 00547 40CB          			CALL	STATUS_CLEAR
  1519 00548 60AA          			MOV		A,@0xAA
  1520 00549 68FF          			AND		A,@0xFF		; A = A & 0xFF
  1521 0054A 3003          			JBC		C			; Check C = 0?
  1522 0054B 506C          			JMP	INS_FAIL
  1523 0054C 3103          			JBC		DC			; Check DC = 0?
  1524 0054D 506C          			JMP	INS_FAIL
  1525 0054E 3203          			JBC		Z			; Check Z = 0?
  1526 0054F 506C          			JMP	INS_FAIL
  1527 00550 3503          			JBC		OV			; Check OV = 0?
  1528 00551 506C          			JMP	INS_FAIL
  1529 00552 3E03          			JBS		N			; Check N = 1?
  1530 00553 506C          			JMP	INS_FAIL
  1531 00554 6CAA          			XOR		A,@0xAA		; Check Result ?
  1532 00555 40CE          			CALL	INST_XOR_JUDGE
  1533                     
  1534 00556               		INST_COMA:			;-------Instruction Test => COMA R
  1535 00556 6015          			MOV		A,@0x15
  1536 00557 015A          			MOV		INST,A
  1537 00558 40CB          			CALL	STATUS_CLEAR
  1538 00559 60FF          			MOV		A,@0xFF
  1539 0055A 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1540 0055B 1250          			COMA	0x50		; A = /R
  1541 0055C 3003          			JBC		C			; Check C = 0?
  1542 0055D 506C          			JMP	INS_FAIL
  1543 0055E 3103          			JBC		DC			; Check DC = 0?
  1544 0055F 506C          			JMP	INS_FAIL
  1545 00560 3A03          			JBS		Z			; Check Z = 1?
  1546 00561 506C          			JMP	INS_FAIL
  1547 00562 3503          			JBC		OV			; Check OV = 0?
  1548 00563 506C          			JMP	INS_FAIL
  1549 00564 3603          			JBC		N			; Check N = 0?
  1550 00565 506C          			JMP	INS_FAIL
  1551 00566 6C00          			XOR		A,@0x00		; Check Result ?
  1552 00567 3A03          			JBS		Z			; Check Z = 1?
  1553 00568 506C          			JMP	INS_FAIL
  1554 00569 3603          			JBC		N			; Check N = 0?
  1555 0056A 506C          			JMP	INS_FAIL	
  1556 0056B 40CB          			CALL	STATUS_CLEAR
  1557 0056C 6005          			MOV		A,@0x05
  1558 0056D 0150          			MOV		0x50,A		; [0x50] = 0x05
  1559 0056E 1250          			COMA	0x50		; A = /R
  1560 0056F 3003          			JBC		C			; Check C = 0?
  1561 00570 506C          			JMP	INS_FAIL
  1562 00571 3103          			JBC		DC			; Check DC = 0?
  1563 00572 506C          			JMP	INS_FAIL
  1564 00573 3203          			JBC		Z			; Check Z = 0?
  1565 00574 506C          			JMP	INS_FAIL
  1566 00575 3503          			JBC		OV			; Check OV = 0?
  1567 00576 506C          			JMP	INS_FAIL
  1568 00577 3E03          			JBS		N			; Check N = 1?
  1569 00578 506C          			JMP	INS_FAIL
  1570 00579 6CFA          			XOR		A,@0xFA		; Check Result ?
  1571 0057A 3A03          			JBS		Z			; Check Z = 1?
  1572 0057B 506C          			JMP	INS_FAIL
  1573 0057C 3603          			JBC		N			; Check N = 0?
  1574 0057D 506C          			JMP	INS_FAIL
  1575 0057E               		INST_COM:			;-------Instruction Test => COM R
  1576 0057E 6016          			MOV		A,@0x16
  1577 0057F 015A          			MOV		INST,A
  1578 00580 40CB          			CALL	STATUS_CLEAR
  1579 00581 60FF          			MOV		A,@0xFF
  1580 00582 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1581 00583 1350          			COM		0x50		; [0x50] = /[0x50]
  1582 00584 1003          			MOV		A,STATUS
  1583 00585 6C1C          			XOR		A,@0x1C		; Check Status ?
  1584                     			;;XOR		A,@0x14		; Check Status ?
  1585 00586 3A03          			JBS		Z			; Check Z = 1?
  1586 00587 506C          			JMP	INS_FAIL
  1587 00588 3603          			JBC		N			; Check N = 0?
  1588 00589 506C          			JMP	INS_FAIL
  1589 0058A 2203          			BC		Z
  1590 0058B 2603          			BC		N
  1591 0058C 1050          			MOV		A,0x50
  1592 0058D 6C00          			XOR		A,@0x00		; Check Result ?
  1593 0058E 3A03          			JBS		Z			; Check Z = 1?
  1594 0058F 506C          			JMP	INS_FAIL
  1595 00590 3603          			JBC		N			; Check N = 0?
  1596 00591 506C          			JMP	INS_FAIL
  1597 00592 40CB          			CALL	STATUS_CLEAR
  1598 00593 6000          			MOV		A,@0x00
  1599 00594 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1600 00595 1350          			COM		0x50		; [0x50] = /[0x50]
  1601 00596 1003          			MOV		A,STATUS
  1602 00597 6C58          			XOR		A,@0x58		; Check Status ?
  1603                     			;;XOR		A,@0x50		; Check Status ?
  1604 00598 3A03          			JBS		Z			; Check Z = 1?
  1605 00599 506C          			JMP	INS_FAIL
  1606 0059A 3603          			JBC		N			; Check N = 0?
  1607 0059B 506C          			JMP	INS_FAIL
  1608 0059C 2203          			BC		Z
  1609 0059D 2603          			BC		N
  1610 0059E 1050          			MOV		A,0x50
  1611 0059F 6CFF          			XOR		A,@0xFF		; Check Result ?
  1612 005A0 3A03          			JBS		Z			; Check Z = 1?
  1613 005A1 506C          			JMP	INS_FAIL
  1614 005A2 3603          			JBC		N			; Check N = 0?
  1615 005A3 506C          			JMP	INS_FAIL
  1616 005A4               		INST_OR_A_K:		;-------Instruction Test => OR A,k
  1617 005A4 6026          			MOV		A,@0x26
  1618 005A5 015A          			MOV		INST,A
  1619 005A6 40CB          			CALL	STATUS_CLEAR
  1620 005A7 60A5          			MOV		A,@0xA5
  1621 005A8 645A          			OR		A,@0x5A		; A = 0xA5 | 0x5A
  1622 005A9 6CFF          			XOR		A,@0xFF		; Check Result ?
  1623 005AA 40CE          			CALL	INST_XOR_JUDGE
  1624 005AB 0012          		RET
  1625                     
  1626 005AC               	TEST_INST_LOGIC_II:
  1627 005AC               		INST_RR_R:			;-------Instruction Test => RR R
  1628 005AC 602B          			MOV		A,@0x2B
  1629 005AD 015A          			MOV		INST,A
  1630 005AE 40CB          			CALL	STATUS_CLEAR
  1631 005AF 6055          			MOV		A,@0x55
  1632 005B0 0150          			MOV		0x50,A		; [0x50] = 0x55
  1633 005B1 6F50          			RR		0x50		; [0x50] = [0x50] >> 1
  1634 005B2 1003          			MOV		A,STATUS
  1635 005B3 6C58          			XOR		A,@0x58		; Check Status ?
  1636                     			;;XOR		A,@0x50		; Check Status ?
  1637 005B4 40CE          			CALL	INST_XOR_JUDGE
  1638 005B5 1050          			MOV		A,0x50
  1639 005B6 6CAA          			XOR		A,@0xAA		; Check Result ?
  1640 005B7 40CE          			CALL	INST_XOR_JUDGE
  1641                     
  1642 005B8               		INST_RRA_R:			;-------Instruction Test => RRA R
  1643 005B8 602A          			MOV		A,@0x2A
  1644 005B9 015A          			MOV		INST,A
  1645 005BA 40CB          			CALL 	STATUS_CLEAR
  1646 005BB 6055          			MOV		A,@0x55
  1647 005BC 0150          			MOV		0x50,A		; [0x50] = 0x55
  1648 005BD 6E50          			RRA		0x50		; A = [0x50] >> 1
  1649 005BE 3003          			JBC		C			; Check C = 0?
  1650 005BF 506C          			JMP	INS_FAIL
  1651 005C0 3103          			JBC		DC			; Check DC = 0?
  1652 005C1 506C          			JMP	INS_FAIL
  1653 005C2 3203          			JBC		Z			; Check Z = 0?
  1654 005C3 506C          			JMP	INS_FAIL
  1655 005C4 3503          			JBC		OV			; Check OV = 0?
  1656 005C5 506C          			JMP	INS_FAIL
  1657 005C6 3E03          			JBS		N			; Check N = 1?
  1658 005C7 506C          			JMP	INS_FAIL
  1659 005C8 6CAA          			XOR		A,@0xAA		; Check Result ?
  1660 005C9 40CE          			CALL	INST_XOR_JUDGE
  1661                     
  1662 005CA               		INST_RRCA_R:		;-------Instruction Test => RRCA R
  1663 005CA 601B          			MOV		A,@0x1B
  1664 005CB 015A          			MOV		INST,A
  1665 005CC 40CB          			CALL	STATUS_CLEAR
  1666 005CD 2803          			BS		C
  1667 005CE 60AA          			MOV		A,@0xAA
  1668 005CF 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1669 005D0 1850          			RRCA	0x50		; A = [0x50] >> 1
  1670 005D1 3003          			JBC		C			; Check C = 0?
  1671 005D2 506C          			JMP	INS_FAIL
  1672 005D3 3103          			JBC		DC			; Check DC = 0?
  1673 005D4 506C          			JMP	INS_FAIL
  1674 005D5 3203          			JBC		Z			; Check Z = 0?
  1675 005D6 506C          			JMP	INS_FAIL
  1676 005D7 3503          			JBC		OV			; Check OV = 0?
  1677 005D8 506C          			JMP	INS_FAIL
  1678 005D9 3E03          			JBS		N			; Check N = 1?
  1679 005DA 506C          			JMP	INS_FAIL
  1680 005DB 6CD5          			XOR		A,@0xD5		; Check Result ?
  1681 005DC 40CE          			CALL	INST_XOR_JUDGE
  1682 005DD 40CB          			CALL	STATUS_CLEAR
  1683 005DE 6055          			MOV		A,@0x55
  1684 005DF 0150          			MOV		0x50,A		; [0x50] = 0x55
  1685 005E0 1850          			RRCA	0x50		; A = [0x50] >> 1
  1686 005E1 3803          			JBS		C			; Check C = 1?
  1687 005E2 506C          			JMP	INS_FAIL
  1688 005E3 3103          			JBC		DC			; Check DC = 0?
  1689 005E4 506C          			JMP	INS_FAIL
  1690 005E5 3203          			JBC		Z			; Check Z = 0?
  1691 005E6 506C          			JMP	INS_FAIL
  1692 005E7 3503          			JBC		OV			; Check OV = 0?
  1693 005E8 506C          			JMP	INS_FAIL
  1694 005E9 3603          			JBC		N			; Check N = 0?
  1695 005EA 506C          			JMP	INS_FAIL
  1696 005EB 6C2A          			XOR		A,@0x2A		; Check Result ?
  1697 005EC 40CE          			CALL	INST_XOR_JUDGE
  1698 005ED               		INST_RRC_R:			;-------Instruction Test => RRC R
  1699 005ED 601C          			MOV		A,@0x1C
  1700 005EE 015A          			MOV		INST,A
  1701 005EF 40CB          			CALL	STATUS_CLEAR
  1702 005F0 2803          			BS		C
  1703 005F1 60AA          			MOV		A,@0xAA
  1704 005F2 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1705 005F3 2203          			BC		Z
  1706 005F4 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1707 005F5 1003          			MOV		A,STATUS
  1708 005F6 6C58          			XOR		A,@0x58		; Check Status ?
  1709                     			;;XOR		A,@0x50		; Check Status ?
  1710 005F7 40CE          			CALL	INST_XOR_JUDGE
  1711 005F8 1050          			MOV		A,0x50
  1712 005F9 6CD5          			XOR		A,@0xD5		; Check Result ?
  1713 005FA 40CE          			CALL	INST_XOR_JUDGE
  1714 005FB 40CB          			CALL	STATUS_CLEAR
  1715 005FC 6055          			MOV		A,@0x55
  1716 005FD 0150          			MOV		0x50,A		; [0x50] = 0x55
  1717 005FE 2203          			BC		Z
  1718 005FF 1950          			RRC		0x50		; [0x50] = [0x50] >> 1
  1719 00600 1003          			MOV		A,STATUS
  1720 00601 6C19          			XOR		A,@0x19		; Check Status ?
  1721                     			;;XOR		A,@0x11		; Check Status ?
  1722 00602 3A03          			JBS		Z			; Check Z = 1?
  1723 00603 506C          			JMP	INS_FAIL
  1724 00604 3603          			JBC		N			; Check N = 0?
  1725 00605 506C          			JMP	INS_FAIL
  1726 00606 1050          			MOV		A,0x50
  1727 00607 6C2A          			XOR		A,@0x2A		; Check Result ?
  1728 00608 40CE          			CALL	INST_XOR_JUDGE
  1729 00609               		INST_RLCA_R:		;-------Instruction Test => RLCA R
  1730 00609 601D          			MOV		A,@0x1D
  1731 0060A 015A          			MOV		INST,A
  1732 0060B 40CB          			CALL STATUS_CLEAR
  1733 0060C 2803          			BS		C
  1734 0060D 6055          			MOV		A,@0x55
  1735 0060E 0150          			MOV		0x50,A		; [0x50] = 0x55
  1736 0060F 1A50          			RLCA	0x50		; A = [0x50] << 1
  1737 00610 3003          			JBC		C			; Check C = 0?
  1738 00611 506C          			JMP	INS_FAIL
  1739 00612 3103          			JBC		DC			; Check DC = 0?
  1740 00613 506C          			JMP	INS_FAIL
  1741 00614 3203          			JBC		Z			; Check Z = 0?
  1742 00615 506C          			JMP	INS_FAIL
  1743 00616 3503          			JBC		OV			; Check OV = 0?
  1744 00617 506C          			JMP	INS_FAIL
  1745 00618 3E03          			JBS		N			; Check N = 1?
  1746 00619 506C          			JMP	INS_FAIL
  1747 0061A 6CAB          			XOR		A,@0xAB		; Check Result ?
  1748 0061B 40CE          			CALL	INST_XOR_JUDGE
  1749 0061C 40CB          			CALL	STATUS_CLEAR
  1750 0061D 60AA          			MOV		A,@0xAA
  1751 0061E 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1752 0061F 1A50          			RLCA	0x50		; A = [0x50] << 1
  1753 00620 3803          			JBS		C			; Check C = 1?
  1754 00621 506C          			JMP	INS_FAIL
  1755 00622 3103          			JBC		DC			; Check DC = 0?
  1756 00623 506C          			JMP	INS_FAIL
  1757 00624 3203          			JBC		Z			; Check Z = 0?
  1758 00625 506C          			JMP	INS_FAIL
  1759 00626 3503          			JBC		OV			; Check OV = 0?
  1760 00627 506C          			JMP	INS_FAIL
  1761 00628 3603          			JBC		N			; Check N = 0?
  1762 00629 506C          			JMP	INS_FAIL
  1763 0062A 6C54          			XOR		A,@0x54		; Check Result ?
  1764 0062B 40CE          			CALL	INST_XOR_JUDGE
  1765 0062C               		INST_RLC_R:			;-------Instruction Test => RLC R
  1766 0062C 601E          			MOV		A,@0x1E
  1767 0062D 015A          			MOV		INST,A
  1768 0062E 40CB          			CALL	STATUS_CLEAR
  1769 0062F 2803          			BS		C
  1770 00630 6055          			MOV		A,@0x55
  1771 00631 0150          			MOV		0x50,A		; [0x50] = 0x55
  1772 00632 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1773 00633 1003          			MOV		A,STATUS
  1774 00634 6C58          			XOR		A,@0x58		; Check Status ?
  1775                     			;;XOR		A,@0x50		; Check Status ?
  1776 00635 40CE          			CALL	INST_XOR_JUDGE
  1777 00636 1050          			MOV		A,0x50
  1778 00637 6CAB          			XOR		A,@0xAB		; Check Result ?
  1779 00638 40CE          			CALL	INST_XOR_JUDGE
  1780 00639 40CB          			CALL	STATUS_CLEAR
  1781 0063A 60AA          			MOV		A,@0xAA
  1782 0063B 0150          			MOV		0x50,A		; [0x50] = 0xAA
  1783 0063C 1B50          			RLC		0x50		; [0x50] = [0x50] << 1
  1784 0063D 1003          			MOV		A,STATUS
  1785 0063E 6C19          			XOR		A,@0x19		; Check Status ?
  1786                     			;;XOR		A,@0x11		; Check Status ?
  1787 0063F 40CE          			CALL	INST_XOR_JUDGE
  1788 00640 1050          			MOV		A,0x50
  1789 00641 6C54          			XOR		A,@0x54		; Check Result ?
  1790 00642 40CE          			CALL	INST_XOR_JUDGE
  1791                     
  1792 00643               		INST_RLA_A:			;-------Instruction Test => RLA R
  1793 00643 602E          			MOV		A,@0x2E
  1794 00644 015A          			MOV		INST,A
  1795 00645 40CB          			CALL	STATUS_CLEAR
  1796 00646 605A          			MOV		A,@0x5A
  1797 00647 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1798 00648 7250          			RLA		0x50		; A = [0x50] << 1
  1799 00649 3003          			JBC		C			; Check C = 0?
  1800 0064A 506C          			JMP	INS_FAIL
  1801 0064B 3103          			JBC		DC			; Check DC = 0?
  1802 0064C 506C          			JMP	INS_FAIL
  1803 0064D 3203          			JBC		Z			; Check Z = 0?
  1804 0064E 506C          			JMP	INS_FAIL
  1805 0064F 3503          			JBC		OV			; Check OV = 0?
  1806 00650 506C          			JMP	INS_FAIL
  1807 00651 3E03          			JBS		N			; Check N = 1?
  1808 00652 506C          			JMP	INS_FAIL
  1809 00653 6CB4          			XOR		A,@0xB4		; Check Result ?
  1810 00654 40CE          			CALL	INST_XOR_JUDGE
  1811                     
  1812 00655               		INST_RL_R:			;-------Instruction Test => RL R
  1813 00655 602F          			MOV		A,@0x2F
  1814 00656 015A          			MOV		INST,A
  1815 00657 40CB          			CALL	STATUS_CLEAR
  1816 00658 605A          			MOV		A,@0x5A
  1817 00659 0150          			MOV		0x50,A		; [0x50] = 0xA5
  1818 0065A 7350          			RL		0x50		; [0x50] = [0x50] << 1
  1819 0065B 1003          			MOV		A,STATUS
  1820 0065C 6C58          			XOR		A,@0x58		; Check Status ?
  1821                     			;;XOR		A,@0x50		; Check Status ?
  1822 0065D 3A03          			JBS		Z			; Check Z = 1?
  1823 0065E 506C          			JMP	INS_FAIL
  1824 0065F 3603          			JBC		N			; Check N = 0?
  1825 00660 506C          			JMP	INS_FAIL
  1826 00661 1050          			MOV		A,0x50
  1827 00662 6CB4          			XOR		A,@0xB4		; Check Result ?
  1828 00663 40CE          			CALL	INST_XOR_JUDGE
  1829 00664               		INST_XCH:			;-------Instruction Test => XCH R
  1830 00664 602D          			MOV		A,@0x2D
  1831 00665 015A          			MOV		INST,A
  1832 00666 40CB          			CALL	STATUS_CLEAR
  1833 00667 6055          			MOV		A,@0x55
  1834 00668 0150          			MOV		0x50,A		; [0x50] = 0x55
  1835 00669 60AA          			MOV		A,@0xAA
  1836 0066A 7150          			XCH		0x50		; [0x50] <-> A
  1837 0066B 6C55          			XOR		A,@0x55		; Check Result ?
  1838 0066C 3A03          			JBS		Z			; Check Z = 1?
  1839 0066D 506C          			JMP	INS_FAIL
  1840 0066E 3603          			JBC		N			; Check N = 0?
  1841 0066F 506C          			JMP	INS_FAIL
  1842 00670 1050          			MOV		A,0x50
  1843 00671 6CAA          			XOR		A,@0xAA		; Check Result ?
  1844 00672 40CE          			CALL	INST_XOR_JUDGE
  1845 00673 0012          		RET
  1846 00674               	TEST_INST_TRANSFER:
  1847 00674               		INST_MOV_R_A:		;-------Instruction Test => MOV R,A
  1848 00674 6007          			MOV		A,@0x07
  1849 00675 015A          			MOV		INST,A
  1850 00676 40CB          			CALL	STATUS_CLEAR
  1851 00677 60FF          			MOV		A,@0xFF
  1852 00678 0150          			MOV		0x50,A
  1853 00679 1003          			MOV		A,STATUS
  1854 0067A 6C18          			XOR		A,@0x18		;At  OCDS
  1855                     			;XOR		A,@0x98		; Check Status ? ;; For not reset
  1856                     			;;XOR		A,@0x10		; Check Status ?
  1857 0067B 40CE          			CALL	INST_XOR_JUDGE
  1858 0067C 1050          			MOV		A,0x50
  1859 0067D 6CFF          			XOR		A,@0xFF		; Check Result ?
  1860 0067E 40CE          			CALL	INST_XOR_JUDGE
  1861 0067F               		INST_MOV_R_R:		;-------Instruction Test => MOV R,R
  1862 0067F 6014          			MOV		A,@0x14
  1863 00680 015A          			MOV		INST,A
  1864 00681 40CB          			CALL	STATUS_CLEAR
  1865 00682 6000          			MOV		A,@0x00
  1866 00683 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1867 00684 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1868 00685 1003          			MOV		A,STATUS
  1869 00686 6C1C          			XOR		A,@0x1C		; Check Status ?
  1870                     			;;XOR		A,@0x14		; Check Status ?
  1871 00687 3A03          			JBS		Z			; Check Z = 1?
  1872 00688 506C          			JMP	INS_FAIL
  1873 00689 3603          			JBC		N			; Check N = 0?
  1874 0068A 506C          			JMP	INS_FAIL
  1875 0068B 1050          			MOV		A,0x50
  1876 0068C 2203          			BC		Z
  1877 0068D 6C00          			XOR		A,@0x00		; Check Result ?
  1878 0068E 3A03          			JBS		Z			; Check Z = 1?
  1879 0068F 506C          			JMP	INS_FAIL
  1880 00690 3603          			JBC		N			; Check N = 0?
  1881 00691 506C          			JMP	INS_FAIL
  1882 00692 40CB          			CALL	STATUS_CLEAR
  1883 00693 6000          			MOV		A,@0x00
  1884 00694 0150          			MOV		0x50,A		; [0x50] = 0x00		
  1885 00695 1150          			MOV		0x50,0x50	; [0x50] = [0x50]
  1886 00696 2850          			BS		0x50,0
  1887 00697 1050          			MOV		A,0x50
  1888 00698 6C01          			XOR		A,@0x01		; Check Result ?
  1889 00699 40CE          			CALL	INST_XOR_JUDGE
  1890                     
  1891 0069A               		INST_SWAPA_R:		;-------Instruction Test => SWAPA R
  1892 0069A 601F          			MOV		A,@0x1F
  1893 0069B 015A          			MOV		INST,A
  1894 0069C 40CB          			CALL	STATUS_CLEAR
  1895 0069D 605A          			MOV		A,@0x5A
  1896 0069E 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1897 0069F 1C50          			SWAPA	0x50
  1898 006A0 6CA5          			XOR		A,@0xA5		; Check Result ?
  1899 006A1 40CE          			CALL	INST_XOR_JUDGE
  1900 006A2               		INST_SWAP_R:		;-------Instruction Test => SWAP R
  1901 006A2 6020          			MOV		A,@0x20
  1902 006A3 015A          			MOV		INST,A
  1903 006A4 40CB          			CALL	STATUS_CLEAR
  1904 006A5 605A          			MOV		A,@0x5A
  1905 006A6 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1906 006A7 1D50          			SWAP	0x50
  1907 006A8 1050          			MOV		A,0x50
  1908 006A9 6CA5          			XOR		A,@0xA5		; Check Result ?
  1909 006AA 40CE          			CALL	INST_XOR_JUDGE
  1910 006AB 0012          		RET
  1911                     
  1912 006AC               	TEST_INST_MANIPULATION:
  1913 006AC 0012          		RET
  1914                     
  1915 006AD               	TEST_INST_BRANCH_I:
  1916 006AD               		INST_DJZ_R:			;------- Instruction Test => DJZ R
  1917 006AD 601A          			MOV		A,@0x1A
  1918 006AE 015A          			MOV		INST,A
  1919 006AF 40CB          			CALL	STATUS_CLEAR
  1920 006B0 6001          			MOV		A,@0x01
  1921 006B1 0150          			MOV		0x50,A		; [0x50] = 0x01
  1922 006B2 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1923 006B3 506C          			JMP		INS_FAIL
  1924 006B4 1050          			MOV		A,0x50
  1925 006B5 6C00          			XOR		A,@0x00		; Check Result ?
  1926 006B6 40CE          			CALL	INST_XOR_JUDGE	
  1927 006B7 40CB          			CALL	STATUS_CLEAR
  1928 006B8 6002          			MOV		A,@0x02
  1929 006B9 0150          			MOV		0x50,A		; [0x50] = 0x02
  1930 006BA 1750          			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
  1931 006BB 56BD          			JMP		$+2
  1932 006BC 506C          			JMP		INS_FAIL
  1933 006BD               		INST_DJZA_R:		;------- Instruction Test => DJZA R
  1934 006BD 6019          			MOV		A,@0x19
  1935 006BE 015A          			MOV		INST,A
  1936 006BF 40CB          			CALL	STATUS_CLEAR
  1937 006C0 6001          			MOV		A,@0x01
  1938 006C1 0150          			MOV		0x50,A		; [0x50] = 0x01
  1939 006C2 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1940 006C3 506C          			JMP	INS_FAIL
  1941 006C4 6C00          			XOR		A,@0x00		; Check Result ?
  1942 006C5 40CE          			CALL	INST_XOR_JUDGE
  1943 006C6 40CB          			CALL	STATUS_CLEAR
  1944 006C7 6002          			MOV		A,@0x02
  1945 006C8 0150          			MOV		0x50,A		; [0x50] = 0x02
  1946 006C9 1650          			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
  1947 006CA 56CC          			JMP		$+2
  1948 006CB 506C          			JMP	INS_FAIL
  1949 006CC               		INST_JZA_R:			;-------Instruction Test => JZA R
  1950 006CC 6021          			MOV		A,@0x21
  1951 006CD 015A          			MOV		INST,A
  1952 006CE 40CB          			CALL	STATUS_CLEAR
  1953 006CF 60FF          			MOV		A,@0xFF
  1954 006D0 0150          			MOV		0x50,A
  1955 006D1 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1956 006D2 506C          			JMP		INS_FAIL
  1957 006D3 6C00          			XOR		A,@0x00		; Check Result ?
  1958 006D4 40CE          			CALL	INST_XOR_JUDGE
  1959 006D5 40CB          			CALL	STATUS_CLEAR
  1960 006D6 6080          			MOV		A,@0x80
  1961 006D7 0150          			MOV		0x50,A
  1962 006D8 1E50          			JZA		0x50		; A = [0x50] + 1,if 0 skip
  1963 006D9 56DB          			JMP		$+2
  1964 006DA 506C          			JMP		INS_FAIL
  1965 006DB               		INST_JZ_R:			;-------Instruction Test => JZ R
  1966 006DB 6022          			MOV		A,@0x22
  1967 006DC 015A          			MOV		INST,A
  1968 006DD 40CB          			CALL	STATUS_CLEAR
  1969 006DE 60FF          			MOV		A,@0xFF
  1970 006DF 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1971 006E0 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  1972 006E1 506C          			JMP		INS_FAIL
  1973 006E2 1050          			MOV		A,0x50
  1974 006E3 6C00          			XOR		A,@0x00		; Check Result ?
  1975 006E4 40CE          			CALL	INST_XOR_JUDGE
  1976 006E5 40CB          			CALL	STATUS_CLEAR
  1977 006E6 6080          			MOV		A,@0x80
  1978 006E7 0150          			MOV		0x50,A		; [0x50] = 0xFF
  1979 006E8 1F50          			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
  1980 006E9 56EB          			JMP		$+2
  1981 006EA 506C          			JMP		INS_FAIL
  1982 006EB 0012          		RET
  1983 006EC               	TEST_INST_BRANCH_II:
  1984 006EC               		INST_JE_R:			;-------Instruction Test => JE R
  1985 006EC 6023          			MOV		A,@0x23
  1986 006ED 015A          			MOV		INST,A
  1987 006EE 40CB          			CALL	STATUS_CLEAR
  1988 006EF 605A          			MOV		A,@0x5A
  1989 006F0 0150          			MOV		0x50,A		; [0x50] = 0x5A
  1990 006F1 6150          			JE		0x50		; [0x50] = A?
  1991 006F2 506C          			JMP		INS_FAIL
  1992 006F3 605B          			MOV		A,@0x5B
  1993 006F4 0150          			MOV		0x50,A		; [0x50] = 0x5B
  1994 006F5 605C          			MOV		A,@0x5C
  1995 006F6 6150          			JE		0x50		; [0x50] = A(0x5C)?
  1996 006F7 56F9          			JMP		$+2
  1997 006F8 506C          			JMP		INS_FAIL
  1998 006F9               		INST_JGE_R:			;-------Instruction Test => JGE R
  1999 006F9 6024          			MOV		A,@0x24
  2000 006FA 015A          			MOV		INST,A
  2001 006FB 40CB          			CALL	STATUS_CLEAR
  2002 006FC 607F          			MOV		A,@0x7F
  2003 006FD 0150          			MOV		0x50,A		; [0x50] = 0x7F
  2004 006FE 6000          			MOV		A,@0x00
  2005 006FF 6250          			JGE		0x50		; [0x50] > A ?
  2006 00700 506C          			JMP		INS_FAIL
  2007 00701 40CB          			CALL	STATUS_CLEAR
  2008 00702 60FF          			MOV		A,@0xFF
  2009 00703 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2010 00704 6080          			MOV		A,@0x80
  2011 00705 6250          			JGE		0x50		; [0x50] > A ?
  2012 00706 506C          			JMP		INS_FAIL
  2013 00707 40CB          			CALL	STATUS_CLEAR
  2014 00708 6000          			MOV		A,@0x00
  2015 00709 0150          			MOV		0x50,A		; [0x50] = 0x00
  2016 0070A 60FF          			MOV		A,@0xFF
  2017 0070B 6250          			JGE		0x50		; [0x50] > A(0xFF) ?x
  2018 0070C 570E          			JMP		$+2
  2019 0070D 506C          			JMP		INS_FAIL
  2020                     
  2021 0070E               		INST_JLE_R:			;-------Instruction Test => JLE R
  2022 0070E 6025          			MOV		A,@0x25
  2023 0070F 015A          			MOV		INST,A
  2024 00710 40CB          			CALL	STATUS_CLEAR
  2025 00711 6000          			MOV		A,@0x00
  2026 00712 0150          			MOV		0x50,A		; [0x50] = 0x00
  2027 00713 607F          			MOV		A,@0x7F
  2028 00714 6350          			JLE		0x50		; [0x50] < A ?
  2029 00715 506C          			JMP		INS_FAIL
  2030 00716 6000          			MOV		A,@0x00
  2031 00717 0103          			MOV		STATUS,A
  2032 00718 6080          			MOV		A,@0x80
  2033 00719 0150          			MOV		0x50,A		; [0x50] = 0x80
  2034 0071A 60FF          			MOV		A,@0xFF
  2035 0071B 6350          			JLE		0x50		; [0x50] < A ?
  2036 0071C 506C          			JMP		INS_FAIL
  2037 0071D 40CB          			CALL	STATUS_CLEAR
  2038 0071E 60FF          			MOV		A,@0xFF
  2039 0071F 0150          			MOV		0x50,A		; [0x50] = 0xFF
  2040 00720 6000          			MOV		A,@0x00
  2041 00721 6350          			JLE		0x50		; [0x50] < A(0x00) ?x
  2042 00722 5724          			JMP		$+2
  2043 00723 506C          			JMP		INS_FAIL
  2044 00724               		INST_JE_K:			;-------Instruction Test => JE k
  2045 00724 6027          			MOV		A,@0x27
  2046 00725 015A          			MOV		INST,A
  2047 00726 40CB          			CALL	STATUS_CLEAR
  2048 00727 607F          			MOV		A,@0x7F
  2049 00728 657F          			JE		@0x7F
  2050 00729 506C          			JMP	INS_FAIL
  2051 0072A 0012          		RET
  2052 0072B               	TEST_INST_BRANCH_III:
  2053 0072B               		INST_CALL_K:		;-------Instruction Test => CALL k
  2054 0072B 6002          			MOV	A,@0x02
  2055 0072C 015A          			MOV	INST,A
  2056 0072D 40CB          			CALL	STATUS_CLEAR
  2057 0072E 6003          			MOV		A,@0x03
  2058 0072F 0150          			MOV		0x50,A
  2059 00730 47D0          			CALL	CALL_Test
  2060 00731 1050          			MOV		A,0x50
  2061 00732 6C04          			XOR		A,@0x04
  2062 00733 40CE          			CALL	INST_XOR_JUDGE
  2063                     
  2064 00734               		INST_LCALL_K:		;-------Instruction Test => LCALL k
  2065 00734 6003          			MOV		A,@0x03
  2066 00735 015A          			MOV		INST,A
  2067 00736 40CB          			CALL	STATUS_CLEAR
  2068 00737 6003          			MOV		A,@0x03
  2069 00738 0151          			MOV		0x51,A
  2070 00739 4FFE          			CALL	LCALL_Test
  2071 0073A 1051          			MOV		A,0x51
  2072 0073B 6C04          			XOR		A,@0x04		; Check Result ?
  2073 0073C 40CE          			CALL	INST_XOR_JUDGE
  2074                     
  2075 0073D               		INST_RETL_K:		;-------Instruction Test => RETL k
  2076 0073D 602C          			MOV		A,@0x2C
  2077 0073E 015A          			MOV		INST,A
  2078 0073F 40CB          			CALL	STATUS_CLEAR
  2079 00740 6000          			MOV		A,@0x00
  2080 00741 4EF0          			CALL	INST_RETL_TABLE
  2081 00742 6CA1          			XOR		A,@0xA1
  2082 00743 40CE          			CALL	INST_XOR_JUDGE
  2083 00744 6001          			MOV		A,@0x01
  2084 00745 4EF0          			CALL	INST_RETL_TABLE
  2085 00746 6CA2          			XOR		A,@0xA2
  2086 00747 40CE          			CALL	INST_XOR_JUDGE
  2087 00748 6002          			MOV		A,@0x02
  2088 00749 4EF0          			CALL	INST_RETL_TABLE
  2089 0074A 6CA4          			XOR		A,@0xA4
  2090 0074B 40CE          			CALL	INST_XOR_JUDGE
  2091 0074C 6003          			MOV		A,@0x03
  2092 0074D 4EF0          			CALL	INST_RETL_TABLE
  2093 0074E 6CA8          			XOR		A,@0xA8
  2094 0074F 40CE          			CALL	INST_XOR_JUDGE
  2095 00750 0012          		RET
  2096 00751               	TEST_INST_CONTROL:
  2097 00751               		INST_ENI:			;-------Instruction Test => ENI , IT?
  2098 00751 6004          			MOV		A,@0x04
  2099 00752 015A          			MOV		INST,A
  2100 00753 0010          			ENI
  2101 00754 3F03          			JBS		IT		; Check IT = 1?
  2102 00755 506C          			JMP	INS_FAIL
  2103 00756               		INST_DISI:			;-------Instruction Test => DISI , IT?
  2104 00756 6005          			MOV		A,@0x05
  2105 00757 015A          			MOV		INST,A
  2106 00758 0011          			DISI
  2107 00759 3703          			JBC		IT		; Check IT = 0?
  2108 0075A 506C          			JMP	INS_FAIL
  2109 0075B 0012          		RET
  2110                     
  2111 0075C               	TEST_SHORT_BRANCH:
  2112                     		;ORG	0x800
  2113 0075C 40CB          		CALL	STATUS_CLEAR
  2114 0075D 2803          		BS	C
  2115 0075E 6903          		SJC		@0x03
  2116 0075F 5066          		JMP		JMP_FAIL
  2117 00760 5066          		JMP		JMP_FAIL
  2118 00761 5066          		JMP		JMP_FAIL
  2119 00762 2003          		BC	C
  2120 00763 6A03          		SJNC	bbb		;@0x03
  2121 00764 5066          		JMP		JMP_FAIL
  2122 00765 5066          		JMP		JMP_FAIL
  2123 00766 5066          		JMP		JMP_FAIL
  2124 00767               		bbb:		
  2125 00767 2A03          			BS		Z
  2126 00768 6B03          			SJZ		@0x03
  2127 00769 5066          			JMP		JMP_FAIL
  2128 0076A 5066          			JMP		JMP_FAIL
  2129 0076B 5066          			JMP		JMP_FAIL
  2130 0076C 0200          			CLRA
  2131 0076D 6B03          			SJZ		@0x03
  2132 0076E 5066          			JMP		JMP_FAIL
  2133 0076F 5066          			JMP		JMP_FAIL
  2134 00770 5066          			JMP		JMP_FAIL
  2135 00771 5779          		JMP		IATEST1		;JMP back Test as below
  2136 00772               		aaa:	
  2137 00772 5786          			JMP	IATEST2		; -9
  2138 00773 5066          			JMP	JMP_FAIL	; -8
  2139 00774 5066          			JMP	JMP_FAIL	; -7
  2140 00775 5066          			JMP	JMP_FAIL	; -6
  2141 00776 5066          			JMP	JMP_FAIL	; -5
  2142 00777 5066          			JMP	JMP_FAIL	; -4
  2143 00778 5066          			JMP	JMP_FAIL	; -3
  2144 00779               		IATEST1:	
  2145 00779 2803          			BS		C		; -2
  2146 0077A 69F7          			SJC		aaa		; -1
  2147 0077B 69F7          			SJC		@0xF7	; -1
  2148 0077C 5066          			JMP		JMP_FAIL
  2149 0077D 5066          			JMP		JMP_FAIL
  2150 0077E 5066          			JMP		JMP_FAIL
  2151 0077F 5792          			JMP		IATEST3		; -9
  2152 00780 5066          			JMP		JMP_FAIL	; -8
  2153 00781 5066          			JMP		JMP_FAIL	; -7
  2154 00782 5066          			JMP		JMP_FAIL	; -6
  2155 00783 5066          			JMP		JMP_FAIL	; -5
  2156 00784 5066          			JMP		JMP_FAIL	; -4
  2157 00785 5066          			JMP		JMP_FAIL	; -3
  2158 00786               		IATEST2:	
  2159 00786 2003          			BC		C		; -2
  2160 00787 6AF7          			SJNC		@0xF7	; -1
  2161 00788 57A3          			JMP		_IPass
  2162 00789 57A3          			JMP		_IPass
  2163 0078A 57A3          			JMP		_IPass
  2164 0078B 579E          			JMP		IATEST4		; -9
  2165 0078C 5066          			JMP		JMP_FAIL	; -8
  2166 0078D 5066          			JMP		JMP_FAIL	; -7
  2167 0078E 5066          			JMP		JMP_FAIL	; -6
  2168 0078F 5066          			JMP		JMP_FAIL	; -5
  2169 00790 5066          			JMP		JMP_FAIL	; -4
  2170 00791 5066          			JMP		JMP_FAIL	; -3
  2171 00792               		IATEST3:	
  2172 00792 2A03          			BS		Z		; -2
  2173 00793 6BF7          			SJZ		@0xF7	; -1
  2174 00794 5066          			JMP		JMP_FAIL
  2175 00795 5066          			JMP		JMP_FAIL
  2176 00796 5066          			JMP		JMP_FAIL
  2177                     
  2178 00797 57A3          			JMP		_IPass		; -9
  2179 00798 5066          			JMP		JMP_FAIL	; -8
  2180 00799 5066          			JMP		JMP_FAIL	; -7
  2181 0079A 5066          			JMP		JMP_FAIL	; -6
  2182 0079B 5066          			JMP		JMP_FAIL	; -5
  2183 0079C 5066          			JMP		JMP_FAIL	; -4
  2184 0079D 5066          			JMP		JMP_FAIL	; -3
  2185 0079E               		IATEST4:	
  2186 0079E 2203          			BC		Z		; -2
  2187 0079F 6DF7          			SJNZ	@0xF7	; -1
  2188 007A0 5066          			JMP		JMP_FAIL
  2189 007A1 5066          			JMP		JMP_FAIL
  2190 007A2 5066          			JMP		JMP_FAIL
  2191 007A3               		_IPass:
  2192 007A3 0000          				NOP
  2193 007A4 0012          		RET
  2194                     
  2195 007A5               	TEST_READ_ROM:
  2196 007A5               		INST_TBLRD_R:
  2197 007A5 6028          			MOV		A,@0x28
  2198 007A6 015A          			MOV		INST,A
  2199 007A7 7A01          			SBANK	1
  2200 007A8 60F1          			MOV		A,@0xF1		;ADDR(0x0EF1)
  2201 007A9 0145          			MOV		TBPTL,A
  2202 007AA 600E          			MOV		A,@0x0E
  2203 007AB 0146          			MOV		TBPTH,A
  2204 007AC 7A00          			SBANK	0
  2205 007AD 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2206 007AE 6CA1          			XOR		A,@0xA1
  2207 007AF 40CE          			CALL	INST_XOR_JUDGE
  2208 007B0 1050          			MOV		A,0x50
  2209 007B1 6C70          			XOR		A,@0x70
  2210 007B2 40CE          			CALL	INST_XOR_JUDGE
  2211                     
  2212 007B3 7A01          			SBANK	1
  2213                     			;MOV		A,@0xF1		;ADDR(0x0EF1)
  2214                     			;MOV		TBPTL,A
  2215                     			;MOV		A,@0x0E
  2216                     			;MOV		TBPTH,A
  2217 007B4 1545          			INC		TBPTL		;ADDR(0x0EF2)
  2218 007B5 7A00          			SBANK	0
  2219 007B6 6750          			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
  2220 007B7 6CA2          			XOR		A,@0xA2
  2221 007B8 40CE          			CALL	INST_XOR_JUDGE
  2222 007B9 1050          			MOV		A,0x50
  2223 007BA 6C70          			XOR		A,@0x70
  2224 007BB 40CE          			CALL	INST_XOR_JUDGE
  2225 007BC               		INST_TBRD_R:		;-------Instruction Test => TBRD R
  2226 007BC 6033          			MOV		A,@0x33
  2227 007BD 015A          			MOV		INST,A
  2228 007BE 7A01          			SBANK	1
  2229 007BF 60F3          			MOV		A,@0xF3		;ADDR(0x0EF3)
  2230 007C0 0145          			MOV		TBPTL,A
  2231 007C1 600E          			MOV		A,@0x0E
  2232 007C2 0146          			MOV		TBPTH,A
  2233 007C3 7A00          			SBANK	0
  2234 007C4 7B50          			TBRD	0x50
  2235 007C5 1050          			MOV		A,0x50
  2236 007C6 6CA4          			XOR		A,@0xA4
  2237 007C7 40CE          			CALL	INST_XOR_JUDGE
  2238                     
  2239 007C8 7A01          			SBANK	1
  2240                     			;MOV		A,@0xF3
  2241                     			;MOV		TBPTL,A
  2242                     			;MOV		A,@0x0E
  2243                     			;MOV		TBPTH,A
  2244 007C9 1545          			INC		TBPTL		;ADDR(0x0EF4)
  2245 007CA 7A00          			SBANK	0
  2246 007CB 7B50          			TBRD	0x50
  2247 007CC 1050          			MOV		A,0x50
  2248 007CD 6CA8          			XOR		A,@0xA8
  2249 007CE 40CE          			CALL	INST_XOR_JUDGE
  2250 007CF 0012          		RET
  2251                     
  2252                     
  2253 007D0               	CALL_Test:
  2254 007D0 1550          		INC		0x50
  2255 007D1 0012          		RET
  2256                     ;================== EEPROM Test Routine =====================
  2257                     
  2258                     ;================== Return Table ============================
  2259                     ORG	0x0EF0	; ADDR(3824)
  2260 00EF0               	INST_RETL_TABLE:
  2261 00EF0 0F02          		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
  2262 00EF1 70A1          		RETL	@0xA1
  2263 00EF2 70A2          		RETL	@0xA2
  2264 00EF3 70A4          		RETL	@0xA4
  2265 00EF4 70A8          		RETL	@0xA8
  2266 00EF5 701A          		RETL	@0x1A
  2267 00EF6 702A          		RETL	@0x2A
  2268 00EF7 704A          		RETL	@0x4A
  2269 00EF8 708A          		RETL	@0x8A
  2270                     
  2271                     ;================== RAM Test Routine ========================
  2272                     ORG	0x0F00	; ADDR(3840)
  2273 00F00               	TEST_RAM_BANK_0_5:
  2274 00F00 6080          		MOV		A,@0x80		; Write Start SRAM(0x55)
  2275 00F01 0104          		MOV		RSR,A
  2276 00F02 7A40          		GBANK	0
  2277 00F03 6055          		MOV		A,@0x55
  2278 00F04 0100          		MOV		IAR,A
  2279 00F05 1504          		INC		RSR
  2280 00F06 6000          		MOV		A,@0x00
  2281 00F07 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2282 00F08 3A03          		JBS		Z
  2283 00F09 5F03          		JMP		$-6
  2284 00F0A 6080          		MOV		A,@0x80		; Read Start SRAM(0x55)
  2285 00F0B 0104          		MOV		RSR,A
  2286 00F0C 7A40          		GBANK	0
  2287 00F0D 6055          		MOV		A,@0x55
  2288 00F0E 0D00          		XOR		IAR,A
  2289 00F0F 3A03          		JBS		Z
  2290 00F10 5069          		JMP		RAM_FAIL
  2291 00F11 1504          		INC		RSR
  2292 00F12 6000          		MOV		A,@0x00
  2293 00F13 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2294 00F14 3A03          		JBS		Z
  2295 00F15 5F0D          		JMP		$-8
  2296 00F16 0012          		RET
  2297 00F17               	TEST_RAM_BANK_0_A:
  2298 00F17 6080          		MOV		A,@0x80		; Write Start SRAM(0xAA)
  2299 00F18 0104          		MOV		RSR,A
  2300 00F19 7A40          		GBANK	0
  2301 00F1A 60AA          		MOV		A,@0xAA		; SRAM(0xAA)
  2302 00F1B 0100          		MOV		IAR,A
  2303 00F1C 1504          		INC		RSR
  2304 00F1D 6000          		MOV		A,@0x00
  2305 00F1E 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2306 00F1F 3A03          		JBS		Z
  2307 00F20 5F1A          		JMP		$-6
  2308 00F21 6080          		MOV		A,@0x80
  2309 00F22 0104          		MOV		RSR,A
  2310 00F23 7A40          		GBANK	0
  2311 00F24 60AA          		MOV		A,@0xAA
  2312 00F25 0D00          		XOR		IAR,A
  2313 00F26 3A03          		JBS		Z
  2314 00F27 5069          		JMP		RAM_FAIL
  2315 00F28 1504          		INC		RSR
  2316 00F29 6000          		MOV		A,@0x00
  2317 00F2A 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2318 00F2B 3A03          		JBS		Z
  2319 00F2C 5F24          		JMP		$-8
  2320 00F2D 0012          		RET
  2321 00F2E               	TEST_RAM_BANK_1_3:
  2322 00F2E 6080          		MOV		A,@0x80		; Write Start SRAM(0x33)
  2323 00F2F 0104          		MOV		RSR,A
  2324 00F30 7A41          		GBANK	1
  2325 00F31 6033          		MOV		A,@0x33		; SRAM(0x33)
  2326 00F32 0100          		MOV		IAR,A
  2327 00F33 1504          		INC		RSR
  2328 00F34 6000          		MOV		A,@0x00
  2329 00F35 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2330 00F36 3A03          		JBS		Z
  2331 00F37 5F31          		JMP		$-6
  2332 00F38 6080          		MOV		A,@0x80
  2333 00F39 0104          		MOV		RSR,A
  2334 00F3A 7A41          		GBANK	1
  2335 00F3B 6033          		MOV		A,@0x33
  2336 00F3C 0D00          		XOR		IAR,A
  2337 00F3D 3A03          		JBS		Z
  2338 00F3E 5069          		JMP		RAM_FAIL
  2339 00F3F 1504          		INC		RSR
  2340 00F40 6000          		MOV		A,@0x00
  2341 00F41 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2342 00F42 3A03          		JBS		Z
  2343 00F43 5F3B          		JMP		$-8
  2344 00F44 0012          		RET
  2345 00F45               	TEST_RAM_BANK_1_C:
  2346 00F45 6080          		MOV		A,@0x80		; Write Start SRAM(0xCC)
  2347 00F46 0104          		MOV		RSR,A
  2348 00F47 7A41          		GBANK	1
  2349 00F48 60CC          		MOV		A,@0xCC		; SRAM(0xCC)
  2350 00F49 0100          		MOV		IAR,A
  2351 00F4A 1504          		INC		RSR
  2352 00F4B 6000          		MOV		A,@0x00
  2353 00F4C 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2354 00F4D 3A03          		JBS		Z
  2355 00F4E 5F48          		JMP		$-6
  2356 00F4F 6080          		MOV		A,@0x80
  2357 00F50 0104          		MOV		RSR,A
  2358 00F51 7A41          		GBANK	1
  2359 00F52 60CC          		MOV		A,@0xCC
  2360 00F53 0D00          		XOR		IAR,A
  2361 00F54 3A03          		JBS		Z
  2362 00F55 5069          		JMP		RAM_FAIL
  2363 00F56 1504          		INC		RSR
  2364 00F57 6000          		MOV		A,@0x00
  2365 00F58 0D04          		XOR		RSR,A		; INC(0x80),UNTIL(0x00)
  2366 00F59 3A03          		JBS		Z
  2367 00F5A 5F52          		JMP		$-8
  2368 00F5B 0012          		RET
  2369                     
  2370                     ;================== Long Sub Routine ========================
  2371                     ORG	0x0FFE	; >4K
  2372 00FFE               	LCALL_Test:
  2373 00FFE 1551          		INC		0x51
  2374 00FFF 0012          		RET
  0 Error(s), 0 Warning(s), 0 User Message(s)