****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X3    , End=0X3    , Size=1
Start=0X5    , End=0X9    , Size=5
Start=0XB    , End=0XD    , Size=3
Start=0XF    , End=0XF    , Size=1
Start=0X11   , End=0X13   , Size=3
Start=0X15   , End=0X15   , Size=1
Start=0X17   , End=0X17   , Size=1
Start=0X19   , End=0X23   , Size=11
Start=0X25   , End=0X25   , Size=1
Start=0X27   , End=0X29   , Size=3
Start=0X2B   , End=0X2B   , Size=1
Start=0X2D   , End=0X39   , Size=13
Start=0X3B   , End=0X3B   , Size=1
Start=0X3D   , End=0X3D   , Size=1
Start=0X3F   , End=0X3F   , Size=1
Start=0X41   , End=0X41   , Size=1
Start=0X43   , End=0X43   , Size=1
Start=0X4F   , End=0X4F   , Size=1
Start=0X751  , End=0XEEF  , Size=1951
Start=0XF38  , End=0X17FF , Size=2248
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  1894 x 15 bits( 30.8%)
Free            |  4250 x 15 bits( 69.2%)
----------------------------------------
****************************************
The Checksum is -- 0xA45D
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 5EF9  		JMP	_Int_EXINT
000004: 5EFD  		JMP	_Int_ICINT
00000A: 5F00  		JMP	_Int_CMP1INT
00000E: 5F05  		JMP	_Int_CMP2INT
000010: 5F0A  		JMP	_Int_ADINT
000014: 5F0F  		JMP	_Int_PWMPAINT
000016: 5F11  		JMP	_Int_PWMDAINT
000018: 5F13  		JMP	_Int_CMP3INT
000024: 5F18  		JMP	_Int_PWMPBINT
000026: 5F1A  		JMP	_Int_PWMDBINT
00002A: 5F1C  		JMP	_Int_PWMPCINT
00002C: 5F1E  		JMP	_Int_PWMDCINT
00003A: 5F20  		JMP	_Int_SHINT
00003C: 5F25  		JMP	_Int_TM1INT
00003E: 5F29  		JMP	_Int_TM2INT
000040: 5F2D  		JMP	_Int_TM1OFINT
000042: 5F32  		JMP	_Int_TXTMINT
000044: 5F36  		JMP	_Int_AFPWMINT
000045: 5745  	JMP JMP_FAIL	;0x0046
000046: 5745  	JMP JMP_FAIL	;0x0047
000047: 5745  	JMP JMP_FAIL	;0x0048
000048: 5745  	JMP JMP_FAIL	;0x0049
000049: 5745  	JMP JMP_FAIL	;0x004A
00004A: 5745  	JMP JMP_FAIL	;0x004B
00004B: 5745  	JMP JMP_FAIL	;0x004C
00004C: 5745  	JMP JMP_FAIL	;0x004D
00004D: 5745  	JMP JMP_FAIL	;0x004E
00004E: 5745  	JMP JMP_FAIL	;0x004F
000050: 7A00  	SDxxx_SYS_INIT
000051: 2F0E      BS		CPUS
000052: 2E0E      BS		IDLE
000053: 7A00  	SDxxx_GPIO_INIT
000054: 0305  	CLR		P5
000055: 600F  	MOV		A,@0x0F
000056: 010B  	MOV		IOCR5,A
000057: 6000  	SDxxx_EFT_TES_JMP
000058: 0103          MOV		STATUS,A
000059: 0350          CLR 	0x50
00005A: 1550          INC 	0x50                ;[0x50] = 0x01
00005B: 505D          JMP 	$+2
00005C: 5745          JMP 	JMP_FAIL
00005D: 1550          INC 	0x50                ;[0x50] = 0x02
00005E: 5060          JMP 	$+2
00005F: 5745          JMP 	JMP_FAIL
000060: 1550          INC 	0x50                ;[0x50] = 0x03
000061: 5063          JMP 	$+2
000062: 5745          JMP 	JMP_FAIL
000063: 1550          INC 	0x50                ;[0x50] = 0x04
000064: 5066          JMP 	$+2
000065: 5745          JMP 	JMP_FAIL
000066: 1550          INC 	0x50                ;[0x50] = 0x05
000067: 5069          JMP 	$+2
000068: 5745          JMP 	JMP_FAIL
000069: 1550          INC 	0x50                ;[0x50] = 0x06
00006A: 506C          JMP 	$+2
00006B: 5745          JMP 	JMP_FAIL
00006C: 1550          INC 	0x50                ;[0x50] = 0x07
00006D: 506F          JMP 	$+2
00006E: 5745          JMP 	JMP_FAIL
00006F: 1550          INC 	0x50                ;[0x50] = 0x08
000070: 5072          JMP 	$+2
000071: 5745          JMP 	JMP_FAIL
000072: 1550          INC 	0x50                ;[0x50] = 0x09
000073: 5075          JMP 	$+2
000074: 5745          JMP 	JMP_FAIL
000075: 1550          INC 	0x50                ;[0x50] = 0x0A
000076: 5078          JMP 	$+2
000077: 5745          JMP 	JMP_FAIL
000078: 1550          INC 	0x50                ;[0x50] = 0x0B
000079: 507B          JMP 	$+2
00007A: 5745          JMP 	JMP_FAIL
00007B: 1550          INC 	0x50                ;[0x50] = 0x0C
00007C: 507E          JMP 	$+2
00007D: 5745          JMP 	JMP_FAIL
00007E: 1550          INC 	0x50                ;[0x50] = 0x0D
00007F: 5081          JMP 	$+2
000080: 5745          JMP 	JMP_FAIL
000081: 1550          INC 	0x50                ;[0x50] = 0x0E
000082: 5084          JMP 	$+2
000083: 5745          JMP 	JMP_FAIL
000084: 1550          INC 	0x50                ;[0x50] = 0x0F
000085: 5087          JMP 	$+2
000086: 5745          JMP 	JMP_FAIL
000087: 1550          INC 	0x50
000088: 508A          JMP 	$+2                ;[0x50] = 0x10
000089: 5745          JMP 	JMP_FAIL
00008A: 6010          MOV 	A,@0x10
00008B: 0D50          XOR 	0x50,A				;[0x50] = 0x10 ?
00008C: 3A03          JBS		Z			; Check Z = 1?
00008D: 5745          JMP	JMP_FAIL
00008E: 3603          JBC		N			; Check N = 0?
00008F: 5745          JMP	JMP_FAIL
000090: 7A01  	SDxxx_EFT_STACK
000091: 1047  		MOV		A,STKMON
000092: 6C00  		XOR		A,@0x00
000093: 4749  		CALL	INST_XOR_JUDGE
000094: 4096  		CALL	STACK1
000095: 50B6  		JMP		TEST_STACK_END
000096: 1047  		MOV		A,STKMON
000097: 6C01  		XOR		A,@0x01
000098: 4749  		CALL	INST_XOR_JUDGE
000099: 409B  		CALL	STACK2
00009A: 0012  		RET
00009B: 1047  		MOV		A,STKMON
00009C: 6C02  		XOR		A,@0x02
00009D: 4749  		CALL	INST_XOR_JUDGE
00009E: 40A0  		CALL	STACK3
00009F: 0012  		RET
0000A0: 1047  		MOV		A,STKMON
0000A1: 6C03  		XOR		A,@0x03
0000A2: 4749  		CALL	INST_XOR_JUDGE
0000A3: 40A5  		CALL	STACK4
0000A4: 0012  		RET
0000A5: 1047  		MOV		A,STKMON
0000A6: 6C04  		XOR		A,@0x04
0000A7: 4749  		CALL	INST_XOR_JUDGE
0000A8: 40AA  		CALL	STACK5
0000A9: 0012  		RET
0000AA: 1047  		MOV		A,STKMON
0000AB: 6C05  		XOR		A,@0x05
0000AC: 4749  		CALL	INST_XOR_JUDGE
0000AD: 40AF  		CALL	STACK6
0000AE: 0012  		RET
0000AF: 1047  		MOV		A,STKMON
0000B0: 6C06  		XOR		A,@0x06
0000B1: 4749  		CALL	INST_XOR_JUDGE
0000B2: 40B4  		CALL	STACK7
0000B3: 0012  		RET
0000B4: 0000  		NOP
0000B5: 0012  		RET
0000B6: 0000  		NOP
0000B7: 7A00  	SBANK	0
0000B8: 474E  	SDxxx_EFT_INST_ARITHEMATIC
0000B9: 60AA          MOV		A,@0xAA
0000BA: 0001          DAA
0000BB: 3803          JBS		C			; Check C = 1?
0000BC: 5747          JMP	INS_FAIL
0000BD: 3103          JBC		DC			; Check DC = 0?
0000BE: 5747          JMP	INS_FAIL
0000BF: 3203          JBC		Z			; Check Z = 0?
0000C0: 5747          JMP	INS_FAIL
0000C1: 3503          JBC		OV			; Check OV = 0?
0000C2: 5747          JMP	INS_FAIL
0000C3: 3603          JBC		N			; Check N = 0?
0000C4: 5747          JMP	INS_FAIL
0000C5: 6C10          XOR		A,@0x10		; Check Result ?
0000C6: 3A03          JBS		Z			; Check Z = 1?
0000C7: 5747          JMP	INS_FAIL
0000C8: 3603          JBC		N			; Check N = 0?
0000C9: 5747          JMP	INS_FAIL
0000CA: 474E          CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000CB: 6080          MOV		A,@0x80
0000CC: 0150          MOV		0x50,A		; [0x50] = 0x80
0000CD: 607F          MOV		A,@0x7F		; 
0000CE: 0E50          ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000CF: 0001          DAA
0000D0: 3803          JBS		C			; Check C = 1?
0000D1: 5747          JMP	INS_FAIL
0000D2: 3103          JBC		DC			; Check DC = 0?
0000D3: 5747          JMP	INS_FAIL
0000D4: 3203          JBC		Z			; Check Z = 0?
0000D5: 5747          JMP	INS_FAIL
0000D6: 3503          JBC		OV			; Check OV = 0?
0000D7: 5747          JMP	INS_FAIL
0000D8: 3E03          JBS		N			; Check N = 1?	; Result is Negative
0000D9: 5747          JMP	INS_FAIL
0000DA: 2203          BC		Z
0000DB: 2603          BC		N
0000DC: 6C65          XOR		A,@0x65		; Check Result ?
0000DD: 3A03          JBS		Z			; Check Z = 1?
0000DE: 5747          JMP	INS_FAIL
0000DF: 3603          JBC		N			; Check N = 0?
0000E0: 5747          JMP	INS_FAIL
0000E1: 0000          NOP
0000E2: 6000          MOV		A,@0x00
0000E3: 0103          MOV		STATUS,A
0000E4: 2803          BS		C
0000E5: 6080          MOV		A,@0x80
0000E6: 0150          MOV		0x50,A		; [0x50] = 0x80
0000E7: 607F          MOV		A,@0x7F		; 
0000E8: 7E50          ADC		A,0x50		; A = 0x7F + 0x80
0000E9: 0001          DAA
0000EA: 3803          JBS		C			; Check C = 1? 	/ By ADC
0000EB: 5747          JMP	INS_FAIL
0000EC: 3903          JBS		DC			; Check DC = 1? / By ADC
0000ED: 5747          JMP	INS_FAIL
0000EE: 3A03          JBS		Z			; Check Z = 1? 	/ By ADC
0000EF: 5747          JMP	INS_FAIL
0000F0: 3503          JBC		OV			; Check OV = 0?
0000F1: 5747          JMP	INS_FAIL
0000F2: 3603          JBC		N			; Check N = 0?
0000F3: 5747          JMP	INS_FAIL
0000F4: 6C66          XOR		A,@0x66		; Check Result ?
0000F5: 3A03          JBS		Z			; Check Z = 1?
0000F6: 5747          JMP	INS_FAIL
0000F7: 3603          JBC		N			; Check N = 0?
0000F8: 5747          JMP	INS_FAIL
0000F9: 6000          MOV		A,@0x00
0000FA: 0103          MOV		STATUS,A
0000FB: 60FF          MOV		A,@0xFF
0000FC: 0150          MOV		0x50,A		; [0x50] = 0xFF
0000FD: 607F          MOV		A,@0x7F		; 
0000FE: 0450          SUB		A,0x50		; A = 0xFF - 0x7F
0000FF: 0001          DAA
000100: 3803          JBS		C			; Check C = 1? 	/ By SUB
000101: 5747          JMP	INS_FAIL
000102: 3903          JBS		DC			; Check DC = 1? / By SUB
000103: 5747          JMP	INS_FAIL
000104: 3203          JBC		Z			; Check Z = 0?
000105: 5747          JMP	INS_FAIL
000106: 3503          JBC		OV			; Check OV = 0?
000107: 5747          JMP	INS_FAIL
000108: 3E03          JBS		N			; Check N = 1?	; Result is Negative
000109: 5747          JMP	INS_FAIL
00010A: 2203          BC		Z
00010B: 2603          BC		N
00010C: 6CE6          XOR		A,@0xE6		; Check Result ?
00010D: 3A03          JBS		Z			; Check Z = 1?
00010E: 5747          JMP	INS_FAIL
00010F: 3603          JBC		N			; Check N = 0?
000110: 5747          JMP	INS_FAIL
000111: 605A          MOV		A,@0x5A
000112: 6C5A          XOR		A,@0x5A		; Check Result ?
000113: 3A03          JBS		Z			; Check Z = 1?
000114: 5747          JMP	INS_FAIL
000115: 3603          JBC		N			; Check N = 0?
000116: 5747          JMP	INS_FAIL
000117: 605A          MOV		A,@0x5A
000118: 0200          CLRA
000119: 3A03          JBS		Z			; Check Z = 1?
00011A: 5747          JMP	INS_FAIL
00011B: 2203          BC		Z
00011C: 6C00          XOR		A,@0x00		; Check Result ?
00011D: 3A03          JBS		Z			; Check Z = 1?
00011E: 5747          JMP	INS_FAIL
00011F: 3603          JBC		N			; Check N = 0?
000120: 5747          JMP	INS_FAIL
000121: 60AA          MOV		A,@0xAA
000122: 0150          MOV		0x50,A
000123: 1050          MOV		A,0x50
000124: 6CAA          XOR		A,@0xAA		; Check Result ?
000125: 3A03          JBS		Z			; Check Z = 1?
000126: 5747          JMP	INS_FAIL
000127: 3603          JBC		N			; Check N = 0?
000128: 5747          JMP	INS_FAIL
000129: 0350          CLR		0x50
00012A: 3A03          JBS		Z			; Check Z = 1?
00012B: 5747          JMP	INS_FAIL
00012C: 2203          BC		Z
00012D: 1050          MOV		A,0x50
00012E: 6C00          XOR		A,@0x00		; Check Result ?
00012F: 3A03          JBS		Z			; Check Z = 1?
000130: 5747          JMP	INS_FAIL
000131: 3603          JBC		N			; Check N = 0?
000132: 5747          JMP	INS_FAIL
000133: 6000          MOV		A,@0x00
000134: 0103          MOV		STATUS,A
000135: 6002          MOV		A,@0x02		; SUB(2-1)=1
000136: 0150          MOV		0x50,A		; [0x50] = 0x02
000137: 6001          MOV		A,@0x01
000138: 0450          SUB		A,0x50		; A = [0x50] - A
000139: 3803          JBS		C			; Check C = 1? 	; Resulet is Positive
00013A: 5747          JMP	INS_FAIL
00013B: 3903          JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00013C: 5747          JMP	INS_FAIL
00013D: 3203          JBC		Z			; Check Z = 0?
00013E: 5747          JMP	INS_FAIL
00013F: 3503          JBC		OV			; Check OV = 0?
000140: 5747          JMP	INS_FAIL
000141: 3603          JBC		N			; Check N = 0?
000142: 5747          JMP	INS_FAIL
000143: 2203          BC		Z
000144: 6C01          XOR		A,@0x01		; Check Result ?
000145: 3A03          JBS		Z			; Check Z = 1?
000146: 5747          JMP	INS_FAIL
000147: 3603          JBC		N			; Check N = 0?
000148: 5747          JMP	INS_FAIL
000149: 6000          MOV		A,@0x00
00014A: 0103          MOV		STATUS,A
00014B: 6002          MOV		A,@0x02		; SUB(2-2)=0
00014C: 0150          MOV		0x50,A		; [0x50] = 0x02
00014D: 6002          MOV		A,@0x02
00014E: 0450          SUB		A,0x50		; A = [0x50] - A
00014F: 3803          JBS		C			; Check C = 1?	; Result is Positive
000150: 5747          JMP	INS_FAIL
000151: 3903          JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000152: 5747          JMP	INS_FAIL
000153: 3A03          JBS		Z			; Check Z = 1?	; Result is Zero
000154: 5747          JMP	INS_FAIL
000155: 3503          JBC		OV			; Check OV = 0?
000156: 5747          JMP	INS_FAIL
000157: 3603          JBC		N			; Check N = 0?
000158: 5747          JMP	INS_FAIL
000159: 2203          BC		Z
00015A: 6C00          XOR		A,@0x00		; Check Result ?
00015B: 3A03          JBS		Z			; Check Z = 1?
00015C: 5747          JMP	INS_FAIL
00015D: 3603          JBC		N			; Check N = 0?
00015E: 5747          JMP	INS_FAIL
00015F: 6000          MOV		A,@0x00
000160: 0103          MOV		STATUS,A
000161: 60FF          MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000162: 0150          MOV		0x50,A		; [0x50] = 0xFF
000163: 607F          MOV		A,@0x7F
000164: 0450          SUB		A,0x50		; A = [0x50] - A
000165: 3803          JBS		C			; Check C = 1?
000166: 5747          JMP	INS_FAIL
000167: 3903          JBS		DC			; Check DC = 1?
000168: 5747          JMP	INS_FAIL
000169: 3203          JBC		Z			; Check Z = 0?
00016A: 5747          JMP	INS_FAIL
00016B: 3503          JBC		OV			; Check OV = 0?
00016C: 5747          JMP	INS_FAIL
00016D: 3E03          JBS		N			; Check N = 1?
00016E: 5747          JMP	INS_FAIL
00016F: 2203          BC		Z
000170: 2603          BC		N
000171: 6C80          XOR		A,@0x80		; Check Result ?
000172: 3A03          JBS		Z			; Check Z = 1?
000173: 5747          JMP	INS_FAIL
000174: 3603          JBC		N			; Check N = 0?
000175: 5747          JMP	INS_FAIL
000176: 6000          MOV		A,@0x00
000177: 0103          MOV		STATUS,A
000178: 6080          MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
000179: 0150          MOV		0x50,A		; [0x50] = 0x80
00017A: 607F          MOV		A,@0x7F
00017B: 0450          SUB		A,0x50		; A = [0x50] - A
00017C: 3803          JBS		C			; Check C = 1?
00017D: 5747          JMP	INS_FAIL
00017E: 3103          JBC		DC			; Check DC = 0?
00017F: 5747          JMP	INS_FAIL
000180: 3203          JBC		Z			; Check Z = 0?
000181: 5747          JMP	INS_FAIL
000182: 3D03          JBS		OV			; Check OV = 1?
000183: 5747          JMP	INS_FAIL
000184: 3603          JBC		N			; Check N = 0?
000185: 5747          JMP	INS_FAIL
000186: 2203          BC		Z
000187: 2603          BC		N
000188: 6C01          XOR		A,@0x01		; Check Result ?
000189: 3A03          JBS		Z			; Check Z = 1?
00018A: 5747          JMP	INS_FAIL
00018B: 3603          JBC		N			; Check N = 0?
00018C: 5747          JMP	INS_FAIL
00018D: 6000          MOV		A,@0x00
00018E: 0103          MOV		STATUS,A
00018F: 6001          MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
000190: 0150          MOV		0x50,A		; [0x50] = 0x01
000191: 6003          MOV		A,@0x03
000192: 0450          SUB		A,0x50		; A = [0x50] - A
000193: 3003          JBC		C			; Check C = 0?
000194: 5747          JMP	INS_FAIL
000195: 3103          JBC		DC			; Check DC = 0?
000196: 5747          JMP	INS_FAIL
000197: 3203          JBC		Z			; Check Z = 0?
000198: 5747          JMP	INS_FAIL
000199: 3503          JBC		OV			; Check OV = 0?
00019A: 5747          JMP	INS_FAIL
00019B: 3E03          JBS		N			; Check N = 1?
00019C: 5747          JMP	INS_FAIL
00019D: 2203          BC		Z
00019E: 2603          BC		N
00019F: 6CFE          XOR		A,@0xFE		; Check Result ?
0001A0: 3A03          JBS		Z			; Check Z = 1?
0001A1: 5747          JMP	INS_FAIL
0001A2: 3603          JBC		N			; Check N = 0?
0001A3: 5747          JMP	INS_FAIL
0001A4: 6000          MOV		A,@0x00
0001A5: 0103          MOV		STATUS,A
0001A6: 6002          MOV		A,@0x02
0001A7: 0150          MOV		0x50,A		; [0x50] = 0x02
0001A8: 6001          MOV		A,@0x01
0001A9: 0550          SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001AA: 1003          MOV		A,STATUS
0001AB: 6C1B          XOR		A,@0x1B		; for non reset
0001AC: 4749          CALL	INST_XOR_JUDGE
0001AD: 2203          BC		Z
0001AE: 2603          BC		N
0001AF: 1050          MOV		A,0x50
0001B0: 6C01          XOR		A,@0x01		; Check Result ?
0001B1: 4749          CALL	INST_XOR_JUDGE
0001B2: 6000          MOV		A,@0x00
0001B3: 0103          MOV		STATUS,A
0001B4: 6002          MOV		A,@0x02
0001B5: 0150          MOV		0x50,A		; [0x50] = 0x02
0001B6: 6002          MOV		A,@0x02
0001B7: 0550          SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001B8: 1003          MOV		A,STATUS
0001B9: 6C1F          XOR		A,@0x1F		; for nono reset
0001BA: 4749          CALL	INST_XOR_JUDGE
0001BB: 2203          BC		Z
0001BC: 2603          BC		N
0001BD: 1050          MOV		A,0x50
0001BE: 6C00          XOR		A,@0x00		; Check Result ?
0001BF: 3A03          JBS		Z			; Check Z = 1?
0001C0: 5747          JMP	INS_FAIL
0001C1: 3603          JBC		N			; Check N = 0?
0001C2: 5747          JMP	INS_FAIL
0001C3: 6000          MOV		A,@0x00
0001C4: 0103          MOV		STATUS,A
0001C5: 6080          MOV		A,@0x80
0001C6: 0150          MOV		0x50,A		; [0x50] = 0x80
0001C7: 6001          MOV		A,@0x01
0001C8: 0550          SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001C9: 1003          MOV		A,STATUS
0001CA: 6C39          XOR		A,@0x39	;; for non reset
0001CB: 4749          CALL	INST_XOR_JUDGE
0001CC: 2203          BC		Z
0001CD: 2603          BC		N
0001CE: 1050          MOV		A,0x50
0001CF: 6C7F          XOR		A,@0x7F		; Check Result ?
0001D0: 4749          CALL	INST_XOR_JUDGE
0001D1: 474E          CALL	STATUS_CLEAR
0001D2: 60FF          MOV		A,@0xFF		; 0xFF-0xFF
0001D3: 74FF          SUB		A,@0xFF		; A = 0xFF - 0xFF
0001D4: 3803          JBS		C			; Check C = 1?
0001D5: 5747          JMP	INS_FAIL
0001D6: 3903          JBS		DC			; Check DC = 1?
0001D7: 5747          JMP	INS_FAIL
0001D8: 3A03          JBS		Z			; Check Z = 1?
0001D9: 5747          JMP	INS_FAIL
0001DA: 3503          JBC		OV			; Check OV = 0?
0001DB: 5747          JMP	INS_FAIL
0001DC: 3603          JBC		N			; Check N = 0?
0001DD: 5747          JMP	INS_FAIL
0001DE: 6C00          XOR		A,@0x00		; Check Result ?
0001DF: 4749          CALL	INST_XOR_JUDGE
0001E0: 474E          CALL	STATUS_CLEAR
0001E1: 607F          MOV		A,@0x7F		; 0x00-0x7F
0001E2: 7400          SUB		A,@0x00		; A = 0x00 - 0x7F
0001E3: 3003          JBC		C			; Check C = 0?
0001E4: 5747          JMP	INS_FAIL
0001E5: 3103          JBC		DC			; Check DC = 0?
0001E6: 5747          JMP	INS_FAIL
0001E7: 3203          JBC		Z			; Check Z = 0?
0001E8: 5747          JMP	INS_FAIL
0001E9: 3503          JBC		OV			; Check OV = 0?
0001EA: 5747          JMP	INS_FAIL
0001EB: 3E03          JBS		N			; Check N = 1?
0001EC: 5747          JMP	INS_FAIL
0001ED: 6C81          XOR		A,@0x81		; Check Result ?
0001EE: 4749          CALL	INST_XOR_JUDGE
0001EF: 474E          CALL	STATUS_CLEAR
0001F0: 6001          MOV		A,@0x01		; 0x80-0x01
0001F1: 7480          SUB		A,@0x80		; A = 0x80 - 0x01
0001F2: 3803          JBS		C			; Check C = 1?
0001F3: 5747          JMP	INS_FAIL
0001F4: 3103          JBC		DC			; Check DC = 0?
0001F5: 5747          JMP	INS_FAIL
0001F6: 3203          JBC		Z			; Check Z = 0?
0001F7: 5747          JMP	INS_FAIL
0001F8: 3D03          JBS		OV			; Check OV = 1?
0001F9: 5747          JMP	INS_FAIL
0001FA: 3603          JBC		N			; Check N = 0?
0001FB: 5747          JMP	INS_FAIL
0001FC: 6C7F          XOR		A,@0x7F		; Check Result ?
0001FD: 4749          CALL	INST_XOR_JUDGE
0001FE: 474E          CALL	STATUS_CLEAR
0001FF: 2003          BC		C			; B = 1
000200: 6000          MOV		A,@0x00		;0x00-0xF
000201: 0150          MOV		0x50,A		; [0x50] = 0x00
000202: 60FF          MOV		A,@0xFF		; A = 0x01
000203: 7850          SUBB	A,0x50		; A = [0x50] - A - B
000204: 3003          JBC		C			; Check C = 0?
000205: 5747          JMP	INS_FAIL
000206: 3103          JBC		DC			; Check DC = 0?
000207: 5747          JMP	INS_FAIL
000208: 3A03          JBS		Z			; Check Z = 1?
000209: 5747          JMP	INS_FAIL
00020A: 3503          JBC		OV			; Check OV = 0?
00020B: 5747          JMP	INS_FAIL
00020C: 3603          JBC		N			; Check N = 0?
00020D: 5747          JMP	INS_FAIL
00020E: 6C00          XOR		A,@0x00		; Check Result ?
00020F: 4749          CALL	INST_XOR_JUDGE	
000210: 474E          CALL	STATUS_CLEAR
000211: 2003          BC		C			; B = 1
000212: 6000          MOV		A,@0x00		; 0x00-0x7F
000213: 0150          MOV		0x50,A		; [0x50] = 0x00
000214: 607F          MOV		A,@0x7F		; A = 0x01
000215: 7850          SUBB	A,0x50		; A = [0x50] - A - B
000216: 3003          JBC		C			; Check C = 0?
000217: 5747          JMP	INS_FAIL
000218: 3103          JBC		DC			; Check DC = 0?
000219: 5747          JMP	INS_FAIL
00021A: 3203          JBC		Z			; Check Z = 0?
00021B: 5747          JMP	INS_FAIL
00021C: 3503          JBC		OV			; Check OV = 0?
00021D: 5747          JMP	INS_FAIL
00021E: 3E03          JBS		N			; Check N = 1?
00021F: 5747          JMP	INS_FAIL
000220: 6C80          XOR		A,@0x80		; Check Result ?
000221: 4749          CALL	INST_XOR_JUDGE
000222: 474E          CALL	STATUS_CLEAR
000223: 2003          BC		C			; B = 1
000224: 6080          MOV		A,@0x80		; 0x80-0x01
000225: 0150          MOV		0x50,A		; [0x50] = 0x80
000226: 6001          MOV		A,@0x01		; A = 0x01
000227: 7850          SUBB	A,0x50		; A = [0x50] - A - B
000228: 3803          JBS		C			; Check C = 1?
000229: 5747          JMP	INS_FAIL
00022A: 3103          JBC		DC			; Check DC = 0?
00022B: 5747          JMP	INS_FAIL
00022C: 3203          JBC		Z			; Check Z = 0?
00022D: 5747          JMP	INS_FAIL
00022E: 3D03          JBS		OV			; Check OV = 1?
00022F: 5747          JMP	INS_FAIL
000230: 3603          JBC		N			; Check N = 0?
000231: 5747          JMP	INS_FAIL
000232: 6C7E          XOR		A,@0x7E		; Check Result ?
000233: 4749          CALL	INST_XOR_JUDGE
000234: 474E          CALL	STATUS_CLEAR
000235: 2003          BC		C			; B = 1
000236: 6000          MOV		A,@0x00		; 0x00-0xFF
000237: 0150          MOV		0x50,A		; [0x50] = 0x00
000238: 60FF          MOV		A,@0xFF
000239: 7950          SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
00023A: 1003          MOV		A,STATUS
00023B: 6C1C          XOR		A,@0x1C		; Check Status ?
00023C: 4749          CALL	INST_XOR_JUDGE
00023D: 1050          MOV		A,0x50
00023E: 6C00          XOR		A,@0x00		; Check Result ?
00023F: 4749          CALL	INST_XOR_JUDGE
000240: 474E          CALL	STATUS_CLEAR
000241: 2003          BC		C			; B = 1
000242: 6000          MOV		A,@0x00		; 0x00-0x7F
000243: 0150          MOV		0x50,A		; [0x50] = 0x00
000244: 607F          MOV		A,@0x7F
000245: 7950          SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000246: 1003          MOV		A,STATUS
000247: 6C58          XOR		A,@0x58		; Check Status ?
000248: 4749          CALL	INST_XOR_JUDGE
000249: 1050          MOV		A,0x50
00024A: 6C80          XOR		A,@0x80		; Check Result ?
00024B: 4749          CALL	INST_XOR_JUDGE
00024C: 474E          CALL	STATUS_CLEAR
00024D: 2003          BC		C			; B = 1
00024E: 6080          MOV		A,@0x80		; ,0x80-0x01
00024F: 0150          MOV		0x50,A		; [0x50] = 0x80
000250: 6001          MOV		A,@0x01
000251: 7950          SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000252: 1003          MOV		A,STATUS
000253: 6C39          XOR		A,@0x39		; Check Status ?
000254: 4749          CALL	INST_XOR_JUDGE
000255: 1050          MOV		A,0x50
000256: 6C7E          XOR		A,@0x7E		; Check Result ?
000257: 4749          CALL	INST_XOR_JUDGE
000258: 6000          MOV		A,@0x00
000259: 0103          MOV		STATUS,A
00025A: 6020          MOV		A,@0x20		; 0x20-1
00025B: 0150          MOV		0x50,A		; [0x50] = 0x20
00025C: 0650          DECA	0x50		; A = [0x50] - 1
00025D: 3803          JBS		C			; Check C = 1?	; Result is Positive
00025E: 5747          JMP	INS_FAIL
00025F: 3103          JBC		DC			; Check DC = 0?
000260: 5747          JMP	INS_FAIL
000261: 3203          JBC		Z			; Check Z = 0?
000262: 5747          JMP	INS_FAIL
000263: 3503          JBC		OV			; Check OV = 0?
000264: 5747          JMP	INS_FAIL
000265: 3603          JBC		N			; Check N = 0?
000266: 5747          JMP	INS_FAIL
000267: 6C1F          XOR		A,@0x1F		; Check Result ?
000268: 3A03          JBS		Z			; Check Z = 1?
000269: 5747          JMP	INS_FAIL
00026A: 3603          JBC		N			; Check N = 0?
00026B: 5747          JMP	INS_FAIL
00026C: 6000          MOV		A,@0x00
00026D: 0103          MOV		STATUS,A
00026E: 6001          MOV		A,@0x01		; 0x01-1
00026F: 0150          MOV		0x50,A		; [0x50] = 0x01
000270: 0650          DECA	0x50		; A = [0x50] - 1
000271: 3803          JBS		C			; Check C = 1?	; Result is Positive
000272: 5747          JMP	INS_FAIL
000273: 3903          JBS		DC			; Check DC = 1?
000274: 5747          JMP	INS_FAIL
000275: 3A03          JBS		Z			; Check Z = 1?
000276: 5747          JMP	INS_FAIL
000277: 3503          JBC		OV			; Check OV = 0?
000278: 5747          JMP	INS_FAIL
000279: 3603          JBC		N			; Check N = 0?
00027A: 5747          JMP	INS_FAIL
00027B: 2203          BC		Z
00027C: 6C00          XOR		A,@0x00		; Check Result ?
00027D: 3A03          JBS		Z			; Check Z = 1?
00027E: 5747          JMP	INS_FAIL
00027F: 3603          JBC		N			; Check N = 0?
000280: 5747          JMP	INS_FAIL
000281: 6000          MOV		A,@0x00
000282: 0103          MOV		STATUS,A
000283: 6000          MOV		A,@0x00		; 0x00-1
000284: 0150          MOV		0x50,A		; [0x50] = 0x00
000285: 0650          DECA	0x50		; A = [0x50] - 1
000286: 3003          JBC		C			; Check C = 0?
000287: 5747          JMP	INS_FAIL
000288: 3103          JBC		DC			; Check DC = 0?
000289: 5747          JMP	INS_FAIL
00028A: 3203          JBC		Z			; Check Z = 0?
00028B: 5747          JMP	INS_FAIL
00028C: 3503          JBC		OV			; Check OV = 0?
00028D: 5747          JMP	INS_FAIL
00028E: 3E03          JBS		N			; Check N = 1?
00028F: 5747          JMP	INS_FAIL
000290: 2203          BC		Z
000291: 2603          BC		N
000292: 6CFF          XOR		A,@0xFF		; Check Result ?
000293: 3A03          JBS		Z			; Check Z = 1?
000294: 5747          JMP	INS_FAIL
000295: 3603          JBC		N			; Check N = 0?
000296: 5747          JMP	INS_FAIL
000297: 6000          MOV		A,@0x00
000298: 0103          MOV		STATUS,A
000299: 6080          MOV		A,@0x80		; 0x80-1
00029A: 0150          MOV		0x50,A		; [0x50] = 0x80
00029B: 0650          DECA	0x50		; A = [0x50] - 1
00029C: 3803          JBS		C			; Check C = 1?
00029D: 5747          JMP	INS_FAIL
00029E: 3103          JBC		DC			; Check DC = 0?
00029F: 5747          JMP	INS_FAIL
0002A0: 3203          JBC		Z			; Check Z = 0?
0002A1: 5747          JMP	INS_FAIL
0002A2: 3D03          JBS		OV			; Check OV = 1?
0002A3: 5747          JMP	INS_FAIL
0002A4: 3603          JBC		N			; Check N = 0?
0002A5: 5747          JMP	INS_FAIL
0002A6: 2203          BC		Z
0002A7: 2603          BC		N
0002A8: 6C7F          XOR		A,@0x7F		; Check Result ?
0002A9: 3A03          JBS		Z			; Check Z = 1?
0002AA: 5747          JMP	INS_FAIL
0002AB: 3603          JBC		N			; Check N = 0?
0002AC: 5747          JMP	INS_FAIL
0002AD: 6000          MOV		A,@0x00
0002AE: 0103          MOV		STATUS,A
0002AF: 6020          MOV		A,@0x20		; 0x20-1
0002B0: 0150          MOV		0x50,A		; [0x50] = 0x20
0002B1: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002B2: 1003          MOV		A,STATUS
0002B3: 6C19          XOR		A,@0x19		; Check Status ? for non rest
0002B4: 3A03          JBS		Z			; Check Z = 1?
0002B5: 5747          JMP	INS_FAIL
0002B6: 3603          JBC		N			; Check N = 0?
0002B7: 5747          JMP	INS_FAIL
0002B8: 2203          BC		Z
0002B9: 1050          MOV		A,0x50
0002BA: 6C1F          XOR		A,@0x1F		; Check Result ?
0002BB: 3A03          JBS		Z			; Check Z = 1?
0002BC: 5747          JMP	INS_FAIL
0002BD: 3603          JBC		N			; Check N = 0?
0002BE: 5747          JMP	INS_FAIL
0002BF: 6000          MOV		A,@0x00
0002C0: 0103          MOV		STATUS,A
0002C1: 6001          MOV		A,@0x01		; 0x01-1
0002C2: 0150          MOV		0x50,A		; [0x50] = 0x01
0002C3: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002C4: 1003          MOV		A,STATUS
0002C5: 6C1F          XOR		A,@0x1F		; Check Status ? for non reset
0002C6: 3A03          JBS		Z			; Check Z = 1?
0002C7: 5747          JMP	INS_FAIL
0002C8: 3603          JBC		N			; Check N = 0?
0002C9: 5747          JMP	INS_FAIL
0002CA: 2203          BC		Z
0002CB: 1050          MOV		A,0x50
0002CC: 6C00          XOR		A,@0x00		; Check Result ?
0002CD: 3A03          JBS		Z			; Check Z = 1?
0002CE: 5747          JMP	INS_FAIL
0002CF: 3603          JBC		N			; Check N = 0?
0002D0: 5747          JMP	INS_FAIL
0002D1: 6000          MOV		A,@0x00
0002D2: 0103          MOV		STATUS,A
0002D3: 6000          MOV		A,@0x00		; 0x00-1
0002D4: 0150          MOV		0x50,A		; [0x50] = 0x00
0002D5: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002D6: 1003          MOV		A,STATUS
0002D7: 6C58          XOR		A,@0x58		; Check Status ? for non reset
0002D8: 3A03          JBS		Z			; Check Z = 1?
0002D9: 5747          JMP	INS_FAIL
0002DA: 3603          JBC		N			; Check N = 0?
0002DB: 5747          JMP	INS_FAIL
0002DC: 2203          BC		Z
0002DD: 1050          MOV		A,0x50
0002DE: 6CFF          XOR		A,@0xFF		; Check Result ?
0002DF: 3A03          JBS		Z			; Check Z = 1?
0002E0: 5747          JMP	INS_FAIL
0002E1: 3603          JBC		N			; Check N = 0?
0002E2: 5747          JMP	INS_FAIL
0002E3: 6000          MOV		A,@0x00
0002E4: 0103          MOV		STATUS,A
0002E5: 6080          MOV		A,@0x80		; 0x80-1
0002E6: 0150          MOV		0x50,A		; [0x50] = 0x80
0002E7: 0750          DEC		0x50		; [0x50] = [0x50] - 0x01
0002E8: 1003          MOV		A,STATUS
0002E9: 6C39          XOR		A,@0x39		; Check Status ? for non reset
0002EA: 3A03          JBS		Z			; Check Z = 1?
0002EB: 5747          JMP	INS_FAIL
0002EC: 3603          JBC		N			; Check N = 0?
0002ED: 5747          JMP	INS_FAIL
0002EE: 2203          BC		Z
0002EF: 1050          MOV		A,0x50
0002F0: 6C7F          XOR		A,@0x7F		; Check Result ?
0002F1: 3A03          JBS		Z			; Check Z = 1?
0002F2: 5747          JMP	INS_FAIL
0002F3: 3603          JBC		N			; Check N = 0?
0002F4: 5747          JMP	INS_FAIL
0002F5: 474E          CALL	STATUS_CLEAR	; 0x80+0x7F
0002F6: 6080          MOV		A,@0x80
0002F7: 0150          MOV		0x50,A		; [0x50] = 0x80
0002F8: 607F          MOV		A,@0x7F		; 
0002F9: 0E50          ADD		A,0x50		; A = 0x7F + 0x80
0002FA: 3003          JBC		C			; Check C = 0?
0002FB: 5747          JMP	INS_FAIL
0002FC: 3103          JBC		DC			; Check DC = 0?
0002FD: 5747          JMP	INS_FAIL
0002FE: 3203          JBC		Z			; Check Z = 0?
0002FF: 5747          JMP	INS_FAIL
000300: 3503          JBC		OV			; Check OV = 0?
000301: 5747          JMP	INS_FAIL
000302: 3E03          JBS		N			; Check N = 1?	; Result is Negative
000303: 5747          JMP	INS_FAIL
000304: 2203          BC		Z
000305: 2603          BC		N
000306: 6CFF          XOR		A,@0xFF		; Check Result ?
000307: 3A03          JBS		Z			; Check Z = 1?
000308: 5747          JMP	INS_FAIL
000309: 3603          JBC		N			; Check N = 0?
00030A: 5747          JMP	INS_FAIL
00030B: 474E          CALL	STATUS_CLEAR	; 0xFF+0x01
00030C: 60FF          MOV		A,@0xFF
00030D: 0150          MOV		0x50,A		; [0x50] = 0xFF
00030E: 6001          MOV		A,@0x01		; 
00030F: 0E50          ADD		A,0x50		; A = 0x01 + 0xFF
000310: 3803          JBS		C			; Check C = 1?
000311: 5747          JMP	INS_FAIL
000312: 3903          JBS		DC			; Check DC = 1?
000313: 5747          JMP	INS_FAIL
000314: 3A03          JBS		Z			; Check Z = 1?
000315: 5747          JMP	INS_FAIL
000316: 3503          JBC		OV			; Check OV = 0?
000317: 5747          JMP	INS_FAIL
000318: 3603          JBC		N			; Check N = 0?
000319: 5747          JMP	INS_FAIL
00031A: 2203          BC		Z
00031B: 2603          BC		N
00031C: 6C00          XOR		A,@0x00		; Check Result ?
00031D: 3A03          JBS		Z			; Check Z = 1?
00031E: 5747          JMP	INS_FAIL
00031F: 3603          JBC		N			; Check N = 0?
000320: 5747          JMP	INS_FAIL
000321: 474E          CALL	STATUS_CLEAR	; 0x7F+0x01
000322: 607F          MOV		A,@0x7F
000323: 0150          MOV		0x50,A		; [0x50] = 0x7F
000324: 6001          MOV		A,@0x01		; 
000325: 0E50          ADD		A,0x50		; A = 0x01 + 0x7F
000326: 3003          JBC		C			; Check C = 0?
000327: 5747          JMP	INS_FAIL
000328: 3903          JBS		DC			; Check DC = 1?
000329: 5747          JMP	INS_FAIL
00032A: 3203          JBC		Z			; Check Z = 0?
00032B: 5747          JMP	INS_FAIL
00032C: 3D03          JBS		OV			; Check OV = 1?
00032D: 5747          JMP	INS_FAIL
00032E: 3E03          JBS		N			; Check N = 1?
00032F: 5747          JMP	INS_FAIL
000330: 2203          BC		Z
000331: 2603          BC		N
000332: 6C80          XOR		A,@0x80		; Check Result ?
000333: 3A03          JBS		Z			; Check Z = 1?
000334: 5747          JMP	INS_FAIL
000335: 3603          JBC		N			; Check N = 0?
000336: 5747          JMP	INS_FAIL
000337: 474E          CALL	STATUS_CLEAR	; 0x80+0x7F
000338: 6080          MOV		A,@0x80
000339: 0150          MOV		0x50,A		; [0x50] = 0x80
00033A: 607F          MOV		A,@0x7F		; A = 0x7F
00033B: 0F50          ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00033C: 1003          MOV		A,STATUS
00033D: 6C58          XOR		A,@0x58		; Check Status ? for non reset
00033E: 3A03          JBS		Z			; Check Z = 1?
00033F: 5747          JMP	INS_FAIL
000340: 3603          JBC		N			; Check N = 0?
000341: 5747          JMP	INS_FAIL
000342: 1050          MOV		A,0x50
000343: 6CFF          XOR		A,@0xFF		; Check Result ?
000344: 3A03          JBS		Z			; Check Z = 1?
000345: 5747          JMP	INS_FAIL
000346: 3603          JBC		N			; Check N = 0?
000347: 5747          JMP	INS_FAIL
000348: 474E          CALL	STATUS_CLEAR	; 0xFF+0x01
000349: 60FF          MOV		A,@0xFF
00034A: 0150          MOV		0x50,A		; [0x50] = 0xFF
00034B: 6001          MOV		A,@0x01		; A = 0x01
00034C: 0F50          ADD		0x50,A		; [0x50] = 0xFF + 0x01
00034D: 1003          MOV		A,STATUS
00034E: 6C1F          XOR		A,@0x1F		; Check Status ? for non reset
00034F: 3A03          JBS		Z			; Check Z = 1?
000350: 5747          JMP	INS_FAIL
000351: 3603          JBC		N			; Check N = 0?
000352: 5747          JMP	INS_FAIL
000353: 1050          MOV		A,0x50
000354: 6C00          XOR		A,@0x00		; Check Result ?
000355: 3A03          JBS		Z			; Check Z = 1?
000356: 5747          JMP	INS_FAIL
000357: 3603          JBC		N			; Check N = 0?
000358: 5747          JMP	INS_FAIL
000359: 474E          CALL	STATUS_CLEAR	;0x7F+0x01
00035A: 607F          MOV		A,@0x7F
00035B: 0150          MOV		0x50,A		; [0x50] = 0x7F
00035C: 6001          MOV		A,@0x01		; A = 0x01
00035D: 0F50          ADD		0x50,A		; [0x50] = 0x7F + 0x01
00035E: 1003          MOV		A,STATUS
00035F: 6C7A          XOR		A,@0x7A		; Check Status ? for non reset
000360: 3A03          JBS		Z			; Check Z = 1?
000361: 5747          JMP	INS_FAIL
000362: 3603          JBC		N			; Check N = 0?
000363: 5747          JMP	INS_FAIL
000364: 1050          MOV		A,0x50
000365: 6C80          XOR		A,@0x80		; Check Result ?
000366: 3A03          JBS		Z			; Check Z = 1?
000367: 5747          JMP	INS_FAIL
000368: 3603          JBC		N			; Check N = 0?
000369: 5747          JMP	INS_FAIL
00036A: 474E          CALL	STATUS_CLEAR
00036B: 607F          MOV		A,@0x7F		;0x7F+0x01
00036C: 7C01          ADD		A,@0x01		; A = 0x01 + A
00036D: 3003          JBC		C			; Check C = 0?
00036E: 5747          JMP	INS_FAIL
00036F: 3903          JBS		DC			; Check DC = 1?
000370: 5747          JMP	INS_FAIL
000371: 3203          JBC		Z			; Check Z = 0?
000372: 5747          JMP	INS_FAIL
000373: 3D03          JBS		OV			; Check OV = 1?
000374: 5747          JMP	INS_FAIL
000375: 3E03          JBS		N			; Check N = 1?
000376: 5747          JMP	INS_FAIL
000377: 6C80          XOR		A,@0x80		; Check Result ?
000378: 4749          CALL	INST_XOR_JUDGE
000379: 474E          CALL	STATUS_CLEAR
00037A: 60FF          MOV		A,@0xFF		;0xFF+0x01
00037B: 7C01          ADD		A,@0x01		; A = 0x01 + A
00037C: 3803          JBS		C			; Check C = 1?
00037D: 5747          JMP	INS_FAIL
00037E: 3903          JBS		DC			; Check DC = 1?
00037F: 5747          JMP	INS_FAIL
000380: 3A03          JBS		Z			; Check Z = 1?
000381: 5747          JMP	INS_FAIL
000382: 3503          JBC		OV			; Check OV = 0?
000383: 5747          JMP	INS_FAIL
000384: 3603          JBC		N			; Check N = 0?
000385: 5747          JMP	INS_FAIL
000386: 6C00          XOR		A,@0x00		; Check Result ?
000387: 4749          CALL	INST_XOR_JUDGE
000388: 474E          CALL	STATUS_CLEAR
000389: 607F          MOV		A,@0x7F		; 0x80+0x7F
00038A: 7C80          ADD		A,@0x80		; A = 0x80 + A
00038B: 3003          JBC		C			; Check C = 0?
00038C: 5747          JMP	INS_FAIL
00038D: 3103          JBC		DC			; Check DC = 0?
00038E: 5747          JMP	INS_FAIL
00038F: 3203          JBC		Z			; Check Z = 0?
000390: 5747          JMP	INS_FAIL
000391: 3503          JBC		OV			; Check OV = 0?
000392: 5747          JMP	INS_FAIL
000393: 3E03          JBS		N			; Check N = 1?
000394: 5747          JMP	INS_FAIL
000395: 6CFF          XOR		A,@0xFF		; Check Result ?
000396: 4749          CALL	INST_XOR_JUDGE
000397: 474E          CALL	STATUS_CLEAR
000398: 2803          BS		C			; 0x7F+0x00
000399: 607F          MOV		A,@0x7F		
00039A: 0150          MOV		0x50,A		; [0x50] = 0x7F
00039B: 6000          MOV		A,@0x00		; A = 0x00
00039C: 7E50          ADC		A,0x50		; A = A + [0x50] + C
00039D: 3003          JBC		C			; Check C = 0?
00039E: 5747          JMP	INS_FAIL
00039F: 3903          JBS		DC			; Check DC = 1?
0003A0: 5747          JMP	INS_FAIL
0003A1: 3203          JBC		Z			; Check Z = 0?
0003A2: 5747          JMP	INS_FAIL
0003A3: 3D03          JBS		OV			; Check OV = 1?
0003A4: 5747          JMP	INS_FAIL
0003A5: 3E03          JBS		N			; Check N = 1?
0003A6: 5747          JMP	INS_FAIL
0003A7: 6C80          XOR		A,@0x80		; Check Result ?
0003A8: 4749          CALL	INST_XOR_JUDGE
0003A9: 474E          CALL	STATUS_CLEAR
0003AA: 2803          BS		C			; 0x80+0x7F
0003AB: 6080          MOV		A,@0x80
0003AC: 0150          MOV		0x50,A		; [0x50] = 0x80
0003AD: 607F          MOV		A,@0x7F		; A = 0x7F
0003AE: 7E50          ADC		A,0x50		; A = A + [0x50] + C
0003AF: 3803          JBS		C			; Check C = 1?
0003B0: 5747          JMP	INS_FAIL
0003B1: 3903          JBS		DC			; Check DC = 1?
0003B2: 5747          JMP	INS_FAIL
0003B3: 3A03          JBS		Z			; Check Z = 1?
0003B4: 5747          JMP	INS_FAIL
0003B5: 3503          JBC		OV			; Check OV = 0?
0003B6: 5747          JMP	INS_FAIL
0003B7: 3603          JBC		N			; Check N = 0?
0003B8: 5747          JMP	INS_FAIL
0003B9: 6C00          XOR		A,@0x00		; Check Result ?
0003BA: 4749          CALL	INST_XOR_JUDGE
0003BB: 474E          CALL	STATUS_CLEAR
0003BC: 2803          BS		C			;0x7F+0x00
0003BD: 607F          MOV		A,@0x7F
0003BE: 0150          MOV		0x50,A		; [0x50] = 0x7F
0003BF: 6000          MOV		A,@0x00		; A = 0x00
0003C0: 2203          BC		Z
0003C1: 7F50          ADC		0x50,A		; TMP1 = A + [0x50] + C
0003C2: 1003          MOV		A,STATUS
0003C3: 6C7A          XOR		A,@0x7A		; Check Status ?
0003C4: 4749          CALL	INST_XOR_JUDGE
0003C5: 1050          MOV		A,0x50
0003C6: 6C80          XOR		A,@0x80		; Check Result ?
0003C7: 4749          CALL	INST_XOR_JUDGE
0003C8: 474E          CALL	STATUS_CLEAR
0003C9: 2803          BS		C			;0x80+0x7F
0003CA: 6080          MOV		A,@0x80
0003CB: 0150          MOV		0x50,A		; [0x50] = 0x80
0003CC: 607F          MOV		A,@0x7F		; A = 0x7F
0003CD: 2203          BC		Z
0003CE: 7F50          ADC		0x50,A		; TMP1 = A + [0x50] + C
0003CF: 1003          MOV		A,STATUS
0003D0: 6C1F          XOR		A,@0x1F		; Check Status ?
0003D1: 4749          CALL	INST_XOR_JUDGE
0003D2: 1050          MOV		A,0x50
0003D3: 6C00          XOR		A,@0x00		; Check Result ?
0003D4: 4749          CALL	INST_XOR_JUDGE
0003D5: 474E          CALL	STATUS_CLEAR	; 0x7F+0x01
0003D6: 607F          MOV		A,@0x7F
0003D7: 0150          MOV		0x50,A		; [0x50] = 0x7F
0003D8: 1450          INCA	0x50		; A = [0x50] +1		
0003D9: 3003          JBC		C			; Check C = 0?
0003DA: 5747          JMP	INS_FAIL
0003DB: 3903          JBS		DC			; Check DC = 1?
0003DC: 5747          JMP	INS_FAIL
0003DD: 3203          JBC		Z			; Check Z = 0?
0003DE: 5747          JMP	INS_FAIL
0003DF: 3D03          JBS		OV			; Check OV = 1?
0003E0: 5747          JMP	INS_FAIL
0003E1: 3E03          JBS		N			; Check N = 1?
0003E2: 5747          JMP	INS_FAIL
0003E3: 2203          BC		Z
0003E4: 2603          BC		N
0003E5: 6C80          XOR		A,@0x80		; Check Result ?
0003E6: 3A03          JBS		Z			; Check Z = 1?
0003E7: 5747          JMP	INS_FAIL
0003E8: 3603          JBC		N			; Check N = 0?
0003E9: 5747          JMP	INS_FAIL
0003EA: 474E          CALL	STATUS_CLEAR	; 0xFF+0x01
0003EB: 60FF          MOV		A,@0xFF
0003EC: 0150          MOV		0x50,A		; [0x50] = 0xFF
0003ED: 1450          INCA	0x50		; A = [0x50] +1		
0003EE: 3803          JBS		C			; Check C = 1?
0003EF: 5747          JMP	INS_FAIL
0003F0: 3903          JBS		DC			; Check DC = 1?
0003F1: 5747          JMP	INS_FAIL
0003F2: 3A03          JBS		Z			; Check Z = 1?
0003F3: 5747          JMP	INS_FAIL
0003F4: 3503          JBC		OV			; Check OV = 0?
0003F5: 5747          JMP	INS_FAIL
0003F6: 3603          JBC		N			; Check N = 0?
0003F7: 5747          JMP	INS_FAIL
0003F8: 2203          BC		Z
0003F9: 2603          BC		N
0003FA: 6C00          XOR		A,@0x00		; Check Result ?
0003FB: 3A03          JBS		Z			; Check Z = 1?
0003FC: 5747          JMP	INS_FAIL
0003FD: 3603          JBC		N			; Check N = 0?
0003FE: 5747          JMP	INS_FAIL
0003FF: 474E          CALL 	STATUS_CLEAR	; 0x7F+0x01
000400: 607F          MOV		A,@0x7F
000401: 0150          MOV		0x50,A		; [0x50] = 0x7F
000402: 1550          INC		0x50		; [0x50] = [0x50] + 0x01
000403: 1003          MOV		A,STATUS
000404: 6C7A          XOR		A,@0x7A		; Check Status ?
000405: 3A03          JBS		Z			; Check Z = 1?
000406: 5747          JMP	INS_FAIL
000407: 3603          JBC		N			; Check N = 0?
000408: 5747          JMP	INS_FAIL
000409: 1050          MOV		A,0x50
00040A: 6C80          XOR		A,@0x80		; Check Result ?
00040B: 3A03          JBS		Z			; Check Z = 1?
00040C: 5747          JMP	INS_FAIL
00040D: 3603          JBC		N			; Check N = 0?
00040E: 5747          JMP	INS_FAIL
00040F: 474E          CALL	STATUS_CLEAR	; 0xFF+0x01
000410: 60FF          MOV		A,@0xFF
000411: 0150          MOV		0x50,A		; [0x50] = 0x7F
000412: 1550          INC		0x50		; [0x50] = [0x50] + 0x01
000413: 1003          MOV		A,STATUS
000414: 6C1F          XOR		A,@0x1F		; Check Status ?
000415: 3A03          JBS		Z			; Check Z = 1?
000416: 5747          JMP	INS_FAIL
000417: 3603          JBC		N			; Check N = 0?
000418: 5747          JMP	INS_FAIL
000419: 1050          MOV		A,0x50
00041A: 6C00          XOR		A,@0x00		; Check Result ?
00041B: 3A03          JBS		Z			; Check Z = 1?
00041C: 5747          JMP	INS_FAIL
00041D: 3603          JBC		N			; Check N = 0?
00041E: 5747          JMP	INS_FAIL
00041F: 474E          CALL	STATUS_CLEAR
000420: 6000          MOV		A,@0x00		; 0x00
000421: 0150          MOV		0x50,A		; [0x50] = 0x00
000422: 7D50          NEG		0x50
000423: 1003          MOV		A,STATUS
000424: 6C1F          XOR		A,@0x1F		; Check Status ?
000425: 4749          CALL	INST_XOR_JUDGE
000426: 1050          MOV		A,0x50
000427: 6C00          XOR		A,@0x00		; Check Result ?
000428: 4749          CALL	INST_XOR_JUDGE
000429: 474E          CALL	STATUS_CLEAR
00042A: 6001          MOV		A,@0x01		; 0x01
00042B: 0150          MOV		0x50,A		; [0x50] = 0x01
00042C: 7D50          NEG		0x50
00042D: 1003          MOV		A,STATUS
00042E: 6C58          XOR		A,@0x58		; Check Status ?
00042F: 4749          CALL	INST_XOR_JUDGE
000430: 1050          MOV		A,0x50
000431: 6CFF          XOR		A,@0xFF		; Check Result ?
000432: 4749          CALL	INST_XOR_JUDGE
000433: 474E          CALL	STATUS_CLEAR
000434: 6080          MOV		A,@0x80		; 0x80
000435: 0150          MOV		0x50,A		; [0x50] = 0x80
000436: 7D50          NEG		0x50
000437: 1003          MOV		A,STATUS
000438: 6C7A          XOR		A,@0x7A		; Check Status ?
000439: 4749          CALL	INST_XOR_JUDGE
00043A: 1050          MOV		A,0x50
00043B: 6C80          XOR		A,@0x80		; Check Result ?
00043C: 4749          CALL	INST_XOR_JUDGE
00043D: 474E  	SDxxx_EFT_INST_LOGIC_I
00043E: 60FF          MOV		A,@0xFF
00043F: 0104          MOV		RSR,A		; Start Address
000440: 0084          BTG		RSR
000441: 1004          MOV		A,RSR
000442: 6CFE          XOR		A,@0xFE		; Check Result ?
000443: 4749          CALL	INST_XOR_JUDGE
000444: 6000          MOV		A,@0x00
000445: 0103          MOV		STATUS,A
000446: 6000          MOV		A,@0x00
000447: 0150          MOV		0x50,A		; [0x50] = 0x00
000448: 6000          MOV		A,@0x00
000449: 2203          BC		Z
00044A: 0850          OR		A,0x50		; A = A | [0x50]
00044B: 3003          JBC		C			; Check C = 0?
00044C: 5747          JMP	INS_FAIL
00044D: 3103          JBC		DC			; Check DC = 0?
00044E: 5747          JMP	INS_FAIL
00044F: 3A03          JBS		Z			; Check Z = 1?
000450: 5747          JMP	INS_FAIL
000451: 3503          JBC		OV			; Check OV = 0?
000452: 5747          JMP	INS_FAIL
000453: 3603          JBC		N			; Check N = 0?
000454: 5747          JMP	INS_FAIL
000455: 2203          BC		Z
000456: 6C00          XOR		A,@0x00		; Check Result ?
000457: 3A03          JBS		Z			; Check Z = 1?
000458: 5747          JMP	INS_FAIL
000459: 3603          JBC		N			; Check N = 0?
00045A: 5747          JMP	INS_FAIL
00045B: 6000          MOV		A,@0x00
00045C: 0103          MOV		STATUS,A
00045D: 6055          MOV		A,@0x55
00045E: 0150          MOV		0x50,A		; [0x50] = 0x55
00045F: 60AA          MOV		A,@0xAA
000460: 2203          BC		Z
000461: 0850          OR		A,0x50		; A = A | [0x50]
000462: 3003          JBC		C			; Check C = 0?
000463: 5747          JMP	INS_FAIL
000464: 3103          JBC		DC			; Check DC = 0?
000465: 5747          JMP	INS_FAIL
000466: 3203          JBC		Z			; Check Z = 0?
000467: 5747          JMP	INS_FAIL
000468: 3503          JBC		OV			; Check OV = 0?
000469: 5747          JMP	INS_FAIL
00046A: 3E03          JBS		N			; Check N = 1?
00046B: 5747          JMP	INS_FAIL
00046C: 2203          BC		Z
00046D: 6CFF          XOR		A,@0xFF		; Check Result ?
00046E: 3A03          JBS		Z			; Check Z = 1?
00046F: 5747          JMP	INS_FAIL
000470: 3603          JBC		N			; Check N = 0?
000471: 5747          JMP	INS_FAIL
000472: 6000          MOV		A,@0x00
000473: 0103          MOV		STATUS,A
000474: 6000          MOV		A,@0x00
000475: 0150          MOV		0x50,A		; [0x50] = 0x00
000476: 6000          MOV		A,@0x00		; A = 0x00
000477: 2203          BC		Z
000478: 0950          OR		0x50,A		; [0x50] = A | [0x50]
000479: 1003          MOV		A,STATUS
00047A: 6C1C          XOR		A,@0x1C		; Check Status ? for non reset
00047B: 3A03          JBS		Z			; Check Z = 1?
00047C: 5747          JMP	INS_FAIL
00047D: 3603          JBC		N			; Check N = 0?
00047E: 5747          JMP	INS_FAIL
00047F: 1050          MOV		A,0x50		; A = Result[0x50]
000480: 2203          BC		Z
000481: 2603          BC		N
000482: 6C00          XOR		A,@0x00		; Check Result ?
000483: 3A03          JBS		Z			; Check Z = 1?
000484: 5747          JMP	INS_FAIL
000485: 3603          JBC		N			; Check N = 0?
000486: 5747          JMP	INS_FAIL
000487: 6000          MOV		A,@0x00
000488: 0103          MOV		STATUS,A
000489: 6055          MOV		A,@0x55
00048A: 0150          MOV		0x50,A		; [0x50] = 0x55
00048B: 60AA          MOV		A,@0xAA		; A = 0xAA
00048C: 0950          OR		0x50,A		; [0x50] = 0xAA | 0x55
00048D: 1003          MOV		A,STATUS
00048E: 6C58          XOR		A,@0x58		; Check Status ? for non reset
00048F: 3A03          JBS		Z			; Check Z = 1?
000490: 5747          JMP	INS_FAIL
000491: 3603          JBC		N			; Check N = 0?
000492: 5747          JMP	INS_FAIL
000493: 1050          MOV		A,0x50
000494: 2203          BC		Z
000495: 2603          BC		N
000496: 6CFF          XOR		A,@0xFF		; Check Result ?
000497: 3A03          JBS		Z			; Check Z = 1?
000498: 5747          JMP	INS_FAIL
000499: 3603          JBC		N			; Check N = 0?
00049A: 5747          JMP	INS_FAIL
00049B: 474E          CALL	STATUS_CLEAR
00049C: 6055          MOV		A,@0x55
00049D: 0150          MOV		0x50,A		; [0x50] = 0x55
00049E: 60AA          MOV		A,@0xAA
00049F: 0A50          AND		A,0x50		; A = 0xAA & 0x55
0004A0: 3003          JBC		C			; Check C = 0?
0004A1: 5747          JMP	INS_FAIL
0004A2: 3103          JBC		DC			; Check DC = 0?
0004A3: 5747          JMP	INS_FAIL
0004A4: 3A03          JBS		Z			; Check Z = 1?
0004A5: 5747          JMP	INS_FAIL
0004A6: 3503          JBC		OV			; Check OV = 0?
0004A7: 5747          JMP	INS_FAIL
0004A8: 3603          JBC		N			; Check N = 0?
0004A9: 5747          JMP	INS_FAIL
0004AA: 6C00          XOR		A,@0x00		; Check Result ?
0004AB: 3A03          JBS		Z			; Check Z = 1?
0004AC: 5747          JMP	INS_FAIL
0004AD: 3603          JBC		N			; Check N = 0?
0004AE: 5747          JMP	INS_FAIL
0004AF: 474E          CALL	STATUS_CLEAR
0004B0: 60F5          MOV		A,@0xF5
0004B1: 0150          MOV		0x50,A		; [0x50] = 0xF5
0004B2: 60FA          MOV		A,@0xFA
0004B3: 0A50          AND		A,0x50		; A = 0xFA & 0xF5
0004B4: 3003          JBC		C			; Check C = 0?
0004B5: 5747          JMP	INS_FAIL
0004B6: 3103          JBC		DC			; Check DC = 0?
0004B7: 5747          JMP	INS_FAIL
0004B8: 3203          JBC		Z			; Check Z = 0?
0004B9: 5747          JMP	INS_FAIL
0004BA: 3503          JBC		OV			; Check OV = 0?
0004BB: 5747          JMP	INS_FAIL
0004BC: 3E03          JBS		N			; Check N = 1?
0004BD: 5747          JMP	INS_FAIL
0004BE: 6CF0          XOR		A,@0xF0		; Check Result ?
0004BF: 3A03          JBS		Z			; Check Z = 1?
0004C0: 5747          JMP	INS_FAIL
0004C1: 3603          JBC		N			; Check N = 0?
0004C2: 5747          JMP	INS_FAIL
0004C3: 474E          CALL	STATUS_CLEAR
0004C4: 6055          MOV		A,@0x55
0004C5: 0150          MOV		0x50,A		; [0x50] = 0x55
0004C6: 60AA          MOV		A,@0xAA
0004C7: 0B50          AND		0x50,A		; [0x50] = 0xAA & 0x55
0004C8: 1003          MOV		A,STATUS
0004C9: 6C1C          XOR		A,@0x1C		; Check Status ? for non reset
0004CA: 3A03          JBS		Z			; Check Z = 1?
0004CB: 5747          JMP	INS_FAIL
0004CC: 3603          JBC		N			; Check N = 0?
0004CD: 5747          JMP	INS_FAIL
0004CE: 2203          BC		Z
0004CF: 1050          MOV		A,0x50
0004D0: 2203          BC		Z
0004D1: 6C00          XOR		A,@0x00		; Check Result ?
0004D2: 3A03          JBS		Z			; Check Z = 1?
0004D3: 5747          JMP	INS_FAIL
0004D4: 3603          JBC		N			; Check N = 0?
0004D5: 5747          JMP	INS_FAIL
0004D6: 474E          CALL	STATUS_CLEAR
0004D7: 60F5          MOV		A,@0xF5
0004D8: 0150          MOV		0x50,A		; [0x50] = 0xF5
0004D9: 60FA          MOV		A,@0xFA
0004DA: 0B50          AND		0x50,A		; [0x50] = 0xFA & 0xF5
0004DB: 1003          MOV		A,STATUS
0004DC: 6C58          XOR		A,@0x58		; Check Status ? for non reset
0004DD: 3A03          JBS		Z			; Check Z = 1?
0004DE: 5747          JMP	INS_FAIL
0004DF: 3603          JBC		N			; Check N = 0?
0004E0: 5747          JMP	INS_FAIL
0004E1: 2203          BC		Z
0004E2: 1050          MOV		A,0x50
0004E3: 2203          BC		Z
0004E4: 6CF0          XOR		A,@0xF0		; Check Result ?
0004E5: 3A03          JBS		Z			; Check Z = 1?
0004E6: 5747          JMP	INS_FAIL
0004E7: 3603          JBC		N			; Check N = 0?
0004E8: 5747          JMP	INS_FAIL
0004E9: 474E          CALL	STATUS_CLEAR
0004EA: 60AA          MOV		A,@0xAA
0004EB: 6855          AND		A,@0x55		; A = 0xAA & 0x55
0004EC: 3003          JBC		C			; Check C = 0?
0004ED: 5747          JMP	INS_FAIL
0004EE: 3103          JBC		DC			; Check DC = 0?
0004EF: 5747          JMP	INS_FAIL
0004F0: 3A03          JBS		Z			; Check Z = 1?
0004F1: 5747          JMP	INS_FAIL
0004F2: 3503          JBC		OV			; Check OV = 0?
0004F3: 5747          JMP	INS_FAIL
0004F4: 3603          JBC		N			; Check N = 0?
0004F5: 5747          JMP	INS_FAIL
0004F6: 6C00          XOR		A,@0x00		; Check Result ?
0004F7: 3A03          JBS		Z			; Check Z = 1?
0004F8: 5747          JMP	INS_FAIL
0004F9: 3603          JBC		N			; Check N = 0?
0004FA: 5747          JMP	INS_FAIL
0004FB: 474E          CALL	STATUS_CLEAR
0004FC: 60AA          MOV		A,@0xAA
0004FD: 68FF          AND		A,@0xFF		; A = A & 0xFF
0004FE: 3003          JBC		C			; Check C = 0?
0004FF: 5747          JMP	INS_FAIL
000500: 3103          JBC		DC			; Check DC = 0?
000501: 5747          JMP	INS_FAIL
000502: 3203          JBC		Z			; Check Z = 0?
000503: 5747          JMP	INS_FAIL
000504: 3503          JBC		OV			; Check OV = 0?
000505: 5747          JMP	INS_FAIL
000506: 3E03          JBS		N			; Check N = 1?
000507: 5747          JMP	INS_FAIL
000508: 6CAA          XOR		A,@0xAA		; Check Result ?
000509: 4749          CALL	INST_XOR_JUDGE
00050A: 474E          CALL	STATUS_CLEAR
00050B: 60FF          MOV		A,@0xFF
00050C: 0150          MOV		0x50,A		; [0x50] = 0xFF
00050D: 1250          COMA	0x50		; A = /R
00050E: 3003          JBC		C			; Check C = 0?
00050F: 5747          JMP	INS_FAIL
000510: 3103          JBC		DC			; Check DC = 0?
000511: 5747          JMP	INS_FAIL
000512: 3A03          JBS		Z			; Check Z = 1?
000513: 5747          JMP	INS_FAIL
000514: 3503          JBC		OV			; Check OV = 0?
000515: 5747          JMP	INS_FAIL
000516: 3603          JBC		N			; Check N = 0?
000517: 5747          JMP	INS_FAIL
000518: 6C00          XOR		A,@0x00		; Check Result ?
000519: 3A03          JBS		Z			; Check Z = 1?
00051A: 5747          JMP	INS_FAIL
00051B: 3603          JBC		N			; Check N = 0?
00051C: 5747          JMP	INS_FAIL	
00051D: 474E          CALL	STATUS_CLEAR
00051E: 6005          MOV		A,@0x05
00051F: 0150          MOV		0x50,A		; [0x50] = 0x05
000520: 1250          COMA	0x50		; A = /R
000521: 3003          JBC		C			; Check C = 0?
000522: 5747          JMP	INS_FAIL
000523: 3103          JBC		DC			; Check DC = 0?
000524: 5747          JMP	INS_FAIL
000525: 3203          JBC		Z			; Check Z = 0?
000526: 5747          JMP	INS_FAIL
000527: 3503          JBC		OV			; Check OV = 0?
000528: 5747          JMP	INS_FAIL
000529: 3E03          JBS		N			; Check N = 1?
00052A: 5747          JMP	INS_FAIL
00052B: 6CFA          XOR		A,@0xFA		; Check Result ?
00052C: 3A03          JBS		Z			; Check Z = 1?
00052D: 5747          JMP	INS_FAIL
00052E: 3603          JBC		N			; Check N = 0?
00052F: 5747          JMP	INS_FAIL
000530: 474E          CALL	STATUS_CLEAR
000531: 60FF          MOV		A,@0xFF
000532: 0150          MOV		0x50,A		; [0x50] = 0xFF
000533: 1350          COM		0x50		; [0x50] = /[0x50]
000534: 1003          MOV		A,STATUS
000535: 6C1C          XOR		A,@0x1C		; Check Status ?
000536: 3A03          JBS		Z			; Check Z = 1?
000537: 5747          JMP	INS_FAIL
000538: 3603          JBC		N			; Check N = 0?
000539: 5747          JMP	INS_FAIL
00053A: 2203          BC		Z
00053B: 2603          BC		N
00053C: 1050          MOV		A,0x50
00053D: 6C00          XOR		A,@0x00		; Check Result ?
00053E: 3A03          JBS		Z			; Check Z = 1?
00053F: 5747          JMP	INS_FAIL
000540: 3603          JBC		N			; Check N = 0?
000541: 5747          JMP	INS_FAIL
000542: 474E          CALL	STATUS_CLEAR
000543: 6000          MOV		A,@0x00
000544: 0150          MOV		0x50,A		; [0x50] = 0xFF
000545: 1350          COM		0x50		; [0x50] = /[0x50]
000546: 1003          MOV		A,STATUS
000547: 6C58          XOR		A,@0x58		; Check Status ?
000548: 3A03          JBS		Z			; Check Z = 1?
000549: 5747          JMP	INS_FAIL
00054A: 3603          JBC		N			; Check N = 0?
00054B: 5747          JMP	INS_FAIL
00054C: 2203          BC		Z
00054D: 2603          BC		N
00054E: 1050          MOV		A,0x50
00054F: 6CFF          XOR		A,@0xFF		; Check Result ?
000550: 3A03          JBS		Z			; Check Z = 1?
000551: 5747          JMP	INS_FAIL
000552: 3603          JBC		N			; Check N = 0?
000553: 5747          JMP	INS_FAIL
000554: 474E          CALL	STATUS_CLEAR
000555: 60A5          MOV		A,@0xA5
000556: 645A          OR		A,@0x5A		; A = 0xA5 | 0x5A
000557: 6CFF          XOR		A,@0xFF		; Check Result ?
000558: 4749          CALL	INST_XOR_JUDGE
000559: 474E  	SDxxx_EFT_INST_LOGIC_II
00055A: 6055          MOV		A,@0x55
00055B: 0150          MOV		0x50,A		; [0x50] = 0x55
00055C: 6F50          RR		0x50		; [0x50] = [0x50] >> 1
00055D: 1003          MOV		A,STATUS
00055E: 6C58          XOR		A,@0x58		; Check Status ?
00055F: 4749          CALL	INST_XOR_JUDGE
000560: 1050          MOV		A,0x50
000561: 6CAA          XOR		A,@0xAA		; Check Result ?
000562: 4749          CALL	INST_XOR_JUDGE
000563: 474E          CALL 	STATUS_CLEAR
000564: 6055          MOV		A,@0x55
000565: 0150          MOV		0x50,A		; [0x50] = 0x55
000566: 6E50          RRA		0x50		; A = [0x50] >> 1
000567: 3003          JBC		C			; Check C = 0?
000568: 5747          JMP	INS_FAIL
000569: 3103          JBC		DC			; Check DC = 0?
00056A: 5747          JMP	INS_FAIL
00056B: 3203          JBC		Z			; Check Z = 0?
00056C: 5747          JMP	INS_FAIL
00056D: 3503          JBC		OV			; Check OV = 0?
00056E: 5747          JMP	INS_FAIL
00056F: 3E03          JBS		N			; Check N = 1?
000570: 5747          JMP	INS_FAIL
000571: 6CAA          XOR		A,@0xAA		; Check Result ?
000572: 4749          CALL	INST_XOR_JUDGE
000573: 474E          CALL	STATUS_CLEAR
000574: 2803          BS		C
000575: 60AA          MOV		A,@0xAA
000576: 0150          MOV		0x50,A		; [0x50] = 0xAA
000577: 1850          RRCA	0x50		; A = [0x50] >> 1
000578: 3003          JBC		C			; Check C = 0?
000579: 5747          JMP	INS_FAIL
00057A: 3103          JBC		DC			; Check DC = 0?
00057B: 5747          JMP	INS_FAIL
00057C: 3203          JBC		Z			; Check Z = 0?
00057D: 5747          JMP	INS_FAIL
00057E: 3503          JBC		OV			; Check OV = 0?
00057F: 5747          JMP	INS_FAIL
000580: 3E03          JBS		N			; Check N = 1?
000581: 5747          JMP	INS_FAIL
000582: 6CD5          XOR		A,@0xD5		; Check Result ?
000583: 4749          CALL	INST_XOR_JUDGE
000584: 474E          CALL	STATUS_CLEAR
000585: 6055          MOV		A,@0x55
000586: 0150          MOV		0x50,A		; [0x50] = 0x55
000587: 1850          RRCA	0x50		; A = [0x50] >> 1
000588: 3803          JBS		C			; Check C = 1?
000589: 5747          JMP	INS_FAIL
00058A: 3103          JBC		DC			; Check DC = 0?
00058B: 5747          JMP	INS_FAIL
00058C: 3203          JBC		Z			; Check Z = 0?
00058D: 5747          JMP	INS_FAIL
00058E: 3503          JBC		OV			; Check OV = 0?
00058F: 5747          JMP	INS_FAIL
000590: 3603          JBC		N			; Check N = 0?
000591: 5747          JMP	INS_FAIL
000592: 6C2A          XOR		A,@0x2A		; Check Result ?
000593: 4749          CALL	INST_XOR_JUDGE
000594: 474E          CALL	STATUS_CLEAR
000595: 2803          BS		C
000596: 60AA          MOV		A,@0xAA
000597: 0150          MOV		0x50,A		; [0x50] = 0xAA
000598: 2203          BC		Z
000599: 1950          RRC		0x50		; [0x50] = [0x50] >> 1
00059A: 1003          MOV		A,STATUS
00059B: 6C58          XOR		A,@0x58		; Check Status ?
00059C: 4749          CALL	INST_XOR_JUDGE
00059D: 1050          MOV		A,0x50
00059E: 6CD5          XOR		A,@0xD5		; Check Result ?
00059F: 4749          CALL	INST_XOR_JUDGE
0005A0: 474E          CALL	STATUS_CLEAR
0005A1: 6055          MOV		A,@0x55
0005A2: 0150          MOV		0x50,A		; [0x50] = 0x55
0005A3: 2203          BC		Z
0005A4: 1950          RRC		0x50		; [0x50] = [0x50] >> 1
0005A5: 1003          MOV		A,STATUS
0005A6: 6C19          XOR		A,@0x19		; Check Status ?
0005A7: 3A03          JBS		Z			; Check Z = 1?
0005A8: 5747          JMP	INS_FAIL
0005A9: 3603          JBC		N			; Check N = 0?
0005AA: 5747          JMP	INS_FAIL
0005AB: 1050          MOV		A,0x50
0005AC: 6C2A          XOR		A,@0x2A		; Check Result ?
0005AD: 4749          CALL	INST_XOR_JUDGE
0005AE: 474E          CALL STATUS_CLEAR
0005AF: 2803          BS		C
0005B0: 6055          MOV		A,@0x55
0005B1: 0150          MOV		0x50,A		; [0x50] = 0x55
0005B2: 1A50          RLCA	0x50		; A = [0x50] << 1
0005B3: 3003          JBC		C			; Check C = 0?
0005B4: 5747          JMP	INS_FAIL
0005B5: 3103          JBC		DC			; Check DC = 0?
0005B6: 5747          JMP	INS_FAIL
0005B7: 3203          JBC		Z			; Check Z = 0?
0005B8: 5747          JMP	INS_FAIL
0005B9: 3503          JBC		OV			; Check OV = 0?
0005BA: 5747          JMP	INS_FAIL
0005BB: 3E03          JBS		N			; Check N = 1?
0005BC: 5747          JMP	INS_FAIL
0005BD: 6CAB          XOR		A,@0xAB		; Check Result ?
0005BE: 4749          CALL	INST_XOR_JUDGE
0005BF: 474E          CALL	STATUS_CLEAR
0005C0: 60AA          MOV		A,@0xAA
0005C1: 0150          MOV		0x50,A		; [0x50] = 0xAA
0005C2: 1A50          RLCA	0x50		; A = [0x50] << 1
0005C3: 3803          JBS		C			; Check C = 1?
0005C4: 5747          JMP	INS_FAIL
0005C5: 3103          JBC		DC			; Check DC = 0?
0005C6: 5747          JMP	INS_FAIL
0005C7: 3203          JBC		Z			; Check Z = 0?
0005C8: 5747          JMP	INS_FAIL
0005C9: 3503          JBC		OV			; Check OV = 0?
0005CA: 5747          JMP	INS_FAIL
0005CB: 3603          JBC		N			; Check N = 0?
0005CC: 5747          JMP	INS_FAIL
0005CD: 6C54          XOR		A,@0x54		; Check Result ?
0005CE: 4749          CALL	INST_XOR_JUDGE
0005CF: 474E          CALL	STATUS_CLEAR
0005D0: 2803          BS		C
0005D1: 6055          MOV		A,@0x55
0005D2: 0150          MOV		0x50,A		; [0x50] = 0x55
0005D3: 1B50          RLC		0x50		; [0x50] = [0x50] << 1
0005D4: 1003          MOV		A,STATUS
0005D5: 6C58          XOR		A,@0x58		; Check Status ?
0005D6: 4749          CALL	INST_XOR_JUDGE
0005D7: 1050          MOV		A,0x50
0005D8: 6CAB          XOR		A,@0xAB		; Check Result ?
0005D9: 4749          CALL	INST_XOR_JUDGE
0005DA: 474E          CALL	STATUS_CLEAR
0005DB: 60AA          MOV		A,@0xAA
0005DC: 0150          MOV		0x50,A		; [0x50] = 0xAA
0005DD: 1B50          RLC		0x50		; [0x50] = [0x50] << 1
0005DE: 1003          MOV		A,STATUS
0005DF: 6C19          XOR		A,@0x19		; Check Status ?
0005E0: 4749          CALL	INST_XOR_JUDGE
0005E1: 1050          MOV		A,0x50
0005E2: 6C54          XOR		A,@0x54		; Check Result ?
0005E3: 4749          CALL	INST_XOR_JUDGE
0005E4: 474E          CALL	STATUS_CLEAR
0005E5: 605A          MOV		A,@0x5A
0005E6: 0150          MOV		0x50,A		; [0x50] = 0x5A
0005E7: 7250          RLA		0x50		; A = [0x50] << 1
0005E8: 3003          JBC		C			; Check C = 0?
0005E9: 5747          JMP	INS_FAIL
0005EA: 3103          JBC		DC			; Check DC = 0?
0005EB: 5747          JMP	INS_FAIL
0005EC: 3203          JBC		Z			; Check Z = 0?
0005ED: 5747          JMP	INS_FAIL
0005EE: 3503          JBC		OV			; Check OV = 0?
0005EF: 5747          JMP	INS_FAIL
0005F0: 3E03          JBS		N			; Check N = 1?
0005F1: 5747          JMP	INS_FAIL
0005F2: 6CB4          XOR		A,@0xB4		; Check Result ?
0005F3: 4749          CALL	INST_XOR_JUDGE
0005F4: 474E          CALL	STATUS_CLEAR
0005F5: 605A          MOV		A,@0x5A
0005F6: 0150          MOV		0x50,A		; [0x50] = 0xA5
0005F7: 7350          RL		0x50		; [0x50] = [0x50] << 1
0005F8: 1003          MOV		A,STATUS
0005F9: 6C58          XOR		A,@0x58		; Check Status ?
0005FA: 3A03          JBS		Z			; Check Z = 1?
0005FB: 5747          JMP	INS_FAIL
0005FC: 3603          JBC		N			; Check N = 0?
0005FD: 5747          JMP	INS_FAIL
0005FE: 1050          MOV		A,0x50
0005FF: 6CB4          XOR		A,@0xB4		; Check Result ?
000600: 4749          CALL	INST_XOR_JUDGE
000601: 474E  			CALL	STATUS_CLEAR
000602: 6055  			MOV		A,@0x55
000603: 0150  			MOV		0x50,A		; [0x50] = 0x55
000604: 60AA  			MOV		A,@0xAA
000605: 7150  			XCH		0x50		; [0x50] <-> A
000606: 6C55  			XOR		A,@0x55		; Check Result ?
000607: 3A03  			JBS		Z			; Check Z = 1?
000608: 5747  			JMP	INS_FAIL
000609: 3603  			JBC		N			; Check N = 0?
00060A: 5747  			JMP	INS_FAIL
00060B: 1050  			MOV		A,0x50
00060C: 6CAA  			XOR		A,@0xAA		; Check Result ?
00060D: 4749  			CALL	INST_XOR_JUDGE
00060E: 474E  	SDxxx_EFT_INST_TRANSFER
00060F: 60FF          MOV		A,@0xFF
000610: 0150          MOV		0x50,A
000611: 1003          MOV		A,STATUS
000612: 6C18          XOR		A,@0x18		;At  OCDS
000613: 4749          CALL	INST_XOR_JUDGE
000614: 1050          MOV		A,0x50
000615: 6CFF          XOR		A,@0xFF		; Check Result ?
000616: 4749          CALL	INST_XOR_JUDGE
000617: 474E          CALL	STATUS_CLEAR
000618: 6000          MOV		A,@0x00
000619: 0150          MOV		0x50,A		; [0x50] = 0x00		
00061A: 1150          MOV		0x50,0x50	; [0x50] = [0x50]
00061B: 1003          MOV		A,STATUS
00061C: 6C1C          XOR		A,@0x1C		; Check Status ?
00061D: 3A03          JBS		Z			; Check Z = 1?
00061E: 5747          JMP	INS_FAIL
00061F: 3603          JBC		N			; Check N = 0?
000620: 5747          JMP	INS_FAIL
000621: 1050          MOV		A,0x50
000622: 2203          BC		Z
000623: 6C00          XOR		A,@0x00		; Check Result ?
000624: 3A03          JBS		Z			; Check Z = 1?
000625: 5747          JMP	INS_FAIL
000626: 3603          JBC		N			; Check N = 0?
000627: 5747          JMP	INS_FAIL
000628: 474E          CALL	STATUS_CLEAR
000629: 6000          MOV		A,@0x00
00062A: 0150          MOV		0x50,A		; [0x50] = 0x00		
00062B: 1150          MOV		0x50,0x50	; [0x50] = [0x50]
00062C: 2850          BS		0x50,0
00062D: 1050          MOV		A,0x50
00062E: 6C01          XOR		A,@0x01		; Check Result ?
00062F: 4749          CALL	INST_XOR_JUDGE
000630: 474E          CALL	STATUS_CLEAR
000631: 605A          MOV		A,@0x5A
000632: 0150          MOV		0x50,A		; [0x50] = 0x5A
000633: 1C50          SWAPA	0x50
000634: 6CA5          XOR		A,@0xA5		; Check Result ?
000635: 4749          CALL	INST_XOR_JUDGE
000636: 474E          CALL	STATUS_CLEAR
000637: 605A          MOV		A,@0x5A
000638: 0150          MOV		0x50,A		; [0x50] = 0x5A
000639: 1D50          SWAP	0x50
00063A: 1050          MOV		A,0x50
00063B: 6CA5          XOR		A,@0xA5		; Check Result ?
00063C: 4749          CALL	INST_XOR_JUDGE
00063D: 474E  	SDxxx_EFT_INST_MANIPULATION	0x50
00063E: 7A00          SBANK	0
00063F: 103E          MOV		A,ADCR1
000640: 0150          MOV		TMP50,A
000641: 283E          BS		ADCR1.0
000642: 1050          MOV		A,TMP50
000643: 0C3E          XOR		A,ADCR1
000644: 3203          JBC		Z
000645: 5747          JMP		INS_FAIL
000646: 3603          JBC		N
000647: 5747          JMP		INS_FAIL
000648: 103E          MOV		A,ADCR1
000649: 0150          MOV		TMP50,A
00064A: 293E          BS		ADCR1.1
00064B: 1050          MOV		A,TMP50
00064C: 0C3E          XOR		A,ADCR1
00064D: 3203          JBC		Z
00064E: 5747          JMP		INS_FAIL
00064F: 3603          JBC		N
000650: 5747          JMP		INS_FAIL
000651: 103E          MOV		A,ADCR1
000652: 0150          MOV		TMP50,A
000653: 203E          BC		ADCR1.0
000654: 1050          MOV		A,TMP50
000655: 0C3E          XOR		A,ADCR1
000656: 3203          JBC		Z
000657: 5747          JMP		INS_FAIL
000658: 3603          JBC		N
000659: 5747          JMP		INS_FAIL
00065A: 103E          MOV		A,ADCR1
00065B: 0150          MOV		TMP50,A
00065C: 213E          BC		ADCR1.1
00065D: 1050          MOV		A,TMP50
00065E: 0C3E          XOR		A,ADCR1
00065F: 3203          JBC		Z
000660: 5747          JMP		INS_FAIL
000661: 3603          JBC		N
000662: 5747          JMP		INS_FAIL
000663: 474E  	SDxxx_EFT_BRANCH_I
000664: 6001          MOV		A,@0x01
000665: 0150          MOV		0x50,A		; [0x50] = 0x01
000666: 1750          DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
000667: 5747          JMP		INS_FAIL
000668: 1050          MOV		A,0x50
000669: 6C00          XOR		A,@0x00		; Check Result ?
00066A: 4749          CALL	INST_XOR_JUDGE	
00066B: 474E          CALL	STATUS_CLEAR
00066C: 6002          MOV		A,@0x02
00066D: 0150          MOV		0x50,A		; [0x50] = 0x02
00066E: 1750          DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
00066F: 5671          JMP		$+2
000670: 5747          JMP		INS_FAIL
000671: 474E          CALL	STATUS_CLEAR
000672: 6001          MOV		A,@0x01
000673: 0150          MOV		0x50,A		; [0x50] = 0x01
000674: 1650          DJZA	0x50		; A = [0x50] - 0x01,if z,skip
000675: 5747          JMP	INS_FAIL
000676: 6C00          XOR		A,@0x00		; Check Result ?
000677: 4749          CALL	INST_XOR_JUDGE
000678: 474E          CALL	STATUS_CLEAR
000679: 6002          MOV		A,@0x02
00067A: 0150          MOV		0x50,A		; [0x50] = 0x02
00067B: 1650          DJZA	0x50		; A = [0x50] - 0x01,if z,skip
00067C: 567E          JMP		$+2
00067D: 5747          JMP	INS_FAIL
00067E: 474E          CALL	STATUS_CLEAR
00067F: 60FF          MOV		A,@0xFF
000680: 0150          MOV		0x50,A
000681: 1E50          JZA		0x50		; A = [0x50] + 1,if 0 skip
000682: 5747          JMP		INS_FAIL
000683: 6C00          XOR		A,@0x00		; Check Result ?
000684: 4749          CALL	INST_XOR_JUDGE
000685: 474E          CALL	STATUS_CLEAR
000686: 6080          MOV		A,@0x80
000687: 0150          MOV		0x50,A
000688: 1E50          JZA		0x50		; A = [0x50] + 1,if 0 skip
000689: 568B          JMP		$+2
00068A: 5747          JMP		INS_FAIL
00068B: 474E          CALL	STATUS_CLEAR
00068C: 60FF          MOV		A,@0xFF
00068D: 0150          MOV		0x50,A		; [0x50] = 0xFF
00068E: 1F50          JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
00068F: 5747          JMP		INS_FAIL
000690: 1050          MOV		A,0x50
000691: 6C00          XOR		A,@0x00		; Check Result ?
000692: 4749          CALL	INST_XOR_JUDGE
000693: 474E          CALL	STATUS_CLEAR
000694: 6080          MOV		A,@0x80
000695: 0150          MOV		0x50,A		; [0x50] = 0xFF
000696: 1F50          JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
000697: 5699          JMP		$+2
000698: 5747          JMP		INS_FAIL
000699: 474E  	SDxxx_EFT_BRANCH_II
00069A: 605A          MOV		A,@0x5A
00069B: 0150          MOV		0x50,A		; [0x50] = 0x5A
00069C: 6150          JE		0x50		; [0x50] = A?
00069D: 5747          JMP		INS_FAIL
00069E: 605B          MOV		A,@0x5B
00069F: 0150          MOV		0x50,A		; [0x50] = 0x5B
0006A0: 605C          MOV		A,@0x5C
0006A1: 6150          JE		0x50		; [0x50] = A(0x5C)?
0006A2: 56A4          JMP		$+2
0006A3: 5747          JMP		INS_FAIL
0006A4: 474E          CALL	STATUS_CLEAR
0006A5: 607F          MOV		A,@0x7F
0006A6: 0150          MOV		0x50,A		; [0x50] = 0x7F
0006A7: 6000          MOV		A,@0x00
0006A8: 6250          JGE		0x50		; [0x50] > A ?
0006A9: 5747          JMP		INS_FAIL
0006AA: 474E          CALL	STATUS_CLEAR
0006AB: 60FF          MOV		A,@0xFF
0006AC: 0150          MOV		0x50,A		; [0x50] = 0xFF
0006AD: 6080          MOV		A,@0x80
0006AE: 6250          JGE		0x50		; [0x50] > A ?
0006AF: 5747          JMP		INS_FAIL
0006B0: 474E          CALL	STATUS_CLEAR
0006B1: 6000          MOV		A,@0x00
0006B2: 0150          MOV		0x50,A		; [0x50] = 0x00
0006B3: 60FF          MOV		A,@0xFF
0006B4: 6250          JGE		0x50		; [0x50] > A(0xFF) ?x
0006B5: 56B7          JMP		$+2
0006B6: 5747          JMP		INS_FAIL
0006B7: 474E          CALL	STATUS_CLEAR
0006B8: 6000          MOV		A,@0x00
0006B9: 0150          MOV		0x50,A		; [0x50] = 0x00
0006BA: 607F          MOV		A,@0x7F
0006BB: 6350          JLE		0x50		; [0x50] < A ?
0006BC: 5747          JMP		INS_FAIL
0006BD: 6000          MOV		A,@0x00
0006BE: 0103          MOV		STATUS,A
0006BF: 6080          MOV		A,@0x80
0006C0: 0150          MOV		0x50,A		; [0x50] = 0x80
0006C1: 60FF          MOV		A,@0xFF
0006C2: 6350          JLE		0x50		; [0x50] < A ?
0006C3: 5747          JMP		INS_FAIL
0006C4: 474E          CALL	STATUS_CLEAR
0006C5: 60FF          MOV		A,@0xFF
0006C6: 0150          MOV		0x50,A		; [0x50] = 0xFF
0006C7: 6000          MOV		A,@0x00
0006C8: 6350          JLE		0x50		; [0x50] < A(0x00) ?x
0006C9: 56CB          JMP		$+2
0006CA: 5747          JMP		INS_FAIL
0006CB: 474E          CALL	STATUS_CLEAR
0006CC: 607F          MOV		A,@0x7F
0006CD: 657F          JE		@0x7F
0006CE: 5747          JMP	INS_FAIL
0006CF: 474E  	SDxxx_EFT_SHORT_BRANCH
0006D0: 2803          BS	C
0006D1: 6903          SJC		@0x03
0006D2: 5745          JMP		JMP_FAIL
0006D3: 5745          JMP		JMP_FAIL
0006D4: 5745          JMP		JMP_FAIL
0006D5: 2003          BC	C
0006D6: 6A03          SJNC	bbb		;@0x03
0006D7: 5745          JMP		JMP_FAIL
0006D8: 5745          JMP		JMP_FAIL
0006D9: 5745          JMP		JMP_FAIL
0006DA: 2A03              BS		Z
0006DB: 6B03              SJZ		@0x03
0006DC: 5745              JMP		JMP_FAIL
0006DD: 5745              JMP		JMP_FAIL
0006DE: 5745              JMP		JMP_FAIL
0006DF: 0200              CLRA
0006E0: 6B03              SJZ		@0x03
0006E1: 5745              JMP		JMP_FAIL
0006E2: 5745              JMP		JMP_FAIL
0006E3: 5745              JMP		JMP_FAIL
0006E4: 56EC          JMP		IATEST1		;JMP back Test as below
0006E5: 56F9              JMP	IATEST2		; -9
0006E6: 5745              JMP	JMP_FAIL	; -8
0006E7: 5745              JMP	JMP_FAIL	; -7
0006E8: 5745              JMP	JMP_FAIL	; -6
0006E9: 5745              JMP	JMP_FAIL	; -5
0006EA: 5745              JMP	JMP_FAIL	; -4
0006EB: 5745              JMP	JMP_FAIL	; -3
0006EC: 2803              BS		C		; -2
0006ED: 69F7              SJC		aaa		; -1
0006EE: 69F7              SJC		@0xF7	; -1
0006EF: 5745              JMP		JMP_FAIL
0006F0: 5745              JMP		JMP_FAIL
0006F1: 5745              JMP		JMP_FAIL
0006F2: 5705              JMP		IATEST3		; -9
0006F3: 5745              JMP		JMP_FAIL	; -8
0006F4: 5745              JMP		JMP_FAIL	; -7
0006F5: 5745              JMP		JMP_FAIL	; -6
0006F6: 5745              JMP		JMP_FAIL	; -5
0006F7: 5745              JMP		JMP_FAIL	; -4
0006F8: 5745              JMP		JMP_FAIL	; -3
0006F9: 2003              BC		C		; -2
0006FA: 6AF7              SJNC		@0xF7	; -1
0006FB: 5716              JMP		_IPass
0006FC: 5716              JMP		_IPass
0006FD: 5716              JMP		_IPass
0006FE: 5711              JMP		IATEST4		; -9
0006FF: 5745              JMP		JMP_FAIL	; -8
000700: 5745              JMP		JMP_FAIL	; -7
000701: 5745              JMP		JMP_FAIL	; -6
000702: 5745              JMP		JMP_FAIL	; -5
000703: 5745              JMP		JMP_FAIL	; -4
000704: 5745              JMP		JMP_FAIL	; -3
000705: 2A03              BS		Z		; -2
000706: 6BF7              SJZ		@0xF7	; -1
000707: 5745              JMP		JMP_FAIL
000708: 5745              JMP		JMP_FAIL
000709: 5745              JMP		JMP_FAIL
00070A: 5716              JMP		_IPass		; -9
00070B: 5745              JMP		JMP_FAIL	; -8
00070C: 5745              JMP		JMP_FAIL	; -7
00070D: 5745              JMP		JMP_FAIL	; -6
00070E: 5745              JMP		JMP_FAIL	; -5
00070F: 5745              JMP		JMP_FAIL	; -4
000710: 5745              JMP		JMP_FAIL	; -3
000711: 2203              BC		Z		; -2
000712: 6DF7              SJNZ	@0xF7	; -1
000713: 5745              JMP		JMP_FAIL
000714: 5745              JMP		JMP_FAIL
000715: 5745              JMP		JMP_FAIL
000716: 0000              NOP
000717: 0010  	SDxxx_EFT_CONTROL
000718: 3F03          JBS		IT		; Check IT = 1?
000719: 5747          JMP	INS_FAIL
00071A: 0011          DISI
00071B: 3703          JBC		IT		; Check IT = 0?
00071C: 5747          JMP	INS_FAIL
00071D: 7A01  	SDxxx_EFT_READ_ROM
00071E: 60F1          MOV		A,@0xF1		;ADDR(0x0EF1)
00071F: 0145          MOV		TBPTL,A
000720: 600E          MOV		A,@0x0E
000721: 0146          MOV		TBPTH,A
000722: 7A00          SBANK	0
000723: 6750          TBRDA	0x50		; [0x50]+ A = [TABPTR] 
000724: 6CA1          XOR		A,@0xA1
000725: 4749          CALL	INST_XOR_JUDGE
000726: 1050          MOV		A,0x50
000727: 6C70          XOR		A,@0x70
000728: 4749          CALL	INST_XOR_JUDGE
000729: 7A01          SBANK	1
00072A: 1545          INC		TBPTL		;ADDR(0x0EF2)
00072B: 7A00          SBANK	0
00072C: 6750          TBRDA	0x50		; [0x50]+ A = [TABPTR] 
00072D: 6CA2          XOR		A,@0xA2
00072E: 4749          CALL	INST_XOR_JUDGE
00072F: 1050          MOV		A,0x50
000730: 6C70          XOR		A,@0x70
000731: 4749          CALL	INST_XOR_JUDGE
000732: 7A01          SBANK	1
000733: 60F3          MOV		A,@0xF3		;ADDR(0x0EF3)
000734: 0145          MOV		TBPTL,A
000735: 600E          MOV		A,@0x0E
000736: 0146          MOV		TBPTH,A
000737: 7A00          SBANK	0
000738: 7B50          TBRD	0x50
000739: 1050          MOV		A,0x50
00073A: 6CA4          XOR		A,@0xA4
00073B: 4749          CALL	INST_XOR_JUDGE
00073C: 7A01          SBANK	1
00073D: 1545          INC		TBPTL		;ADDR(0x0EF4)
00073E: 7A00          SBANK	0
00073F: 7B50          TBRD	0x50
000740: 1050          MOV		A,0x50
000741: 6CA8          XOR		A,@0xA8
000742: 4749          CALL	INST_XOR_JUDGE
000743: 0000  	NOP
000744: 50B7  	JMP		BACK_GROUND_LOOP
000745: 7A00  	SBANK	0
000746: 5745  	JMP		JMP_FAIL
000747: 7A00  	SBANK	0
000748: 5747  	JMP		INS_FAIL
000749: 3A03  		JBS		Z			; IF(Z=1) BRANCH
00074A: 5747  		JMP		INS_FAIL
00074B: 3603  		JBC		N			; IF(N=0) BRANCH
00074C: 5747  		JMP		INS_FAIL
00074D: 0012  		RET
00074E: 6000  		MOV		A,@0x00
00074F: 0103  		MOV		STATUS,A
000750: 0012  		RET
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000EF9: 7A00  		SBANK	0
000EFA: 2214  		BC		EXSF0
000EFB: 2314  		BC		EXSF1
000EFC: 0013  		RETI
000EFD: 7A00  		SBANK	0
000EFE: 2417  		BC		P5ICSF
000EFF: 0013  		RETI
000F00: 7A00  		SBANK	0
000F01: 3E14  		JBS 	CMP1SF
000F02: 5745  		JMP 	JMP_FAIL
000F03: 2614  		BC		CMP1SF
000F04: 0013  		RETI
000F05: 7A00  		SBANK	0
000F06: 3F14  		JBS 	CMP2SF
000F07: 5745  		JMP 	JMP_FAIL
000F08: 2714  		BC		CMP2SF
000F09: 0013  		RETI
000F0A: 7A00  		SBANK	0
000F0B: 3C14  		JBS 	ADSF
000F0C: 5745  		JMP 	JMP_FAIL
000F0D: 2414  		BC		ADSF
000F0E: 0013  		RETI
000F0F: 7A00  		SBANK	0
000F10: 0013  		RETI
000F11: 7A00  		SBANK	0
000F12: 0013  		RETI
000F13: 7A00  		SBANK	0
000F14: 3E15  		JBS 	CMP3SF
000F15: 5745  		JMP 	JMP_FAIL
000F16: 2615  		BC		CMP3SF
000F17: 0013  		RETI
000F18: 7A00  		SBANK	0
000F19: 0013  		RETI
000F1A: 7A00  		SBANK	0
000F1B: 0013  		RETI
000F1C: 7A00  		SBANK	0
000F1D: 0013  		RETI
000F1E: 7A00  		SBANK	0
000F1F: 0013  		RETI
000F20: 7A00  		SBANK	0
000F21: 3F19  		JBS 	SHSF
000F22: 5745  		JMP 	JMP_FAIL
000F23: 2719  		BC		SHSF
000F24: 0013  		RETI
000F25: 7A00  		SBANK	0
000F26: 231A  		BC		TM1DASF
000F27: 201A  		BC		TM1DBSF
000F28: 0013  		RETI
000F29: 7A00  		SBANK	0
000F2A: 241A  		BC		TM2DASF
000F2B: 211A  		BC		TM2DBSF
000F2C: 0013  		RETI
000F2D: 7A00  		SBANK	0
000F2E: 3A1A  		JBS 	TM1OFSF
000F2F: 5745  		JMP 	JMP_FAIL
000F30: 221A  		BC		TM1OFSF
000F31: 0013  		RETI
000F32: 7A00  		SBANK	0
000F33: 261A  		BC		TXDSF
000F34: 251A  		BC		TXCSF
000F35: 0013  		RETI
000F36: 7A00  		SBANK	0
000F37: 0013  		RETI
