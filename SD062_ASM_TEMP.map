****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X3    , End=0X3    , Size=1
Start=0X5    , End=0X9    , Size=5
Start=0XB    , End=0XD    , Size=3
Start=0XF    , End=0XF    , Size=1
Start=0X11   , End=0X13   , Size=3
Start=0X15   , End=0X15   , Size=1
Start=0X17   , End=0X17   , Size=1
Start=0X19   , End=0X23   , Size=11
Start=0X25   , End=0X25   , Size=1
Start=0X27   , End=0X29   , Size=3
Start=0X2B   , End=0X2B   , Size=1
Start=0X2D   , End=0X39   , Size=13
Start=0X3B   , End=0X3B   , Size=1
Start=0X3D   , End=0X3D   , Size=1
Start=0X3F   , End=0X3F   , Size=1
Start=0X41   , End=0X41   , Size=1
Start=0X43   , End=0X43   , Size=1
Start=0X4F   , End=0X4F   , Size=1
Start=0X102  , End=0X17FF , Size=5886
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |   207 x 15 bits(  3.4%)
Free            |  5937 x 15 bits( 96.6%)
----------------------------------------
****************************************
The Checksum is -- 0xC4C0
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 50C3  		JMP	_Int_EXINT
000004: 50C7  		JMP	_Int_ICINT
00000A: 50CA  		JMP	_Int_CMP1INT
00000E: 50CF  		JMP	_Int_CMP2INT
000010: 50D4  		JMP	_Int_ADINT
000014: 50D9  		JMP	_Int_PWMPAINT
000016: 50DB  		JMP	_Int_PWMDAINT
000018: 50DD  		JMP	_Int_CMP3INT
000024: 50E2  		JMP	_Int_PWMPBINT
000026: 50E4  		JMP	_Int_PWMDBINT
00002A: 50E6  		JMP	_Int_PWMPCINT
00002C: 50E8  		JMP	_Int_PWMDCINT
00003A: 50EA  		JMP	_Int_SHINT
00003C: 50EF  		JMP	_Int_TM1INT
00003E: 50F3  		JMP	_Int_TM2INT
000040: 50F7  		JMP	_Int_TM1OFINT
000042: 50FC  		JMP	_Int_TXTMINT
000044: 5100  		JMP	_Int_AFPWMINT
000045: 50BA  	JMP JMP_FAIL	;0x0046
000046: 50BA  	JMP JMP_FAIL	;0x0047
000047: 50BA  	JMP JMP_FAIL	;0x0048
000048: 50BA  	JMP JMP_FAIL	;0x0049
000049: 50BA  	JMP JMP_FAIL	;0x004A
00004A: 50BA  	JMP JMP_FAIL	;0x004B
00004B: 50BA  	JMP JMP_FAIL	;0x004C
00004C: 50BA  	JMP JMP_FAIL	;0x004D
00004D: 50BA  	JMP JMP_FAIL	;0x004E
00004E: 50BA  	JMP JMP_FAIL	;0x004F
000050: 7A00  	SDxxx_SYS_INIT
000051: 2F0E      BS		CPUS
000052: 2E0E      BS		IDLE
000053: 7A00  	SDxxx_GPIO_INIT
000054: 0305  	CLR		P5
000055: 600F  	MOV		A,@0x0F
000056: 010B  	MOV		IOCR5,A
000057: 6000  	SDxxx_EFT_TES_JMP
000058: 0103          MOV		STATUS,A
000059: 0350          CLR 	0x50
00005A: 1550          INC 	0x50                ;[0x50] = 0x01
00005B: 505D          JMP 	$+2
00005C: 50BA          JMP 	JMP_FAIL
00005D: 1550          INC 	0x50                ;[0x50] = 0x02
00005E: 5060          JMP 	$+2
00005F: 50BA          JMP 	JMP_FAIL
000060: 1550          INC 	0x50                ;[0x50] = 0x03
000061: 5063          JMP 	$+2
000062: 50BA          JMP 	JMP_FAIL
000063: 1550          INC 	0x50                ;[0x50] = 0x04
000064: 5066          JMP 	$+2
000065: 50BA          JMP 	JMP_FAIL
000066: 1550          INC 	0x50                ;[0x50] = 0x05
000067: 5069          JMP 	$+2
000068: 50BA          JMP 	JMP_FAIL
000069: 1550          INC 	0x50                ;[0x50] = 0x06
00006A: 506C          JMP 	$+2
00006B: 50BA          JMP 	JMP_FAIL
00006C: 1550          INC 	0x50                ;[0x50] = 0x07
00006D: 506F          JMP 	$+2
00006E: 50BA          JMP 	JMP_FAIL
00006F: 1550          INC 	0x50                ;[0x50] = 0x08
000070: 5072          JMP 	$+2
000071: 50BA          JMP 	JMP_FAIL
000072: 1550          INC 	0x50                ;[0x50] = 0x09
000073: 5075          JMP 	$+2
000074: 50BA          JMP 	JMP_FAIL
000075: 1550          INC 	0x50                ;[0x50] = 0x0A
000076: 5078          JMP 	$+2
000077: 50BA          JMP 	JMP_FAIL
000078: 1550          INC 	0x50                ;[0x50] = 0x0B
000079: 507B          JMP 	$+2
00007A: 50BA          JMP 	JMP_FAIL
00007B: 1550          INC 	0x50                ;[0x50] = 0x0C
00007C: 507E          JMP 	$+2
00007D: 50BA          JMP 	JMP_FAIL
00007E: 1550          INC 	0x50                ;[0x50] = 0x0D
00007F: 5081          JMP 	$+2
000080: 50BA          JMP 	JMP_FAIL
000081: 1550          INC 	0x50                ;[0x50] = 0x0E
000082: 5084          JMP 	$+2
000083: 50BA          JMP 	JMP_FAIL
000084: 1550          INC 	0x50                ;[0x50] = 0x0F
000085: 5087          JMP 	$+2
000086: 50BA          JMP 	JMP_FAIL
000087: 1550          INC 	0x50
000088: 508A          JMP 	$+2                ;[0x50] = 0x10
000089: 50BA          JMP 	JMP_FAIL
00008A: 6010          MOV 	A,@0x10
00008B: 0D50          XOR 	0x50,A				;[0x50] = 0x10 ?
00008C: 3A03          JBS		Z			; Check Z = 1?
00008D: 50BA          JMP	JMP_FAIL
00008E: 3603          JBC		N			; Check N = 0?
00008F: 50BA          JMP	JMP_FAIL
000090: 7A01  	SDxxx_EFT_STACK
000091: 1047  		MOV		A,STKMON
000092: 6C00  		XOR		A,@0x00
000093: 40BE  		CALL	INST_XOR_JUDGE
000094: 4096  		CALL	STACK1
000095: 50B6  		JMP		TEST_STACK_END
000096: 1047  		MOV		A,STKMON
000097: 6C01  		XOR		A,@0x01
000098: 40BE  		CALL	INST_XOR_JUDGE
000099: 409B  		CALL	STACK2
00009A: 0012  		RET
00009B: 1047  		MOV		A,STKMON
00009C: 6C02  		XOR		A,@0x02
00009D: 40BE  		CALL	INST_XOR_JUDGE
00009E: 40A0  		CALL	STACK3
00009F: 0012  		RET
0000A0: 1047  		MOV		A,STKMON
0000A1: 6C03  		XOR		A,@0x03
0000A2: 40BE  		CALL	INST_XOR_JUDGE
0000A3: 40A5  		CALL	STACK4
0000A4: 0012  		RET
0000A5: 1047  		MOV		A,STKMON
0000A6: 6C04  		XOR		A,@0x04
0000A7: 40BE  		CALL	INST_XOR_JUDGE
0000A8: 40AA  		CALL	STACK5
0000A9: 0012  		RET
0000AA: 1047  		MOV		A,STKMON
0000AB: 6C05  		XOR		A,@0x05
0000AC: 40BE  		CALL	INST_XOR_JUDGE
0000AD: 40AF  		CALL	STACK6
0000AE: 0012  		RET
0000AF: 1047  		MOV		A,STKMON
0000B0: 6C06  		XOR		A,@0x06
0000B1: 40BE  		CALL	INST_XOR_JUDGE
0000B2: 40B4  		CALL	STACK7
0000B3: 0012  		RET
0000B4: 0000  		NOP
0000B5: 0012  		RET
0000B6: 0000  		NOP
0000B7: 7A00  	SBANK	0
0000B8: 0000  	NOP
0000B9: 50B7  	JMP		BACK_GROUND_LOOP
0000BA: 7A00  	SBANK	0
0000BB: 50BA  	JMP		JMP_FAIL
0000BC: 7A00  	SBANK	0
0000BD: 50BC  	JMP		INS_FAIL
0000BE: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000BF: 50BC  		JMP		INS_FAIL
0000C0: 3603  		JBC		N			; IF(N=0) BRANCH
0000C1: 50BC  		JMP		INS_FAIL
0000C2: 0012  		RET
0000C3: 7A00  		SBANK	0
0000C4: 2214  		BC		EXSF0
0000C5: 2314  		BC		EXSF1
0000C6: 0013  		RETI
0000C7: 7A00  		SBANK	0
0000C8: 2417  		BC		P5ICSF
0000C9: 0013  		RETI
0000CA: 7A00  		SBANK	0
0000CB: 3E14  		JBS 	CMP1SF
0000CC: 50BA  		JMP 	JMP_FAIL
0000CD: 2614  		BC		CMP1SF
0000CE: 0013  		RETI
0000CF: 7A00  		SBANK	0
0000D0: 3F14  		JBS 	CMP2SF
0000D1: 50BA  		JMP 	JMP_FAIL
0000D2: 2714  		BC		CMP2SF
0000D3: 0013  		RETI
0000D4: 7A00  		SBANK	0
0000D5: 3C14  		JBS 	ADSF
0000D6: 50BA  		JMP 	JMP_FAIL
0000D7: 2414  		BC		ADSF
0000D8: 0013  		RETI
0000D9: 7A00  		SBANK	0
0000DA: 0013  		RETI
0000DB: 7A00  		SBANK	0
0000DC: 0013  		RETI
0000DD: 7A00  		SBANK	0
0000DE: 3E15  		JBS 	CMP3SF
0000DF: 50BA  		JMP 	JMP_FAIL
0000E0: 2615  		BC		CMP3SF
0000E1: 0013  		RETI
0000E2: 7A00  		SBANK	0
0000E3: 0013  		RETI
0000E4: 7A00  		SBANK	0
0000E5: 0013  		RETI
0000E6: 7A00  		SBANK	0
0000E7: 0013  		RETI
0000E8: 7A00  		SBANK	0
0000E9: 0013  		RETI
0000EA: 7A00  		SBANK	0
0000EB: 3F19  		JBS 	SHSF
0000EC: 50BA  		JMP 	JMP_FAIL
0000ED: 2719  		BC		SHSF
0000EE: 0013  		RETI
0000EF: 7A00  		SBANK	0
0000F0: 231A  		BC		TM1DASF
0000F1: 201A  		BC		TM1DBSF
0000F2: 0013  		RETI
0000F3: 7A00  		SBANK	0
0000F4: 241A  		BC		TM2DASF
0000F5: 211A  		BC		TM2DBSF
0000F6: 0013  		RETI
0000F7: 7A00  		SBANK	0
0000F8: 3A1A  		JBS 	TM1OFSF
0000F9: 50BA  		JMP 	JMP_FAIL
0000FA: 221A  		BC		TM1OFSF
0000FB: 0013  		RETI
0000FC: 7A00  		SBANK	0
0000FD: 261A  		BC		TXDSF
0000FE: 251A  		BC		TXCSF
0000FF: 0013  		RETI
000100: 7A00  		SBANK	0
000101: 0013  		RETI
