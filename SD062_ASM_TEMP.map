****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0XC    , End=0X4F   , Size=68
Start=0X7F0  , End=0X17FF , Size=4112
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  1963 x 15 bits( 31.9%)
Free            |  4181 x 15 bits( 68.1%)
----------------------------------------
****************************************
The Checksum is -- 0x5516
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 505F  	JMP JMP_FAIL	;0x0046
000003: 505F  	JMP JMP_FAIL	;0x0047
000004: 505F  	JMP JMP_FAIL	;0x0048
000005: 505F  	JMP JMP_FAIL	;0x0049
000006: 505F  	JMP JMP_FAIL	;0x004A
000007: 505F  	JMP JMP_FAIL	;0x004B
000008: 505F  	JMP JMP_FAIL	;0x004C
000009: 505F  	JMP JMP_FAIL	;0x004D
00000A: 505F  	JMP JMP_FAIL	;0x004E
00000B: 505F  	JMP JMP_FAIL	;0x004F
000050: 2805  	BS		P50	;Off P50
000051: 2905  	BS		P51	;On P51
000052: 4099  	CALL	RAM_SHA_INIT
000053: 40A3  	CALL	RAM_IND_INIT
000054: 40CC  	CALL	EEPROM_INIT
000055: 7A00  	SBANK	0
000056: 40E2  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000057: 444A  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000058: 457C  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000059: 4644  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
00005A: 467C  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005B: 467D  	CALL	TEST_INST_BRANCH		;JE R, JGE, JLE, JE K, JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA, RETL, CALL, JMP, LCALL, LJMP
00005C: 467E  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
00005D: 5055  	JMP		BACK_GROUND_LOOP
00005E: 5050  	JMP		MAIN
00005F: 7A00  	SBANK	0
000060: 505F  	JMP		JMP_FAIL
000061: 7A00  	SBANK	0
000062: 5061  	JMP		RAM_FAIL
000063: 7A00  	SBANK	0
000064: 5063  	JMP		INS_FAIL
000065: 7A00  		SBANK	0
000066: 2F0E  		BS		CPUS	;FSYS=FM
000067: 260E  		BC		IDLE	;SLEEP_MODE
000068: 0012  		RET
000069: 7A00  		SBANK	0
00006A: 0305  		CLR		P5
00006B: 600F  		MOV		A,@0x0F	;P50~P53 As Input, Other Setting As Output
00006C: 010B  		MOV		IOCR5,A
00006D: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00006E: 0105  		MOV		P5,A
00006F: 0012  		RET
000070: 7A00  		SBANK	0
000071: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000072: 5075  		JMP		$+3
000073: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000074: 0003  		SLEP
000075: 3B03  		JBS		P
000076: 5079  		JMP		$+3
000077: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000078: 0003  		SLEP
000079: 3B03  		JBS		P
00007A: 507D  		JMP		$+3
00007B: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007C: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007D: 0003  		SLEP		
00007E: 0012  		RET
00007F: 3A05  		JBS		P5,2		; Push, or not
000080: 5082  		JMP		$+2
000081: 507F  		JMP		$-2
000082: 3A05  		JBS		P5,2
000083: 507F  		JMP		KEY_DEBOUNCE
000084: 3A05  		JBS		P5,2
000085: 507F  		JMP		KEY_DEBOUNCE
000086: 3A05  		JBS		P5,2
000087: 507F  		JMP		KEY_DEBOUNCE
000088: 3A05  		JBS		P5,2
000089: 507F  		JMP		KEY_DEBOUNCE
00008A: 3A05  		JBS		P5,2
00008B: 507F  		JMP		KEY_DEBOUNCE
00008C: 3A05  		JBS		P5,2
00008D: 507F  		JMP		KEY_DEBOUNCE
00008E: 3A05  		JBS		P5,2
00008F: 507F  		JMP		KEY_DEBOUNCE
000090: 3A05  		JBS		P5,2
000091: 507F  		JMP		KEY_DEBOUNCE
000092: 3A05  		JBS		P5,2
000093: 507F  		JMP		KEY_DEBOUNCE
000094: 3A05  		JBS		P5,2
000095: 5093  		JMP		$-2
000096: 60FF  		MOV		A,@0xFF		; Turn Off all LED
000097: 0105  		MOV		P5,A		
000098: 0012  		RET
000099: 6050  		MOV		A,@0x50
00009A: 0104  		MOV		RSR,A
00009B: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
00009C: 0100  		MOV		IAR,A
00009D: 1504  		INC		RSR
00009E: 6080  		MOV		A,@0x80
00009F: 0D04  		XOR		RSR,A
0000A0: 3A03  		JBS		Z
0000A1: 509B  		JMP		$-6
0000A2: 0012  		RET
0000A3: 6080  		MOV		A,@0x80
0000A4: 0104  		MOV		RSR,A
0000A5: 7A40  		GBANK	0
0000A6: 60FF  		MOV		A,@0xFF
0000A7: 0100  		MOV		IAR,A
0000A8: 1504  		INC		RSR
0000A9: 6000  		MOV		A,@0x00
0000AA: 0D04  		XOR		RSR,A
0000AB: 3A03  		JBS		Z
0000AC: 50A5  		JMP		RAM_IND_LOOP_0
0000AD: 6080  		MOV		A,@0x80
0000AE: 0104  		MOV		RSR,A
0000AF: 7A41  		GBANK	1
0000B0: 60FF  		MOV		A,@0xFF
0000B1: 0100  		MOV		IAR,A
0000B2: 1504  		INC		RSR
0000B3: 6000  		MOV		A,@0x00
0000B4: 0D04  		XOR		RSR,A
0000B5: 3A03  		JBS		Z
0000B6: 50AF  		JMP		RAM_IND_LOOP_1
0000B7: 6080  		MOV		A,@0x80
0000B8: 0104  		MOV		RSR,A
0000B9: 7A42  		GBANK	2
0000BA: 60FF  		MOV		A,@0xFF
0000BB: 0100  		MOV		IAR,A
0000BC: 1504  		INC		RSR
0000BD: 6000  		MOV		A,@0x00
0000BE: 0D04  		XOR		RSR,A
0000BF: 3A03  		JBS		Z
0000C0: 50B9  		JMP		RAM_IND_LOOP_2
0000C1: 6080  		MOV		A,@0x80
0000C2: 0104  		MOV		RSR,A
0000C3: 7A43  		GBANK	3
0000C4: 60FF  		MOV		A,@0xFF
0000C5: 0100  		MOV		IAR,A
0000C6: 1504  		INC		RSR
0000C7: 6000  		MOV		A,@0x00
0000C8: 0D04  		XOR		RSR,A
0000C9: 3A03  		JBS		Z
0000CA: 50C3  		JMP		RAM_IND_LOOP_3
0000CB: 0012  		RET
0000CC: 6080  		MOV		A,@0x80
0000CD: 0141  		MOV		EECR2,A
0000CE: 1000  		MOV		A,0x00
0000CF: 0150  		MOV		TMP50,A
0000D0: 1050  		MOV		A,TMP50
0000D1: 0142  		MOV		EERA,A
0000D2: 60FF  		MOV		A,@0xFF
0000D3: 0143  		MOV		EERD,A
0000D4: 1550  		INC		TMP50
0000D5: 1080  		MOV		A,0x80
0000D6: 0C50  		XOR		A,TMP50
0000D7: 3A03  		JBS		Z
0000D8: 50D0  		JMP		EEPROM_INIT_LOOP
0000D9: 0012  		RET
0000DA: 6000  		MOV		A,@0x00
0000DB: 0103  		MOV		STATUS,A
0000DC: 0012  		RET
0000DD: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000DE: 5063  		JMP		INS_FAIL
0000DF: 3603  		JBC		N			; IF(N=0) BRANCH
0000E0: 5063  		JMP		INS_FAIL
0000E1: 0012  		RET
0000E2: 6001  			MOV		A,@0x01
0000E3: 0150  			MOV		INST,A
0000E4: 40DA  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000E5: 60AA  			MOV		A,@0xAA
0000E6: 0001  			DAA
0000E7: 3803  			JBS		C			; Check C = 1?
0000E8: 5063  			JMP	INS_FAIL
0000E9: 3103  			JBC		DC			; Check DC = 0?
0000EA: 5063  			JMP	INS_FAIL
0000EB: 3203  			JBC		Z			; Check Z = 0?
0000EC: 5063  			JMP	INS_FAIL
0000ED: 3503  			JBC		OV			; Check OV = 0?
0000EE: 5063  			JMP	INS_FAIL
0000EF: 3603  			JBC		N			; Check N = 0?
0000F0: 5063  			JMP	INS_FAIL
0000F1: 6C10  			XOR		A,@0x10		; Check Result ?
0000F2: 3A03  			JBS		Z			; Check Z = 1?
0000F3: 5063  			JMP	INS_FAIL
0000F4: 3603  			JBC		N			; Check N = 0?
0000F5: 5063  			JMP	INS_FAIL
0000F6: 40DA  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000F7: 6080  			MOV		A,@0x80
0000F8: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000F9: 607F  			MOV		A,@0x7F		; 
0000FA: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000FB: 0001  			DAA
0000FC: 3803  			JBS		C			; Check C = 1?
0000FD: 5063  			JMP	INS_FAIL
0000FE: 3103  			JBC		DC			; Check DC = 0?
0000FF: 5063  			JMP	INS_FAIL
000100: 3203  			JBC		Z			; Check Z = 0?
000101: 5063  			JMP	INS_FAIL
000102: 3503  			JBC		OV			; Check OV = 0?
000103: 5063  			JMP	INS_FAIL
000104: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000105: 5063  			JMP	INS_FAIL
000106: 2203  			BC		Z
000107: 2603  			BC		N
000108: 6C65  			XOR		A,@0x65		; Check Result ?
000109: 3A03  			JBS		Z			; Check Z = 1?
00010A: 5063  			JMP	INS_FAIL
00010B: 3603  			JBC		N			; Check N = 0?
00010C: 5063  			JMP	INS_FAIL
00010D: 0000  			NOP
00010E: 6000  			MOV		A,@0x00
00010F: 0103  			MOV		STATUS,A
000110: 2803  			BS		C
000111: 6080  			MOV		A,@0x80
000112: 0150  			MOV		0x50,A		; [0x50] = 0x80
000113: 607F  			MOV		A,@0x7F		; 
000114: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000115: 0001  			DAA
000116: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000117: 5063  			JMP	INS_FAIL
000118: 3903  			JBS		DC			; Check DC = 1? / By ADC
000119: 5063  			JMP	INS_FAIL
00011A: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
00011B: 5063  			JMP	INS_FAIL
00011C: 3503  			JBC		OV			; Check OV = 0?
00011D: 5063  			JMP	INS_FAIL
00011E: 3603  			JBC		N			; Check N = 0?
00011F: 5063  			JMP	INS_FAIL
000120: 6C66  			XOR		A,@0x66		; Check Result ?
000121: 3A03  			JBS		Z			; Check Z = 1?
000122: 5063  			JMP	INS_FAIL
000123: 3603  			JBC		N			; Check N = 0?
000124: 5063  			JMP	INS_FAIL
000125: 6000  			MOV		A,@0x00
000126: 0103  			MOV		STATUS,A
000127: 60FF  			MOV		A,@0xFF
000128: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000129: 607F  			MOV		A,@0x7F		; 
00012A: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
00012B: 0001  			DAA
00012C: 3803  			JBS		C			; Check C = 1? 	/ By SUB
00012D: 5063  			JMP	INS_FAIL
00012E: 3903  			JBS		DC			; Check DC = 1? / By SUB
00012F: 5063  			JMP	INS_FAIL
000130: 3203  			JBC		Z			; Check Z = 0?
000131: 5063  			JMP	INS_FAIL
000132: 3503  			JBC		OV			; Check OV = 0?
000133: 5063  			JMP	INS_FAIL
000134: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000135: 5063  			JMP	INS_FAIL
000136: 2203  			BC		Z
000137: 2603  			BC		N
000138: 6CE6  			XOR		A,@0xE6		; Check Result ?
000139: 3A03  			JBS		Z			; Check Z = 1?
00013A: 5063  			JMP	INS_FAIL
00013B: 3603  			JBC		N			; Check N = 0?
00013C: 5063  			JMP	INS_FAIL
00013D: 6008  			MOV		A,@0x08
00013E: 0150  			MOV		INST,A
00013F: 605A  			MOV		A,@0x5A
000140: 6C5A  			XOR		A,@0x5A		; Check Result ?
000141: 3A03  			JBS		Z			; Check Z = 1?
000142: 5063  			JMP	INS_FAIL
000143: 3603  			JBC		N			; Check N = 0?
000144: 5063  			JMP	INS_FAIL
000145: 605A  			MOV		A,@0x5A
000146: 0200  			CLRA
000147: 3A03  			JBS		Z			; Check Z = 1?
000148: 5063  			JMP	INS_FAIL
000149: 2203  			BC		Z
00014A: 6C00  			XOR		A,@0x00		; Check Result ?
00014B: 3A03  			JBS		Z			; Check Z = 1?
00014C: 5063  			JMP	INS_FAIL
00014D: 3603  			JBC		N			; Check N = 0?
00014E: 5063  			JMP	INS_FAIL
00014F: 6009  			MOV		A,@0x09
000150: 0150  			MOV		INST,A
000151: 60AA  			MOV		A,@0xAA
000152: 0150  			MOV		0x50,A
000153: 1050  			MOV		A,0x50
000154: 6CAA  			XOR		A,@0xAA		; Check Result ?
000155: 3A03  			JBS		Z			; Check Z = 1?
000156: 5063  			JMP	INS_FAIL
000157: 3603  			JBC		N			; Check N = 0?
000158: 5063  			JMP	INS_FAIL
000159: 0350  			CLR		0x50
00015A: 3A03  			JBS		Z			; Check Z = 1?
00015B: 5063  			JMP	INS_FAIL
00015C: 2203  			BC		Z
00015D: 1050  			MOV		A,0x50
00015E: 6C00  			XOR		A,@0x00		; Check Result ?
00015F: 3A03  			JBS		Z			; Check Z = 1?
000160: 5063  			JMP	INS_FAIL
000161: 3603  			JBC		N			; Check N = 0?
000162: 5063  			JMP	INS_FAIL
000163: 600A  			MOV		A,@0x0A
000164: 0150  			MOV		INST,A
000165: 6000  			MOV		A,@0x00
000166: 0103  			MOV		STATUS,A
000167: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000168: 0150  			MOV		0x50,A		; [0x50] = 0x02
000169: 6001  			MOV		A,@0x01
00016A: 0450  			SUB		A,0x50		; A = [0x50] - A
00016B: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
00016C: 5063  			JMP	INS_FAIL
00016D: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00016E: 5063  			JMP	INS_FAIL
00016F: 3203  			JBC		Z			; Check Z = 0?
000170: 5063  			JMP	INS_FAIL
000171: 3503  			JBC		OV			; Check OV = 0?
000172: 5063  			JMP	INS_FAIL
000173: 3603  			JBC		N			; Check N = 0?
000174: 5063  			JMP	INS_FAIL
000175: 2203  			BC		Z
000176: 6C01  			XOR		A,@0x01		; Check Result ?
000177: 3A03  			JBS		Z			; Check Z = 1?
000178: 5063  			JMP	INS_FAIL
000179: 3603  			JBC		N			; Check N = 0?
00017A: 5063  			JMP	INS_FAIL
00017B: 6000  			MOV		A,@0x00
00017C: 0103  			MOV		STATUS,A
00017D: 6002  			MOV		A,@0x02		; SUB(2-2)=0
00017E: 0150  			MOV		0x50,A		; [0x50] = 0x02
00017F: 6002  			MOV		A,@0x02
000180: 0450  			SUB		A,0x50		; A = [0x50] - A
000181: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000182: 5063  			JMP	INS_FAIL
000183: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000184: 5063  			JMP	INS_FAIL
000185: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
000186: 5063  			JMP	INS_FAIL
000187: 3503  			JBC		OV			; Check OV = 0?
000188: 5063  			JMP	INS_FAIL
000189: 3603  			JBC		N			; Check N = 0?
00018A: 5063  			JMP	INS_FAIL
00018B: 2203  			BC		Z
00018C: 6C00  			XOR		A,@0x00		; Check Result ?
00018D: 3A03  			JBS		Z			; Check Z = 1?
00018E: 5063  			JMP	INS_FAIL
00018F: 3603  			JBC		N			; Check N = 0?
000190: 5063  			JMP	INS_FAIL
000191: 6000  			MOV		A,@0x00
000192: 0103  			MOV		STATUS,A
000193: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000194: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000195: 607F  			MOV		A,@0x7F
000196: 0450  			SUB		A,0x50		; A = [0x50] - A
000197: 3803  			JBS		C			; Check C = 1?
000198: 5063  			JMP	INS_FAIL
000199: 3903  			JBS		DC			; Check DC = 1?
00019A: 5063  			JMP	INS_FAIL
00019B: 3203  			JBC		Z			; Check Z = 0?
00019C: 5063  			JMP	INS_FAIL
00019D: 3503  			JBC		OV			; Check OV = 0?
00019E: 5063  			JMP	INS_FAIL
00019F: 3E03  			JBS		N			; Check N = 1?
0001A0: 5063  			JMP	INS_FAIL
0001A1: 2203  			BC		Z
0001A2: 2603  			BC		N
0001A3: 6C80  			XOR		A,@0x80		; Check Result ?
0001A4: 3A03  			JBS		Z			; Check Z = 1?
0001A5: 5063  			JMP	INS_FAIL
0001A6: 3603  			JBC		N			; Check N = 0?
0001A7: 5063  			JMP	INS_FAIL
0001A8: 6000  			MOV		A,@0x00
0001A9: 0103  			MOV		STATUS,A
0001AA: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001AB: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001AC: 607F  			MOV		A,@0x7F
0001AD: 0450  			SUB		A,0x50		; A = [0x50] - A
0001AE: 3803  			JBS		C			; Check C = 1?
0001AF: 5063  			JMP	INS_FAIL
0001B0: 3103  			JBC		DC			; Check DC = 0?
0001B1: 5063  			JMP	INS_FAIL
0001B2: 3203  			JBC		Z			; Check Z = 0?
0001B3: 5063  			JMP	INS_FAIL
0001B4: 3D03  			JBS		OV			; Check OV = 1?
0001B5: 5063  			JMP	INS_FAIL
0001B6: 3603  			JBC		N			; Check N = 0?
0001B7: 5063  			JMP	INS_FAIL
0001B8: 2203  			BC		Z
0001B9: 2603  			BC		N
0001BA: 6C01  			XOR		A,@0x01		; Check Result ?
0001BB: 3A03  			JBS		Z			; Check Z = 1?
0001BC: 5063  			JMP	INS_FAIL
0001BD: 3603  			JBC		N			; Check N = 0?
0001BE: 5063  			JMP	INS_FAIL
0001BF: 6000  			MOV		A,@0x00
0001C0: 0103  			MOV		STATUS,A
0001C1: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001C2: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001C3: 6003  			MOV		A,@0x03
0001C4: 0450  			SUB		A,0x50		; A = [0x50] - A
0001C5: 3003  			JBC		C			; Check C = 0?
0001C6: 5063  			JMP	INS_FAIL
0001C7: 3103  			JBC		DC			; Check DC = 0?
0001C8: 5063  			JMP	INS_FAIL
0001C9: 3203  			JBC		Z			; Check Z = 0?
0001CA: 5063  			JMP	INS_FAIL
0001CB: 3503  			JBC		OV			; Check OV = 0?
0001CC: 5063  			JMP	INS_FAIL
0001CD: 3E03  			JBS		N			; Check N = 1?
0001CE: 5063  			JMP	INS_FAIL
0001CF: 2203  			BC		Z
0001D0: 2603  			BC		N
0001D1: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001D2: 3A03  			JBS		Z			; Check Z = 1?
0001D3: 5063  			JMP	INS_FAIL
0001D4: 3603  			JBC		N			; Check N = 0?
0001D5: 5063  			JMP	INS_FAIL
0001D6: 600B  			MOV		A,@0x0B
0001D7: 0150  			MOV		INST,A
0001D8: 6000  			MOV		A,@0x00
0001D9: 0103  			MOV		STATUS,A
0001DA: 6002  			MOV		A,@0x02
0001DB: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001DC: 6001  			MOV		A,@0x01
0001DD: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001DE: 1003  			MOV		A,STATUS
0001DF: 6C1B  			XOR		A,@0x1B		; for non reset
0001E0: 40DD  			CALL	INST_XOR_JUDGE
0001E1: 2203  			BC		Z
0001E2: 2603  			BC		N
0001E3: 1050  			MOV		A,0x50
0001E4: 6C01  			XOR		A,@0x01		; Check Result ?
0001E5: 40DD  			CALL	INST_XOR_JUDGE
0001E6: 6000  			MOV		A,@0x00
0001E7: 0103  			MOV		STATUS,A
0001E8: 6002  			MOV		A,@0x02
0001E9: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001EA: 6002  			MOV		A,@0x02
0001EB: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001EC: 1003  			MOV		A,STATUS
0001ED: 6C1F  			XOR		A,@0x1F		; for nono reset
0001EE: 40DD  			CALL	INST_XOR_JUDGE
0001EF: 2203  			BC		Z
0001F0: 2603  			BC		N
0001F1: 1050  			MOV		A,0x50
0001F2: 6C00  			XOR		A,@0x00		; Check Result ?
0001F3: 3A03  			JBS		Z			; Check Z = 1?
0001F4: 5063  			JMP	INS_FAIL
0001F5: 3603  			JBC		N			; Check N = 0?
0001F6: 5063  			JMP	INS_FAIL
0001F7: 6000  			MOV		A,@0x00
0001F8: 0103  			MOV		STATUS,A
0001F9: 6080  			MOV		A,@0x80
0001FA: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001FB: 6001  			MOV		A,@0x01
0001FC: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001FD: 1003  			MOV		A,STATUS
0001FE: 6C39  			XOR		A,@0x39	;; for non reset
0001FF: 40DD  			CALL	INST_XOR_JUDGE
000200: 2203  			BC		Z
000201: 2603  			BC		N
000202: 1050  			MOV		A,0x50
000203: 6C7F  			XOR		A,@0x7F		; Check Result ?
000204: 40DD  			CALL	INST_XOR_JUDGE
000205: 6030  			MOV		A,@0x30
000206: 0150  			MOV		INST,A
000207: 40DA  			CALL	STATUS_CLEAR
000208: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
000209: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
00020A: 3803  			JBS		C			; Check C = 1?
00020B: 5063  			JMP	INS_FAIL
00020C: 3903  			JBS		DC			; Check DC = 1?
00020D: 5063  			JMP	INS_FAIL
00020E: 3A03  			JBS		Z			; Check Z = 1?
00020F: 5063  			JMP	INS_FAIL
000210: 3503  			JBC		OV			; Check OV = 0?
000211: 5063  			JMP	INS_FAIL
000212: 3603  			JBC		N			; Check N = 0?
000213: 5063  			JMP	INS_FAIL
000214: 6C00  			XOR		A,@0x00		; Check Result ?
000215: 40DD  			CALL	INST_XOR_JUDGE
000216: 40DA  			CALL	STATUS_CLEAR
000217: 607F  			MOV		A,@0x7F		; 0x00-0x7F
000218: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
000219: 3003  			JBC		C			; Check C = 0?
00021A: 5063  			JMP	INS_FAIL
00021B: 3103  			JBC		DC			; Check DC = 0?
00021C: 5063  			JMP	INS_FAIL
00021D: 3203  			JBC		Z			; Check Z = 0?
00021E: 5063  			JMP	INS_FAIL
00021F: 3503  			JBC		OV			; Check OV = 0?
000220: 5063  			JMP	INS_FAIL
000221: 3E03  			JBS		N			; Check N = 1?
000222: 5063  			JMP	INS_FAIL
000223: 6C81  			XOR		A,@0x81		; Check Result ?
000224: 40DD  			CALL	INST_XOR_JUDGE
000225: 40DA  			CALL	STATUS_CLEAR
000226: 6001  			MOV		A,@0x01		; 0x80-0x01
000227: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
000228: 3803  			JBS		C			; Check C = 1?
000229: 5063  			JMP	INS_FAIL
00022A: 3103  			JBC		DC			; Check DC = 0?
00022B: 5063  			JMP	INS_FAIL
00022C: 3203  			JBC		Z			; Check Z = 0?
00022D: 5063  			JMP	INS_FAIL
00022E: 3D03  			JBS		OV			; Check OV = 1?
00022F: 5063  			JMP	INS_FAIL
000230: 3603  			JBC		N			; Check N = 0?
000231: 5063  			JMP	INS_FAIL
000232: 6C7F  			XOR		A,@0x7F		; Check Result ?
000233: 40DD  			CALL	INST_XOR_JUDGE
000234: 6031  			MOV		A,@0x31
000235: 0150  			MOV		INST,A
000236: 40DA  			CALL	STATUS_CLEAR
000237: 2003  			BC		C			; B = 1
000238: 6000  			MOV		A,@0x00		;0x00-0xF
000239: 0150  			MOV		0x50,A		; [0x50] = 0x00
00023A: 60FF  			MOV		A,@0xFF		; A = 0x01
00023B: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00023C: 3003  			JBC		C			; Check C = 0?
00023D: 5063  			JMP	INS_FAIL
00023E: 3103  			JBC		DC			; Check DC = 0?
00023F: 5063  			JMP	INS_FAIL
000240: 3A03  			JBS		Z			; Check Z = 1?
000241: 5063  			JMP	INS_FAIL
000242: 3503  			JBC		OV			; Check OV = 0?
000243: 5063  			JMP	INS_FAIL
000244: 3603  			JBC		N			; Check N = 0?
000245: 5063  			JMP	INS_FAIL
000246: 6C00  			XOR		A,@0x00		; Check Result ?
000247: 40DD  			CALL	INST_XOR_JUDGE	
000248: 40DA  			CALL	STATUS_CLEAR
000249: 2003  			BC		C			; B = 1
00024A: 6000  			MOV		A,@0x00		; 0x00-0x7F
00024B: 0150  			MOV		0x50,A		; [0x50] = 0x00
00024C: 607F  			MOV		A,@0x7F		; A = 0x01
00024D: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00024E: 3003  			JBC		C			; Check C = 0?
00024F: 5063  			JMP	INS_FAIL
000250: 3103  			JBC		DC			; Check DC = 0?
000251: 5063  			JMP	INS_FAIL
000252: 3203  			JBC		Z			; Check Z = 0?
000253: 5063  			JMP	INS_FAIL
000254: 3503  			JBC		OV			; Check OV = 0?
000255: 5063  			JMP	INS_FAIL
000256: 3E03  			JBS		N			; Check N = 1?
000257: 5063  			JMP	INS_FAIL
000258: 6C80  			XOR		A,@0x80		; Check Result ?
000259: 40DD  			CALL	INST_XOR_JUDGE
00025A: 40DA  			CALL	STATUS_CLEAR
00025B: 2003  			BC		C			; B = 1
00025C: 6080  			MOV		A,@0x80		; 0x80-0x01
00025D: 0150  			MOV		0x50,A		; [0x50] = 0x80
00025E: 6001  			MOV		A,@0x01		; A = 0x01
00025F: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000260: 3803  			JBS		C			; Check C = 1?
000261: 5063  			JMP	INS_FAIL
000262: 3103  			JBC		DC			; Check DC = 0?
000263: 5063  			JMP	INS_FAIL
000264: 3203  			JBC		Z			; Check Z = 0?
000265: 5063  			JMP	INS_FAIL
000266: 3D03  			JBS		OV			; Check OV = 1?
000267: 5063  			JMP	INS_FAIL
000268: 3603  			JBC		N			; Check N = 0?
000269: 5063  			JMP	INS_FAIL
00026A: 6C7E  			XOR		A,@0x7E		; Check Result ?
00026B: 40DD  			CALL	INST_XOR_JUDGE
00026C: 6032  			MOV		A,@0x32
00026D: 0150  			MOV		INST,A
00026E: 40DA  			CALL	STATUS_CLEAR
00026F: 2003  			BC		C			; B = 1
000270: 6000  			MOV		A,@0x00		; 0x00-0xFF
000271: 0150  			MOV		0x50,A		; [0x50] = 0x00
000272: 60FF  			MOV		A,@0xFF
000273: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000274: 1003  			MOV		A,STATUS
000275: 6C1C  			XOR		A,@0x1C		; Check Status ?
000276: 40DD  			CALL	INST_XOR_JUDGE
000277: 1050  			MOV		A,0x50
000278: 6C00  			XOR		A,@0x00		; Check Result ?
000279: 40DD  			CALL	INST_XOR_JUDGE
00027A: 40DA  			CALL	STATUS_CLEAR
00027B: 2003  			BC		C			; B = 1
00027C: 6000  			MOV		A,@0x00		; 0x00-0x7F
00027D: 0150  			MOV		0x50,A		; [0x50] = 0x00
00027E: 607F  			MOV		A,@0x7F
00027F: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000280: 1003  			MOV		A,STATUS
000281: 6C58  			XOR		A,@0x58		; Check Status ?
000282: 40DD  			CALL	INST_XOR_JUDGE
000283: 1050  			MOV		A,0x50
000284: 6C80  			XOR		A,@0x80		; Check Result ?
000285: 40DD  			CALL	INST_XOR_JUDGE
000286: 40DA  			CALL	STATUS_CLEAR
000287: 2003  			BC		C			; B = 1
000288: 6080  			MOV		A,@0x80		; ,0x80-0x01
000289: 0150  			MOV		0x50,A		; [0x50] = 0x80
00028A: 6001  			MOV		A,@0x01
00028B: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
00028C: 1003  			MOV		A,STATUS
00028D: 6C39  			XOR		A,@0x39		; Check Status ?
00028E: 40DD  			CALL	INST_XOR_JUDGE
00028F: 1050  			MOV		A,0x50
000290: 6C7E  			XOR		A,@0x7E		; Check Result ?
000291: 40DD  			CALL	INST_XOR_JUDGE
000292: 600C  			MOV		A,@0x0C
000293: 0150  			MOV		INST,A
000294: 6000  			MOV		A,@0x00
000295: 0103  			MOV		STATUS,A
000296: 6020  			MOV		A,@0x20		; 0x20-1
000297: 0150  			MOV		0x50,A		; [0x50] = 0x20
000298: 0650  			DECA	0x50		; A = [0x50] - 1
000299: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00029A: 5063  			JMP	INS_FAIL
00029B: 3103  			JBC		DC			; Check DC = 0?
00029C: 5063  			JMP	INS_FAIL
00029D: 3203  			JBC		Z			; Check Z = 0?
00029E: 5063  			JMP	INS_FAIL
00029F: 3503  			JBC		OV			; Check OV = 0?
0002A0: 5063  			JMP	INS_FAIL
0002A1: 3603  			JBC		N			; Check N = 0?
0002A2: 5063  			JMP	INS_FAIL
0002A3: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002A4: 3A03  			JBS		Z			; Check Z = 1?
0002A5: 5063  			JMP	INS_FAIL
0002A6: 3603  			JBC		N			; Check N = 0?
0002A7: 5063  			JMP	INS_FAIL
0002A8: 6000  			MOV		A,@0x00
0002A9: 0103  			MOV		STATUS,A
0002AA: 6001  			MOV		A,@0x01		; 0x01-1
0002AB: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002AC: 0650  			DECA	0x50		; A = [0x50] - 1
0002AD: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002AE: 5063  			JMP	INS_FAIL
0002AF: 3903  			JBS		DC			; Check DC = 1?
0002B0: 5063  			JMP	INS_FAIL
0002B1: 3A03  			JBS		Z			; Check Z = 1?
0002B2: 5063  			JMP	INS_FAIL
0002B3: 3503  			JBC		OV			; Check OV = 0?
0002B4: 5063  			JMP	INS_FAIL
0002B5: 3603  			JBC		N			; Check N = 0?
0002B6: 5063  			JMP	INS_FAIL
0002B7: 2203  			BC		Z
0002B8: 6C00  			XOR		A,@0x00		; Check Result ?
0002B9: 3A03  			JBS		Z			; Check Z = 1?
0002BA: 5063  			JMP	INS_FAIL
0002BB: 3603  			JBC		N			; Check N = 0?
0002BC: 5063  			JMP	INS_FAIL
0002BD: 6000  			MOV		A,@0x00
0002BE: 0103  			MOV		STATUS,A
0002BF: 6000  			MOV		A,@0x00		; 0x00-1
0002C0: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002C1: 0650  			DECA	0x50		; A = [0x50] - 1
0002C2: 3003  			JBC		C			; Check C = 0?
0002C3: 5063  			JMP	INS_FAIL
0002C4: 3103  			JBC		DC			; Check DC = 0?
0002C5: 5063  			JMP	INS_FAIL
0002C6: 3203  			JBC		Z			; Check Z = 0?
0002C7: 5063  			JMP	INS_FAIL
0002C8: 3503  			JBC		OV			; Check OV = 0?
0002C9: 5063  			JMP	INS_FAIL
0002CA: 3E03  			JBS		N			; Check N = 1?
0002CB: 5063  			JMP	INS_FAIL
0002CC: 2203  			BC		Z
0002CD: 2603  			BC		N
0002CE: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002CF: 3A03  			JBS		Z			; Check Z = 1?
0002D0: 5063  			JMP	INS_FAIL
0002D1: 3603  			JBC		N			; Check N = 0?
0002D2: 5063  			JMP	INS_FAIL
0002D3: 6000  			MOV		A,@0x00
0002D4: 0103  			MOV		STATUS,A
0002D5: 6080  			MOV		A,@0x80		; 0x80-1
0002D6: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002D7: 0650  			DECA	0x50		; A = [0x50] - 1
0002D8: 3803  			JBS		C			; Check C = 1?
0002D9: 5063  			JMP	INS_FAIL
0002DA: 3103  			JBC		DC			; Check DC = 0?
0002DB: 5063  			JMP	INS_FAIL
0002DC: 3203  			JBC		Z			; Check Z = 0?
0002DD: 5063  			JMP	INS_FAIL
0002DE: 3D03  			JBS		OV			; Check OV = 1?
0002DF: 5063  			JMP	INS_FAIL
0002E0: 3603  			JBC		N			; Check N = 0?
0002E1: 5063  			JMP	INS_FAIL
0002E2: 2203  			BC		Z
0002E3: 2603  			BC		N
0002E4: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002E5: 3A03  			JBS		Z			; Check Z = 1?
0002E6: 5063  			JMP	INS_FAIL
0002E7: 3603  			JBC		N			; Check N = 0?
0002E8: 5063  			JMP	INS_FAIL
0002E9: 600D  			MOV		A,@0x0D
0002EA: 0150  			MOV		INST,A
0002EB: 6000  			MOV		A,@0x00
0002EC: 0103  			MOV		STATUS,A
0002ED: 6020  			MOV		A,@0x20		; 0x20-1
0002EE: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002EF: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002F0: 1003  			MOV		A,STATUS
0002F1: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002F2: 3A03  			JBS		Z			; Check Z = 1?
0002F3: 5063  			JMP	INS_FAIL
0002F4: 3603  			JBC		N			; Check N = 0?
0002F5: 5063  			JMP	INS_FAIL
0002F6: 2203  			BC		Z
0002F7: 1050  			MOV		A,0x50
0002F8: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002F9: 3A03  			JBS		Z			; Check Z = 1?
0002FA: 5063  			JMP	INS_FAIL
0002FB: 3603  			JBC		N			; Check N = 0?
0002FC: 5063  			JMP	INS_FAIL
0002FD: 6000  			MOV		A,@0x00
0002FE: 0103  			MOV		STATUS,A
0002FF: 6001  			MOV		A,@0x01		; 0x01-1
000300: 0150  			MOV		0x50,A		; [0x50] = 0x01
000301: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000302: 1003  			MOV		A,STATUS
000303: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000304: 3A03  			JBS		Z			; Check Z = 1?
000305: 5063  			JMP	INS_FAIL
000306: 3603  			JBC		N			; Check N = 0?
000307: 5063  			JMP	INS_FAIL
000308: 2203  			BC		Z
000309: 1050  			MOV		A,0x50
00030A: 6C00  			XOR		A,@0x00		; Check Result ?
00030B: 3A03  			JBS		Z			; Check Z = 1?
00030C: 5063  			JMP	INS_FAIL
00030D: 3603  			JBC		N			; Check N = 0?
00030E: 5063  			JMP	INS_FAIL
00030F: 6000  			MOV		A,@0x00
000310: 0103  			MOV		STATUS,A
000311: 6000  			MOV		A,@0x00		; 0x00-1
000312: 0150  			MOV		0x50,A		; [0x50] = 0x00
000313: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000314: 1003  			MOV		A,STATUS
000315: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000316: 3A03  			JBS		Z			; Check Z = 1?
000317: 5063  			JMP	INS_FAIL
000318: 3603  			JBC		N			; Check N = 0?
000319: 5063  			JMP	INS_FAIL
00031A: 2203  			BC		Z
00031B: 1050  			MOV		A,0x50
00031C: 6CFF  			XOR		A,@0xFF		; Check Result ?
00031D: 3A03  			JBS		Z			; Check Z = 1?
00031E: 5063  			JMP	INS_FAIL
00031F: 3603  			JBC		N			; Check N = 0?
000320: 5063  			JMP	INS_FAIL
000321: 6000  			MOV		A,@0x00
000322: 0103  			MOV		STATUS,A
000323: 6080  			MOV		A,@0x80		; 0x80-1
000324: 0150  			MOV		0x50,A		; [0x50] = 0x80
000325: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000326: 1003  			MOV		A,STATUS
000327: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
000328: 3A03  			JBS		Z			; Check Z = 1?
000329: 5063  			JMP	INS_FAIL
00032A: 3603  			JBC		N			; Check N = 0?
00032B: 5063  			JMP	INS_FAIL
00032C: 2203  			BC		Z
00032D: 1050  			MOV		A,0x50
00032E: 6C7F  			XOR		A,@0x7F		; Check Result ?
00032F: 3A03  			JBS		Z			; Check Z = 1?
000330: 5063  			JMP	INS_FAIL
000331: 3603  			JBC		N			; Check N = 0?
000332: 5063  			JMP	INS_FAIL
000333: 6012  			MOV		A,@0x12
000334: 0150  			MOV		INST,A
000335: 40DA  			CALL	STATUS_CLEAR	; 0x80+0x7F
000336: 6080  			MOV		A,@0x80
000337: 0150  			MOV		0x50,A		; [0x50] = 0x80
000338: 607F  			MOV		A,@0x7F		; 
000339: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
00033A: 3003  			JBC		C			; Check C = 0?
00033B: 5063  			JMP	INS_FAIL
00033C: 3103  			JBC		DC			; Check DC = 0?
00033D: 5063  			JMP	INS_FAIL
00033E: 3203  			JBC		Z			; Check Z = 0?
00033F: 5063  			JMP	INS_FAIL
000340: 3503  			JBC		OV			; Check OV = 0?
000341: 5063  			JMP	INS_FAIL
000342: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000343: 5063  			JMP	INS_FAIL
000344: 2203  			BC		Z
000345: 2603  			BC		N
000346: 6CFF  			XOR		A,@0xFF		; Check Result ?
000347: 3A03  			JBS		Z			; Check Z = 1?
000348: 5063  			JMP	INS_FAIL
000349: 3603  			JBC		N			; Check N = 0?
00034A: 5063  			JMP	INS_FAIL
00034B: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
00034C: 60FF  			MOV		A,@0xFF
00034D: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00034E: 6001  			MOV		A,@0x01		; 
00034F: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
000350: 3803  			JBS		C			; Check C = 1?
000351: 5063  			JMP	INS_FAIL
000352: 3903  			JBS		DC			; Check DC = 1?
000353: 5063  			JMP	INS_FAIL
000354: 3A03  			JBS		Z			; Check Z = 1?
000355: 5063  			JMP	INS_FAIL
000356: 3503  			JBC		OV			; Check OV = 0?
000357: 5063  			JMP	INS_FAIL
000358: 3603  			JBC		N			; Check N = 0?
000359: 5063  			JMP	INS_FAIL
00035A: 2203  			BC		Z
00035B: 2603  			BC		N
00035C: 6C00  			XOR		A,@0x00		; Check Result ?
00035D: 3A03  			JBS		Z			; Check Z = 1?
00035E: 5063  			JMP	INS_FAIL
00035F: 3603  			JBC		N			; Check N = 0?
000360: 5063  			JMP	INS_FAIL
000361: 40DA  			CALL	STATUS_CLEAR	; 0x7F+0x01
000362: 607F  			MOV		A,@0x7F
000363: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000364: 6001  			MOV		A,@0x01		; 
000365: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
000366: 3003  			JBC		C			; Check C = 0?
000367: 5063  			JMP	INS_FAIL
000368: 3903  			JBS		DC			; Check DC = 1?
000369: 5063  			JMP	INS_FAIL
00036A: 3203  			JBC		Z			; Check Z = 0?
00036B: 5063  			JMP	INS_FAIL
00036C: 3D03  			JBS		OV			; Check OV = 1?
00036D: 5063  			JMP	INS_FAIL
00036E: 3E03  			JBS		N			; Check N = 1?
00036F: 5063  			JMP	INS_FAIL
000370: 2203  			BC		Z
000371: 2603  			BC		N
000372: 6C80  			XOR		A,@0x80		; Check Result ?
000373: 3A03  			JBS		Z			; Check Z = 1?
000374: 5063  			JMP	INS_FAIL
000375: 3603  			JBC		N			; Check N = 0?
000376: 5063  			JMP	INS_FAIL
000377: 6013  			MOV		A,@0x13
000378: 0150  			MOV		INST,A
000379: 40DA  			CALL	STATUS_CLEAR	; 0x80+0x7F
00037A: 6080  			MOV		A,@0x80
00037B: 0150  			MOV		0x50,A		; [0x50] = 0x80
00037C: 607F  			MOV		A,@0x7F		; A = 0x7F
00037D: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00037E: 1003  			MOV		A,STATUS
00037F: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000380: 3A03  			JBS		Z			; Check Z = 1?
000381: 5063  			JMP	INS_FAIL
000382: 3603  			JBC		N			; Check N = 0?
000383: 5063  			JMP	INS_FAIL
000384: 1050  			MOV		A,0x50
000385: 6CFF  			XOR		A,@0xFF		; Check Result ?
000386: 3A03  			JBS		Z			; Check Z = 1?
000387: 5063  			JMP	INS_FAIL
000388: 3603  			JBC		N			; Check N = 0?
000389: 5063  			JMP	INS_FAIL
00038A: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
00038B: 60FF  			MOV		A,@0xFF
00038C: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00038D: 6001  			MOV		A,@0x01		; A = 0x01
00038E: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
00038F: 1003  			MOV		A,STATUS
000390: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000391: 3A03  			JBS		Z			; Check Z = 1?
000392: 5063  			JMP	INS_FAIL
000393: 3603  			JBC		N			; Check N = 0?
000394: 5063  			JMP	INS_FAIL
000395: 1050  			MOV		A,0x50
000396: 6C00  			XOR		A,@0x00		; Check Result ?
000397: 3A03  			JBS		Z			; Check Z = 1?
000398: 5063  			JMP	INS_FAIL
000399: 3603  			JBC		N			; Check N = 0?
00039A: 5063  			JMP	INS_FAIL
00039B: 40DA  			CALL	STATUS_CLEAR	;0x7F+0x01
00039C: 607F  			MOV		A,@0x7F
00039D: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00039E: 6001  			MOV		A,@0x01		; A = 0x01
00039F: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
0003A0: 1003  			MOV		A,STATUS
0003A1: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
0003A2: 3A03  			JBS		Z			; Check Z = 1?
0003A3: 5063  			JMP	INS_FAIL
0003A4: 3603  			JBC		N			; Check N = 0?
0003A5: 5063  			JMP	INS_FAIL
0003A6: 1050  			MOV		A,0x50
0003A7: 6C80  			XOR		A,@0x80		; Check Result ?
0003A8: 3A03  			JBS		Z			; Check Z = 1?
0003A9: 5063  			JMP	INS_FAIL
0003AA: 3603  			JBC		N			; Check N = 0?
0003AB: 5063  			JMP	INS_FAIL
0003AC: 6034  			MOV		A,@0x34
0003AD: 0150  			MOV		INST,A
0003AE: 40DA  			CALL	STATUS_CLEAR
0003AF: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003B0: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003B1: 3003  			JBC		C			; Check C = 0?
0003B2: 5063  			JMP	INS_FAIL
0003B3: 3903  			JBS		DC			; Check DC = 1?
0003B4: 5063  			JMP	INS_FAIL
0003B5: 3203  			JBC		Z			; Check Z = 0?
0003B6: 5063  			JMP	INS_FAIL
0003B7: 3D03  			JBS		OV			; Check OV = 1?
0003B8: 5063  			JMP	INS_FAIL
0003B9: 3E03  			JBS		N			; Check N = 1?
0003BA: 5063  			JMP	INS_FAIL
0003BB: 6C80  			XOR		A,@0x80		; Check Result ?
0003BC: 40DD  			CALL	INST_XOR_JUDGE
0003BD: 40DA  			CALL	STATUS_CLEAR
0003BE: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003BF: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003C0: 3803  			JBS		C			; Check C = 1?
0003C1: 5063  			JMP	INS_FAIL
0003C2: 3903  			JBS		DC			; Check DC = 1?
0003C3: 5063  			JMP	INS_FAIL
0003C4: 3A03  			JBS		Z			; Check Z = 1?
0003C5: 5063  			JMP	INS_FAIL
0003C6: 3503  			JBC		OV			; Check OV = 0?
0003C7: 5063  			JMP	INS_FAIL
0003C8: 3603  			JBC		N			; Check N = 0?
0003C9: 5063  			JMP	INS_FAIL
0003CA: 6C00  			XOR		A,@0x00		; Check Result ?
0003CB: 40DD  			CALL	INST_XOR_JUDGE
0003CC: 40DA  			CALL	STATUS_CLEAR
0003CD: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003CE: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003CF: 3003  			JBC		C			; Check C = 0?
0003D0: 5063  			JMP	INS_FAIL
0003D1: 3103  			JBC		DC			; Check DC = 0?
0003D2: 5063  			JMP	INS_FAIL
0003D3: 3203  			JBC		Z			; Check Z = 0?
0003D4: 5063  			JMP	INS_FAIL
0003D5: 3503  			JBC		OV			; Check OV = 0?
0003D6: 5063  			JMP	INS_FAIL
0003D7: 3E03  			JBS		N			; Check N = 1?
0003D8: 5063  			JMP	INS_FAIL
0003D9: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003DA: 40DD  			CALL	INST_XOR_JUDGE
0003DB: 6017  			MOV		A,@0x17
0003DC: 0150  			MOV		INST,A
0003DD: 40DA  			CALL	STATUS_CLEAR	; 0x7F+0x01
0003DE: 607F  			MOV		A,@0x7F
0003DF: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003E0: 1450  			INCA	0x50		; A = [0x50] +1		
0003E1: 3003  			JBC		C			; Check C = 0?
0003E2: 5063  			JMP	INS_FAIL
0003E3: 3903  			JBS		DC			; Check DC = 1?
0003E4: 5063  			JMP	INS_FAIL
0003E5: 3203  			JBC		Z			; Check Z = 0?
0003E6: 5063  			JMP	INS_FAIL
0003E7: 3D03  			JBS		OV			; Check OV = 1?
0003E8: 5063  			JMP	INS_FAIL
0003E9: 3E03  			JBS		N			; Check N = 1?
0003EA: 5063  			JMP	INS_FAIL
0003EB: 2203  			BC		Z
0003EC: 2603  			BC		N
0003ED: 6C80  			XOR		A,@0x80		; Check Result ?
0003EE: 3A03  			JBS		Z			; Check Z = 1?
0003EF: 5063  			JMP	INS_FAIL
0003F0: 3603  			JBC		N			; Check N = 0?
0003F1: 5063  			JMP	INS_FAIL
0003F2: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
0003F3: 60FF  			MOV		A,@0xFF
0003F4: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0003F5: 1450  			INCA	0x50		; A = [0x50] +1		
0003F6: 3803  			JBS		C			; Check C = 1?
0003F7: 5063  			JMP	INS_FAIL
0003F8: 3903  			JBS		DC			; Check DC = 1?
0003F9: 5063  			JMP	INS_FAIL
0003FA: 3A03  			JBS		Z			; Check Z = 1?
0003FB: 5063  			JMP	INS_FAIL
0003FC: 3503  			JBC		OV			; Check OV = 0?
0003FD: 5063  			JMP	INS_FAIL
0003FE: 3603  			JBC		N			; Check N = 0?
0003FF: 5063  			JMP	INS_FAIL
000400: 2203  			BC		Z
000401: 2603  			BC		N
000402: 6C00  			XOR		A,@0x00		; Check Result ?
000403: 3A03  			JBS		Z			; Check Z = 1?
000404: 5063  			JMP	INS_FAIL
000405: 3603  			JBC		N			; Check N = 0?
000406: 5063  			JMP	INS_FAIL
000407: 6018  			MOV		A,@0x18
000408: 0150  			MOV		INST,A
000409: 40DA  			CALL 	STATUS_CLEAR	; 0x7F+0x01
00040A: 607F  			MOV		A,@0x7F
00040B: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00040C: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00040D: 1003  			MOV		A,STATUS
00040E: 6C7A  			XOR		A,@0x7A		; Check Status ?
00040F: 3A03  			JBS		Z			; Check Z = 1?
000410: 5063  			JMP	INS_FAIL
000411: 3603  			JBC		N			; Check N = 0?
000412: 5063  			JMP	INS_FAIL
000413: 1050  			MOV		A,0x50
000414: 6C80  			XOR		A,@0x80		; Check Result ?
000415: 3A03  			JBS		Z			; Check Z = 1?
000416: 5063  			JMP	INS_FAIL
000417: 3603  			JBC		N			; Check N = 0?
000418: 5063  			JMP	INS_FAIL
000419: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
00041A: 60FF  			MOV		A,@0xFF
00041B: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00041C: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00041D: 1003  			MOV		A,STATUS
00041E: 6C1F  			XOR		A,@0x1F		; Check Status ?
00041F: 3A03  			JBS		Z			; Check Z = 1?
000420: 5063  			JMP	INS_FAIL
000421: 3603  			JBC		N			; Check N = 0?
000422: 5063  			JMP	INS_FAIL
000423: 1050  			MOV		A,0x50
000424: 6C00  			XOR		A,@0x00		; Check Result ?
000425: 3A03  			JBS		Z			; Check Z = 1?
000426: 5063  			JMP	INS_FAIL
000427: 3603  			JBC		N			; Check N = 0?
000428: 5063  			JMP	INS_FAIL
000429: 6035  			MOV		A,@0x35
00042A: 0150  			MOV		INST,A
00042B: 40DA  			CALL	STATUS_CLEAR
00042C: 6000  			MOV		A,@0x00		; 0x00
00042D: 0150  			MOV		0x50,A		; [0x50] = 0x00
00042E: 7D50  			NEG		0x50
00042F: 1003  			MOV		A,STATUS
000430: 6C1F  			XOR		A,@0x1F		; Check Status ?
000431: 40DD  			CALL	INST_XOR_JUDGE
000432: 1050  			MOV		A,0x50
000433: 6C00  			XOR		A,@0x00		; Check Result ?
000434: 40DD  			CALL	INST_XOR_JUDGE
000435: 40DA  			CALL	STATUS_CLEAR
000436: 6001  			MOV		A,@0x01		; 0x01
000437: 0150  			MOV		0x50,A		; [0x50] = 0x01
000438: 7D50  			NEG		0x50
000439: 1003  			MOV		A,STATUS
00043A: 6C58  			XOR		A,@0x58		; Check Status ?
00043B: 40DD  			CALL	INST_XOR_JUDGE
00043C: 1050  			MOV		A,0x50
00043D: 6CFF  			XOR		A,@0xFF		; Check Result ?
00043E: 4634  			CALL	INST_XCH
00043F: 40DA  			CALL	STATUS_CLEAR
000440: 6080  			MOV		A,@0x80		; 0x80
000441: 0150  			MOV		0x50,A		; [0x50] = 0x80
000442: 7D50  			NEG		0x50
000443: 1003  			MOV		A,STATUS
000444: 6C7A  			XOR		A,@0x7A		; Check Status ?
000445: 40DD  			CALL	INST_XOR_JUDGE
000446: 1050  			MOV		A,0x50
000447: 6C80  			XOR		A,@0x80		; Check Result ?
000448: 40DD  			CALL	INST_XOR_JUDGE
000449: 0012  		RET
00044A: 6006  			MOV		A,@0x06
00044B: 0150  			MOV		INST,A
00044C: 6000  			MOV		A,@0x00
00044D: 60FF  			MOV		A,@0xFF
00044E: 0104  			MOV		RSR,A		; Start Address
00044F: 0084  			BTG		RSR
000450: 1004  			MOV		A,RSR
000451: 6CFE  			XOR		A,@0xFE		; Check Result ?
000452: 3A03  			JBS		Z			; Check Z = 1?
000453: 5063  			JMP	INS_FAIL
000454: 3603  			JBC		N			; Check N = 0?
000455: 5063  			JMP	INS_FAIL
000456: 600E  			MOV		A,@0x0E
000457: 0150  			MOV		INST,A
000458: 6000  			MOV		A,@0x00
000459: 0103  			MOV		STATUS,A
00045A: 6000  			MOV		A,@0x00
00045B: 0150  			MOV		0x50,A		; [0x50] = 0x00
00045C: 6000  			MOV		A,@0x00
00045D: 2203  			BC		Z
00045E: 0850  			OR		A,0x50		; A = A | [0x50]
00045F: 3003  			JBC		C			; Check C = 0?
000460: 5063  			JMP	INS_FAIL
000461: 3103  			JBC		DC			; Check DC = 0?
000462: 5063  			JMP	INS_FAIL
000463: 3A03  			JBS		Z			; Check Z = 1?
000464: 5063  			JMP	INS_FAIL
000465: 3503  			JBC		OV			; Check OV = 0?
000466: 5063  			JMP	INS_FAIL
000467: 3603  			JBC		N			; Check N = 0?
000468: 5063  			JMP	INS_FAIL
000469: 2203  			BC		Z
00046A: 6C00  			XOR		A,@0x00		; Check Result ?
00046B: 3A03  			JBS		Z			; Check Z = 1?
00046C: 5063  			JMP	INS_FAIL
00046D: 3603  			JBC		N			; Check N = 0?
00046E: 5063  			JMP	INS_FAIL
00046F: 6000  			MOV		A,@0x00
000470: 0103  			MOV		STATUS,A
000471: 6055  			MOV		A,@0x55
000472: 0150  			MOV		0x50,A		; [0x50] = 0x55
000473: 60AA  			MOV		A,@0xAA
000474: 2203  			BC		Z
000475: 0850  			OR		A,0x50		; A = A | [0x50]
000476: 3003  			JBC		C			; Check C = 0?
000477: 5063  			JMP	INS_FAIL
000478: 3103  			JBC		DC			; Check DC = 0?
000479: 5063  			JMP	INS_FAIL
00047A: 3203  			JBC		Z			; Check Z = 0?
00047B: 5063  			JMP	INS_FAIL
00047C: 3503  			JBC		OV			; Check OV = 0?
00047D: 5063  			JMP	INS_FAIL
00047E: 3E03  			JBS		N			; Check N = 1?
00047F: 5063  			JMP	INS_FAIL
000480: 2203  			BC		Z
000481: 6CFF  			XOR		A,@0xFF		; Check Result ?
000482: 3A03  			JBS		Z			; Check Z = 1?
000483: 5063  			JMP	INS_FAIL
000484: 3603  			JBC		N			; Check N = 0?
000485: 5063  			JMP	INS_FAIL
000486: 600F  			MOV		A,@0x0F
000487: 0150  			MOV		INST,A
000488: 6000  			MOV		A,@0x00
000489: 0103  			MOV		STATUS,A
00048A: 6000  			MOV		A,@0x00
00048B: 0150  			MOV		0x50,A		; [0x50] = 0x00
00048C: 6000  			MOV		A,@0x00		; A = 0x00
00048D: 2203  			BC		Z
00048E: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
00048F: 1003  			MOV		A,STATUS
000490: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
000491: 3A03  			JBS		Z			; Check Z = 1?
000492: 5063  			JMP	INS_FAIL
000493: 3603  			JBC		N			; Check N = 0?
000494: 5063  			JMP	INS_FAIL
000495: 1050  			MOV		A,0x50		; A = Result[0x50]
000496: 2203  			BC		Z
000497: 2603  			BC		N
000498: 6C00  			XOR		A,@0x00		; Check Result ?
000499: 3A03  			JBS		Z			; Check Z = 1?
00049A: 5063  			JMP	INS_FAIL
00049B: 3603  			JBC		N			; Check N = 0?
00049C: 5063  			JMP	INS_FAIL
00049D: 6000  			MOV		A,@0x00
00049E: 0103  			MOV		STATUS,A
00049F: 6055  			MOV		A,@0x55
0004A0: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004A1: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004A2: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004A3: 1003  			MOV		A,STATUS
0004A4: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004A5: 3A03  			JBS		Z			; Check Z = 1?
0004A6: 5063  			JMP	INS_FAIL
0004A7: 3603  			JBC		N			; Check N = 0?
0004A8: 5063  			JMP	INS_FAIL
0004A9: 1050  			MOV		A,0x50
0004AA: 2203  			BC		Z
0004AB: 2603  			BC		N
0004AC: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004AD: 3A03  			JBS		Z			; Check Z = 1?
0004AE: 5063  			JMP	INS_FAIL
0004AF: 3603  			JBC		N			; Check N = 0?
0004B0: 5063  			JMP	INS_FAIL
0004B1: 6010  			MOV		A,@0x10
0004B2: 0150  			MOV		INST,A
0004B3: 40DA  			CALL	STATUS_CLEAR
0004B4: 6055  			MOV		A,@0x55
0004B5: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004B6: 60AA  			MOV		A,@0xAA
0004B7: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
0004B8: 3003  			JBC		C			; Check C = 0?
0004B9: 5063  			JMP	INS_FAIL
0004BA: 3103  			JBC		DC			; Check DC = 0?
0004BB: 5063  			JMP	INS_FAIL
0004BC: 3A03  			JBS		Z			; Check Z = 1?
0004BD: 5063  			JMP	INS_FAIL
0004BE: 3503  			JBC		OV			; Check OV = 0?
0004BF: 5063  			JMP	INS_FAIL
0004C0: 3603  			JBC		N			; Check N = 0?
0004C1: 5063  			JMP	INS_FAIL
0004C2: 6C00  			XOR		A,@0x00		; Check Result ?
0004C3: 3A03  			JBS		Z			; Check Z = 1?
0004C4: 5063  			JMP	INS_FAIL
0004C5: 3603  			JBC		N			; Check N = 0?
0004C6: 5063  			JMP	INS_FAIL
0004C7: 40DA  			CALL	STATUS_CLEAR
0004C8: 60F5  			MOV		A,@0xF5
0004C9: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0004CA: 60FA  			MOV		A,@0xFA
0004CB: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
0004CC: 3003  			JBC		C			; Check C = 0?
0004CD: 5063  			JMP	INS_FAIL
0004CE: 3103  			JBC		DC			; Check DC = 0?
0004CF: 5063  			JMP	INS_FAIL
0004D0: 3203  			JBC		Z			; Check Z = 0?
0004D1: 5063  			JMP	INS_FAIL
0004D2: 3503  			JBC		OV			; Check OV = 0?
0004D3: 5063  			JMP	INS_FAIL
0004D4: 3E03  			JBS		N			; Check N = 1?
0004D5: 5063  			JMP	INS_FAIL
0004D6: 6CF0  			XOR		A,@0xF0		; Check Result ?
0004D7: 3A03  			JBS		Z			; Check Z = 1?
0004D8: 5063  			JMP	INS_FAIL
0004D9: 3603  			JBC		N			; Check N = 0?
0004DA: 5063  			JMP	INS_FAIL
0004DB: 6011  			MOV		A,@0x11
0004DC: 0150  			MOV		INST,A
0004DD: 40DA  			CALL	STATUS_CLEAR
0004DE: 6055  			MOV		A,@0x55
0004DF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004E0: 60AA  			MOV		A,@0xAA
0004E1: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
0004E2: 1003  			MOV		A,STATUS
0004E3: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004E4: 3A03  			JBS		Z			; Check Z = 1?
0004E5: 5063  			JMP	INS_FAIL
0004E6: 3603  			JBC		N			; Check N = 0?
0004E7: 5063  			JMP	INS_FAIL
0004E8: 2203  			BC		Z
0004E9: 1050  			MOV		A,0x50
0004EA: 2203  			BC		Z
0004EB: 6C00  			XOR		A,@0x00		; Check Result ?
0004EC: 3A03  			JBS		Z			; Check Z = 1?
0004ED: 5063  			JMP	INS_FAIL
0004EE: 3603  			JBC		N			; Check N = 0?
0004EF: 5063  			JMP	INS_FAIL
0004F0: 40DA  			CALL	STATUS_CLEAR
0004F1: 60F5  			MOV		A,@0xF5
0004F2: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0004F3: 60FA  			MOV		A,@0xFA
0004F4: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
0004F5: 1003  			MOV		A,STATUS
0004F6: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004F7: 3A03  			JBS		Z			; Check Z = 1?
0004F8: 5063  			JMP	INS_FAIL
0004F9: 3603  			JBC		N			; Check N = 0?
0004FA: 5063  			JMP	INS_FAIL
0004FB: 2203  			BC		Z
0004FC: 1050  			MOV		A,0x50
0004FD: 2203  			BC		Z
0004FE: 6CF0  			XOR		A,@0xF0		; Check Result ?
0004FF: 3A03  			JBS		Z			; Check Z = 1?
000500: 5063  			JMP	INS_FAIL
000501: 3603  			JBC		N			; Check N = 0?
000502: 5063  			JMP	INS_FAIL
000503: 6029  			MOV		A,@0x29
000504: 0150  			MOV		INST,A
000505: 40DA  			CALL	STATUS_CLEAR
000506: 60AA  			MOV		A,@0xAA
000507: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
000508: 3003  			JBC		C			; Check C = 0?
000509: 5063  			JMP	INS_FAIL
00050A: 3103  			JBC		DC			; Check DC = 0?
00050B: 5063  			JMP	INS_FAIL
00050C: 3A03  			JBS		Z			; Check Z = 1?
00050D: 5063  			JMP	INS_FAIL
00050E: 3503  			JBC		OV			; Check OV = 0?
00050F: 5063  			JMP	INS_FAIL
000510: 3603  			JBC		N			; Check N = 0?
000511: 5063  			JMP	INS_FAIL
000512: 6C00  			XOR		A,@0x00		; Check Result ?
000513: 3A03  			JBS		Z			; Check Z = 1?
000514: 5063  			JMP	INS_FAIL
000515: 3603  			JBC		N			; Check N = 0?
000516: 5063  			JMP	INS_FAIL
000517: 40DA  			CALL	STATUS_CLEAR
000518: 60AA  			MOV		A,@0xAA
000519: 68FF  			AND		A,@0xFF		; A = A & 0xFF
00051A: 3003  			JBC		C			; Check C = 0?
00051B: 5063  			JMP	INS_FAIL
00051C: 3103  			JBC		DC			; Check DC = 0?
00051D: 5063  			JMP	INS_FAIL
00051E: 3203  			JBC		Z			; Check Z = 0?
00051F: 5063  			JMP	INS_FAIL
000520: 3503  			JBC		OV			; Check OV = 0?
000521: 5063  			JMP	INS_FAIL
000522: 3E03  			JBS		N			; Check N = 1?
000523: 5063  			JMP	INS_FAIL
000524: 6CAA  			XOR		A,@0xAA		; Check Result ?
000525: 40DD  			CALL	INST_XOR_JUDGE
000526: 6015  			MOV		A,@0x15
000527: 0150  			MOV		INST,A
000528: 40DA  			CALL	STATUS_CLEAR
000529: 60FF  			MOV		A,@0xFF
00052A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00052B: 1250  			COMA	0x50		; A = /R
00052C: 3003  			JBC		C			; Check C = 0?
00052D: 5063  			JMP	INS_FAIL
00052E: 3103  			JBC		DC			; Check DC = 0?
00052F: 5063  			JMP	INS_FAIL
000530: 3A03  			JBS		Z			; Check Z = 1?
000531: 5063  			JMP	INS_FAIL
000532: 3503  			JBC		OV			; Check OV = 0?
000533: 5063  			JMP	INS_FAIL
000534: 3603  			JBC		N			; Check N = 0?
000535: 5063  			JMP	INS_FAIL
000536: 6C00  			XOR		A,@0x00		; Check Result ?
000537: 3A03  			JBS		Z			; Check Z = 1?
000538: 5063  			JMP	INS_FAIL
000539: 3603  			JBC		N			; Check N = 0?
00053A: 5063  			JMP	INS_FAIL	
00053B: 40DA  			CALL	STATUS_CLEAR
00053C: 6005  			MOV		A,@0x05
00053D: 0150  			MOV		0x50,A		; [0x50] = 0x05
00053E: 1250  			COMA	0x50		; A = /R
00053F: 3003  			JBC		C			; Check C = 0?
000540: 5063  			JMP	INS_FAIL
000541: 3103  			JBC		DC			; Check DC = 0?
000542: 5063  			JMP	INS_FAIL
000543: 3203  			JBC		Z			; Check Z = 0?
000544: 5063  			JMP	INS_FAIL
000545: 3503  			JBC		OV			; Check OV = 0?
000546: 5063  			JMP	INS_FAIL
000547: 3E03  			JBS		N			; Check N = 1?
000548: 5063  			JMP	INS_FAIL
000549: 6CFA  			XOR		A,@0xFA		; Check Result ?
00054A: 3A03  			JBS		Z			; Check Z = 1?
00054B: 5063  			JMP	INS_FAIL
00054C: 3603  			JBC		N			; Check N = 0?
00054D: 5063  			JMP	INS_FAIL
00054E: 6016  			MOV		A,@0x16
00054F: 0150  			MOV		INST,A
000550: 40DA  			CALL	STATUS_CLEAR
000551: 60FF  			MOV		A,@0xFF
000552: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000553: 1350  			COM		0x50		; [0x50] = /[0x50]
000554: 1003  			MOV		A,STATUS
000555: 6C1C  			XOR		A,@0x1C		; Check Status ?
000556: 3A03  			JBS		Z			; Check Z = 1?
000557: 5063  			JMP	INS_FAIL
000558: 3603  			JBC		N			; Check N = 0?
000559: 5063  			JMP	INS_FAIL
00055A: 2203  			BC		Z
00055B: 2603  			BC		N
00055C: 1050  			MOV		A,0x50
00055D: 6C00  			XOR		A,@0x00		; Check Result ?
00055E: 3A03  			JBS		Z			; Check Z = 1?
00055F: 5063  			JMP	INS_FAIL
000560: 3603  			JBC		N			; Check N = 0?
000561: 5063  			JMP	INS_FAIL
000562: 40DA  			CALL	STATUS_CLEAR
000563: 6000  			MOV		A,@0x00
000564: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000565: 1350  			COM		0x50		; [0x50] = /[0x50]
000566: 1003  			MOV		A,STATUS
000567: 6C58  			XOR		A,@0x58		; Check Status ?
000568: 3A03  			JBS		Z			; Check Z = 1?
000569: 5063  			JMP	INS_FAIL
00056A: 3603  			JBC		N			; Check N = 0?
00056B: 5063  			JMP	INS_FAIL
00056C: 2203  			BC		Z
00056D: 2603  			BC		N
00056E: 1050  			MOV		A,0x50
00056F: 6CFF  			XOR		A,@0xFF		; Check Result ?
000570: 3A03  			JBS		Z			; Check Z = 1?
000571: 5063  			JMP	INS_FAIL
000572: 3603  			JBC		N			; Check N = 0?
000573: 5063  			JMP	INS_FAIL
000574: 6026  			MOV		A,@0x26
000575: 0150  			MOV		INST,A
000576: 40DA  			CALL	STATUS_CLEAR
000577: 60A5  			MOV		A,@0xA5
000578: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
000579: 6CFF  			XOR		A,@0xFF		; Check Result ?
00057A: 40DD  			CALL	INST_XOR_JUDGE
00057B: 0012  		RET
00057C: 602B  			MOV		A,@0x2B
00057D: 0150  			MOV		INST,A
00057E: 40DA  			CALL	STATUS_CLEAR
00057F: 6055  			MOV		A,@0x55
000580: 0150  			MOV		0x50,A		; [0x50] = 0x55
000581: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
000582: 1003  			MOV		A,STATUS
000583: 6C58  			XOR		A,@0x58		; Check Status ?
000584: 40DD  			CALL	INST_XOR_JUDGE
000585: 1050  			MOV		A,0x50
000586: 6CAA  			XOR		A,@0xAA		; Check Result ?
000587: 40DD  			CALL	INST_XOR_JUDGE
000588: 602A  			MOV		A,@0x2A
000589: 0150  			MOV		INST,A
00058A: 40DA  			CALL 	STATUS_CLEAR
00058B: 6055  			MOV		A,@0x55
00058C: 0150  			MOV		0x50,A		; [0x50] = 0x55
00058D: 6E50  			RRA		0x50		; A = [0x50] >> 1
00058E: 3003  			JBC		C			; Check C = 0?
00058F: 5063  			JMP	INS_FAIL
000590: 3103  			JBC		DC			; Check DC = 0?
000591: 5063  			JMP	INS_FAIL
000592: 3203  			JBC		Z			; Check Z = 0?
000593: 5063  			JMP	INS_FAIL
000594: 3503  			JBC		OV			; Check OV = 0?
000595: 5063  			JMP	INS_FAIL
000596: 3E03  			JBS		N			; Check N = 1?
000597: 5063  			JMP	INS_FAIL
000598: 6CAA  			XOR		A,@0xAA		; Check Result ?
000599: 40DD  			CALL	INST_XOR_JUDGE
00059A: 601B  			MOV		A,@0x1B
00059B: 0150  			MOV		INST,A
00059C: 40DA  			CALL	STATUS_CLEAR
00059D: 2803  			BS		C
00059E: 60AA  			MOV		A,@0xAA
00059F: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005A0: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005A1: 3003  			JBC		C			; Check C = 0?
0005A2: 5063  			JMP	INS_FAIL
0005A3: 3103  			JBC		DC			; Check DC = 0?
0005A4: 5063  			JMP	INS_FAIL
0005A5: 3203  			JBC		Z			; Check Z = 0?
0005A6: 5063  			JMP	INS_FAIL
0005A7: 3503  			JBC		OV			; Check OV = 0?
0005A8: 5063  			JMP	INS_FAIL
0005A9: 3E03  			JBS		N			; Check N = 1?
0005AA: 5063  			JMP	INS_FAIL
0005AB: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005AC: 40DD  			CALL	INST_XOR_JUDGE
0005AD: 40DA  			CALL	STATUS_CLEAR
0005AE: 6055  			MOV		A,@0x55
0005AF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005B0: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005B1: 3803  			JBS		C			; Check C = 1?
0005B2: 5063  			JMP	INS_FAIL
0005B3: 3103  			JBC		DC			; Check DC = 0?
0005B4: 5063  			JMP	INS_FAIL
0005B5: 3203  			JBC		Z			; Check Z = 0?
0005B6: 5063  			JMP	INS_FAIL
0005B7: 3503  			JBC		OV			; Check OV = 0?
0005B8: 5063  			JMP	INS_FAIL
0005B9: 3603  			JBC		N			; Check N = 0?
0005BA: 5063  			JMP	INS_FAIL
0005BB: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005BC: 40DD  			CALL	INST_XOR_JUDGE
0005BD: 601C  			MOV		A,@0x1C
0005BE: 0150  			MOV		INST,A
0005BF: 40DA  			CALL	STATUS_CLEAR
0005C0: 2803  			BS		C
0005C1: 60AA  			MOV		A,@0xAA
0005C2: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005C3: 2203  			BC		Z
0005C4: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005C5: 1003  			MOV		A,STATUS
0005C6: 6C58  			XOR		A,@0x58		; Check Status ?
0005C7: 40DD  			CALL	INST_XOR_JUDGE
0005C8: 1050  			MOV		A,0x50
0005C9: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005CA: 40DD  			CALL	INST_XOR_JUDGE
0005CB: 40DA  			CALL	STATUS_CLEAR
0005CC: 6055  			MOV		A,@0x55
0005CD: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005CE: 2203  			BC		Z
0005CF: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0005D0: 1003  			MOV		A,STATUS
0005D1: 6C19  			XOR		A,@0x19		; Check Status ?
0005D2: 3A03  			JBS		Z			; Check Z = 1?
0005D3: 5063  			JMP	INS_FAIL
0005D4: 3603  			JBC		N			; Check N = 0?
0005D5: 5063  			JMP	INS_FAIL
0005D6: 1050  			MOV		A,0x50
0005D7: 6C2A  			XOR		A,@0x2A		; Check Result ?
0005D8: 40DD  			CALL	INST_XOR_JUDGE
0005D9: 601D  			MOV		A,@0x1D
0005DA: 0150  			MOV		INST,A
0005DB: 40DA  			CALL STATUS_CLEAR
0005DC: 2803  			BS		C
0005DD: 6055  			MOV		A,@0x55
0005DE: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005DF: 1A50  			RLCA	0x50		; A = [0x50] << 1
0005E0: 3003  			JBC		C			; Check C = 0?
0005E1: 5063  			JMP	INS_FAIL
0005E2: 3103  			JBC		DC			; Check DC = 0?
0005E3: 5063  			JMP	INS_FAIL
0005E4: 3203  			JBC		Z			; Check Z = 0?
0005E5: 5063  			JMP	INS_FAIL
0005E6: 3503  			JBC		OV			; Check OV = 0?
0005E7: 5063  			JMP	INS_FAIL
0005E8: 3E03  			JBS		N			; Check N = 1?
0005E9: 5063  			JMP	INS_FAIL
0005EA: 6CAB  			XOR		A,@0xAB		; Check Result ?
0005EB: 40DD  			CALL	INST_XOR_JUDGE
0005EC: 40DA  			CALL	STATUS_CLEAR
0005ED: 60AA  			MOV		A,@0xAA
0005EE: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005EF: 1A50  			RLCA	0x50		; A = [0x50] << 1
0005F0: 3803  			JBS		C			; Check C = 1?
0005F1: 5063  			JMP	INS_FAIL
0005F2: 3103  			JBC		DC			; Check DC = 0?
0005F3: 5063  			JMP	INS_FAIL
0005F4: 3203  			JBC		Z			; Check Z = 0?
0005F5: 5063  			JMP	INS_FAIL
0005F6: 3503  			JBC		OV			; Check OV = 0?
0005F7: 5063  			JMP	INS_FAIL
0005F8: 3603  			JBC		N			; Check N = 0?
0005F9: 5063  			JMP	INS_FAIL
0005FA: 6C54  			XOR		A,@0x54		; Check Result ?
0005FB: 40DD  			CALL	INST_XOR_JUDGE
0005FC: 601E  			MOV		A,@0x1E
0005FD: 0150  			MOV		INST,A
0005FE: 40DA  			CALL	STATUS_CLEAR
0005FF: 2803  			BS		C
000600: 6055  			MOV		A,@0x55
000601: 0150  			MOV		0x50,A		; [0x50] = 0x55
000602: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000603: 1003  			MOV		A,STATUS
000604: 6C58  			XOR		A,@0x58		; Check Status ?
000605: 40DD  			CALL	INST_XOR_JUDGE
000606: 1050  			MOV		A,0x50
000607: 6CAB  			XOR		A,@0xAB		; Check Result ?
000608: 40DD  			CALL	INST_XOR_JUDGE
000609: 40DA  			CALL	STATUS_CLEAR
00060A: 60AA  			MOV		A,@0xAA
00060B: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00060C: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
00060D: 1003  			MOV		A,STATUS
00060E: 6C19  			XOR		A,@0x19		; Check Status ?
00060F: 40DD  			CALL	INST_XOR_JUDGE
000610: 1050  			MOV		A,0x50
000611: 6C54  			XOR		A,@0x54		; Check Result ?
000612: 40DD  			CALL	INST_XOR_JUDGE
000613: 602E  			MOV		A,@0x2E
000614: 0150  			MOV		INST,A
000615: 40DA  			CALL	STATUS_CLEAR
000616: 605A  			MOV		A,@0x5A
000617: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000618: 7250  			RLA		0x50		; A = [0x50] << 1
000619: 3003  			JBC		C			; Check C = 0?
00061A: 5063  			JMP	INS_FAIL
00061B: 3103  			JBC		DC			; Check DC = 0?
00061C: 5063  			JMP	INS_FAIL
00061D: 3203  			JBC		Z			; Check Z = 0?
00061E: 5063  			JMP	INS_FAIL
00061F: 3503  			JBC		OV			; Check OV = 0?
000620: 5063  			JMP	INS_FAIL
000621: 3E03  			JBS		N			; Check N = 1?
000622: 5063  			JMP	INS_FAIL
000623: 6CB4  			XOR		A,@0xB4		; Check Result ?
000624: 40DD  			CALL	INST_XOR_JUDGE
000625: 602F  			MOV		A,@0x2F
000626: 0150  			MOV		INST,A
000627: 40DA  			CALL	STATUS_CLEAR
000628: 605A  			MOV		A,@0x5A
000629: 0150  			MOV		0x50,A		; [0x50] = 0xA5
00062A: 7350  			RL		0x50		; [0x50] = [0x50] << 1
00062B: 1003  			MOV		A,STATUS
00062C: 6C58  			XOR		A,@0x58		; Check Status ?
00062D: 3A03  			JBS		Z			; Check Z = 1?
00062E: 5063  			JMP	INS_FAIL
00062F: 3603  			JBC		N			; Check N = 0?
000630: 5063  			JMP	INS_FAIL
000631: 1050  			MOV		A,0x50
000632: 6CB4  			XOR		A,@0xB4		; Check Result ?
000633: 40DD  			CALL	INST_XOR_JUDGE
000634: 602D  			MOV		A,@0x2D
000635: 0150  			MOV		INST,A
000636: 40DA  			CALL	STATUS_CLEAR
000637: 6055  			MOV		A,@0x55
000638: 0150  			MOV		0x50,A		; [0x50] = 0x55
000639: 60AA  			MOV		A,@0xAA
00063A: 7150  			XCH		0x50		; [0x50] <-> A
00063B: 6C55  			XOR		A,@0x55		; Check Result ?
00063C: 3A03  			JBS		Z			; Check Z = 1?
00063D: 5063  			JMP	INS_FAIL
00063E: 3603  			JBC		N			; Check N = 0?
00063F: 5063  			JMP	INS_FAIL
000640: 1050  			MOV		A,0x50
000641: 6CAA  			XOR		A,@0xAA		; Check Result ?
000642: 40DD  			CALL	INST_XOR_JUDGE
000643: 0012  		RET
000644: 6007  			MOV		A,@0x07
000645: 0150  			MOV		INST,A
000646: 40DA  			CALL	STATUS_CLEAR
000647: 60FF  			MOV		A,@0xFF
000648: 0150  			MOV		0x50,A
000649: 1003  			MOV		A,STATUS
00064A: 6C18  			XOR		A,@0x18		;At  OCDS
00064B: 40DD  			CALL	INST_XOR_JUDGE
00064C: 1050  			MOV		A,0x50
00064D: 6CFF  			XOR		A,@0xFF		; Check Result ?
00064E: 40DD  			CALL	INST_XOR_JUDGE
00064F: 6014  			MOV		A,@0x14
000650: 0150  			MOV		INST,A
000651: 40DA  			CALL	STATUS_CLEAR
000652: 6000  			MOV		A,@0x00
000653: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000654: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000655: 1003  			MOV		A,STATUS
000656: 6C1C  			XOR		A,@0x1C		; Check Status ?
000657: 3A03  			JBS		Z			; Check Z = 1?
000658: 5063  			JMP	INS_FAIL
000659: 3603  			JBC		N			; Check N = 0?
00065A: 5063  			JMP	INS_FAIL
00065B: 1050  			MOV		A,0x50
00065C: 2203  			BC		Z
00065D: 6C00  			XOR		A,@0x00		; Check Result ?
00065E: 3A03  			JBS		Z			; Check Z = 1?
00065F: 5063  			JMP	INS_FAIL
000660: 3603  			JBC		N			; Check N = 0?
000661: 5063  			JMP	INS_FAIL
000662: 40DA  			CALL	STATUS_CLEAR
000663: 6000  			MOV		A,@0x00
000664: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000665: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000666: 2850  			BS		0x50,0
000667: 1050  			MOV		A,0x50
000668: 6C01  			XOR		A,@0x01		; Check Result ?
000669: 40DD  			CALL	INST_XOR_JUDGE
00066A: 601F  			MOV		A,@0x1F
00066B: 0150  			MOV		INST,A
00066C: 40DA  			CALL	STATUS_CLEAR
00066D: 605A  			MOV		A,@0x5A
00066E: 0150  			MOV		0x50,A		; [0x50] = 0x5A
00066F: 1C50  			SWAPA	0x50
000670: 6CA5  			XOR		A,@0xA5		; Check Result ?
000671: 40DD  			CALL	INST_XOR_JUDGE
000672: 6020  			MOV		A,@0x20
000673: 0150  			MOV		INST,A
000674: 40DA  			CALL	STATUS_CLEAR
000675: 605A  			MOV		A,@0x5A
000676: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000677: 1D50  			SWAP	0x50
000678: 1050  			MOV		A,0x50
000679: 6CA5  			XOR		A,@0xA5		; Check Result ?
00067A: 40DD  			CALL	INST_XOR_JUDGE
00067B: 0012  		RET
00067C: 0012  		RET
00067D: 0012  		RET
00067E: 6004  			MOV		A,@0x04
00067F: 0150  			MOV		INST,A
000680: 0010  			ENI
000681: 3F03  			JBS		IT		; Check IT = 1?
000682: 5063  			JMP	INS_FAIL
000683: 6005  			MOV		A,@0x05
000684: 0150  			MOV		INST,A
000685: 0011  			DISI
000686: 3703  			JBC		IT		; Check IT = 0?
000687: 5063  			JMP	INS_FAIL
000688: 0012  		RET
000689: 6019  	MOV		A,@0x19
00068A: 0150  	MOV		INST,A
00068B: 6000  	MOV		A,@0x00
00068C: 0103  	MOV		STATUS,A
00068D: 6001  		MOV		A,@0x01
00068E: 0150  		MOV		0x50,A		; [0x50] = 0x01
00068F: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
000690: 5063  		JMP	INS_FAIL
000691: 6C00  		XOR		A,@0x00		; Check Result ?
000692: 3A03  		JBS		Z			; Check Z = 1?
000693: 5063  		JMP	INS_FAIL
000694: 3603  		JBC		N			; Check N = 0?
000695: 5063  		JMP	INS_FAIL
000696: 6000  	MOV		A,@0x00
000697: 0103  	MOV		STATUS,A
000698: 6002  		MOV		A,@0x02
000699: 0150  		MOV		0x50,A		; [0x50] = 0x02
00069A: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
00069B: 569D  		JMP		$+2
00069C: 5063  		JMP	INS_FAIL
00069D: 601A  	MOV		A,@0x1A
00069E: 0150  	MOV		INST,A
00069F: 6000  	MOV		A,@0x00
0006A0: 0103  	MOV		STATUS,A
0006A1: 6001  		MOV		A,@0x01
0006A2: 0150  		MOV		0x50,A		; [0x50] = 0x01
0006A3: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006A4: 5063  		JMP	INS_FAIL
0006A5: 1050  		MOV		A,0x50
0006A6: 6C00  		XOR		A,@0x00		; Check Result ?
0006A7: 3A03  		JBS		Z			; Check Z = 1?
0006A8: 5063  		JMP	INS_FAIL
0006A9: 3603  		JBC		N			; Check N = 0?
0006AA: 5063  		JMP	INS_FAIL
0006AB: 6000  	MOV		A,@0x00
0006AC: 0103  	MOV		STATUS,A
0006AD: 6002  		MOV		A,@0x02
0006AE: 0150  		MOV		0x50,A		; [0x50] = 0x02
0006AF: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006B0: 56B2  		JMP		$+2
0006B1: 5063  		JMP	INS_FAIL
0006B2: 6021  	MOV		A,@0x21
0006B3: 0150  	MOV		INST,A
0006B4: 6000  	MOV		A,@0x00
0006B5: 0103  	MOV		STATUS,A
0006B6: 60FF  		MOV		A,@0xFF
0006B7: 0150  		MOV		0x50,A
0006B8: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0006B9: 5063  		JMP		INS_FAIL
0006BA: 6C00  		XOR		A,@0x00		; Check Result ?
0006BB: 3A03  		JBS		Z			; Check Z = 1?
0006BC: 5063  		JMP	INS_FAIL
0006BD: 3603  		JBC		N			; Check N = 0?
0006BE: 5063  		JMP	INS_FAIL
0006BF: 6000  	MOV		A,@0x00
0006C0: 0103  	MOV		STATUS,A
0006C1: 6080  		MOV		A,@0x80
0006C2: 0150  		MOV		0x50,A
0006C3: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
0006C4: 56C6  		JMP		$+2
0006C5: 5063  		JMP		INS_FAIL
0006C6: 6022  	MOV		A,@0x22
0006C7: 0150  	MOV		INST,A
0006C8: 6000  	MOV		A,@0x00
0006C9: 0103  	MOV		STATUS,A
0006CA: 60FF  		MOV		A,@0xFF
0006CB: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006CC: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006CD: 5063  		JMP		INS_FAIL
0006CE: 1050  		MOV		A,0x50
0006CF: 6C00  		XOR		A,@0x00		; Check Result ?
0006D0: 3A03  		JBS		Z			; Check Z = 1?
0006D1: 5063  		JMP	INS_FAIL
0006D2: 3603  		JBC		N			; Check N = 0?
0006D3: 5063  		JMP	INS_FAIL
0006D4: 6000  	MOV		A,@0x00
0006D5: 0103  	MOV		STATUS,A
0006D6: 6080  		MOV		A,@0x80
0006D7: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006D8: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006D9: 56DB  		JMP		$+2
0006DA: 5063  		JMP		INS_FAIL
0006DB: 6023  	MOV		A,@0x23
0006DC: 0150  	MOV		INST,A
0006DD: 6000  	MOV		A,@0x00
0006DE: 0103  	MOV		STATUS,A
0006DF: 605A  		MOV		A,@0x5A
0006E0: 0150  		MOV		0x50,A		; [0x50] = 0x5A
0006E1: 6150  		JE		0x50		; [0x50] = A?
0006E2: 5063  		JMP		INS_FAIL
0006E3: 605B  		MOV		A,@0x5B
0006E4: 0150  		MOV		0x50,A		; [0x50] = 0x5B
0006E5: 605C  		MOV		A,@0x5C
0006E6: 6150  		JE		0x50		; [0x50] = A(0x5C)?
0006E7: 56E9  		JMP		$+2
0006E8: 5063  		JMP		INS_FAIL
0006E9: 6024  	MOV		A,@0x24
0006EA: 0150  	MOV		INST,A
0006EB: 6000  	MOV		A,@0x00
0006EC: 0103  	MOV		STATUS,A
0006ED: 607F  		MOV		A,@0x7F
0006EE: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0006EF: 6000  		MOV		A,@0x00
0006F0: 6250  		JGE		0x50		; [0x50] > A ?
0006F1: 5063  		JMP		INS_FAIL
0006F2: 6000  	MOV		A,@0x00
0006F3: 0103  	MOV		STATUS,A
0006F4: 60FF  		MOV		A,@0xFF
0006F5: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0006F6: 6080  		MOV		A,@0x80
0006F7: 6250  		JGE		0x50		; [0x50] > A ?
0006F8: 5063  		JMP		INS_FAIL
0006F9: 6000  	MOV		A,@0x00
0006FA: 0103  	MOV		STATUS,A
0006FB: 6000  		MOV		A,@0x00
0006FC: 0150  		MOV		0x50,A		; [0x50] = 0x00
0006FD: 60FF  		MOV		A,@0xFF
0006FE: 6250  		JGE		0x50		; [0x50] > A(0xFF) ?x
0006FF: 5701  		JMP		$+2
000700: 5063  		JMP		INS_FAIL
000701: 6025  	MOV		A,@0x25
000702: 0150  	MOV		INST,A
000703: 6000  	MOV		A,@0x00
000704: 0103  	MOV		STATUS,A
000705: 6000  		MOV		A,@0x00
000706: 0150  		MOV		0x50,A		; [0x50] = 0x00
000707: 607F  		MOV		A,@0x7F
000708: 6350  		JLE		0x50		; [0x50] < A ?
000709: 5063  		JMP		INS_FAIL
00070A: 6000  	MOV		A,@0x00
00070B: 0103  	MOV		STATUS,A
00070C: 6080  		MOV		A,@0x80
00070D: 0150  		MOV		0x50,A		; [0x50] = 0x80
00070E: 60FF  		MOV		A,@0xFF
00070F: 6350  		JLE		0x50		; [0x50] < A ?
000710: 5063  		JMP		INS_FAIL
000711: 6000  	MOV		A,@0x00
000712: 0103  	MOV		STATUS,A
000713: 60FF  		MOV		A,@0xFF
000714: 0150  		MOV		0x50,A		; [0x50] = 0xFF
000715: 6000  		MOV		A,@0x00
000716: 6350  		JLE		0x50		; [0x50] < A(0x00) ?x
000717: 5719  		JMP		$+2
000718: 5063  		JMP		INS_FAIL
000719: 6027  	MOV		A,@0x27
00071A: 0150  	MOV		INST,A
00071B: 6000  	MOV		A,@0x00
00071C: 0103  	MOV		STATUS,A
00071D: 607F  		MOV		A,@0x7F
00071E: 657F  		JE		@0x7F
00071F: 5063  		JMP	INS_FAIL
000720: 6036  	MOV		A,@0x36
000721: 0150  	MOV		INST,A
000722: 6000  	MOV		A,@0x00
000723: 0103  	MOV		STATUS,A
000724: 2803  		BS		C
000725: 607F  		MOV		A,@0x7F
000726: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000727: 6000  		MOV		A,@0x00		; A = 0x00
000728: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
000729: 3003  		JBC		C			; Check C = 0?
00072A: 5063  		JMP	INS_FAIL
00072B: 3903  		JBS		DC			; Check DC = 1?
00072C: 5063  		JMP	INS_FAIL
00072D: 3203  		JBC		Z			; Check Z = 0?
00072E: 5063  		JMP	INS_FAIL
00072F: 3D03  		JBS		OV			; Check OV = 1?
000730: 5063  		JMP	INS_FAIL
000731: 3E03  		JBS		N			; Check N = 1?
000732: 5063  		JMP	INS_FAIL
000733: 6C80  		XOR		A,@0x80		; Check Result ?
000734: 3A03  		JBS		Z			; Check Z = 1?
000735: 5063  		JMP	INS_FAIL
000736: 3603  		JBC		N			; Check N = 0?
000737: 5063  		JMP	INS_FAIL
000738: 6000  	MOV		A,@0x00
000739: 0103  	MOV		STATUS,A
00073A: 2803  		BS		C
00073B: 6080  		MOV		A,@0x80
00073C: 0150  		MOV		0x50,A		; [0x50] = 0x80
00073D: 607F  		MOV		A,@0x7F		; A = 0x7F
00073E: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
00073F: 3803  		JBS		C			; Check C = 1?
000740: 5063  		JMP	INS_FAIL
000741: 3903  		JBS		DC			; Check DC = 1?
000742: 5063  		JMP	INS_FAIL
000743: 3A03  		JBS		Z			; Check Z = 1?
000744: 5063  		JMP	INS_FAIL
000745: 3503  		JBC		OV			; Check OV = 0?
000746: 5063  		JMP	INS_FAIL
000747: 3603  		JBC		N			; Check N = 0?
000748: 5063  		JMP	INS_FAIL
000749: 6C00  		XOR		A,@0x00		; Check Result ?
00074A: 3A03  		JBS		Z			; Check Z = 1?
00074B: 5063  		JMP	INS_FAIL
00074C: 3603  		JBC		N			; Check N = 0?
00074D: 5063  		JMP	INS_FAIL
00074E: 6037  	MOV		A,@0x37
00074F: 0150  	MOV		INST,A
000750: 6000  	MOV		A,@0x00
000751: 0103  	MOV		STATUS,A
000752: 2803  		BS		C
000753: 607F  		MOV		A,@0x7F
000754: 0150  		MOV		0x50,A		; [0x50] = 0x7F
000755: 6000  		MOV		A,@0x00		; A = 0x00
000756: 2203  		BC		Z
000757: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
000758: 1003  		MOV		A,STATUS
000759: 6C7A  		XOR		A,@0x7A		; Check Status ?
00075A: 3A03  		JBS		Z			; Check Z = 1?
00075B: 5063  		JMP	INS_FAIL
00075C: 3603  		JBC		N			; Check N = 0?
00075D: 5063  		JMP	INS_FAIL
00075E: 1050  		MOV		A,0x50
00075F: 6C80  		XOR		A,@0x80		; Check Result ?
000760: 3A03  		JBS		Z			; Check Z = 1?
000761: 5063  		JMP	INS_FAIL
000762: 3603  		JBC		N			; Check N = 0?
000763: 5063  		JMP	INS_FAIL
000764: 6000  	MOV		A,@0x00
000765: 0103  	MOV		STATUS,A
000766: 2803  		BS		C
000767: 6080  		MOV		A,@0x80
000768: 0150  		MOV		0x50,A		; [0x50] = 0x80
000769: 607F  		MOV		A,@0x7F		; A = 0x7F
00076A: 2203  		BC		Z
00076B: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
00076C: 1003  		MOV		A,STATUS
00076D: 6C1F  		XOR		A,@0x1F		; Check Status ?
00076E: 3A03  		JBS		Z			; Check Z = 1?
00076F: 5063  		JMP	INS_FAIL
000770: 3603  		JBC		N			; Check N = 0?
000771: 5063  		JMP	INS_FAIL
000772: 1050  		MOV		A,0x50
000773: 6C00  		XOR		A,@0x00		; Check Result ?
000774: 3A03  		JBS		Z			; Check Z = 1?
000775: 5063  		JMP	INS_FAIL
000776: 3603  		JBC		N			; Check N = 0?
000777: 5063  		JMP	INS_FAIL
000778: 0000  		NOP
000779: 0000  		NOP
00077A: 0000  		NOP
00077B: 0000  		NOP
00077C: 6000  	MOV		A,@0x00
00077D: 0103  	MOV		STATUS,A
00077E: 2803  		BS	C
00077F: 6903  		SJC		@0x03
000780: 505F  		JMP	JMP_FAIL
000781: 505F  		JMP	JMP_FAIL
000782: 505F  		JMP	JMP_FAIL
000783: 2003  		BC	C
000784: 6A03  		SJNC	bbb
000785: 505F  		JMP	JMP_FAIL
000786: 505F  		JMP	JMP_FAIL
000787: 505F  		JMP	JMP_FAIL
000788: 2A03  		BS	Z
000789: 6B03  		SJZ		@0x03
00078A: 505F  		JMP	JMP_FAIL
00078B: 505F  		JMP	JMP_FAIL
00078C: 505F  		JMP	JMP_FAIL
00078D: 0200  		CLRA
00078E: 6B03  		SJZ		@0x03
00078F: 505F  		JMP	JMP_FAIL
000790: 505F  		JMP	JMP_FAIL
000791: 505F  		JMP	JMP_FAIL
000792: 579A  		JMP	IATEST1
000793: 57A7  		JMP	IATEST2		; -9
000794: 505F  		JMP	JMP_FAIL	; -8
000795: 505F  		JMP	JMP_FAIL	; -7
000796: 505F  		JMP	JMP_FAIL	; -6
000797: 505F  		JMP	JMP_FAIL	; -5
000798: 505F  		JMP	JMP_FAIL	; -4
000799: 505F  		JMP	JMP_FAIL	; -3
00079A: 2803  		BS		C		; -2
00079B: 69F7  		SJC		aaa		; -1
00079C: 69F7  		SJC		@0xF7	; -1
00079D: 505F  		JMP	JMP_FAIL
00079E: 505F  		JMP	JMP_FAIL
00079F: 505F  		JMP	JMP_FAIL
0007A0: 57B3  		JMP	IATEST3		; -9
0007A1: 505F  		JMP	JMP_FAIL	; -8
0007A2: 505F  		JMP	JMP_FAIL	; -7
0007A3: 505F  		JMP	JMP_FAIL	; -6
0007A4: 505F  		JMP	JMP_FAIL	; -5
0007A5: 505F  		JMP	JMP_FAIL	; -4
0007A6: 505F  		JMP	JMP_FAIL	; -3
0007A7: 2003  		BC		C		; -2
0007A8: 6AF7  		SJNC		@0xF7	; -1
0007A9: 57C4  		JMP	_IPass
0007AA: 57C4  		JMP	_IPass
0007AB: 57C4  		JMP	_IPass
0007AC: 57BF  		JMP	IATEST4		; -9
0007AD: 505F  		JMP	JMP_FAIL	; -8
0007AE: 505F  		JMP	JMP_FAIL	; -7
0007AF: 505F  		JMP	JMP_FAIL	; -6
0007B0: 505F  		JMP	JMP_FAIL	; -5
0007B1: 505F  		JMP	JMP_FAIL	; -4
0007B2: 505F  		JMP	JMP_FAIL	; -3
0007B3: 2A03  		BS		Z		; -2
0007B4: 6BF7  		SJZ		@0xF7	; -1
0007B5: 505F  		JMP	JMP_FAIL
0007B6: 505F  		JMP	JMP_FAIL
0007B7: 505F  		JMP	JMP_FAIL
0007B8: 57C4  		JMP	_IPass		; -9
0007B9: 505F  		JMP	JMP_FAIL	; -8
0007BA: 505F  		JMP	JMP_FAIL	; -7
0007BB: 505F  		JMP	JMP_FAIL	; -6
0007BC: 505F  		JMP	JMP_FAIL	; -5
0007BD: 505F  		JMP	JMP_FAIL	; -4
0007BE: 505F  		JMP	JMP_FAIL	; -3
0007BF: 2203  		BC		Z		; -2
0007C0: 6DF7  		SJNZ	@0xF7	; -1
0007C1: 505F  		JMP	JMP_FAIL
0007C2: 505F  		JMP	JMP_FAIL
0007C3: 505F  		JMP	JMP_FAIL
0007C4: 0000  		NOP
0007C5: 7A41  	GBANK   1
0007C6: 6050  	MOV		A,@0x50
0007C7: 0104  	MOV		RSR,A			; Start Address
0007C8: 60AF  	MOV		A,@0xAF			; For count from 0x50~0xFF
0007C9: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF, count value
0007CA: 6055  	MOV		A,@0x55			; IAR = 0x55
0007CB: 0100  	MOV		IAR,A			; Write IAR to [RSR]
0007CC: 1504  	INC		RSR				; RSR = RSR + 1
0007CD: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
0007CE: 57CA  	JMP		LOOP1			; Until [0xFF] = 0
0007CF: 6050  	MOV		A,@0x50
0007D0: 0104  	MOV		RSR,A
0007D1: 60AF  	MOV		A,@0xAF
0007D2: 01FF  	MOV		0xFF,A
0007D3: 60AA  	MOV		A,@0xAA
0007D4: 1300  	COM		IAR				; IAR = ~IAR
0007D5: 0D00  	XOR		IAR,A
0007D6: 3A03  	JBS		Z
0007D7: 5061  	JMP		RAM_FAIL
0007D8: 1504  	INC		RSR				; RSR = RSR + 1
0007D9: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
0007DA: 57D3  	JMP		CHECK1			; Until [0xFF] = 0
0007DB: 6050  	MOV		A,@0x50
0007DC: 0104  	MOV		RSR,A			; Start Address
0007DD: 60AF  	MOV		A,@0xAF			; For count from 0x50~0xFF
0007DE: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF, count value
0007DF: 60AA  	MOV		A,@0xAA			; IAR = 0xAA
0007E0: 0100  	MOV		IAR,A			; Write IAR to [RSR]
0007E1: 1504  	INC		RSR				; RSR = RSR + 1
0007E2: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
0007E3: 57DF  	JMP		LOOP2			; Until  [0xFF] = 0	
0007E4: 6050  	MOV		A,@0x50
0007E5: 0104  	MOV		RSR,A			; RSR = 0x50
0007E6: 60AF  	MOV		A,@0xAF
0007E7: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF
0007E8: 60AA  	MOV		A,@0xAA
0007E9: 0D00  	XOR		IAR,A
0007EA: 3A03  	JBS		Z
0007EB: 5061  	JMP		RAM_FAIL
0007EC: 1504  	INC		RSR
0007ED: 17FF  	DJZ		0xFF
0007EE: 57E8  	JMP		CHECK2			; Until [0xFF] = 0
0007EF: 0000  	NOP
