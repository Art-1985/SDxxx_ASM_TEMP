****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X7EB  , End=0X7FF  , Size=21
Start=0X803  , End=0XEEF  , Size=1773
Start=0XEF9  , End=0XEFF  , Size=7
Start=0XF5C  , End=0XFFD  , Size=162
----------------------------------------
MTF351          |        ROM Size        
----------------+-----------------------
Total           |  4096 x 16 bits(100.0%)
Used            |  2132 x 16 bits( 52.1%)
Free            |  1964 x 16 bits( 47.9%)
----------------------------------------
****************************************
The Checksum is -- 0x133D
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 506A  	JMP 	JMP_FAIL	;0x0002
000003: 506A  	JMP 	JMP_FAIL	;0x0003
000004: 506A  	JMP 	JMP_FAIL	;0x0004
000005: 506A  	JMP 	JMP_FAIL	;0x0005
000006: 506A  	JMP 	JMP_FAIL	;0x0006
000007: 506A  	JMP 	JMP_FAIL	;0x0007
000008: 506A  	JMP 	JMP_FAIL	;0x0008
000009: 506A  	JMP 	JMP_FAIL	;0x0009
00000A: 506A  	JMP 	JMP_FAIL	;0x000A
00000B: 506A  	JMP 	JMP_FAIL	;0x000B
00000C: 506A  	JMP 	JMP_FAIL	;0x000C
00000D: 506A  	JMP 	JMP_FAIL	;0x000D
00000E: 506A  	JMP 	JMP_FAIL	;0x000E
00000F: 506A  	JMP 	JMP_FAIL	;0x000F
000010: 506A  	JMP 	JMP_FAIL	;0x0010
000011: 506A  	JMP 	JMP_FAIL	;0x0011
000012: 506A  	JMP 	JMP_FAIL	;0x0012
000013: 506A  	JMP 	JMP_FAIL	;0x0013
000014: 506A  	JMP 	JMP_FAIL	;0x0014
000015: 506A  	JMP 	JMP_FAIL	;0x0015
000016: 506A  	JMP 	JMP_FAIL	;0x0016
000017: 506A  	JMP 	JMP_FAIL	;0x0017
000018: 506A  	JMP 	JMP_FAIL	;0x0018
000019: 506A  	JMP 	JMP_FAIL	;0x0019
00001A: 506A  	JMP 	JMP_FAIL	;0x001A
00001B: 506A  	JMP 	JMP_FAIL	;0x001B
00001C: 506A  	JMP 	JMP_FAIL	;0x001C
00001D: 506A  	JMP 	JMP_FAIL	;0x001D
00001E: 506A  	JMP 	JMP_FAIL	;0x001E
00001F: 506A  	JMP 	JMP_FAIL	;0x001F
000020: 506A  	JMP 	JMP_FAIL	;0x0020
000021: 506A  	JMP 	JMP_FAIL	;0x0021
000022: 506A  	JMP 	JMP_FAIL	;0x0022
000023: 506A  	JMP 	JMP_FAIL	;0x0023
000024: 506A  	JMP 	JMP_FAIL	;0x0024
000025: 506A  	JMP 	JMP_FAIL	;0x0025
000026: 506A  	JMP 	JMP_FAIL	;0x0026
000027: 506A  	JMP 	JMP_FAIL	;0x0027
000028: 506A  	JMP 	JMP_FAIL	;0x0028
000029: 506A  	JMP 	JMP_FAIL	;0x0029
00002A: 506A  	JMP 	JMP_FAIL	;0x002A
00002B: 506A  	JMP 	JMP_FAIL	;0x002B
00002C: 506A  	JMP 	JMP_FAIL	;0x002C
00002D: 506A  	JMP 	JMP_FAIL	;0x002D
00002E: 506A  	JMP 	JMP_FAIL	;0x002E
00002F: 506A  	JMP 	JMP_FAIL	;0x002F
000030: 506A  	JMP 	JMP_FAIL	;0x0030
000031: 506A  	JMP 	JMP_FAIL	;0x0031
000032: 506A  	JMP 	JMP_FAIL	;0x0032
000033: 506A  	JMP 	JMP_FAIL	;0x0033
000034: 506A  	JMP 	JMP_FAIL	;0x0034
000035: 506A  	JMP 	JMP_FAIL	;0x0035
000036: 506A  	JMP 	JMP_FAIL	;0x0036
000037: 506A  	JMP 	JMP_FAIL	;0x0037
000038: 506A  	JMP 	JMP_FAIL	;0x0038
000039: 506A  	JMP 	JMP_FAIL	;0x0039
00003A: 506A  	JMP 	JMP_FAIL	;0x003A
00003B: 506A  	JMP 	JMP_FAIL	;0x003B
00003C: 506A  	JMP 	JMP_FAIL	;0x003C
00003D: 506A  	JMP 	JMP_FAIL	;0x003D
00003E: 506A  	JMP 	JMP_FAIL	;0x003E
00003F: 506A  	JMP 	JMP_FAIL	;0x003F
000040: 506A  	JMP 	JMP_FAIL	;0x0040
000041: 506A  	JMP 	JMP_FAIL	;0x0041
000042: 506A  	JMP 	JMP_FAIL	;0x0042
000043: 506A  	JMP 	JMP_FAIL	;0x0043
000044: 506A  	JMP 	JMP_FAIL	;0x0044
000045: 506A  	JMP 	JMP_FAIL	;0x0045
000046: 506A  	JMP 	JMP_FAIL	;0x0046
000047: 506A  	JMP 	JMP_FAIL	;0x0047
000048: 506A  	JMP 	JMP_FAIL	;0x0048
000049: 506A  	JMP 	JMP_FAIL	;0x0049
00004A: 506A  	JMP 	JMP_FAIL	;0x004A
00004B: 506A  	JMP 	JMP_FAIL	;0x004B
00004C: 506A  	JMP 	JMP_FAIL	;0x004C
00004D: 506A  	JMP 	JMP_FAIL	;0x004D
00004E: 506A  	JMP 	JMP_FAIL	;0x004E
00004F: 506A  	JMP 	JMP_FAIL	;0x004F
000050: 407C  	CALL	SYS_INIT
000051: 4087  	CALL	GPIO_INIT
000052: 40B7  	CALL	RAM_SHA_INIT
000053: 40CC  	CALL	RAM_IND_INIT
000054: 7A00  	SBANK	0
000055: 40EB  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000056: 4495  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000057: 45C4  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000058: 468C  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
000059: 46C4  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005A: 46C5  	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
00005B: 4704  	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
00005C: 4743  	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
00005D: 476A  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
00005E: 4775  	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
00005F: 47BE  	CALL	TEST_READ_ROM			;TBRD, TBRDA
000060: 4F00  	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
000061: 4F17  	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
000062: 4F2E  	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
000063: 4F45  	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
000064: 0085  	BTG		P5,0
000065: 2105  	BC		P5,1
000066: 2A05  	BS		P5,2
000067: 2305  	BC		P5,3
000068: 2C05  	BS		P5,4	
000069: 5054  	JMP		BACK_GROUND_LOOP
00006A: 7A00  	SBANK	0
00006B: 2905  	BS		P5,1
00006C: 2205  	BC		P5,2
00006D: 2B05  	BS		P5,3
00006E: 2405  	BC		P5,4
00006F: 506A  	JMP		JMP_FAIL
000070: 7A00  	SBANK	0
000071: 2905  	BS		P5,1
000072: 2205  	BC		P5,2
000073: 2B05  	BS		P5,3
000074: 2405  	BC		P5,4
000075: 5070  	JMP		RAM_FAIL
000076: 7A00  	SBANK	0
000077: 2905  	BS		P5,1
000078: 2205  	BC		P5,2
000079: 2B05  	BS		P5,3
00007A: 2405  	BC		P5,4	
00007B: 5076  	JMP		INS_FAIL
00007C: 7A00  		SBANK	0
00007D: 260E  		BC		IDLE	;SLEEP_MODE
00007E: 6000  		MOV		A,@0x00
00007F: 0114  		MOV		SFR1,A
000080: 0117  		MOV		SFR4,A
000081: 0119  		MOV		SFR6,A
000082: 7A03  		SBANK	3
000083: 6000  		MOV		A,@0x00
000084: 014C  		MOV		SFR9,A
000085: 014D  		MOV		SFR10,A
000086: 0012  		RET
000087: 7A00  		SBANK	0
000088: 0305  		CLR		P5
000089: 60E0  		MOV		A,@0xE0
00008A: 010B  		MOV		IOCR5,A
00008B: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00008C: 0105  		MOV		P5,A
00008D: 0012  		RET
00008E: 7A00  		SBANK	0
00008F: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000090: 5093  		JMP		$+3
000091: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000092: 0003  		SLEP
000093: 3B03  		JBS		P
000094: 5097  		JMP		$+3
000095: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000096: 0003  		SLEP
000097: 3B03  		JBS		P
000098: 509B  		JMP		$+3
000099: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
00009A: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
00009B: 0003  		SLEP		
00009C: 0012  		RET
00009D: 3D05  		JBS		P5,5		; Push, or not
00009E: 50A0  		JMP		$+2
00009F: 509D  		JMP		$-2
0000A0: 3D05  		JBS		P5,5
0000A1: 509D  		JMP		KEY_DEBOUNCE
0000A2: 3D05  		JBS		P5,5
0000A3: 509D  		JMP		KEY_DEBOUNCE
0000A4: 3D05  		JBS		P5,5
0000A5: 509D  		JMP		KEY_DEBOUNCE
0000A6: 3D05  		JBS		P5,5
0000A7: 509D  		JMP		KEY_DEBOUNCE
0000A8: 3D05  		JBS		P5,5
0000A9: 509D  		JMP		KEY_DEBOUNCE
0000AA: 3D05  		JBS		P5,5
0000AB: 509D  		JMP		KEY_DEBOUNCE
0000AC: 3D05  		JBS		P5,5
0000AD: 509D  		JMP		KEY_DEBOUNCE
0000AE: 3D05  		JBS		P5,5
0000AF: 509D  		JMP		KEY_DEBOUNCE
0000B0: 3D05  		JBS		P5,5
0000B1: 509D  		JMP		KEY_DEBOUNCE
0000B2: 3D05  		JBS		P5,5
0000B3: 50B1  		JMP		$-2
0000B4: 60FF  		MOV		A,@0xFF		; Turn Off all LED
0000B5: 0105  		MOV		P5,A		
0000B6: 0012  		RET
0000B7: 6050  		MOV		A,@0x50
0000B8: 0104  		MOV		RSR,A
0000B9: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
0000BA: 0100  		MOV		IAR,A
0000BB: 1504  		INC		RSR
0000BC: 6080  		MOV		A,@0x80
0000BD: 0C04  		XOR		A,RSR
0000BE: 3A03  		JBS		Z
0000BF: 50B9  		JMP		$-6
0000C0: 6050  		MOV		A,@0x50
0000C1: 0104  		MOV		RSR,A
0000C2: 60FF  		MOV		A,@0xFF
0000C3: 0C00  		XOR		A,IAR
0000C4: 3A03  		JBS		Z
0000C5: 5070  		JMP		RAM_FAIL
0000C6: 1504  		INC		RSR
0000C7: 6080  		MOV		A,@0x80
0000C8: 0C04  		XOR		A,RSR
0000C9: 3A03  		JBS		Z
0000CA: 50C2  		JMP		$-8
0000CB: 0012  		RET
0000CC: 6080  		MOV		A,@0x80
0000CD: 0104  		MOV		RSR,A
0000CE: 7A40  		GBANK	0
0000CF: 60FF  		MOV		A,@0xFF
0000D0: 0100  		MOV		IAR,A
0000D1: 1504  		INC		RSR
0000D2: 6000  		MOV		A,@0x00
0000D3: 0C04  		XOR		A,RSR
0000D4: 3A03  		JBS		Z
0000D5: 50CE  		JMP		RAM_IND_LOOP_0
0000D6: 6080  		MOV		A,@0x80
0000D7: 0104  		MOV		RSR,A
0000D8: 7A41  		GBANK	1
0000D9: 60FF  		MOV		A,@0xFF
0000DA: 0100  		MOV		IAR,A
0000DB: 1504  		INC		RSR
0000DC: 6000  		MOV		A,@0x00
0000DD: 0C04  		XOR		A,RSR
0000DE: 3A03  		JBS		Z
0000DF: 50D8  		JMP		RAM_IND_LOOP_1
0000E0: 6080  		MOV		A,@0x80
0000E1: 0104  		MOV		RSR,A
0000E2: 0012  		RET
0000E3: 6000  		MOV		A,@0x00
0000E4: 0103  		MOV		STATUS,A
0000E5: 0012  		RET
0000E6: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000E7: 5076  		JMP		INS_FAIL
0000E8: 3603  		JBC		N			; IF(N=0) BRANCH
0000E9: 5076  		JMP		INS_FAIL
0000EA: 0012  		RET
0000EB: 6001  			MOV		A,@0x01
0000EC: 015A  			MOV		INST,A
0000ED: 40E3  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000EE: 60AA  			MOV		A,@0xAA
0000EF: 0001  			DAA
0000F0: 3803  			JBS		C			; Check C = 1?
0000F1: 5076  			JMP	INS_FAIL
0000F2: 3103  			JBC		DC			; Check DC = 0?
0000F3: 5076  			JMP	INS_FAIL
0000F4: 3203  			JBC		Z			; Check Z = 0?
0000F5: 5076  			JMP	INS_FAIL
0000F6: 3503  			JBC		OV			; Check OV = 0?
0000F7: 5076  			JMP	INS_FAIL
0000F8: 3603  			JBC		N			; Check N = 0?
0000F9: 5076  			JMP	INS_FAIL
0000FA: 6C10  			XOR		A,@0x10		; Check Result ?
0000FB: 3A03  			JBS		Z			; Check Z = 1?
0000FC: 5076  			JMP	INS_FAIL
0000FD: 3603  			JBC		N			; Check N = 0?
0000FE: 5076  			JMP	INS_FAIL
0000FF: 40E3  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
000100: 6080  			MOV		A,@0x80
000101: 0150  			MOV		0x50,A		; [0x50] = 0x80
000102: 607F  			MOV		A,@0x7F		; 
000103: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
000104: 0001  			DAA
000105: 3803  			JBS		C			; Check C = 1?
000106: 5076  			JMP	INS_FAIL
000107: 3103  			JBC		DC			; Check DC = 0?
000108: 5076  			JMP	INS_FAIL
000109: 3203  			JBC		Z			; Check Z = 0?
00010A: 5076  			JMP	INS_FAIL
00010B: 3503  			JBC		OV			; Check OV = 0?
00010C: 5076  			JMP	INS_FAIL
00010D: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
00010E: 5076  			JMP	INS_FAIL
00010F: 2203  			BC		Z
000110: 2603  			BC		N
000111: 6C65  			XOR		A,@0x65		; Check Result ?
000112: 3A03  			JBS		Z			; Check Z = 1?
000113: 5076  			JMP	INS_FAIL
000114: 3603  			JBC		N			; Check N = 0?
000115: 5076  			JMP	INS_FAIL
000116: 0000  			NOP
000117: 6000  			MOV		A,@0x00
000118: 0103  			MOV		STATUS,A
000119: 2803  			BS		C
00011A: 6080  			MOV		A,@0x80
00011B: 0150  			MOV		0x50,A		; [0x50] = 0x80
00011C: 607F  			MOV		A,@0x7F		; 
00011D: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
00011E: 0001  			DAA
00011F: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000120: 5076  			JMP	INS_FAIL
000121: 3903  			JBS		DC			; Check DC = 1? / By ADC
000122: 5076  			JMP	INS_FAIL
000123: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
000124: 5076  			JMP	INS_FAIL
000125: 3503  			JBC		OV			; Check OV = 0?
000126: 5076  			JMP	INS_FAIL
000127: 3603  			JBC		N			; Check N = 0?
000128: 5076  			JMP	INS_FAIL
000129: 6C66  			XOR		A,@0x66		; Check Result ?
00012A: 3A03  			JBS		Z			; Check Z = 1?
00012B: 5076  			JMP	INS_FAIL
00012C: 3603  			JBC		N			; Check N = 0?
00012D: 5076  			JMP	INS_FAIL
00012E: 6000  			MOV		A,@0x00
00012F: 0103  			MOV		STATUS,A
000130: 60FF  			MOV		A,@0xFF
000131: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000132: 607F  			MOV		A,@0x7F		; 
000133: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
000134: 0001  			DAA
000135: 3803  			JBS		C			; Check C = 1? 	/ By SUB
000136: 5076  			JMP	INS_FAIL
000137: 3903  			JBS		DC			; Check DC = 1? / By SUB
000138: 5076  			JMP	INS_FAIL
000139: 3203  			JBC		Z			; Check Z = 0?
00013A: 5076  			JMP	INS_FAIL
00013B: 3503  			JBC		OV			; Check OV = 0?
00013C: 5076  			JMP	INS_FAIL
00013D: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
00013E: 5076  			JMP	INS_FAIL
00013F: 2203  			BC		Z
000140: 2603  			BC		N
000141: 6CE6  			XOR		A,@0xE6		; Check Result ?
000142: 3A03  			JBS		Z			; Check Z = 1?
000143: 5076  			JMP	INS_FAIL
000144: 3603  			JBC		N			; Check N = 0?
000145: 5076  			JMP	INS_FAIL
000146: 6008  			MOV		A,@0x08
000147: 015A  			MOV		INST,A
000148: 605A  			MOV		A,@0x5A
000149: 6C5A  			XOR		A,@0x5A		; Check Result ?
00014A: 3A03  			JBS		Z			; Check Z = 1?
00014B: 5076  			JMP	INS_FAIL
00014C: 3603  			JBC		N			; Check N = 0?
00014D: 5076  			JMP	INS_FAIL
00014E: 605A  			MOV		A,@0x5A
00014F: 0200  			CLRA
000150: 3A03  			JBS		Z			; Check Z = 1?
000151: 5076  			JMP	INS_FAIL
000152: 2203  			BC		Z
000153: 6C00  			XOR		A,@0x00		; Check Result ?
000154: 3A03  			JBS		Z			; Check Z = 1?
000155: 5076  			JMP	INS_FAIL
000156: 3603  			JBC		N			; Check N = 0?
000157: 5076  			JMP	INS_FAIL
000158: 6009  			MOV		A,@0x09
000159: 015A  			MOV		INST,A
00015A: 60AA  			MOV		A,@0xAA
00015B: 0150  			MOV		0x50,A
00015C: 1050  			MOV		A,0x50
00015D: 6CAA  			XOR		A,@0xAA		; Check Result ?
00015E: 3A03  			JBS		Z			; Check Z = 1?
00015F: 5076  			JMP	INS_FAIL
000160: 3603  			JBC		N			; Check N = 0?
000161: 5076  			JMP	INS_FAIL
000162: 0350  			CLR		0x50
000163: 3A03  			JBS		Z			; Check Z = 1?
000164: 5076  			JMP	INS_FAIL
000165: 2203  			BC		Z
000166: 1050  			MOV		A,0x50
000167: 6C00  			XOR		A,@0x00		; Check Result ?
000168: 3A03  			JBS		Z			; Check Z = 1?
000169: 5076  			JMP	INS_FAIL
00016A: 3603  			JBC		N			; Check N = 0?
00016B: 5076  			JMP	INS_FAIL
00016C: 600A  			MOV		A,@0x0A
00016D: 015A  			MOV		INST,A
00016E: 6000  			MOV		A,@0x00
00016F: 0103  			MOV		STATUS,A
000170: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000171: 0150  			MOV		0x50,A		; [0x50] = 0x02
000172: 6001  			MOV		A,@0x01
000173: 0450  			SUB		A,0x50		; A = [0x50] - A
000174: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
000175: 5076  			JMP	INS_FAIL
000176: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000177: 5076  			JMP	INS_FAIL
000178: 3203  			JBC		Z			; Check Z = 0?
000179: 5076  			JMP	INS_FAIL
00017A: 3503  			JBC		OV			; Check OV = 0?
00017B: 5076  			JMP	INS_FAIL
00017C: 3603  			JBC		N			; Check N = 0?
00017D: 5076  			JMP	INS_FAIL
00017E: 2203  			BC		Z
00017F: 6C01  			XOR		A,@0x01		; Check Result ?
000180: 3A03  			JBS		Z			; Check Z = 1?
000181: 5076  			JMP	INS_FAIL
000182: 3603  			JBC		N			; Check N = 0?
000183: 5076  			JMP	INS_FAIL
000184: 6000  			MOV		A,@0x00
000185: 0103  			MOV		STATUS,A
000186: 6002  			MOV		A,@0x02		; SUB(2-2)=0
000187: 0150  			MOV		0x50,A		; [0x50] = 0x02
000188: 6002  			MOV		A,@0x02
000189: 0450  			SUB		A,0x50		; A = [0x50] - A
00018A: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00018B: 5076  			JMP	INS_FAIL
00018C: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00018D: 5076  			JMP	INS_FAIL
00018E: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
00018F: 5076  			JMP	INS_FAIL
000190: 3503  			JBC		OV			; Check OV = 0?
000191: 5076  			JMP	INS_FAIL
000192: 3603  			JBC		N			; Check N = 0?
000193: 5076  			JMP	INS_FAIL
000194: 2203  			BC		Z
000195: 6C00  			XOR		A,@0x00		; Check Result ?
000196: 3A03  			JBS		Z			; Check Z = 1?
000197: 5076  			JMP	INS_FAIL
000198: 3603  			JBC		N			; Check N = 0?
000199: 5076  			JMP	INS_FAIL
00019A: 6000  			MOV		A,@0x00
00019B: 0103  			MOV		STATUS,A
00019C: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
00019D: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00019E: 607F  			MOV		A,@0x7F
00019F: 0450  			SUB		A,0x50		; A = [0x50] - A
0001A0: 3803  			JBS		C			; Check C = 1?
0001A1: 5076  			JMP	INS_FAIL
0001A2: 3903  			JBS		DC			; Check DC = 1?
0001A3: 5076  			JMP	INS_FAIL
0001A4: 3203  			JBC		Z			; Check Z = 0?
0001A5: 5076  			JMP	INS_FAIL
0001A6: 3503  			JBC		OV			; Check OV = 0?
0001A7: 5076  			JMP	INS_FAIL
0001A8: 3E03  			JBS		N			; Check N = 1?
0001A9: 5076  			JMP	INS_FAIL
0001AA: 2203  			BC		Z
0001AB: 2603  			BC		N
0001AC: 6C80  			XOR		A,@0x80		; Check Result ?
0001AD: 3A03  			JBS		Z			; Check Z = 1?
0001AE: 5076  			JMP	INS_FAIL
0001AF: 3603  			JBC		N			; Check N = 0?
0001B0: 5076  			JMP	INS_FAIL
0001B1: 6000  			MOV		A,@0x00
0001B2: 0103  			MOV		STATUS,A
0001B3: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001B4: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001B5: 607F  			MOV		A,@0x7F
0001B6: 0450  			SUB		A,0x50		; A = [0x50] - A
0001B7: 3803  			JBS		C			; Check C = 1?
0001B8: 5076  			JMP	INS_FAIL
0001B9: 3103  			JBC		DC			; Check DC = 0?
0001BA: 5076  			JMP	INS_FAIL
0001BB: 3203  			JBC		Z			; Check Z = 0?
0001BC: 5076  			JMP	INS_FAIL
0001BD: 3D03  			JBS		OV			; Check OV = 1?
0001BE: 5076  			JMP	INS_FAIL
0001BF: 3603  			JBC		N			; Check N = 0?
0001C0: 5076  			JMP	INS_FAIL
0001C1: 2203  			BC		Z
0001C2: 2603  			BC		N
0001C3: 6C01  			XOR		A,@0x01		; Check Result ?
0001C4: 3A03  			JBS		Z			; Check Z = 1?
0001C5: 5076  			JMP	INS_FAIL
0001C6: 3603  			JBC		N			; Check N = 0?
0001C7: 5076  			JMP	INS_FAIL
0001C8: 6000  			MOV		A,@0x00
0001C9: 0103  			MOV		STATUS,A
0001CA: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001CB: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001CC: 6003  			MOV		A,@0x03
0001CD: 0450  			SUB		A,0x50		; A = [0x50] - A
0001CE: 3003  			JBC		C			; Check C = 0?
0001CF: 5076  			JMP	INS_FAIL
0001D0: 3103  			JBC		DC			; Check DC = 0?
0001D1: 5076  			JMP	INS_FAIL
0001D2: 3203  			JBC		Z			; Check Z = 0?
0001D3: 5076  			JMP	INS_FAIL
0001D4: 3503  			JBC		OV			; Check OV = 0?
0001D5: 5076  			JMP	INS_FAIL
0001D6: 3E03  			JBS		N			; Check N = 1?
0001D7: 5076  			JMP	INS_FAIL
0001D8: 2203  			BC		Z
0001D9: 2603  			BC		N
0001DA: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001DB: 3A03  			JBS		Z			; Check Z = 1?
0001DC: 5076  			JMP	INS_FAIL
0001DD: 3603  			JBC		N			; Check N = 0?
0001DE: 5076  			JMP	INS_FAIL
0001DF: 600B  			MOV		A,@0x0B
0001E0: 015A  			MOV		INST,A
0001E1: 6000  			MOV		A,@0x00
0001E2: 0103  			MOV		STATUS,A
0001E3: 6002  			MOV		A,@0x02
0001E4: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001E5: 6001  			MOV		A,@0x01
0001E6: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001E7: 1003  			MOV		A,STATUS
0001E8: 6C1B  			XOR		A,@0x1B		; for non reset
0001E9: 40E6  			CALL	INST_XOR_JUDGE
0001EA: 2203  			BC		Z
0001EB: 2603  			BC		N
0001EC: 1050  			MOV		A,0x50
0001ED: 6C01  			XOR		A,@0x01		; Check Result ?
0001EE: 40E6  			CALL	INST_XOR_JUDGE
0001EF: 6000  			MOV		A,@0x00
0001F0: 0103  			MOV		STATUS,A
0001F1: 6002  			MOV		A,@0x02
0001F2: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001F3: 6002  			MOV		A,@0x02
0001F4: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001F5: 1003  			MOV		A,STATUS
0001F6: 6C1F  			XOR		A,@0x1F		; for nono reset
0001F7: 40E6  			CALL	INST_XOR_JUDGE
0001F8: 2203  			BC		Z
0001F9: 2603  			BC		N
0001FA: 1050  			MOV		A,0x50
0001FB: 6C00  			XOR		A,@0x00		; Check Result ?
0001FC: 3A03  			JBS		Z			; Check Z = 1?
0001FD: 5076  			JMP	INS_FAIL
0001FE: 3603  			JBC		N			; Check N = 0?
0001FF: 5076  			JMP	INS_FAIL
000200: 6000  			MOV		A,@0x00
000201: 0103  			MOV		STATUS,A
000202: 6080  			MOV		A,@0x80
000203: 0150  			MOV		0x50,A		; [0x50] = 0x80
000204: 6001  			MOV		A,@0x01
000205: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
000206: 1003  			MOV		A,STATUS
000207: 6C39  			XOR		A,@0x39	;; for non reset
000208: 40E6  			CALL	INST_XOR_JUDGE
000209: 2203  			BC		Z
00020A: 2603  			BC		N
00020B: 1050  			MOV		A,0x50
00020C: 6C7F  			XOR		A,@0x7F		; Check Result ?
00020D: 40E6  			CALL	INST_XOR_JUDGE
00020E: 6030  			MOV		A,@0x30
00020F: 015A  			MOV		INST,A
000210: 40E3  			CALL	STATUS_CLEAR
000211: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
000212: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
000213: 3803  			JBS		C			; Check C = 1?
000214: 5076  			JMP	INS_FAIL
000215: 3903  			JBS		DC			; Check DC = 1?
000216: 5076  			JMP	INS_FAIL
000217: 3A03  			JBS		Z			; Check Z = 1?
000218: 5076  			JMP	INS_FAIL
000219: 3503  			JBC		OV			; Check OV = 0?
00021A: 5076  			JMP	INS_FAIL
00021B: 3603  			JBC		N			; Check N = 0?
00021C: 5076  			JMP	INS_FAIL
00021D: 6C00  			XOR		A,@0x00		; Check Result ?
00021E: 40E6  			CALL	INST_XOR_JUDGE
00021F: 40E3  			CALL	STATUS_CLEAR
000220: 607F  			MOV		A,@0x7F		; 0x00-0x7F
000221: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
000222: 3003  			JBC		C			; Check C = 0?
000223: 5076  			JMP	INS_FAIL
000224: 3103  			JBC		DC			; Check DC = 0?
000225: 5076  			JMP	INS_FAIL
000226: 3203  			JBC		Z			; Check Z = 0?
000227: 5076  			JMP	INS_FAIL
000228: 3503  			JBC		OV			; Check OV = 0?
000229: 5076  			JMP	INS_FAIL
00022A: 3E03  			JBS		N			; Check N = 1?
00022B: 5076  			JMP	INS_FAIL
00022C: 6C81  			XOR		A,@0x81		; Check Result ?
00022D: 40E6  			CALL	INST_XOR_JUDGE
00022E: 40E3  			CALL	STATUS_CLEAR
00022F: 6001  			MOV		A,@0x01		; 0x80-0x01
000230: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
000231: 3803  			JBS		C			; Check C = 1?
000232: 5076  			JMP	INS_FAIL
000233: 3103  			JBC		DC			; Check DC = 0?
000234: 5076  			JMP	INS_FAIL
000235: 3203  			JBC		Z			; Check Z = 0?
000236: 5076  			JMP	INS_FAIL
000237: 3D03  			JBS		OV			; Check OV = 1?
000238: 5076  			JMP	INS_FAIL
000239: 3603  			JBC		N			; Check N = 0?
00023A: 5076  			JMP	INS_FAIL
00023B: 6C7F  			XOR		A,@0x7F		; Check Result ?
00023C: 40E6  			CALL	INST_XOR_JUDGE
00023D: 6031  			MOV		A,@0x31
00023E: 015A  			MOV		INST,A
00023F: 40E3  			CALL	STATUS_CLEAR
000240: 2003  			BC		C			; B = 1
000241: 6000  			MOV		A,@0x00		;0x00-0xF
000242: 0150  			MOV		0x50,A		; [0x50] = 0x00
000243: 60FF  			MOV		A,@0xFF		; A = 0x01
000244: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000245: 3003  			JBC		C			; Check C = 0?
000246: 5076  			JMP	INS_FAIL
000247: 3103  			JBC		DC			; Check DC = 0?
000248: 5076  			JMP	INS_FAIL
000249: 3A03  			JBS		Z			; Check Z = 1?
00024A: 5076  			JMP	INS_FAIL
00024B: 3503  			JBC		OV			; Check OV = 0?
00024C: 5076  			JMP	INS_FAIL
00024D: 3603  			JBC		N			; Check N = 0?
00024E: 5076  			JMP	INS_FAIL
00024F: 6C00  			XOR		A,@0x00		; Check Result ?
000250: 40E6  			CALL	INST_XOR_JUDGE	
000251: 40E3  			CALL	STATUS_CLEAR
000252: 2003  			BC		C			; B = 1
000253: 6000  			MOV		A,@0x00		; 0x00-0x7F
000254: 0150  			MOV		0x50,A		; [0x50] = 0x00
000255: 607F  			MOV		A,@0x7F		; A = 0x01
000256: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000257: 3003  			JBC		C			; Check C = 0?
000258: 5076  			JMP	INS_FAIL
000259: 3103  			JBC		DC			; Check DC = 0?
00025A: 5076  			JMP	INS_FAIL
00025B: 3203  			JBC		Z			; Check Z = 0?
00025C: 5076  			JMP	INS_FAIL
00025D: 3503  			JBC		OV			; Check OV = 0?
00025E: 5076  			JMP	INS_FAIL
00025F: 3E03  			JBS		N			; Check N = 1?
000260: 5076  			JMP	INS_FAIL
000261: 6C80  			XOR		A,@0x80		; Check Result ?
000262: 40E6  			CALL	INST_XOR_JUDGE
000263: 40E3  			CALL	STATUS_CLEAR
000264: 2003  			BC		C			; B = 1
000265: 6080  			MOV		A,@0x80		; 0x80-0x01
000266: 0150  			MOV		0x50,A		; [0x50] = 0x80
000267: 6001  			MOV		A,@0x01		; A = 0x01
000268: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000269: 3803  			JBS		C			; Check C = 1?
00026A: 5076  			JMP	INS_FAIL
00026B: 3103  			JBC		DC			; Check DC = 0?
00026C: 5076  			JMP	INS_FAIL
00026D: 3203  			JBC		Z			; Check Z = 0?
00026E: 5076  			JMP	INS_FAIL
00026F: 3D03  			JBS		OV			; Check OV = 1?
000270: 5076  			JMP	INS_FAIL
000271: 3603  			JBC		N			; Check N = 0?
000272: 5076  			JMP	INS_FAIL
000273: 6C7E  			XOR		A,@0x7E		; Check Result ?
000274: 40E6  			CALL	INST_XOR_JUDGE
000275: 6032  			MOV		A,@0x32
000276: 015A  			MOV		INST,A
000277: 40E3  			CALL	STATUS_CLEAR
000278: 2003  			BC		C			; B = 1
000279: 6000  			MOV		A,@0x00		; 0x00-0xFF
00027A: 0150  			MOV		0x50,A		; [0x50] = 0x00
00027B: 60FF  			MOV		A,@0xFF
00027C: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
00027D: 1003  			MOV		A,STATUS
00027E: 6C1C  			XOR		A,@0x1C		; Check Status ?
00027F: 40E6  			CALL	INST_XOR_JUDGE
000280: 1050  			MOV		A,0x50
000281: 6C00  			XOR		A,@0x00		; Check Result ?
000282: 40E6  			CALL	INST_XOR_JUDGE
000283: 40E3  			CALL	STATUS_CLEAR
000284: 2003  			BC		C			; B = 1
000285: 6000  			MOV		A,@0x00		; 0x00-0x7F
000286: 0150  			MOV		0x50,A		; [0x50] = 0x00
000287: 607F  			MOV		A,@0x7F
000288: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
000289: 1003  			MOV		A,STATUS
00028A: 6C58  			XOR		A,@0x58		; Check Status ?
00028B: 40E6  			CALL	INST_XOR_JUDGE
00028C: 1050  			MOV		A,0x50
00028D: 6C80  			XOR		A,@0x80		; Check Result ?
00028E: 40E6  			CALL	INST_XOR_JUDGE
00028F: 40E3  			CALL	STATUS_CLEAR
000290: 2003  			BC		C			; B = 1
000291: 6080  			MOV		A,@0x80		; ,0x80-0x01
000292: 0150  			MOV		0x50,A		; [0x50] = 0x80
000293: 6001  			MOV		A,@0x01
000294: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000295: 1003  			MOV		A,STATUS
000296: 6C39  			XOR		A,@0x39		; Check Status ?
000297: 40E6  			CALL	INST_XOR_JUDGE
000298: 1050  			MOV		A,0x50
000299: 6C7E  			XOR		A,@0x7E		; Check Result ?
00029A: 40E6  			CALL	INST_XOR_JUDGE
00029B: 600C  			MOV		A,@0x0C
00029C: 015A  			MOV		INST,A
00029D: 6000  			MOV		A,@0x00
00029E: 0103  			MOV		STATUS,A
00029F: 6020  			MOV		A,@0x20		; 0x20-1
0002A0: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002A1: 0650  			DECA	0x50		; A = [0x50] - 1
0002A2: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002A3: 5076  			JMP	INS_FAIL
0002A4: 3103  			JBC		DC			; Check DC = 0?
0002A5: 5076  			JMP	INS_FAIL
0002A6: 3203  			JBC		Z			; Check Z = 0?
0002A7: 5076  			JMP	INS_FAIL
0002A8: 3503  			JBC		OV			; Check OV = 0?
0002A9: 5076  			JMP	INS_FAIL
0002AA: 3603  			JBC		N			; Check N = 0?
0002AB: 5076  			JMP	INS_FAIL
0002AC: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002AD: 3A03  			JBS		Z			; Check Z = 1?
0002AE: 5076  			JMP	INS_FAIL
0002AF: 3603  			JBC		N			; Check N = 0?
0002B0: 5076  			JMP	INS_FAIL
0002B1: 6000  			MOV		A,@0x00
0002B2: 0103  			MOV		STATUS,A
0002B3: 6001  			MOV		A,@0x01		; 0x01-1
0002B4: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002B5: 0650  			DECA	0x50		; A = [0x50] - 1
0002B6: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002B7: 5076  			JMP	INS_FAIL
0002B8: 3903  			JBS		DC			; Check DC = 1?
0002B9: 5076  			JMP	INS_FAIL
0002BA: 3A03  			JBS		Z			; Check Z = 1?
0002BB: 5076  			JMP	INS_FAIL
0002BC: 3503  			JBC		OV			; Check OV = 0?
0002BD: 5076  			JMP	INS_FAIL
0002BE: 3603  			JBC		N			; Check N = 0?
0002BF: 5076  			JMP	INS_FAIL
0002C0: 2203  			BC		Z
0002C1: 6C00  			XOR		A,@0x00		; Check Result ?
0002C2: 3A03  			JBS		Z			; Check Z = 1?
0002C3: 5076  			JMP	INS_FAIL
0002C4: 3603  			JBC		N			; Check N = 0?
0002C5: 5076  			JMP	INS_FAIL
0002C6: 6000  			MOV		A,@0x00
0002C7: 0103  			MOV		STATUS,A
0002C8: 6000  			MOV		A,@0x00		; 0x00-1
0002C9: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002CA: 0650  			DECA	0x50		; A = [0x50] - 1
0002CB: 3003  			JBC		C			; Check C = 0?
0002CC: 5076  			JMP	INS_FAIL
0002CD: 3103  			JBC		DC			; Check DC = 0?
0002CE: 5076  			JMP	INS_FAIL
0002CF: 3203  			JBC		Z			; Check Z = 0?
0002D0: 5076  			JMP	INS_FAIL
0002D1: 3503  			JBC		OV			; Check OV = 0?
0002D2: 5076  			JMP	INS_FAIL
0002D3: 3E03  			JBS		N			; Check N = 1?
0002D4: 5076  			JMP	INS_FAIL
0002D5: 2203  			BC		Z
0002D6: 2603  			BC		N
0002D7: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002D8: 3A03  			JBS		Z			; Check Z = 1?
0002D9: 5076  			JMP	INS_FAIL
0002DA: 3603  			JBC		N			; Check N = 0?
0002DB: 5076  			JMP	INS_FAIL
0002DC: 6000  			MOV		A,@0x00
0002DD: 0103  			MOV		STATUS,A
0002DE: 6080  			MOV		A,@0x80		; 0x80-1
0002DF: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002E0: 0650  			DECA	0x50		; A = [0x50] - 1
0002E1: 3803  			JBS		C			; Check C = 1?
0002E2: 5076  			JMP	INS_FAIL
0002E3: 3103  			JBC		DC			; Check DC = 0?
0002E4: 5076  			JMP	INS_FAIL
0002E5: 3203  			JBC		Z			; Check Z = 0?
0002E6: 5076  			JMP	INS_FAIL
0002E7: 3D03  			JBS		OV			; Check OV = 1?
0002E8: 5076  			JMP	INS_FAIL
0002E9: 3603  			JBC		N			; Check N = 0?
0002EA: 5076  			JMP	INS_FAIL
0002EB: 2203  			BC		Z
0002EC: 2603  			BC		N
0002ED: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002EE: 3A03  			JBS		Z			; Check Z = 1?
0002EF: 5076  			JMP	INS_FAIL
0002F0: 3603  			JBC		N			; Check N = 0?
0002F1: 5076  			JMP	INS_FAIL
0002F2: 600D  			MOV		A,@0x0D
0002F3: 015A  			MOV		INST,A
0002F4: 6000  			MOV		A,@0x00
0002F5: 0103  			MOV		STATUS,A
0002F6: 6020  			MOV		A,@0x20		; 0x20-1
0002F7: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002F8: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002F9: 1003  			MOV		A,STATUS
0002FA: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002FB: 3A03  			JBS		Z			; Check Z = 1?
0002FC: 5076  			JMP	INS_FAIL
0002FD: 3603  			JBC		N			; Check N = 0?
0002FE: 5076  			JMP	INS_FAIL
0002FF: 2203  			BC		Z
000300: 1050  			MOV		A,0x50
000301: 6C1F  			XOR		A,@0x1F		; Check Result ?
000302: 3A03  			JBS		Z			; Check Z = 1?
000303: 5076  			JMP	INS_FAIL
000304: 3603  			JBC		N			; Check N = 0?
000305: 5076  			JMP	INS_FAIL
000306: 6000  			MOV		A,@0x00
000307: 0103  			MOV		STATUS,A
000308: 6001  			MOV		A,@0x01		; 0x01-1
000309: 0150  			MOV		0x50,A		; [0x50] = 0x01
00030A: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00030B: 1003  			MOV		A,STATUS
00030C: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
00030D: 3A03  			JBS		Z			; Check Z = 1?
00030E: 5076  			JMP	INS_FAIL
00030F: 3603  			JBC		N			; Check N = 0?
000310: 5076  			JMP	INS_FAIL
000311: 2203  			BC		Z
000312: 1050  			MOV		A,0x50
000313: 6C00  			XOR		A,@0x00		; Check Result ?
000314: 3A03  			JBS		Z			; Check Z = 1?
000315: 5076  			JMP	INS_FAIL
000316: 3603  			JBC		N			; Check N = 0?
000317: 5076  			JMP	INS_FAIL
000318: 6000  			MOV		A,@0x00
000319: 0103  			MOV		STATUS,A
00031A: 6000  			MOV		A,@0x00		; 0x00-1
00031B: 0150  			MOV		0x50,A		; [0x50] = 0x00
00031C: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00031D: 1003  			MOV		A,STATUS
00031E: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00031F: 3A03  			JBS		Z			; Check Z = 1?
000320: 5076  			JMP	INS_FAIL
000321: 3603  			JBC		N			; Check N = 0?
000322: 5076  			JMP	INS_FAIL
000323: 2203  			BC		Z
000324: 1050  			MOV		A,0x50
000325: 6CFF  			XOR		A,@0xFF		; Check Result ?
000326: 3A03  			JBS		Z			; Check Z = 1?
000327: 5076  			JMP	INS_FAIL
000328: 3603  			JBC		N			; Check N = 0?
000329: 5076  			JMP	INS_FAIL
00032A: 6000  			MOV		A,@0x00
00032B: 0103  			MOV		STATUS,A
00032C: 6080  			MOV		A,@0x80		; 0x80-1
00032D: 0150  			MOV		0x50,A		; [0x50] = 0x80
00032E: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00032F: 1003  			MOV		A,STATUS
000330: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
000331: 3A03  			JBS		Z			; Check Z = 1?
000332: 5076  			JMP	INS_FAIL
000333: 3603  			JBC		N			; Check N = 0?
000334: 5076  			JMP	INS_FAIL
000335: 2203  			BC		Z
000336: 1050  			MOV		A,0x50
000337: 6C7F  			XOR		A,@0x7F		; Check Result ?
000338: 3A03  			JBS		Z			; Check Z = 1?
000339: 5076  			JMP	INS_FAIL
00033A: 3603  			JBC		N			; Check N = 0?
00033B: 5076  			JMP	INS_FAIL
00033C: 6012  			MOV		A,@0x12
00033D: 015A  			MOV		INST,A
00033E: 40E3  			CALL	STATUS_CLEAR	; 0x80+0x7F
00033F: 6080  			MOV		A,@0x80
000340: 0150  			MOV		0x50,A		; [0x50] = 0x80
000341: 607F  			MOV		A,@0x7F		; 
000342: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
000343: 3003  			JBC		C			; Check C = 0?
000344: 5076  			JMP	INS_FAIL
000345: 3103  			JBC		DC			; Check DC = 0?
000346: 5076  			JMP	INS_FAIL
000347: 3203  			JBC		Z			; Check Z = 0?
000348: 5076  			JMP	INS_FAIL
000349: 3503  			JBC		OV			; Check OV = 0?
00034A: 5076  			JMP	INS_FAIL
00034B: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
00034C: 5076  			JMP	INS_FAIL
00034D: 2203  			BC		Z
00034E: 2603  			BC		N
00034F: 6CFF  			XOR		A,@0xFF		; Check Result ?
000350: 3A03  			JBS		Z			; Check Z = 1?
000351: 5076  			JMP	INS_FAIL
000352: 3603  			JBC		N			; Check N = 0?
000353: 5076  			JMP	INS_FAIL
000354: 40E3  			CALL	STATUS_CLEAR	; 0xFF+0x01
000355: 60FF  			MOV		A,@0xFF
000356: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000357: 6001  			MOV		A,@0x01		; 
000358: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
000359: 3803  			JBS		C			; Check C = 1?
00035A: 5076  			JMP	INS_FAIL
00035B: 3903  			JBS		DC			; Check DC = 1?
00035C: 5076  			JMP	INS_FAIL
00035D: 3A03  			JBS		Z			; Check Z = 1?
00035E: 5076  			JMP	INS_FAIL
00035F: 3503  			JBC		OV			; Check OV = 0?
000360: 5076  			JMP	INS_FAIL
000361: 3603  			JBC		N			; Check N = 0?
000362: 5076  			JMP	INS_FAIL
000363: 2203  			BC		Z
000364: 2603  			BC		N
000365: 6C00  			XOR		A,@0x00		; Check Result ?
000366: 3A03  			JBS		Z			; Check Z = 1?
000367: 5076  			JMP	INS_FAIL
000368: 3603  			JBC		N			; Check N = 0?
000369: 5076  			JMP	INS_FAIL
00036A: 40E3  			CALL	STATUS_CLEAR	; 0x7F+0x01
00036B: 607F  			MOV		A,@0x7F
00036C: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00036D: 6001  			MOV		A,@0x01		; 
00036E: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
00036F: 3003  			JBC		C			; Check C = 0?
000370: 5076  			JMP	INS_FAIL
000371: 3903  			JBS		DC			; Check DC = 1?
000372: 5076  			JMP	INS_FAIL
000373: 3203  			JBC		Z			; Check Z = 0?
000374: 5076  			JMP	INS_FAIL
000375: 3D03  			JBS		OV			; Check OV = 1?
000376: 5076  			JMP	INS_FAIL
000377: 3E03  			JBS		N			; Check N = 1?
000378: 5076  			JMP	INS_FAIL
000379: 2203  			BC		Z
00037A: 2603  			BC		N
00037B: 6C80  			XOR		A,@0x80		; Check Result ?
00037C: 3A03  			JBS		Z			; Check Z = 1?
00037D: 5076  			JMP	INS_FAIL
00037E: 3603  			JBC		N			; Check N = 0?
00037F: 5076  			JMP	INS_FAIL
000380: 6013  			MOV		A,@0x13
000381: 015A  			MOV		INST,A
000382: 40E3  			CALL	STATUS_CLEAR	; 0x80+0x7F
000383: 6080  			MOV		A,@0x80
000384: 0150  			MOV		0x50,A		; [0x50] = 0x80
000385: 607F  			MOV		A,@0x7F		; A = 0x7F
000386: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
000387: 1003  			MOV		A,STATUS
000388: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000389: 3A03  			JBS		Z			; Check Z = 1?
00038A: 5076  			JMP	INS_FAIL
00038B: 3603  			JBC		N			; Check N = 0?
00038C: 5076  			JMP	INS_FAIL
00038D: 1050  			MOV		A,0x50
00038E: 6CFF  			XOR		A,@0xFF		; Check Result ?
00038F: 3A03  			JBS		Z			; Check Z = 1?
000390: 5076  			JMP	INS_FAIL
000391: 3603  			JBC		N			; Check N = 0?
000392: 5076  			JMP	INS_FAIL
000393: 40E3  			CALL	STATUS_CLEAR	; 0xFF+0x01
000394: 60FF  			MOV		A,@0xFF
000395: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000396: 6001  			MOV		A,@0x01		; A = 0x01
000397: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
000398: 1003  			MOV		A,STATUS
000399: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
00039A: 3A03  			JBS		Z			; Check Z = 1?
00039B: 5076  			JMP	INS_FAIL
00039C: 3603  			JBC		N			; Check N = 0?
00039D: 5076  			JMP	INS_FAIL
00039E: 1050  			MOV		A,0x50
00039F: 6C00  			XOR		A,@0x00		; Check Result ?
0003A0: 3A03  			JBS		Z			; Check Z = 1?
0003A1: 5076  			JMP	INS_FAIL
0003A2: 3603  			JBC		N			; Check N = 0?
0003A3: 5076  			JMP	INS_FAIL
0003A4: 40E3  			CALL	STATUS_CLEAR	;0x7F+0x01
0003A5: 607F  			MOV		A,@0x7F
0003A6: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003A7: 6001  			MOV		A,@0x01		; A = 0x01
0003A8: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
0003A9: 1003  			MOV		A,STATUS
0003AA: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
0003AB: 3A03  			JBS		Z			; Check Z = 1?
0003AC: 5076  			JMP	INS_FAIL
0003AD: 3603  			JBC		N			; Check N = 0?
0003AE: 5076  			JMP	INS_FAIL
0003AF: 1050  			MOV		A,0x50
0003B0: 6C80  			XOR		A,@0x80		; Check Result ?
0003B1: 3A03  			JBS		Z			; Check Z = 1?
0003B2: 5076  			JMP	INS_FAIL
0003B3: 3603  			JBC		N			; Check N = 0?
0003B4: 5076  			JMP	INS_FAIL
0003B5: 6034  			MOV		A,@0x34
0003B6: 015A  			MOV		INST,A
0003B7: 40E3  			CALL	STATUS_CLEAR
0003B8: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003B9: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003BA: 3003  			JBC		C			; Check C = 0?
0003BB: 5076  			JMP	INS_FAIL
0003BC: 3903  			JBS		DC			; Check DC = 1?
0003BD: 5076  			JMP	INS_FAIL
0003BE: 3203  			JBC		Z			; Check Z = 0?
0003BF: 5076  			JMP	INS_FAIL
0003C0: 3D03  			JBS		OV			; Check OV = 1?
0003C1: 5076  			JMP	INS_FAIL
0003C2: 3E03  			JBS		N			; Check N = 1?
0003C3: 5076  			JMP	INS_FAIL
0003C4: 6C80  			XOR		A,@0x80		; Check Result ?
0003C5: 40E6  			CALL	INST_XOR_JUDGE
0003C6: 40E3  			CALL	STATUS_CLEAR
0003C7: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003C8: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003C9: 3803  			JBS		C			; Check C = 1?
0003CA: 5076  			JMP	INS_FAIL
0003CB: 3903  			JBS		DC			; Check DC = 1?
0003CC: 5076  			JMP	INS_FAIL
0003CD: 3A03  			JBS		Z			; Check Z = 1?
0003CE: 5076  			JMP	INS_FAIL
0003CF: 3503  			JBC		OV			; Check OV = 0?
0003D0: 5076  			JMP	INS_FAIL
0003D1: 3603  			JBC		N			; Check N = 0?
0003D2: 5076  			JMP	INS_FAIL
0003D3: 6C00  			XOR		A,@0x00		; Check Result ?
0003D4: 40E6  			CALL	INST_XOR_JUDGE
0003D5: 40E3  			CALL	STATUS_CLEAR
0003D6: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003D7: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003D8: 3003  			JBC		C			; Check C = 0?
0003D9: 5076  			JMP	INS_FAIL
0003DA: 3103  			JBC		DC			; Check DC = 0?
0003DB: 5076  			JMP	INS_FAIL
0003DC: 3203  			JBC		Z			; Check Z = 0?
0003DD: 5076  			JMP	INS_FAIL
0003DE: 3503  			JBC		OV			; Check OV = 0?
0003DF: 5076  			JMP	INS_FAIL
0003E0: 3E03  			JBS		N			; Check N = 1?
0003E1: 5076  			JMP	INS_FAIL
0003E2: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003E3: 40E6  			CALL	INST_XOR_JUDGE
0003E4: 6036  			MOV		A,@0x36
0003E5: 015A  			MOV		INST,A
0003E6: 40E3  			CALL	STATUS_CLEAR
0003E7: 2803  			BS		C			; 0x7F+0x00
0003E8: 607F  			MOV		A,@0x7F		
0003E9: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003EA: 6000  			MOV		A,@0x00		; A = 0x00
0003EB: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003EC: 3003  			JBC		C			; Check C = 0?
0003ED: 5076  			JMP	INS_FAIL
0003EE: 3903  			JBS		DC			; Check DC = 1?
0003EF: 5076  			JMP	INS_FAIL
0003F0: 3203  			JBC		Z			; Check Z = 0?
0003F1: 5076  			JMP	INS_FAIL
0003F2: 3D03  			JBS		OV			; Check OV = 1?
0003F3: 5076  			JMP	INS_FAIL
0003F4: 3E03  			JBS		N			; Check N = 1?
0003F5: 5076  			JMP	INS_FAIL
0003F6: 6C80  			XOR		A,@0x80		; Check Result ?
0003F7: 40E6  			CALL	INST_XOR_JUDGE
0003F8: 40E3  			CALL	STATUS_CLEAR
0003F9: 2803  			BS		C			; 0x80+0x7F
0003FA: 6080  			MOV		A,@0x80
0003FB: 0150  			MOV		0x50,A		; [0x50] = 0x80
0003FC: 607F  			MOV		A,@0x7F		; A = 0x7F
0003FD: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003FE: 3803  			JBS		C			; Check C = 1?
0003FF: 5076  			JMP	INS_FAIL
000400: 3903  			JBS		DC			; Check DC = 1?
000401: 5076  			JMP	INS_FAIL
000402: 3A03  			JBS		Z			; Check Z = 1?
000403: 5076  			JMP	INS_FAIL
000404: 3503  			JBC		OV			; Check OV = 0?
000405: 5076  			JMP	INS_FAIL
000406: 3603  			JBC		N			; Check N = 0?
000407: 5076  			JMP	INS_FAIL
000408: 6C00  			XOR		A,@0x00		; Check Result ?
000409: 40E6  			CALL	INST_XOR_JUDGE
00040A: 6037  			MOV		A,@0x37
00040B: 015A  			MOV		INST,A
00040C: 40E3  			CALL	STATUS_CLEAR
00040D: 2803  			BS		C			;0x7F+0x00
00040E: 607F  			MOV		A,@0x7F
00040F: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000410: 6000  			MOV		A,@0x00		; A = 0x00
000411: 2203  			BC		Z
000412: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000413: 1003  			MOV		A,STATUS
000414: 6C7A  			XOR		A,@0x7A		; Check Status ?
000415: 40E6  			CALL	INST_XOR_JUDGE
000416: 1050  			MOV		A,0x50
000417: 6C80  			XOR		A,@0x80		; Check Result ?
000418: 40E6  			CALL	INST_XOR_JUDGE
000419: 40E3  			CALL	STATUS_CLEAR
00041A: 2803  			BS		C			;0x80+0x7F
00041B: 6080  			MOV		A,@0x80
00041C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00041D: 607F  			MOV		A,@0x7F		; A = 0x7F
00041E: 2203  			BC		Z
00041F: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000420: 1003  			MOV		A,STATUS
000421: 6C1F  			XOR		A,@0x1F		; Check Status ?
000422: 40E6  			CALL	INST_XOR_JUDGE
000423: 1050  			MOV		A,0x50
000424: 6C00  			XOR		A,@0x00		; Check Result ?
000425: 40E6  			CALL	INST_XOR_JUDGE
000426: 6017  			MOV		A,@0x17
000427: 015A  			MOV		INST,A
000428: 40E3  			CALL	STATUS_CLEAR	; 0x7F+0x01
000429: 607F  			MOV		A,@0x7F
00042A: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00042B: 1450  			INCA	0x50		; A = [0x50] +1		
00042C: 3003  			JBC		C			; Check C = 0?
00042D: 5076  			JMP	INS_FAIL
00042E: 3903  			JBS		DC			; Check DC = 1?
00042F: 5076  			JMP	INS_FAIL
000430: 3203  			JBC		Z			; Check Z = 0?
000431: 5076  			JMP	INS_FAIL
000432: 3D03  			JBS		OV			; Check OV = 1?
000433: 5076  			JMP	INS_FAIL
000434: 3E03  			JBS		N			; Check N = 1?
000435: 5076  			JMP	INS_FAIL
000436: 2203  			BC		Z
000437: 2603  			BC		N
000438: 6C80  			XOR		A,@0x80		; Check Result ?
000439: 3A03  			JBS		Z			; Check Z = 1?
00043A: 5076  			JMP	INS_FAIL
00043B: 3603  			JBC		N			; Check N = 0?
00043C: 5076  			JMP	INS_FAIL
00043D: 40E3  			CALL	STATUS_CLEAR	; 0xFF+0x01
00043E: 60FF  			MOV		A,@0xFF
00043F: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000440: 1450  			INCA	0x50		; A = [0x50] +1		
000441: 3803  			JBS		C			; Check C = 1?
000442: 5076  			JMP	INS_FAIL
000443: 3903  			JBS		DC			; Check DC = 1?
000444: 5076  			JMP	INS_FAIL
000445: 3A03  			JBS		Z			; Check Z = 1?
000446: 5076  			JMP	INS_FAIL
000447: 3503  			JBC		OV			; Check OV = 0?
000448: 5076  			JMP	INS_FAIL
000449: 3603  			JBC		N			; Check N = 0?
00044A: 5076  			JMP	INS_FAIL
00044B: 2203  			BC		Z
00044C: 2603  			BC		N
00044D: 6C00  			XOR		A,@0x00		; Check Result ?
00044E: 3A03  			JBS		Z			; Check Z = 1?
00044F: 5076  			JMP	INS_FAIL
000450: 3603  			JBC		N			; Check N = 0?
000451: 5076  			JMP	INS_FAIL
000452: 6018  			MOV		A,@0x18
000453: 015A  			MOV		INST,A
000454: 40E3  			CALL 	STATUS_CLEAR	; 0x7F+0x01
000455: 607F  			MOV		A,@0x7F
000456: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000457: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000458: 1003  			MOV		A,STATUS
000459: 6C7A  			XOR		A,@0x7A		; Check Status ?
00045A: 3A03  			JBS		Z			; Check Z = 1?
00045B: 5076  			JMP	INS_FAIL
00045C: 3603  			JBC		N			; Check N = 0?
00045D: 5076  			JMP	INS_FAIL
00045E: 1050  			MOV		A,0x50
00045F: 6C80  			XOR		A,@0x80		; Check Result ?
000460: 3A03  			JBS		Z			; Check Z = 1?
000461: 5076  			JMP	INS_FAIL
000462: 3603  			JBC		N			; Check N = 0?
000463: 5076  			JMP	INS_FAIL
000464: 40E3  			CALL	STATUS_CLEAR	; 0xFF+0x01
000465: 60FF  			MOV		A,@0xFF
000466: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000467: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000468: 1003  			MOV		A,STATUS
000469: 6C1F  			XOR		A,@0x1F		; Check Status ?
00046A: 3A03  			JBS		Z			; Check Z = 1?
00046B: 5076  			JMP	INS_FAIL
00046C: 3603  			JBC		N			; Check N = 0?
00046D: 5076  			JMP	INS_FAIL
00046E: 1050  			MOV		A,0x50
00046F: 6C00  			XOR		A,@0x00		; Check Result ?
000470: 3A03  			JBS		Z			; Check Z = 1?
000471: 5076  			JMP	INS_FAIL
000472: 3603  			JBC		N			; Check N = 0?
000473: 5076  			JMP	INS_FAIL
000474: 6035  			MOV		A,@0x35
000475: 015A  			MOV		INST,A
000476: 40E3  			CALL	STATUS_CLEAR
000477: 6000  			MOV		A,@0x00		; 0x00
000478: 0150  			MOV		0x50,A		; [0x50] = 0x00
000479: 7D50  			NEG		0x50
00047A: 1003  			MOV		A,STATUS
00047B: 6C1F  			XOR		A,@0x1F		; Check Status ?
00047C: 40E6  			CALL	INST_XOR_JUDGE
00047D: 1050  			MOV		A,0x50
00047E: 6C00  			XOR		A,@0x00		; Check Result ?
00047F: 40E6  			CALL	INST_XOR_JUDGE
000480: 40E3  			CALL	STATUS_CLEAR
000481: 6001  			MOV		A,@0x01		; 0x01
000482: 0150  			MOV		0x50,A		; [0x50] = 0x01
000483: 7D50  			NEG		0x50
000484: 1003  			MOV		A,STATUS
000485: 6C58  			XOR		A,@0x58		; Check Status ?
000486: 40E6  			CALL	INST_XOR_JUDGE
000487: 1050  			MOV		A,0x50
000488: 6CFF  			XOR		A,@0xFF		; Check Result ?
000489: 467C  			CALL	INST_XCH
00048A: 40E3  			CALL	STATUS_CLEAR
00048B: 6080  			MOV		A,@0x80		; 0x80
00048C: 0150  			MOV		0x50,A		; [0x50] = 0x80
00048D: 7D50  			NEG		0x50
00048E: 1003  			MOV		A,STATUS
00048F: 6C7A  			XOR		A,@0x7A		; Check Status ?
000490: 40E6  			CALL	INST_XOR_JUDGE
000491: 1050  			MOV		A,0x50
000492: 6C80  			XOR		A,@0x80		; Check Result ?
000493: 40E6  			CALL	INST_XOR_JUDGE
000494: 0012  		RET
000495: 6006  			MOV		A,@0x06
000496: 015A  			MOV		INST,A
000497: 40E3  			CALL	STATUS_CLEAR
000498: 60FF  			MOV		A,@0xFF
000499: 0104  			MOV		RSR,A		; Start Address
00049A: 0084  			BTG		RSR
00049B: 1004  			MOV		A,RSR
00049C: 6CFE  			XOR		A,@0xFE		; Check Result ?
00049D: 40E6  			CALL	INST_XOR_JUDGE
00049E: 600E  			MOV		A,@0x0E
00049F: 015A  			MOV		INST,A
0004A0: 6000  			MOV		A,@0x00
0004A1: 0103  			MOV		STATUS,A
0004A2: 6000  			MOV		A,@0x00
0004A3: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004A4: 6000  			MOV		A,@0x00
0004A5: 2203  			BC		Z
0004A6: 0850  			OR		A,0x50		; A = A | [0x50]
0004A7: 3003  			JBC		C			; Check C = 0?
0004A8: 5076  			JMP	INS_FAIL
0004A9: 3103  			JBC		DC			; Check DC = 0?
0004AA: 5076  			JMP	INS_FAIL
0004AB: 3A03  			JBS		Z			; Check Z = 1?
0004AC: 5076  			JMP	INS_FAIL
0004AD: 3503  			JBC		OV			; Check OV = 0?
0004AE: 5076  			JMP	INS_FAIL
0004AF: 3603  			JBC		N			; Check N = 0?
0004B0: 5076  			JMP	INS_FAIL
0004B1: 2203  			BC		Z
0004B2: 6C00  			XOR		A,@0x00		; Check Result ?
0004B3: 3A03  			JBS		Z			; Check Z = 1?
0004B4: 5076  			JMP	INS_FAIL
0004B5: 3603  			JBC		N			; Check N = 0?
0004B6: 5076  			JMP	INS_FAIL
0004B7: 6000  			MOV		A,@0x00
0004B8: 0103  			MOV		STATUS,A
0004B9: 6055  			MOV		A,@0x55
0004BA: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004BB: 60AA  			MOV		A,@0xAA
0004BC: 2203  			BC		Z
0004BD: 0850  			OR		A,0x50		; A = A | [0x50]
0004BE: 3003  			JBC		C			; Check C = 0?
0004BF: 5076  			JMP	INS_FAIL
0004C0: 3103  			JBC		DC			; Check DC = 0?
0004C1: 5076  			JMP	INS_FAIL
0004C2: 3203  			JBC		Z			; Check Z = 0?
0004C3: 5076  			JMP	INS_FAIL
0004C4: 3503  			JBC		OV			; Check OV = 0?
0004C5: 5076  			JMP	INS_FAIL
0004C6: 3E03  			JBS		N			; Check N = 1?
0004C7: 5076  			JMP	INS_FAIL
0004C8: 2203  			BC		Z
0004C9: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004CA: 3A03  			JBS		Z			; Check Z = 1?
0004CB: 5076  			JMP	INS_FAIL
0004CC: 3603  			JBC		N			; Check N = 0?
0004CD: 5076  			JMP	INS_FAIL
0004CE: 600F  			MOV		A,@0x0F
0004CF: 015A  			MOV		INST,A
0004D0: 6000  			MOV		A,@0x00
0004D1: 0103  			MOV		STATUS,A
0004D2: 6000  			MOV		A,@0x00
0004D3: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004D4: 6000  			MOV		A,@0x00		; A = 0x00
0004D5: 2203  			BC		Z
0004D6: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0004D7: 1003  			MOV		A,STATUS
0004D8: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004D9: 3A03  			JBS		Z			; Check Z = 1?
0004DA: 5076  			JMP	INS_FAIL
0004DB: 3603  			JBC		N			; Check N = 0?
0004DC: 5076  			JMP	INS_FAIL
0004DD: 1050  			MOV		A,0x50		; A = Result[0x50]
0004DE: 2203  			BC		Z
0004DF: 2603  			BC		N
0004E0: 6C00  			XOR		A,@0x00		; Check Result ?
0004E1: 3A03  			JBS		Z			; Check Z = 1?
0004E2: 5076  			JMP	INS_FAIL
0004E3: 3603  			JBC		N			; Check N = 0?
0004E4: 5076  			JMP	INS_FAIL
0004E5: 6000  			MOV		A,@0x00
0004E6: 0103  			MOV		STATUS,A
0004E7: 6055  			MOV		A,@0x55
0004E8: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004E9: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004EA: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004EB: 1003  			MOV		A,STATUS
0004EC: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004ED: 3A03  			JBS		Z			; Check Z = 1?
0004EE: 5076  			JMP	INS_FAIL
0004EF: 3603  			JBC		N			; Check N = 0?
0004F0: 5076  			JMP	INS_FAIL
0004F1: 1050  			MOV		A,0x50
0004F2: 2203  			BC		Z
0004F3: 2603  			BC		N
0004F4: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004F5: 3A03  			JBS		Z			; Check Z = 1?
0004F6: 5076  			JMP	INS_FAIL
0004F7: 3603  			JBC		N			; Check N = 0?
0004F8: 5076  			JMP	INS_FAIL
0004F9: 6010  			MOV		A,@0x10
0004FA: 015A  			MOV		INST,A
0004FB: 40E3  			CALL	STATUS_CLEAR
0004FC: 6055  			MOV		A,@0x55
0004FD: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004FE: 60AA  			MOV		A,@0xAA
0004FF: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
000500: 3003  			JBC		C			; Check C = 0?
000501: 5076  			JMP	INS_FAIL
000502: 3103  			JBC		DC			; Check DC = 0?
000503: 5076  			JMP	INS_FAIL
000504: 3A03  			JBS		Z			; Check Z = 1?
000505: 5076  			JMP	INS_FAIL
000506: 3503  			JBC		OV			; Check OV = 0?
000507: 5076  			JMP	INS_FAIL
000508: 3603  			JBC		N			; Check N = 0?
000509: 5076  			JMP	INS_FAIL
00050A: 6C00  			XOR		A,@0x00		; Check Result ?
00050B: 3A03  			JBS		Z			; Check Z = 1?
00050C: 5076  			JMP	INS_FAIL
00050D: 3603  			JBC		N			; Check N = 0?
00050E: 5076  			JMP	INS_FAIL
00050F: 40E3  			CALL	STATUS_CLEAR
000510: 60F5  			MOV		A,@0xF5
000511: 0150  			MOV		0x50,A		; [0x50] = 0xF5
000512: 60FA  			MOV		A,@0xFA
000513: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
000514: 3003  			JBC		C			; Check C = 0?
000515: 5076  			JMP	INS_FAIL
000516: 3103  			JBC		DC			; Check DC = 0?
000517: 5076  			JMP	INS_FAIL
000518: 3203  			JBC		Z			; Check Z = 0?
000519: 5076  			JMP	INS_FAIL
00051A: 3503  			JBC		OV			; Check OV = 0?
00051B: 5076  			JMP	INS_FAIL
00051C: 3E03  			JBS		N			; Check N = 1?
00051D: 5076  			JMP	INS_FAIL
00051E: 6CF0  			XOR		A,@0xF0		; Check Result ?
00051F: 3A03  			JBS		Z			; Check Z = 1?
000520: 5076  			JMP	INS_FAIL
000521: 3603  			JBC		N			; Check N = 0?
000522: 5076  			JMP	INS_FAIL
000523: 6011  			MOV		A,@0x11
000524: 015A  			MOV		INST,A
000525: 40E3  			CALL	STATUS_CLEAR
000526: 6055  			MOV		A,@0x55
000527: 0150  			MOV		0x50,A		; [0x50] = 0x55
000528: 60AA  			MOV		A,@0xAA
000529: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
00052A: 1003  			MOV		A,STATUS
00052B: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
00052C: 3A03  			JBS		Z			; Check Z = 1?
00052D: 5076  			JMP	INS_FAIL
00052E: 3603  			JBC		N			; Check N = 0?
00052F: 5076  			JMP	INS_FAIL
000530: 2203  			BC		Z
000531: 1050  			MOV		A,0x50
000532: 2203  			BC		Z
000533: 6C00  			XOR		A,@0x00		; Check Result ?
000534: 3A03  			JBS		Z			; Check Z = 1?
000535: 5076  			JMP	INS_FAIL
000536: 3603  			JBC		N			; Check N = 0?
000537: 5076  			JMP	INS_FAIL
000538: 40E3  			CALL	STATUS_CLEAR
000539: 60F5  			MOV		A,@0xF5
00053A: 0150  			MOV		0x50,A		; [0x50] = 0xF5
00053B: 60FA  			MOV		A,@0xFA
00053C: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
00053D: 1003  			MOV		A,STATUS
00053E: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00053F: 3A03  			JBS		Z			; Check Z = 1?
000540: 5076  			JMP	INS_FAIL
000541: 3603  			JBC		N			; Check N = 0?
000542: 5076  			JMP	INS_FAIL
000543: 2203  			BC		Z
000544: 1050  			MOV		A,0x50
000545: 2203  			BC		Z
000546: 6CF0  			XOR		A,@0xF0		; Check Result ?
000547: 3A03  			JBS		Z			; Check Z = 1?
000548: 5076  			JMP	INS_FAIL
000549: 3603  			JBC		N			; Check N = 0?
00054A: 5076  			JMP	INS_FAIL
00054B: 6029  			MOV		A,@0x29
00054C: 015A  			MOV		INST,A
00054D: 40E3  			CALL	STATUS_CLEAR
00054E: 60AA  			MOV		A,@0xAA
00054F: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
000550: 3003  			JBC		C			; Check C = 0?
000551: 5076  			JMP	INS_FAIL
000552: 3103  			JBC		DC			; Check DC = 0?
000553: 5076  			JMP	INS_FAIL
000554: 3A03  			JBS		Z			; Check Z = 1?
000555: 5076  			JMP	INS_FAIL
000556: 3503  			JBC		OV			; Check OV = 0?
000557: 5076  			JMP	INS_FAIL
000558: 3603  			JBC		N			; Check N = 0?
000559: 5076  			JMP	INS_FAIL
00055A: 6C00  			XOR		A,@0x00		; Check Result ?
00055B: 3A03  			JBS		Z			; Check Z = 1?
00055C: 5076  			JMP	INS_FAIL
00055D: 3603  			JBC		N			; Check N = 0?
00055E: 5076  			JMP	INS_FAIL
00055F: 40E3  			CALL	STATUS_CLEAR
000560: 60AA  			MOV		A,@0xAA
000561: 68FF  			AND		A,@0xFF		; A = A & 0xFF
000562: 3003  			JBC		C			; Check C = 0?
000563: 5076  			JMP	INS_FAIL
000564: 3103  			JBC		DC			; Check DC = 0?
000565: 5076  			JMP	INS_FAIL
000566: 3203  			JBC		Z			; Check Z = 0?
000567: 5076  			JMP	INS_FAIL
000568: 3503  			JBC		OV			; Check OV = 0?
000569: 5076  			JMP	INS_FAIL
00056A: 3E03  			JBS		N			; Check N = 1?
00056B: 5076  			JMP	INS_FAIL
00056C: 6CAA  			XOR		A,@0xAA		; Check Result ?
00056D: 40E6  			CALL	INST_XOR_JUDGE
00056E: 6015  			MOV		A,@0x15
00056F: 015A  			MOV		INST,A
000570: 40E3  			CALL	STATUS_CLEAR
000571: 60FF  			MOV		A,@0xFF
000572: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000573: 1250  			COMA	0x50		; A = /R
000574: 3003  			JBC		C			; Check C = 0?
000575: 5076  			JMP	INS_FAIL
000576: 3103  			JBC		DC			; Check DC = 0?
000577: 5076  			JMP	INS_FAIL
000578: 3A03  			JBS		Z			; Check Z = 1?
000579: 5076  			JMP	INS_FAIL
00057A: 3503  			JBC		OV			; Check OV = 0?
00057B: 5076  			JMP	INS_FAIL
00057C: 3603  			JBC		N			; Check N = 0?
00057D: 5076  			JMP	INS_FAIL
00057E: 6C00  			XOR		A,@0x00		; Check Result ?
00057F: 3A03  			JBS		Z			; Check Z = 1?
000580: 5076  			JMP	INS_FAIL
000581: 3603  			JBC		N			; Check N = 0?
000582: 5076  			JMP	INS_FAIL	
000583: 40E3  			CALL	STATUS_CLEAR
000584: 6005  			MOV		A,@0x05
000585: 0150  			MOV		0x50,A		; [0x50] = 0x05
000586: 1250  			COMA	0x50		; A = /R
000587: 3003  			JBC		C			; Check C = 0?
000588: 5076  			JMP	INS_FAIL
000589: 3103  			JBC		DC			; Check DC = 0?
00058A: 5076  			JMP	INS_FAIL
00058B: 3203  			JBC		Z			; Check Z = 0?
00058C: 5076  			JMP	INS_FAIL
00058D: 3503  			JBC		OV			; Check OV = 0?
00058E: 5076  			JMP	INS_FAIL
00058F: 3E03  			JBS		N			; Check N = 1?
000590: 5076  			JMP	INS_FAIL
000591: 6CFA  			XOR		A,@0xFA		; Check Result ?
000592: 3A03  			JBS		Z			; Check Z = 1?
000593: 5076  			JMP	INS_FAIL
000594: 3603  			JBC		N			; Check N = 0?
000595: 5076  			JMP	INS_FAIL
000596: 6016  			MOV		A,@0x16
000597: 015A  			MOV		INST,A
000598: 40E3  			CALL	STATUS_CLEAR
000599: 60FF  			MOV		A,@0xFF
00059A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00059B: 1350  			COM		0x50		; [0x50] = /[0x50]
00059C: 1003  			MOV		A,STATUS
00059D: 6C1C  			XOR		A,@0x1C		; Check Status ?
00059E: 3A03  			JBS		Z			; Check Z = 1?
00059F: 5076  			JMP	INS_FAIL
0005A0: 3603  			JBC		N			; Check N = 0?
0005A1: 5076  			JMP	INS_FAIL
0005A2: 2203  			BC		Z
0005A3: 2603  			BC		N
0005A4: 1050  			MOV		A,0x50
0005A5: 6C00  			XOR		A,@0x00		; Check Result ?
0005A6: 3A03  			JBS		Z			; Check Z = 1?
0005A7: 5076  			JMP	INS_FAIL
0005A8: 3603  			JBC		N			; Check N = 0?
0005A9: 5076  			JMP	INS_FAIL
0005AA: 40E3  			CALL	STATUS_CLEAR
0005AB: 6000  			MOV		A,@0x00
0005AC: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0005AD: 1350  			COM		0x50		; [0x50] = /[0x50]
0005AE: 1003  			MOV		A,STATUS
0005AF: 6C58  			XOR		A,@0x58		; Check Status ?
0005B0: 3A03  			JBS		Z			; Check Z = 1?
0005B1: 5076  			JMP	INS_FAIL
0005B2: 3603  			JBC		N			; Check N = 0?
0005B3: 5076  			JMP	INS_FAIL
0005B4: 2203  			BC		Z
0005B5: 2603  			BC		N
0005B6: 1050  			MOV		A,0x50
0005B7: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005B8: 3A03  			JBS		Z			; Check Z = 1?
0005B9: 5076  			JMP	INS_FAIL
0005BA: 3603  			JBC		N			; Check N = 0?
0005BB: 5076  			JMP	INS_FAIL
0005BC: 6026  			MOV		A,@0x26
0005BD: 015A  			MOV		INST,A
0005BE: 40E3  			CALL	STATUS_CLEAR
0005BF: 60A5  			MOV		A,@0xA5
0005C0: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
0005C1: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005C2: 40E6  			CALL	INST_XOR_JUDGE
0005C3: 0012  		RET
0005C4: 602B  			MOV		A,@0x2B
0005C5: 015A  			MOV		INST,A
0005C6: 40E3  			CALL	STATUS_CLEAR
0005C7: 6055  			MOV		A,@0x55
0005C8: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005C9: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
0005CA: 1003  			MOV		A,STATUS
0005CB: 6C58  			XOR		A,@0x58		; Check Status ?
0005CC: 40E6  			CALL	INST_XOR_JUDGE
0005CD: 1050  			MOV		A,0x50
0005CE: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005CF: 40E6  			CALL	INST_XOR_JUDGE
0005D0: 602A  			MOV		A,@0x2A
0005D1: 015A  			MOV		INST,A
0005D2: 40E3  			CALL 	STATUS_CLEAR
0005D3: 6055  			MOV		A,@0x55
0005D4: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005D5: 6E50  			RRA		0x50		; A = [0x50] >> 1
0005D6: 3003  			JBC		C			; Check C = 0?
0005D7: 5076  			JMP	INS_FAIL
0005D8: 3103  			JBC		DC			; Check DC = 0?
0005D9: 5076  			JMP	INS_FAIL
0005DA: 3203  			JBC		Z			; Check Z = 0?
0005DB: 5076  			JMP	INS_FAIL
0005DC: 3503  			JBC		OV			; Check OV = 0?
0005DD: 5076  			JMP	INS_FAIL
0005DE: 3E03  			JBS		N			; Check N = 1?
0005DF: 5076  			JMP	INS_FAIL
0005E0: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005E1: 40E6  			CALL	INST_XOR_JUDGE
0005E2: 601B  			MOV		A,@0x1B
0005E3: 015A  			MOV		INST,A
0005E4: 40E3  			CALL	STATUS_CLEAR
0005E5: 2803  			BS		C
0005E6: 60AA  			MOV		A,@0xAA
0005E7: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005E8: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005E9: 3003  			JBC		C			; Check C = 0?
0005EA: 5076  			JMP	INS_FAIL
0005EB: 3103  			JBC		DC			; Check DC = 0?
0005EC: 5076  			JMP	INS_FAIL
0005ED: 3203  			JBC		Z			; Check Z = 0?
0005EE: 5076  			JMP	INS_FAIL
0005EF: 3503  			JBC		OV			; Check OV = 0?
0005F0: 5076  			JMP	INS_FAIL
0005F1: 3E03  			JBS		N			; Check N = 1?
0005F2: 5076  			JMP	INS_FAIL
0005F3: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005F4: 40E6  			CALL	INST_XOR_JUDGE
0005F5: 40E3  			CALL	STATUS_CLEAR
0005F6: 6055  			MOV		A,@0x55
0005F7: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005F8: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005F9: 3803  			JBS		C			; Check C = 1?
0005FA: 5076  			JMP	INS_FAIL
0005FB: 3103  			JBC		DC			; Check DC = 0?
0005FC: 5076  			JMP	INS_FAIL
0005FD: 3203  			JBC		Z			; Check Z = 0?
0005FE: 5076  			JMP	INS_FAIL
0005FF: 3503  			JBC		OV			; Check OV = 0?
000600: 5076  			JMP	INS_FAIL
000601: 3603  			JBC		N			; Check N = 0?
000602: 5076  			JMP	INS_FAIL
000603: 6C2A  			XOR		A,@0x2A		; Check Result ?
000604: 40E6  			CALL	INST_XOR_JUDGE
000605: 601C  			MOV		A,@0x1C
000606: 015A  			MOV		INST,A
000607: 40E3  			CALL	STATUS_CLEAR
000608: 2803  			BS		C
000609: 60AA  			MOV		A,@0xAA
00060A: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00060B: 2203  			BC		Z
00060C: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
00060D: 1003  			MOV		A,STATUS
00060E: 6C58  			XOR		A,@0x58		; Check Status ?
00060F: 40E6  			CALL	INST_XOR_JUDGE
000610: 1050  			MOV		A,0x50
000611: 6CD5  			XOR		A,@0xD5		; Check Result ?
000612: 40E6  			CALL	INST_XOR_JUDGE
000613: 40E3  			CALL	STATUS_CLEAR
000614: 6055  			MOV		A,@0x55
000615: 0150  			MOV		0x50,A		; [0x50] = 0x55
000616: 2203  			BC		Z
000617: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
000618: 1003  			MOV		A,STATUS
000619: 6C19  			XOR		A,@0x19		; Check Status ?
00061A: 3A03  			JBS		Z			; Check Z = 1?
00061B: 5076  			JMP	INS_FAIL
00061C: 3603  			JBC		N			; Check N = 0?
00061D: 5076  			JMP	INS_FAIL
00061E: 1050  			MOV		A,0x50
00061F: 6C2A  			XOR		A,@0x2A		; Check Result ?
000620: 40E6  			CALL	INST_XOR_JUDGE
000621: 601D  			MOV		A,@0x1D
000622: 015A  			MOV		INST,A
000623: 40E3  			CALL STATUS_CLEAR
000624: 2803  			BS		C
000625: 6055  			MOV		A,@0x55
000626: 0150  			MOV		0x50,A		; [0x50] = 0x55
000627: 1A50  			RLCA	0x50		; A = [0x50] << 1
000628: 3003  			JBC		C			; Check C = 0?
000629: 5076  			JMP	INS_FAIL
00062A: 3103  			JBC		DC			; Check DC = 0?
00062B: 5076  			JMP	INS_FAIL
00062C: 3203  			JBC		Z			; Check Z = 0?
00062D: 5076  			JMP	INS_FAIL
00062E: 3503  			JBC		OV			; Check OV = 0?
00062F: 5076  			JMP	INS_FAIL
000630: 3E03  			JBS		N			; Check N = 1?
000631: 5076  			JMP	INS_FAIL
000632: 6CAB  			XOR		A,@0xAB		; Check Result ?
000633: 40E6  			CALL	INST_XOR_JUDGE
000634: 40E3  			CALL	STATUS_CLEAR
000635: 60AA  			MOV		A,@0xAA
000636: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000637: 1A50  			RLCA	0x50		; A = [0x50] << 1
000638: 3803  			JBS		C			; Check C = 1?
000639: 5076  			JMP	INS_FAIL
00063A: 3103  			JBC		DC			; Check DC = 0?
00063B: 5076  			JMP	INS_FAIL
00063C: 3203  			JBC		Z			; Check Z = 0?
00063D: 5076  			JMP	INS_FAIL
00063E: 3503  			JBC		OV			; Check OV = 0?
00063F: 5076  			JMP	INS_FAIL
000640: 3603  			JBC		N			; Check N = 0?
000641: 5076  			JMP	INS_FAIL
000642: 6C54  			XOR		A,@0x54		; Check Result ?
000643: 40E6  			CALL	INST_XOR_JUDGE
000644: 601E  			MOV		A,@0x1E
000645: 015A  			MOV		INST,A
000646: 40E3  			CALL	STATUS_CLEAR
000647: 2803  			BS		C
000648: 6055  			MOV		A,@0x55
000649: 0150  			MOV		0x50,A		; [0x50] = 0x55
00064A: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
00064B: 1003  			MOV		A,STATUS
00064C: 6C58  			XOR		A,@0x58		; Check Status ?
00064D: 40E6  			CALL	INST_XOR_JUDGE
00064E: 1050  			MOV		A,0x50
00064F: 6CAB  			XOR		A,@0xAB		; Check Result ?
000650: 40E6  			CALL	INST_XOR_JUDGE
000651: 40E3  			CALL	STATUS_CLEAR
000652: 60AA  			MOV		A,@0xAA
000653: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000654: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000655: 1003  			MOV		A,STATUS
000656: 6C19  			XOR		A,@0x19		; Check Status ?
000657: 40E6  			CALL	INST_XOR_JUDGE
000658: 1050  			MOV		A,0x50
000659: 6C54  			XOR		A,@0x54		; Check Result ?
00065A: 40E6  			CALL	INST_XOR_JUDGE
00065B: 602E  			MOV		A,@0x2E
00065C: 015A  			MOV		INST,A
00065D: 40E3  			CALL	STATUS_CLEAR
00065E: 605A  			MOV		A,@0x5A
00065F: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000660: 7250  			RLA		0x50		; A = [0x50] << 1
000661: 3003  			JBC		C			; Check C = 0?
000662: 5076  			JMP	INS_FAIL
000663: 3103  			JBC		DC			; Check DC = 0?
000664: 5076  			JMP	INS_FAIL
000665: 3203  			JBC		Z			; Check Z = 0?
000666: 5076  			JMP	INS_FAIL
000667: 3503  			JBC		OV			; Check OV = 0?
000668: 5076  			JMP	INS_FAIL
000669: 3E03  			JBS		N			; Check N = 1?
00066A: 5076  			JMP	INS_FAIL
00066B: 6CB4  			XOR		A,@0xB4		; Check Result ?
00066C: 40E6  			CALL	INST_XOR_JUDGE
00066D: 602F  			MOV		A,@0x2F
00066E: 015A  			MOV		INST,A
00066F: 40E3  			CALL	STATUS_CLEAR
000670: 605A  			MOV		A,@0x5A
000671: 0150  			MOV		0x50,A		; [0x50] = 0xA5
000672: 7350  			RL		0x50		; [0x50] = [0x50] << 1
000673: 1003  			MOV		A,STATUS
000674: 6C58  			XOR		A,@0x58		; Check Status ?
000675: 3A03  			JBS		Z			; Check Z = 1?
000676: 5076  			JMP	INS_FAIL
000677: 3603  			JBC		N			; Check N = 0?
000678: 5076  			JMP	INS_FAIL
000679: 1050  			MOV		A,0x50
00067A: 6CB4  			XOR		A,@0xB4		; Check Result ?
00067B: 40E6  			CALL	INST_XOR_JUDGE
00067C: 602D  			MOV		A,@0x2D
00067D: 015A  			MOV		INST,A
00067E: 40E3  			CALL	STATUS_CLEAR
00067F: 6055  			MOV		A,@0x55
000680: 0150  			MOV		0x50,A		; [0x50] = 0x55
000681: 60AA  			MOV		A,@0xAA
000682: 7150  			XCH		0x50		; [0x50] <-> A
000683: 6C55  			XOR		A,@0x55		; Check Result ?
000684: 3A03  			JBS		Z			; Check Z = 1?
000685: 5076  			JMP	INS_FAIL
000686: 3603  			JBC		N			; Check N = 0?
000687: 5076  			JMP	INS_FAIL
000688: 1050  			MOV		A,0x50
000689: 6CAA  			XOR		A,@0xAA		; Check Result ?
00068A: 40E6  			CALL	INST_XOR_JUDGE
00068B: 0012  		RET
00068C: 6007  			MOV		A,@0x07
00068D: 015A  			MOV		INST,A
00068E: 40E3  			CALL	STATUS_CLEAR
00068F: 60FF  			MOV		A,@0xFF
000690: 0150  			MOV		0x50,A
000691: 1003  			MOV		A,STATUS
000692: 6C18  			XOR		A,@0x18		;At  OCDS
000693: 40E6  			CALL	INST_XOR_JUDGE
000694: 1050  			MOV		A,0x50
000695: 6CFF  			XOR		A,@0xFF		; Check Result ?
000696: 40E6  			CALL	INST_XOR_JUDGE
000697: 6014  			MOV		A,@0x14
000698: 015A  			MOV		INST,A
000699: 40E3  			CALL	STATUS_CLEAR
00069A: 6000  			MOV		A,@0x00
00069B: 0150  			MOV		0x50,A		; [0x50] = 0x00		
00069C: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
00069D: 1003  			MOV		A,STATUS
00069E: 6C1C  			XOR		A,@0x1C		; Check Status ?
00069F: 3A03  			JBS		Z			; Check Z = 1?
0006A0: 5076  			JMP	INS_FAIL
0006A1: 3603  			JBC		N			; Check N = 0?
0006A2: 5076  			JMP	INS_FAIL
0006A3: 1050  			MOV		A,0x50
0006A4: 2203  			BC		Z
0006A5: 6C00  			XOR		A,@0x00		; Check Result ?
0006A6: 3A03  			JBS		Z			; Check Z = 1?
0006A7: 5076  			JMP	INS_FAIL
0006A8: 3603  			JBC		N			; Check N = 0?
0006A9: 5076  			JMP	INS_FAIL
0006AA: 40E3  			CALL	STATUS_CLEAR
0006AB: 6000  			MOV		A,@0x00
0006AC: 0150  			MOV		0x50,A		; [0x50] = 0x00		
0006AD: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
0006AE: 2850  			BS		0x50,0
0006AF: 1050  			MOV		A,0x50
0006B0: 6C01  			XOR		A,@0x01		; Check Result ?
0006B1: 40E6  			CALL	INST_XOR_JUDGE
0006B2: 601F  			MOV		A,@0x1F
0006B3: 015A  			MOV		INST,A
0006B4: 40E3  			CALL	STATUS_CLEAR
0006B5: 605A  			MOV		A,@0x5A
0006B6: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006B7: 1C50  			SWAPA	0x50
0006B8: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006B9: 40E6  			CALL	INST_XOR_JUDGE
0006BA: 6020  			MOV		A,@0x20
0006BB: 015A  			MOV		INST,A
0006BC: 40E3  			CALL	STATUS_CLEAR
0006BD: 605A  			MOV		A,@0x5A
0006BE: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006BF: 1D50  			SWAP	0x50
0006C0: 1050  			MOV		A,0x50
0006C1: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006C2: 40E6  			CALL	INST_XOR_JUDGE
0006C3: 0012  		RET
0006C4: 0012  		RET
0006C5: 601A  			MOV		A,@0x1A
0006C6: 015A  			MOV		INST,A
0006C7: 40E3  			CALL	STATUS_CLEAR
0006C8: 6001  			MOV		A,@0x01
0006C9: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006CA: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006CB: 5076  			JMP		INS_FAIL
0006CC: 1050  			MOV		A,0x50
0006CD: 6C00  			XOR		A,@0x00		; Check Result ?
0006CE: 40E6  			CALL	INST_XOR_JUDGE	
0006CF: 40E3  			CALL	STATUS_CLEAR
0006D0: 6002  			MOV		A,@0x02
0006D1: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006D2: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006D3: 56D5  			JMP		$+2
0006D4: 5076  			JMP		INS_FAIL
0006D5: 6019  			MOV		A,@0x19
0006D6: 015A  			MOV		INST,A
0006D7: 40E3  			CALL	STATUS_CLEAR
0006D8: 6001  			MOV		A,@0x01
0006D9: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006DA: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006DB: 5076  			JMP	INS_FAIL
0006DC: 6C00  			XOR		A,@0x00		; Check Result ?
0006DD: 40E6  			CALL	INST_XOR_JUDGE
0006DE: 40E3  			CALL	STATUS_CLEAR
0006DF: 6002  			MOV		A,@0x02
0006E0: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006E1: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006E2: 56E4  			JMP		$+2
0006E3: 5076  			JMP	INS_FAIL
0006E4: 6021  			MOV		A,@0x21
0006E5: 015A  			MOV		INST,A
0006E6: 40E3  			CALL	STATUS_CLEAR
0006E7: 60FF  			MOV		A,@0xFF
0006E8: 0150  			MOV		0x50,A
0006E9: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006EA: 5076  			JMP		INS_FAIL
0006EB: 6C00  			XOR		A,@0x00		; Check Result ?
0006EC: 40E6  			CALL	INST_XOR_JUDGE
0006ED: 40E3  			CALL	STATUS_CLEAR
0006EE: 6080  			MOV		A,@0x80
0006EF: 0150  			MOV		0x50,A
0006F0: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006F1: 56F3  			JMP		$+2
0006F2: 5076  			JMP		INS_FAIL
0006F3: 6022  			MOV		A,@0x22
0006F4: 015A  			MOV		INST,A
0006F5: 40E3  			CALL	STATUS_CLEAR
0006F6: 60FF  			MOV		A,@0xFF
0006F7: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006F8: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006F9: 5076  			JMP		INS_FAIL
0006FA: 1050  			MOV		A,0x50
0006FB: 6C00  			XOR		A,@0x00		; Check Result ?
0006FC: 40E6  			CALL	INST_XOR_JUDGE
0006FD: 40E3  			CALL	STATUS_CLEAR
0006FE: 6080  			MOV		A,@0x80
0006FF: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000700: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
000701: 5703  			JMP		$+2
000702: 5076  			JMP		INS_FAIL
000703: 0012  		RET
000704: 6023  			MOV		A,@0x23
000705: 015A  			MOV		INST,A
000706: 40E3  			CALL	STATUS_CLEAR
000707: 605A  			MOV		A,@0x5A
000708: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000709: 6150  			JE		0x50		; [0x50] = A?
00070A: 5076  			JMP		INS_FAIL
00070B: 605B  			MOV		A,@0x5B
00070C: 0150  			MOV		0x50,A		; [0x50] = 0x5B
00070D: 605C  			MOV		A,@0x5C
00070E: 6150  			JE		0x50		; [0x50] = A(0x5C)?
00070F: 5711  			JMP		$+2
000710: 5076  			JMP		INS_FAIL
000711: 6024  			MOV		A,@0x24
000712: 015A  			MOV		INST,A
000713: 40E3  			CALL	STATUS_CLEAR
000714: 607F  			MOV		A,@0x7F
000715: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000716: 6000  			MOV		A,@0x00
000717: 6250  			JGE		0x50		; [0x50] > A ?
000718: 5076  			JMP		INS_FAIL
000719: 40E3  			CALL	STATUS_CLEAR
00071A: 60FF  			MOV		A,@0xFF
00071B: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00071C: 6080  			MOV		A,@0x80
00071D: 6250  			JGE		0x50		; [0x50] > A ?
00071E: 5076  			JMP		INS_FAIL
00071F: 40E3  			CALL	STATUS_CLEAR
000720: 6000  			MOV		A,@0x00
000721: 0150  			MOV		0x50,A		; [0x50] = 0x00
000722: 60FF  			MOV		A,@0xFF
000723: 6250  			JGE		0x50		; [0x50] > A(0xFF) ?x
000724: 5726  			JMP		$+2
000725: 5076  			JMP		INS_FAIL
000726: 6025  			MOV		A,@0x25
000727: 015A  			MOV		INST,A
000728: 40E3  			CALL	STATUS_CLEAR
000729: 6000  			MOV		A,@0x00
00072A: 0150  			MOV		0x50,A		; [0x50] = 0x00
00072B: 607F  			MOV		A,@0x7F
00072C: 6350  			JLE		0x50		; [0x50] < A ?
00072D: 5076  			JMP		INS_FAIL
00072E: 6000  			MOV		A,@0x00
00072F: 0103  			MOV		STATUS,A
000730: 6080  			MOV		A,@0x80
000731: 0150  			MOV		0x50,A		; [0x50] = 0x80
000732: 60FF  			MOV		A,@0xFF
000733: 6350  			JLE		0x50		; [0x50] < A ?
000734: 5076  			JMP		INS_FAIL
000735: 40E3  			CALL	STATUS_CLEAR
000736: 60FF  			MOV		A,@0xFF
000737: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000738: 6000  			MOV		A,@0x00
000739: 6350  			JLE		0x50		; [0x50] < A(0x00) ?x
00073A: 573C  			JMP		$+2
00073B: 5076  			JMP		INS_FAIL
00073C: 6027  			MOV		A,@0x27
00073D: 015A  			MOV		INST,A
00073E: 40E3  			CALL	STATUS_CLEAR
00073F: 607F  			MOV		A,@0x7F
000740: 657F  			JE		@0x7F
000741: 5076  			JMP	INS_FAIL
000742: 0012  		RET
000743: 6002  			MOV	A,@0x02
000744: 015A  			MOV	INST,A
000745: 40E3  			CALL	STATUS_CLEAR
000746: 6003  			MOV		A,@0x03
000747: 0150  			MOV		0x50,A
000748: 47E9  			CALL	CALL_Test
000749: 1050  			MOV		A,0x50
00074A: 6C04  			XOR		A,@0x04
00074B: 40E6  			CALL	INST_XOR_JUDGE
00074C: 6003  			MOV		A,@0x03
00074D: 015A  			MOV		INST,A
00074E: 40E3  			CALL	STATUS_CLEAR
00074F: 6003  			MOV		A,@0x03
000750: 0151  			MOV		0x51,A
000751: 7A80 0FFE  			LCALL	LCALL_Test
000753: 1051  			MOV		A,0x51
000754: 6C04  			XOR		A,@0x04		; Check Result ?
000755: 40E6  			CALL	INST_XOR_JUDGE
000756: 602C  			MOV		A,@0x2C
000757: 015A  			MOV		INST,A
000758: 40E3  			CALL	STATUS_CLEAR
000759: 6000  			MOV		A,@0x00
00075A: 4EF0  			CALL	INST_RETL_TABLE
00075B: 6CA1  			XOR		A,@0xA1
00075C: 40E6  			CALL	INST_XOR_JUDGE
00075D: 6001  			MOV		A,@0x01
00075E: 4EF0  			CALL	INST_RETL_TABLE
00075F: 6CA2  			XOR		A,@0xA2
000760: 40E6  			CALL	INST_XOR_JUDGE
000761: 6002  			MOV		A,@0x02
000762: 4EF0  			CALL	INST_RETL_TABLE
000763: 6CA4  			XOR		A,@0xA4
000764: 40E6  			CALL	INST_XOR_JUDGE
000765: 6003  			MOV		A,@0x03
000766: 4EF0  			CALL	INST_RETL_TABLE
000767: 6CA8  			XOR		A,@0xA8
000768: 40E6  			CALL	INST_XOR_JUDGE
000769: 0012  		RET
00076A: 6004  			MOV		A,@0x04
00076B: 015A  			MOV		INST,A
00076C: 0010  			ENI
00076D: 3F03  			JBS		IT		; Check IT = 1?
00076E: 5076  			JMP	INS_FAIL
00076F: 6005  			MOV		A,@0x05
000770: 015A  			MOV		INST,A
000771: 0011  			DISI
000772: 3703  			JBC		IT		; Check IT = 0?
000773: 5076  			JMP	INS_FAIL
000774: 0012  		RET
000775: 40E3  		CALL	STATUS_CLEAR
000776: 2803  		BS	C
000777: 6903  		SJC		@0x03
000778: 506A  		JMP		JMP_FAIL
000779: 506A  		JMP		JMP_FAIL
00077A: 506A  		JMP		JMP_FAIL
00077B: 2003  		BC	C
00077C: 6A03  		SJNC	bbb		;@0x03
00077D: 506A  		JMP		JMP_FAIL
00077E: 506A  		JMP		JMP_FAIL
00077F: 506A  		JMP		JMP_FAIL
000780: 2A03  			BS		Z
000781: 6B03  			SJZ		@0x03
000782: 506A  			JMP		JMP_FAIL
000783: 506A  			JMP		JMP_FAIL
000784: 506A  			JMP		JMP_FAIL
000785: 0200  			CLRA
000786: 6B03  			SJZ		@0x03
000787: 506A  			JMP		JMP_FAIL
000788: 506A  			JMP		JMP_FAIL
000789: 506A  			JMP		JMP_FAIL
00078A: 5792  		JMP		IATEST1		;JMP back Test as below
00078B: 579F  			JMP	IATEST2		; -9
00078C: 506A  			JMP	JMP_FAIL	; -8
00078D: 506A  			JMP	JMP_FAIL	; -7
00078E: 506A  			JMP	JMP_FAIL	; -6
00078F: 506A  			JMP	JMP_FAIL	; -5
000790: 506A  			JMP	JMP_FAIL	; -4
000791: 506A  			JMP	JMP_FAIL	; -3
000792: 2803  			BS		C		; -2
000793: 69F7  			SJC		aaa		; -1
000794: 69F7  			SJC		@0xF7	; -1
000795: 506A  			JMP		JMP_FAIL
000796: 506A  			JMP		JMP_FAIL
000797: 506A  			JMP		JMP_FAIL
000798: 57AB  			JMP		IATEST3		; -9
000799: 506A  			JMP		JMP_FAIL	; -8
00079A: 506A  			JMP		JMP_FAIL	; -7
00079B: 506A  			JMP		JMP_FAIL	; -6
00079C: 506A  			JMP		JMP_FAIL	; -5
00079D: 506A  			JMP		JMP_FAIL	; -4
00079E: 506A  			JMP		JMP_FAIL	; -3
00079F: 2003  			BC		C		; -2
0007A0: 6AF7  			SJNC		@0xF7	; -1
0007A1: 57BC  			JMP		_IPass
0007A2: 57BC  			JMP		_IPass
0007A3: 57BC  			JMP		_IPass
0007A4: 57B7  			JMP		IATEST4		; -9
0007A5: 506A  			JMP		JMP_FAIL	; -8
0007A6: 506A  			JMP		JMP_FAIL	; -7
0007A7: 506A  			JMP		JMP_FAIL	; -6
0007A8: 506A  			JMP		JMP_FAIL	; -5
0007A9: 506A  			JMP		JMP_FAIL	; -4
0007AA: 506A  			JMP		JMP_FAIL	; -3
0007AB: 2A03  			BS		Z		; -2
0007AC: 6BF7  			SJZ		@0xF7	; -1
0007AD: 506A  			JMP		JMP_FAIL
0007AE: 506A  			JMP		JMP_FAIL
0007AF: 506A  			JMP		JMP_FAIL
0007B0: 57BC  			JMP		_IPass		; -9
0007B1: 506A  			JMP		JMP_FAIL	; -8
0007B2: 506A  			JMP		JMP_FAIL	; -7
0007B3: 506A  			JMP		JMP_FAIL	; -6
0007B4: 506A  			JMP		JMP_FAIL	; -5
0007B5: 506A  			JMP		JMP_FAIL	; -4
0007B6: 506A  			JMP		JMP_FAIL	; -3
0007B7: 2203  			BC		Z		; -2
0007B8: 6DF7  			SJNZ	@0xF7	; -1
0007B9: 506A  			JMP		JMP_FAIL
0007BA: 506A  			JMP		JMP_FAIL
0007BB: 506A  			JMP		JMP_FAIL
0007BC: 0000  				NOP
0007BD: 0012  		RET
0007BE: 6028  			MOV		A,@0x28
0007BF: 015A  			MOV		INST,A
0007C0: 7A01  			SBANK	1
0007C1: 60F1  			MOV		A,@0xF1		;ADDR(0x0EF1)
0007C2: 0145  			MOV		TBPTL,A
0007C3: 600E  			MOV		A,@0x0E
0007C4: 0146  			MOV		TBPTH,A
0007C5: 7A00  			SBANK	0
0007C6: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007C7: 6CA1  			XOR		A,@0xA1
0007C8: 40E6  			CALL	INST_XOR_JUDGE
0007C9: 1050  			MOV		A,0x50
0007CA: 6C70  			XOR		A,@0x70
0007CB: 40E6  			CALL	INST_XOR_JUDGE
0007CC: 7A01  			SBANK	1
0007CD: 1545  			INC		TBPTL		;ADDR(0x0EF2)
0007CE: 7A00  			SBANK	0
0007CF: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007D0: 6CA2  			XOR		A,@0xA2
0007D1: 40E6  			CALL	INST_XOR_JUDGE
0007D2: 1050  			MOV		A,0x50
0007D3: 6C70  			XOR		A,@0x70
0007D4: 40E6  			CALL	INST_XOR_JUDGE
0007D5: 6033  			MOV		A,@0x33
0007D6: 015A  			MOV		INST,A
0007D7: 7A01  			SBANK	1
0007D8: 60F3  			MOV		A,@0xF3		;ADDR(0x0EF3)
0007D9: 0145  			MOV		TBPTL,A
0007DA: 600E  			MOV		A,@0x0E
0007DB: 0146  			MOV		TBPTH,A
0007DC: 7A00  			SBANK	0
0007DD: 7B50  			TBRD	0x50
0007DE: 1050  			MOV		A,0x50
0007DF: 6CA4  			XOR		A,@0xA4
0007E0: 40E6  			CALL	INST_XOR_JUDGE
0007E1: 7A01  			SBANK	1
0007E2: 1545  			INC		TBPTL		;ADDR(0x0EF4)
0007E3: 7A00  			SBANK	0
0007E4: 7B50  			TBRD	0x50
0007E5: 1050  			MOV		A,0x50
0007E6: 6CA8  			XOR		A,@0xA8
0007E7: 40E6  			CALL	INST_XOR_JUDGE
0007E8: 0012  		RET
0007E9: 1550  		INC		0x50
0007EA: 0012  		RET
000800: 506A  	JMP		JMP_FAIL
000801: 506A  	JMP		JMP_FAIL
000802: 506A  	JMP		JMP_FAIL
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000F00: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
000F01: 0104  		MOV		RSR,A
000F02: 7A40  		GBANK	0
000F03: 6055  		MOV		A,@0x55
000F04: 0100  		MOV		IAR,A
000F05: 1504  		INC		RSR
000F06: 6000  		MOV		A,@0x00
000F07: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F08: 3A03  		JBS		Z
000F09: 5F03  		JMP		$-6
000F0A: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
000F0B: 0104  		MOV		RSR,A
000F0C: 7A40  		GBANK	0
000F0D: 6055  		MOV		A,@0x55
000F0E: 0D00  		XOR		IAR,A
000F0F: 3A03  		JBS		Z
000F10: 5070  		JMP		RAM_FAIL
000F11: 1504  		INC		RSR
000F12: 6000  		MOV		A,@0x00
000F13: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F14: 3A03  		JBS		Z
000F15: 5F0D  		JMP		$-8
000F16: 0012  		RET
000F17: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
000F18: 0104  		MOV		RSR,A
000F19: 7A40  		GBANK	0
000F1A: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
000F1B: 0100  		MOV		IAR,A
000F1C: 1504  		INC		RSR
000F1D: 6000  		MOV		A,@0x00
000F1E: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F1F: 3A03  		JBS		Z
000F20: 5F1A  		JMP		$-6
000F21: 6080  		MOV		A,@0x80
000F22: 0104  		MOV		RSR,A
000F23: 7A40  		GBANK	0
000F24: 60AA  		MOV		A,@0xAA
000F25: 0D00  		XOR		IAR,A
000F26: 3A03  		JBS		Z
000F27: 5070  		JMP		RAM_FAIL
000F28: 1504  		INC		RSR
000F29: 6000  		MOV		A,@0x00
000F2A: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F2B: 3A03  		JBS		Z
000F2C: 5F24  		JMP		$-8
000F2D: 0012  		RET
000F2E: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
000F2F: 0104  		MOV		RSR,A
000F30: 7A41  		GBANK	1
000F31: 6033  		MOV		A,@0x33		; SRAM(0x33)
000F32: 0100  		MOV		IAR,A
000F33: 1504  		INC		RSR
000F34: 6000  		MOV		A,@0x00
000F35: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F36: 3A03  		JBS		Z
000F37: 5F31  		JMP		$-6
000F38: 6080  		MOV		A,@0x80
000F39: 0104  		MOV		RSR,A
000F3A: 7A41  		GBANK	1
000F3B: 6033  		MOV		A,@0x33
000F3C: 0D00  		XOR		IAR,A
000F3D: 3A03  		JBS		Z
000F3E: 5070  		JMP		RAM_FAIL
000F3F: 1504  		INC		RSR
000F40: 6000  		MOV		A,@0x00
000F41: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F42: 3A03  		JBS		Z
000F43: 5F3B  		JMP		$-8
000F44: 0012  		RET
000F45: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
000F46: 0104  		MOV		RSR,A
000F47: 7A41  		GBANK	1
000F48: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
000F49: 0100  		MOV		IAR,A
000F4A: 1504  		INC		RSR
000F4B: 6000  		MOV		A,@0x00
000F4C: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F4D: 3A03  		JBS		Z
000F4E: 5F48  		JMP		$-6
000F4F: 6080  		MOV		A,@0x80
000F50: 0104  		MOV		RSR,A
000F51: 7A41  		GBANK	1
000F52: 60CC  		MOV		A,@0xCC
000F53: 0D00  		XOR		IAR,A
000F54: 3A03  		JBS		Z
000F55: 5070  		JMP		RAM_FAIL
000F56: 1504  		INC		RSR
000F57: 6000  		MOV		A,@0x00
000F58: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F59: 3A03  		JBS		Z
000F5A: 5F52  		JMP		$-8
000F5B: 0012  		RET
000FFE: 1551  		INC		0x51
000FFF: 0012  		RET
