****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0XC    , End=0X4F   , Size=68
Start=0X869  , End=0X17FF , Size=3991
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  2084 x 15 bits( 33.9%)
Free            |  4060 x 15 bits( 66.1%)
----------------------------------------
****************************************
The Checksum is -- 0x57D2
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 505F  	JMP JMP_FAIL	;0x0046
000003: 505F  	JMP JMP_FAIL	;0x0047
000004: 505F  	JMP JMP_FAIL	;0x0048
000005: 505F  	JMP JMP_FAIL	;0x0049
000006: 505F  	JMP JMP_FAIL	;0x004A
000007: 505F  	JMP JMP_FAIL	;0x004B
000008: 505F  	JMP JMP_FAIL	;0x004C
000009: 505F  	JMP JMP_FAIL	;0x004D
00000A: 505F  	JMP JMP_FAIL	;0x004E
00000B: 505F  	JMP JMP_FAIL	;0x004F
000050: 2805  	BS		P50	;Off P50
000051: 2905  	BS		P51	;On P51
000052: 4099  	CALL	RAM_SHA_INIT
000053: 40A3  	CALL	RAM_IND_INIT
000054: 40CC  	CALL	EEPROM_INIT
000055: 7A00  	SBANK	0
000056: 40E2  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000057: 437D  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000058: 448C  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000059: 4506  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
00005A: 453E  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005B: 453F  	CALL	TEST_INST_BRANCH		;JE R, JGE, JLE, JE K, JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA, RETL, CALL, JMP, LCALL, LJMP
00005C: 4540  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
00005D: 5055  	JMP		BACK_GROUND_LOOP
00005E: 5050  	JMP		MAIN
00005F: 7A00  	SBANK	0
000060: 505F  	JMP		JMP_FAIL
000061: 7A00  	SBANK	0
000062: 5061  	JMP		RAM_FAIL
000063: 7A00  	SBANK	0
000064: 5063  	JMP		INS_FAIL
000065: 7A00  		SBANK	0
000066: 2F0E  		BS		CPUS	;FSYS=FM
000067: 260E  		BC		IDLE	;SLEEP_MODE
000068: 0012  		RET
000069: 7A00  		SBANK	0
00006A: 0305  		CLR		P5
00006B: 600F  		MOV		A,@0x0F	;P50~P53 As Input, Other Setting As Output
00006C: 010B  		MOV		IOCR5,A
00006D: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00006E: 0105  		MOV		P5,A
00006F: 0012  		RET
000070: 7A00  		SBANK	0
000071: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
000072: 5075  		JMP		$+3
000073: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000074: 0003  		SLEP
000075: 3B03  		JBS		P
000076: 5079  		JMP		$+3
000077: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
000078: 0003  		SLEP
000079: 3B03  		JBS		P
00007A: 507D  		JMP		$+3
00007B: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007C: 2105  		BC		P5,1		; PWR ON reset,Light PWR_LED
00007D: 0003  		SLEP		
00007E: 0012  		RET
00007F: 3A05  		JBS		P5,2		; Push, or not
000080: 5082  		JMP		$+2
000081: 507F  		JMP		$-2
000082: 3A05  		JBS		P5,2
000083: 507F  		JMP		KEY_DEBOUNCE
000084: 3A05  		JBS		P5,2
000085: 507F  		JMP		KEY_DEBOUNCE
000086: 3A05  		JBS		P5,2
000087: 507F  		JMP		KEY_DEBOUNCE
000088: 3A05  		JBS		P5,2
000089: 507F  		JMP		KEY_DEBOUNCE
00008A: 3A05  		JBS		P5,2
00008B: 507F  		JMP		KEY_DEBOUNCE
00008C: 3A05  		JBS		P5,2
00008D: 507F  		JMP		KEY_DEBOUNCE
00008E: 3A05  		JBS		P5,2
00008F: 507F  		JMP		KEY_DEBOUNCE
000090: 3A05  		JBS		P5,2
000091: 507F  		JMP		KEY_DEBOUNCE
000092: 3A05  		JBS		P5,2
000093: 507F  		JMP		KEY_DEBOUNCE
000094: 3A05  		JBS		P5,2
000095: 5093  		JMP		$-2
000096: 60FF  		MOV		A,@0xFF		; Turn Off all LED
000097: 0105  		MOV		P5,A		
000098: 0012  		RET
000099: 6050  		MOV		A,@0x50
00009A: 0104  		MOV		RSR,A
00009B: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
00009C: 0100  		MOV		IAR,A
00009D: 1504  		INC		RSR
00009E: 6080  		MOV		A,@0x80
00009F: 0D04  		XOR		RSR,A
0000A0: 3A03  		JBS		Z
0000A1: 509B  		JMP		$-6
0000A2: 0012  		RET
0000A3: 6080  		MOV		A,@0x80
0000A4: 0104  		MOV		RSR,A
0000A5: 7A40  		GBANK	0
0000A6: 60FF  		MOV		A,@0xFF
0000A7: 0100  		MOV		IAR,A
0000A8: 1504  		INC		RSR
0000A9: 6000  		MOV		A,@0x00
0000AA: 0D04  		XOR		RSR,A
0000AB: 3A03  		JBS		Z
0000AC: 50A5  		JMP		RAM_IND_LOOP_0
0000AD: 6080  		MOV		A,@0x80
0000AE: 0104  		MOV		RSR,A
0000AF: 7A41  		GBANK	1
0000B0: 60FF  		MOV		A,@0xFF
0000B1: 0100  		MOV		IAR,A
0000B2: 1504  		INC		RSR
0000B3: 6000  		MOV		A,@0x00
0000B4: 0D04  		XOR		RSR,A
0000B5: 3A03  		JBS		Z
0000B6: 50AF  		JMP		RAM_IND_LOOP_1
0000B7: 6080  		MOV		A,@0x80
0000B8: 0104  		MOV		RSR,A
0000B9: 7A42  		GBANK	2
0000BA: 60FF  		MOV		A,@0xFF
0000BB: 0100  		MOV		IAR,A
0000BC: 1504  		INC		RSR
0000BD: 6000  		MOV		A,@0x00
0000BE: 0D04  		XOR		RSR,A
0000BF: 3A03  		JBS		Z
0000C0: 50B9  		JMP		RAM_IND_LOOP_2
0000C1: 6080  		MOV		A,@0x80
0000C2: 0104  		MOV		RSR,A
0000C3: 7A43  		GBANK	3
0000C4: 60FF  		MOV		A,@0xFF
0000C5: 0100  		MOV		IAR,A
0000C6: 1504  		INC		RSR
0000C7: 6000  		MOV		A,@0x00
0000C8: 0D04  		XOR		RSR,A
0000C9: 3A03  		JBS		Z
0000CA: 50C3  		JMP		RAM_IND_LOOP_3
0000CB: 0012  		RET
0000CC: 6080  		MOV		A,@0x80
0000CD: 0141  		MOV		EECR2,A
0000CE: 1000  		MOV		A,0x00
0000CF: 0150  		MOV		TMP50,A
0000D0: 1050  		MOV		A,TMP50
0000D1: 0142  		MOV		EERA,A
0000D2: 60FF  		MOV		A,@0xFF
0000D3: 0143  		MOV		EERD,A
0000D4: 1550  		INC		TMP50
0000D5: 1080  		MOV		A,0x80
0000D6: 0C50  		XOR		A,TMP50
0000D7: 3A03  		JBS		Z
0000D8: 50D0  		JMP		EEPROM_INIT_LOOP
0000D9: 0012  		RET
0000DA: 6000  		MOV		A,@0x00
0000DB: 0103  		MOV		STATUS,A
0000DC: 0012  		RET
0000DD: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000DE: 5063  		JMP		INS_FAIL
0000DF: 3603  		JBC		N			; IF(N=0) BRANCH
0000E0: 5063  		JMP		INS_FAIL
0000E1: 0012  		RET
0000E2: 6001  			MOV		A,@0x01
0000E3: 0150  			MOV		INST,A
0000E4: 40DA  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000E5: 60AA  			MOV		A,@0xAA
0000E6: 0001  			DAA
0000E7: 3803  			JBS		C			; Check C = 1?
0000E8: 5063  			JMP	INS_FAIL
0000E9: 3103  			JBC		DC			; Check DC = 0?
0000EA: 5063  			JMP	INS_FAIL
0000EB: 3203  			JBC		Z			; Check Z = 0?
0000EC: 5063  			JMP	INS_FAIL
0000ED: 3503  			JBC		OV			; Check OV = 0?
0000EE: 5063  			JMP	INS_FAIL
0000EF: 3603  			JBC		N			; Check N = 0?
0000F0: 5063  			JMP	INS_FAIL
0000F1: 6C10  			XOR		A,@0x10		; Check Result ?
0000F2: 3A03  			JBS		Z			; Check Z = 1?
0000F3: 5063  			JMP	INS_FAIL
0000F4: 3603  			JBC		N			; Check N = 0?
0000F5: 5063  			JMP	INS_FAIL
0000F6: 40DA  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
0000F7: 6080  			MOV		A,@0x80
0000F8: 0150  			MOV		0x50,A		; [0x50] = 0x80
0000F9: 607F  			MOV		A,@0x7F		; 
0000FA: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
0000FB: 0001  			DAA
0000FC: 3803  			JBS		C			; Check C = 1?
0000FD: 5063  			JMP	INS_FAIL
0000FE: 3103  			JBC		DC			; Check DC = 0?
0000FF: 5063  			JMP	INS_FAIL
000100: 3203  			JBC		Z			; Check Z = 0?
000101: 5063  			JMP	INS_FAIL
000102: 3503  			JBC		OV			; Check OV = 0?
000103: 5063  			JMP	INS_FAIL
000104: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000105: 5063  			JMP	INS_FAIL
000106: 2203  			BC		Z
000107: 2603  			BC		N
000108: 6C65  			XOR		A,@0x65		; Check Result ?
000109: 3A03  			JBS		Z			; Check Z = 1?
00010A: 5063  			JMP	INS_FAIL
00010B: 3603  			JBC		N			; Check N = 0?
00010C: 5063  			JMP	INS_FAIL
00010D: 0000  			NOP
00010E: 6000  			MOV		A,@0x00
00010F: 0103  			MOV		STATUS,A
000110: 2803  			BS		C
000111: 6080  			MOV		A,@0x80
000112: 0150  			MOV		0x50,A		; [0x50] = 0x80
000113: 607F  			MOV		A,@0x7F		; 
000114: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000115: 0001  			DAA
000116: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000117: 5063  			JMP	INS_FAIL
000118: 3903  			JBS		DC			; Check DC = 1? / By ADC
000119: 5063  			JMP	INS_FAIL
00011A: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
00011B: 5063  			JMP	INS_FAIL
00011C: 3503  			JBC		OV			; Check OV = 0?
00011D: 5063  			JMP	INS_FAIL
00011E: 3603  			JBC		N			; Check N = 0?
00011F: 5063  			JMP	INS_FAIL
000120: 6C66  			XOR		A,@0x66		; Check Result ?
000121: 3A03  			JBS		Z			; Check Z = 1?
000122: 5063  			JMP	INS_FAIL
000123: 3603  			JBC		N			; Check N = 0?
000124: 5063  			JMP	INS_FAIL
000125: 6000  			MOV		A,@0x00
000126: 0103  			MOV		STATUS,A
000127: 60FF  			MOV		A,@0xFF
000128: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000129: 607F  			MOV		A,@0x7F		; 
00012A: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
00012B: 0001  			DAA
00012C: 3803  			JBS		C			; Check C = 1? 	/ By SUB
00012D: 5063  			JMP	INS_FAIL
00012E: 3903  			JBS		DC			; Check DC = 1? / By SUB
00012F: 5063  			JMP	INS_FAIL
000130: 3203  			JBC		Z			; Check Z = 0?
000131: 5063  			JMP	INS_FAIL
000132: 3503  			JBC		OV			; Check OV = 0?
000133: 5063  			JMP	INS_FAIL
000134: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000135: 5063  			JMP	INS_FAIL
000136: 2203  			BC		Z
000137: 2603  			BC		N
000138: 6CE6  			XOR		A,@0xE6		; Check Result ?
000139: 3A03  			JBS		Z			; Check Z = 1?
00013A: 5063  			JMP	INS_FAIL
00013B: 3603  			JBC		N			; Check N = 0?
00013C: 5063  			JMP	INS_FAIL
00013D: 6008  			MOV		A,@0x08
00013E: 0150  			MOV		INST,A
00013F: 605A  			MOV		A,@0x5A
000140: 6C5A  			XOR		A,@0x5A		; Check Result ?
000141: 3A03  			JBS		Z			; Check Z = 1?
000142: 5063  			JMP	INS_FAIL
000143: 3603  			JBC		N			; Check N = 0?
000144: 5063  			JMP	INS_FAIL
000145: 605A  			MOV		A,@0x5A
000146: 0200  			CLRA
000147: 3A03  			JBS		Z			; Check Z = 1?
000148: 5063  			JMP	INS_FAIL
000149: 2203  			BC		Z
00014A: 6C00  			XOR		A,@0x00		; Check Result ?
00014B: 3A03  			JBS		Z			; Check Z = 1?
00014C: 5063  			JMP	INS_FAIL
00014D: 3603  			JBC		N			; Check N = 0?
00014E: 5063  			JMP	INS_FAIL
00014F: 6009  			MOV		A,@0x09
000150: 0150  			MOV		INST,A
000151: 60AA  			MOV		A,@0xAA
000152: 0150  			MOV		0x50,A
000153: 1050  			MOV		A,0x50
000154: 6CAA  			XOR		A,@0xAA		; Check Result ?
000155: 3A03  			JBS		Z			; Check Z = 1?
000156: 5063  			JMP	INS_FAIL
000157: 3603  			JBC		N			; Check N = 0?
000158: 5063  			JMP	INS_FAIL
000159: 0350  			CLR		0x50
00015A: 3A03  			JBS		Z			; Check Z = 1?
00015B: 5063  			JMP	INS_FAIL
00015C: 2203  			BC		Z
00015D: 1050  			MOV		A,0x50
00015E: 6C00  			XOR		A,@0x00		; Check Result ?
00015F: 3A03  			JBS		Z			; Check Z = 1?
000160: 5063  			JMP	INS_FAIL
000161: 3603  			JBC		N			; Check N = 0?
000162: 5063  			JMP	INS_FAIL
000163: 600A  			MOV		A,@0x0A
000164: 0150  			MOV		INST,A
000165: 6000  			MOV		A,@0x00
000166: 0103  			MOV		STATUS,A
000167: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000168: 0150  			MOV		0x50,A		; [0x50] = 0x02
000169: 6001  			MOV		A,@0x01
00016A: 0450  			SUB		A,0x50		; A = [0x50] - A
00016B: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
00016C: 5063  			JMP	INS_FAIL
00016D: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00016E: 5063  			JMP	INS_FAIL
00016F: 3203  			JBC		Z			; Check Z = 0?
000170: 5063  			JMP	INS_FAIL
000171: 3503  			JBC		OV			; Check OV = 0?
000172: 5063  			JMP	INS_FAIL
000173: 3603  			JBC		N			; Check N = 0?
000174: 5063  			JMP	INS_FAIL
000175: 2203  			BC		Z
000176: 6C01  			XOR		A,@0x01		; Check Result ?
000177: 3A03  			JBS		Z			; Check Z = 1?
000178: 5063  			JMP	INS_FAIL
000179: 3603  			JBC		N			; Check N = 0?
00017A: 5063  			JMP	INS_FAIL
00017B: 6000  			MOV		A,@0x00
00017C: 0103  			MOV		STATUS,A
00017D: 6002  			MOV		A,@0x02		; SUB(2-2)=0
00017E: 0150  			MOV		0x50,A		; [0x50] = 0x02
00017F: 6002  			MOV		A,@0x02
000180: 0450  			SUB		A,0x50		; A = [0x50] - A
000181: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000182: 5063  			JMP	INS_FAIL
000183: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000184: 5063  			JMP	INS_FAIL
000185: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
000186: 5063  			JMP	INS_FAIL
000187: 3503  			JBC		OV			; Check OV = 0?
000188: 5063  			JMP	INS_FAIL
000189: 3603  			JBC		N			; Check N = 0?
00018A: 5063  			JMP	INS_FAIL
00018B: 2203  			BC		Z
00018C: 6C00  			XOR		A,@0x00		; Check Result ?
00018D: 3A03  			JBS		Z			; Check Z = 1?
00018E: 5063  			JMP	INS_FAIL
00018F: 3603  			JBC		N			; Check N = 0?
000190: 5063  			JMP	INS_FAIL
000191: 6000  			MOV		A,@0x00
000192: 0103  			MOV		STATUS,A
000193: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
000194: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000195: 607F  			MOV		A,@0x7F
000196: 0450  			SUB		A,0x50		; A = [0x50] - A
000197: 3803  			JBS		C			; Check C = 1?
000198: 5063  			JMP	INS_FAIL
000199: 3903  			JBS		DC			; Check DC = 1?
00019A: 5063  			JMP	INS_FAIL
00019B: 3203  			JBC		Z			; Check Z = 0?
00019C: 5063  			JMP	INS_FAIL
00019D: 3503  			JBC		OV			; Check OV = 0?
00019E: 5063  			JMP	INS_FAIL
00019F: 3E03  			JBS		N			; Check N = 1?
0001A0: 5063  			JMP	INS_FAIL
0001A1: 2203  			BC		Z
0001A2: 2603  			BC		N
0001A3: 6C80  			XOR		A,@0x80		; Check Result ?
0001A4: 3A03  			JBS		Z			; Check Z = 1?
0001A5: 5063  			JMP	INS_FAIL
0001A6: 3603  			JBC		N			; Check N = 0?
0001A7: 5063  			JMP	INS_FAIL
0001A8: 6000  			MOV		A,@0x00
0001A9: 0103  			MOV		STATUS,A
0001AA: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001AB: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001AC: 607F  			MOV		A,@0x7F
0001AD: 0450  			SUB		A,0x50		; A = [0x50] - A
0001AE: 3803  			JBS		C			; Check C = 1?
0001AF: 5063  			JMP	INS_FAIL
0001B0: 3103  			JBC		DC			; Check DC = 0?
0001B1: 5063  			JMP	INS_FAIL
0001B2: 3203  			JBC		Z			; Check Z = 0?
0001B3: 5063  			JMP	INS_FAIL
0001B4: 3D03  			JBS		OV			; Check OV = 1?
0001B5: 5063  			JMP	INS_FAIL
0001B6: 3603  			JBC		N			; Check N = 0?
0001B7: 5063  			JMP	INS_FAIL
0001B8: 2203  			BC		Z
0001B9: 2603  			BC		N
0001BA: 6C01  			XOR		A,@0x01		; Check Result ?
0001BB: 3A03  			JBS		Z			; Check Z = 1?
0001BC: 5063  			JMP	INS_FAIL
0001BD: 3603  			JBC		N			; Check N = 0?
0001BE: 5063  			JMP	INS_FAIL
0001BF: 6000  			MOV		A,@0x00
0001C0: 0103  			MOV		STATUS,A
0001C1: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001C2: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001C3: 6003  			MOV		A,@0x03
0001C4: 0450  			SUB		A,0x50		; A = [0x50] - A
0001C5: 3003  			JBC		C			; Check C = 0?
0001C6: 5063  			JMP	INS_FAIL
0001C7: 3103  			JBC		DC			; Check DC = 0?
0001C8: 5063  			JMP	INS_FAIL
0001C9: 3203  			JBC		Z			; Check Z = 0?
0001CA: 5063  			JMP	INS_FAIL
0001CB: 3503  			JBC		OV			; Check OV = 0?
0001CC: 5063  			JMP	INS_FAIL
0001CD: 3E03  			JBS		N			; Check N = 1?
0001CE: 5063  			JMP	INS_FAIL
0001CF: 2203  			BC		Z
0001D0: 2603  			BC		N
0001D1: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001D2: 3A03  			JBS		Z			; Check Z = 1?
0001D3: 5063  			JMP	INS_FAIL
0001D4: 3603  			JBC		N			; Check N = 0?
0001D5: 5063  			JMP	INS_FAIL
0001D6: 600B  			MOV		A,@0x0B
0001D7: 0150  			MOV		INST,A
0001D8: 6000  			MOV		A,@0x00
0001D9: 0103  			MOV		STATUS,A
0001DA: 6002  			MOV		A,@0x02
0001DB: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001DC: 6001  			MOV		A,@0x01
0001DD: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001DE: 1003  			MOV		A,STATUS
0001DF: 6C1B  			XOR		A,@0x1B		; for non reset
0001E0: 3A03  			JBS		Z			; Check Z = 1?
0001E1: 5063  			JMP	INS_FAIL
0001E2: 3603  			JBC		N			; Check N = 0?
0001E3: 5063  			JMP	INS_FAIL
0001E4: 2203  			BC		Z
0001E5: 2603  			BC		N
0001E6: 1050  			MOV		A,0x50
0001E7: 6C01  			XOR		A,@0x01		; Check Result ?
0001E8: 3A03  			JBS		Z			; Check Z = 1?
0001E9: 5063  			JMP	INS_FAIL
0001EA: 3603  			JBC		N			; Check N = 0?
0001EB: 5063  			JMP	INS_FAIL
0001EC: 6000  			MOV		A,@0x00
0001ED: 0103  			MOV		STATUS,A
0001EE: 6002  			MOV		A,@0x02
0001EF: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001F0: 6002  			MOV		A,@0x02
0001F1: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001F2: 1003  			MOV		A,STATUS
0001F3: 6C1F  			XOR		A,@0x1F		; for nono reset
0001F4: 3A03  			JBS		Z			; Check Z = 1?
0001F5: 5063  			JMP	INS_FAIL
0001F6: 3603  			JBC		N			; Check N = 0?
0001F7: 5063  			JMP	INS_FAIL
0001F8: 2203  			BC		Z
0001F9: 2603  			BC		N
0001FA: 1050  			MOV		A,0x50
0001FB: 6C00  			XOR		A,@0x00		; Check Result ?
0001FC: 3A03  			JBS		Z			; Check Z = 1?
0001FD: 5063  			JMP	INS_FAIL
0001FE: 3603  			JBC		N			; Check N = 0?
0001FF: 5063  			JMP	INS_FAIL
000200: 6000  			MOV		A,@0x00
000201: 0103  			MOV		STATUS,A
000202: 6080  			MOV		A,@0x80
000203: 0150  			MOV		0x50,A		; [0x50] = 0x80
000204: 6001  			MOV		A,@0x01
000205: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
000206: 1003  			MOV		A,STATUS
000207: 6C39  			XOR		A,@0x39	;; for non reset
000208: 3A03  			JBS		Z			; Check Z = 1?
000209: 5063  			JMP	INS_FAIL
00020A: 3603  			JBC		N			; Check N = 0?
00020B: 5063  			JMP	INS_FAIL
00020C: 2203  			BC		Z
00020D: 2603  			BC		N
00020E: 1050  			MOV		A,0x50
00020F: 6C7F  			XOR		A,@0x7F		; Check Result ?
000210: 3A03  			JBS		Z			; Check Z = 1?
000211: 5063  			JMP	INS_FAIL
000212: 3603  			JBC		N			; Check N = 0?
000213: 5063  			JMP	INS_FAIL
000214: 600C  			MOV		A,@0x0C
000215: 0150  			MOV		INST,A
000216: 6000  			MOV		A,@0x00
000217: 0103  			MOV		STATUS,A
000218: 6020  			MOV		A,@0x20		; 0x20-1
000219: 0150  			MOV		0x50,A		; [0x50] = 0x20
00021A: 0650  			DECA	0x50		; A = [0x50] - 1
00021B: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00021C: 5063  			JMP	INS_FAIL
00021D: 3103  			JBC		DC			; Check DC = 0?
00021E: 5063  			JMP	INS_FAIL
00021F: 3203  			JBC		Z			; Check Z = 0?
000220: 5063  			JMP	INS_FAIL
000221: 3503  			JBC		OV			; Check OV = 0?
000222: 5063  			JMP	INS_FAIL
000223: 3603  			JBC		N			; Check N = 0?
000224: 5063  			JMP	INS_FAIL
000225: 6C1F  			XOR		A,@0x1F		; Check Result ?
000226: 3A03  			JBS		Z			; Check Z = 1?
000227: 5063  			JMP	INS_FAIL
000228: 3603  			JBC		N			; Check N = 0?
000229: 5063  			JMP	INS_FAIL
00022A: 6000  			MOV		A,@0x00
00022B: 0103  			MOV		STATUS,A
00022C: 6001  			MOV		A,@0x01		; 0x01-1
00022D: 0150  			MOV		0x50,A		; [0x50] = 0x01
00022E: 0650  			DECA	0x50		; A = [0x50] - 1
00022F: 3803  			JBS		C			; Check C = 1?	; Result is Positive
000230: 5063  			JMP	INS_FAIL
000231: 3903  			JBS		DC			; Check DC = 1?
000232: 5063  			JMP	INS_FAIL
000233: 3A03  			JBS		Z			; Check Z = 1?
000234: 5063  			JMP	INS_FAIL
000235: 3503  			JBC		OV			; Check OV = 0?
000236: 5063  			JMP	INS_FAIL
000237: 3603  			JBC		N			; Check N = 0?
000238: 5063  			JMP	INS_FAIL
000239: 2203  			BC		Z
00023A: 6C00  			XOR		A,@0x00		; Check Result ?
00023B: 3A03  			JBS		Z			; Check Z = 1?
00023C: 5063  			JMP	INS_FAIL
00023D: 3603  			JBC		N			; Check N = 0?
00023E: 5063  			JMP	INS_FAIL
00023F: 6000  			MOV		A,@0x00
000240: 0103  			MOV		STATUS,A
000241: 6000  			MOV		A,@0x00		; 0x00-1
000242: 0150  			MOV		0x50,A		; [0x50] = 0x00
000243: 0650  			DECA	0x50		; A = [0x50] - 1
000244: 3003  			JBC		C			; Check C = 0?
000245: 5063  			JMP	INS_FAIL
000246: 3103  			JBC		DC			; Check DC = 0?
000247: 5063  			JMP	INS_FAIL
000248: 3203  			JBC		Z			; Check Z = 0?
000249: 5063  			JMP	INS_FAIL
00024A: 3503  			JBC		OV			; Check OV = 0?
00024B: 5063  			JMP	INS_FAIL
00024C: 3E03  			JBS		N			; Check N = 1?
00024D: 5063  			JMP	INS_FAIL
00024E: 2203  			BC		Z
00024F: 2603  			BC		N
000250: 6CFF  			XOR		A,@0xFF		; Check Result ?
000251: 3A03  			JBS		Z			; Check Z = 1?
000252: 5063  			JMP	INS_FAIL
000253: 3603  			JBC		N			; Check N = 0?
000254: 5063  			JMP	INS_FAIL
000255: 6000  			MOV		A,@0x00
000256: 0103  			MOV		STATUS,A
000257: 6080  			MOV		A,@0x80		; 0x80-1
000258: 0150  			MOV		0x50,A		; [0x50] = 0x80
000259: 0650  			DECA	0x50		; A = [0x50] - 1
00025A: 3803  			JBS		C			; Check C = 1?
00025B: 5063  			JMP	INS_FAIL
00025C: 3103  			JBC		DC			; Check DC = 0?
00025D: 5063  			JMP	INS_FAIL
00025E: 3203  			JBC		Z			; Check Z = 0?
00025F: 5063  			JMP	INS_FAIL
000260: 3D03  			JBS		OV			; Check OV = 1?
000261: 5063  			JMP	INS_FAIL
000262: 3603  			JBC		N			; Check N = 0?
000263: 5063  			JMP	INS_FAIL
000264: 2203  			BC		Z
000265: 2603  			BC		N
000266: 6C7F  			XOR		A,@0x7F		; Check Result ?
000267: 3A03  			JBS		Z			; Check Z = 1?
000268: 5063  			JMP	INS_FAIL
000269: 3603  			JBC		N			; Check N = 0?
00026A: 5063  			JMP	INS_FAIL
00026B: 600D  			MOV		A,@0x0D
00026C: 0150  			MOV		INST,A
00026D: 6000  			MOV		A,@0x00
00026E: 0103  			MOV		STATUS,A
00026F: 6020  			MOV		A,@0x20		; 0x20-1
000270: 0150  			MOV		0x50,A		; [0x50] = 0x20
000271: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000272: 1003  			MOV		A,STATUS
000273: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
000274: 3A03  			JBS		Z			; Check Z = 1?
000275: 5063  			JMP	INS_FAIL
000276: 3603  			JBC		N			; Check N = 0?
000277: 5063  			JMP	INS_FAIL
000278: 2203  			BC		Z
000279: 1050  			MOV		A,0x50
00027A: 6C1F  			XOR		A,@0x1F		; Check Result ?
00027B: 3A03  			JBS		Z			; Check Z = 1?
00027C: 5063  			JMP	INS_FAIL
00027D: 3603  			JBC		N			; Check N = 0?
00027E: 5063  			JMP	INS_FAIL
00027F: 6000  			MOV		A,@0x00
000280: 0103  			MOV		STATUS,A
000281: 6001  			MOV		A,@0x01		; 0x01-1
000282: 0150  			MOV		0x50,A		; [0x50] = 0x01
000283: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000284: 1003  			MOV		A,STATUS
000285: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000286: 3A03  			JBS		Z			; Check Z = 1?
000287: 5063  			JMP	INS_FAIL
000288: 3603  			JBC		N			; Check N = 0?
000289: 5063  			JMP	INS_FAIL
00028A: 2203  			BC		Z
00028B: 1050  			MOV		A,0x50
00028C: 6C00  			XOR		A,@0x00		; Check Result ?
00028D: 3A03  			JBS		Z			; Check Z = 1?
00028E: 5063  			JMP	INS_FAIL
00028F: 3603  			JBC		N			; Check N = 0?
000290: 5063  			JMP	INS_FAIL
000291: 6000  			MOV		A,@0x00
000292: 0103  			MOV		STATUS,A
000293: 6000  			MOV		A,@0x00		; 0x00-1
000294: 0150  			MOV		0x50,A		; [0x50] = 0x00
000295: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000296: 1003  			MOV		A,STATUS
000297: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000298: 3A03  			JBS		Z			; Check Z = 1?
000299: 5063  			JMP	INS_FAIL
00029A: 3603  			JBC		N			; Check N = 0?
00029B: 5063  			JMP	INS_FAIL
00029C: 2203  			BC		Z
00029D: 1050  			MOV		A,0x50
00029E: 6CFF  			XOR		A,@0xFF		; Check Result ?
00029F: 3A03  			JBS		Z			; Check Z = 1?
0002A0: 5063  			JMP	INS_FAIL
0002A1: 3603  			JBC		N			; Check N = 0?
0002A2: 5063  			JMP	INS_FAIL
0002A3: 6000  			MOV		A,@0x00
0002A4: 0103  			MOV		STATUS,A
0002A5: 6080  			MOV		A,@0x80		; 0x80-1
0002A6: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002A7: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002A8: 1003  			MOV		A,STATUS
0002A9: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
0002AA: 3A03  			JBS		Z			; Check Z = 1?
0002AB: 5063  			JMP	INS_FAIL
0002AC: 3603  			JBC		N			; Check N = 0?
0002AD: 5063  			JMP	INS_FAIL
0002AE: 2203  			BC		Z
0002AF: 1050  			MOV		A,0x50
0002B0: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002B1: 3A03  			JBS		Z			; Check Z = 1?
0002B2: 5063  			JMP	INS_FAIL
0002B3: 3603  			JBC		N			; Check N = 0?
0002B4: 5063  			JMP	INS_FAIL
0002B5: 6012  			MOV		A,@0x12
0002B6: 0150  			MOV		INST,A
0002B7: 40DA  			CALL	STATUS_CLEAR	; 0x80+0x7F
0002B8: 6080  			MOV		A,@0x80
0002B9: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002BA: 607F  			MOV		A,@0x7F		; 
0002BB: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
0002BC: 3003  			JBC		C			; Check C = 0?
0002BD: 5063  			JMP	INS_FAIL
0002BE: 3103  			JBC		DC			; Check DC = 0?
0002BF: 5063  			JMP	INS_FAIL
0002C0: 3203  			JBC		Z			; Check Z = 0?
0002C1: 5063  			JMP	INS_FAIL
0002C2: 3503  			JBC		OV			; Check OV = 0?
0002C3: 5063  			JMP	INS_FAIL
0002C4: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
0002C5: 5063  			JMP	INS_FAIL
0002C6: 2203  			BC		Z
0002C7: 2603  			BC		N
0002C8: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002C9: 3A03  			JBS		Z			; Check Z = 1?
0002CA: 5063  			JMP	INS_FAIL
0002CB: 3603  			JBC		N			; Check N = 0?
0002CC: 5063  			JMP	INS_FAIL
0002CD: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
0002CE: 60FF  			MOV		A,@0xFF
0002CF: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0002D0: 6001  			MOV		A,@0x01		; 
0002D1: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
0002D2: 3803  			JBS		C			; Check C = 1?
0002D3: 5063  			JMP	INS_FAIL
0002D4: 3903  			JBS		DC			; Check DC = 1?
0002D5: 5063  			JMP	INS_FAIL
0002D6: 3A03  			JBS		Z			; Check Z = 1?
0002D7: 5063  			JMP	INS_FAIL
0002D8: 3503  			JBC		OV			; Check OV = 0?
0002D9: 5063  			JMP	INS_FAIL
0002DA: 3603  			JBC		N			; Check N = 0?
0002DB: 5063  			JMP	INS_FAIL
0002DC: 2203  			BC		Z
0002DD: 2603  			BC		N
0002DE: 6C00  			XOR		A,@0x00		; Check Result ?
0002DF: 3A03  			JBS		Z			; Check Z = 1?
0002E0: 5063  			JMP	INS_FAIL
0002E1: 3603  			JBC		N			; Check N = 0?
0002E2: 5063  			JMP	INS_FAIL
0002E3: 40DA  			CALL	STATUS_CLEAR	; 0x7F+0x01
0002E4: 607F  			MOV		A,@0x7F
0002E5: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0002E6: 6001  			MOV		A,@0x01		; 
0002E7: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
0002E8: 3003  			JBC		C			; Check C = 0?
0002E9: 5063  			JMP	INS_FAIL
0002EA: 3903  			JBS		DC			; Check DC = 1?
0002EB: 5063  			JMP	INS_FAIL
0002EC: 3203  			JBC		Z			; Check Z = 0?
0002ED: 5063  			JMP	INS_FAIL
0002EE: 3D03  			JBS		OV			; Check OV = 1?
0002EF: 5063  			JMP	INS_FAIL
0002F0: 3E03  			JBS		N			; Check N = 1?
0002F1: 5063  			JMP	INS_FAIL
0002F2: 2203  			BC		Z
0002F3: 2603  			BC		N
0002F4: 6C80  			XOR		A,@0x80		; Check Result ?
0002F5: 3A03  			JBS		Z			; Check Z = 1?
0002F6: 5063  			JMP	INS_FAIL
0002F7: 3603  			JBC		N			; Check N = 0?
0002F8: 5063  			JMP	INS_FAIL
0002F9: 6013  			MOV		A,@0x13
0002FA: 0150  			MOV		INST,A
0002FB: 40DA  			CALL	STATUS_CLEAR	; 0x80+0x7F
0002FC: 6080  			MOV		A,@0x80
0002FD: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002FE: 607F  			MOV		A,@0x7F		; A = 0x7F
0002FF: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
000300: 1003  			MOV		A,STATUS
000301: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000302: 3A03  			JBS		Z			; Check Z = 1?
000303: 5063  			JMP	INS_FAIL
000304: 3603  			JBC		N			; Check N = 0?
000305: 5063  			JMP	INS_FAIL
000306: 1050  			MOV		A,0x50
000307: 6CFF  			XOR		A,@0xFF		; Check Result ?
000308: 3A03  			JBS		Z			; Check Z = 1?
000309: 5063  			JMP	INS_FAIL
00030A: 3603  			JBC		N			; Check N = 0?
00030B: 5063  			JMP	INS_FAIL
00030C: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
00030D: 60FF  			MOV		A,@0xFF
00030E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00030F: 6001  			MOV		A,@0x01		; A = 0x01
000310: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
000311: 1003  			MOV		A,STATUS
000312: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000313: 3A03  			JBS		Z			; Check Z = 1?
000314: 5063  			JMP	INS_FAIL
000315: 3603  			JBC		N			; Check N = 0?
000316: 5063  			JMP	INS_FAIL
000317: 1050  			MOV		A,0x50
000318: 6C00  			XOR		A,@0x00		; Check Result ?
000319: 3A03  			JBS		Z			; Check Z = 1?
00031A: 5063  			JMP	INS_FAIL
00031B: 3603  			JBC		N			; Check N = 0?
00031C: 5063  			JMP	INS_FAIL
00031D: 40DA  			CALL	STATUS_CLEAR	;0x7F+0x01
00031E: 607F  			MOV		A,@0x7F
00031F: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000320: 6001  			MOV		A,@0x01		; A = 0x01
000321: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
000322: 1003  			MOV		A,STATUS
000323: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
000324: 3A03  			JBS		Z			; Check Z = 1?
000325: 5063  			JMP	INS_FAIL
000326: 3603  			JBC		N			; Check N = 0?
000327: 5063  			JMP	INS_FAIL
000328: 1050  			MOV		A,0x50
000329: 6C80  			XOR		A,@0x80		; Check Result ?
00032A: 3A03  			JBS		Z			; Check Z = 1?
00032B: 5063  			JMP	INS_FAIL
00032C: 3603  			JBC		N			; Check N = 0?
00032D: 5063  			JMP	INS_FAIL
00032E: 6017  			MOV		A,@0x17
00032F: 0150  			MOV		INST,A
000330: 40DA  			CALL	STATUS_CLEAR	; 0x7F+0x01
000331: 607F  			MOV		A,@0x7F
000332: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000333: 1450  			INCA	0x50		; A = [0x50] +1		
000334: 3003  			JBC		C			; Check C = 0?
000335: 5063  			JMP	INS_FAIL
000336: 3903  			JBS		DC			; Check DC = 1?
000337: 5063  			JMP	INS_FAIL
000338: 3203  			JBC		Z			; Check Z = 0?
000339: 5063  			JMP	INS_FAIL
00033A: 3D03  			JBS		OV			; Check OV = 1?
00033B: 5063  			JMP	INS_FAIL
00033C: 3E03  			JBS		N			; Check N = 1?
00033D: 5063  			JMP	INS_FAIL
00033E: 2203  			BC		Z
00033F: 2603  			BC		N
000340: 6C80  			XOR		A,@0x80		; Check Result ?
000341: 3A03  			JBS		Z			; Check Z = 1?
000342: 5063  			JMP	INS_FAIL
000343: 3603  			JBC		N			; Check N = 0?
000344: 5063  			JMP	INS_FAIL
000345: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
000346: 60FF  			MOV		A,@0xFF
000347: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000348: 1450  			INCA	0x50		; A = [0x50] +1		
000349: 3803  			JBS		C			; Check C = 1?
00034A: 5063  			JMP	INS_FAIL
00034B: 3903  			JBS		DC			; Check DC = 1?
00034C: 5063  			JMP	INS_FAIL
00034D: 3A03  			JBS		Z			; Check Z = 1?
00034E: 5063  			JMP	INS_FAIL
00034F: 3503  			JBC		OV			; Check OV = 0?
000350: 5063  			JMP	INS_FAIL
000351: 3603  			JBC		N			; Check N = 0?
000352: 5063  			JMP	INS_FAIL
000353: 2203  			BC		Z
000354: 2603  			BC		N
000355: 6C00  			XOR		A,@0x00		; Check Result ?
000356: 3A03  			JBS		Z			; Check Z = 1?
000357: 5063  			JMP	INS_FAIL
000358: 3603  			JBC		N			; Check N = 0?
000359: 5063  			JMP	INS_FAIL
00035A: 6018  			MOV		A,@0x18
00035B: 0150  			MOV		INST,A
00035C: 40DA  			CALL 	STATUS_CLEAR	; 0x7F+0x01
00035D: 607F  			MOV		A,@0x7F
00035E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00035F: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000360: 1003  			MOV		A,STATUS
000361: 6C7A  			XOR		A,@0x7A		; Check Status ?
000362: 3A03  			JBS		Z			; Check Z = 1?
000363: 5063  			JMP	INS_FAIL
000364: 3603  			JBC		N			; Check N = 0?
000365: 5063  			JMP	INS_FAIL
000366: 1050  			MOV		A,0x50
000367: 6C80  			XOR		A,@0x80		; Check Result ?
000368: 3A03  			JBS		Z			; Check Z = 1?
000369: 5063  			JMP	INS_FAIL
00036A: 3603  			JBC		N			; Check N = 0?
00036B: 5063  			JMP	INS_FAIL
00036C: 40DA  			CALL	STATUS_CLEAR	; 0xFF+0x01
00036D: 60FF  			MOV		A,@0xFF
00036E: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00036F: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
000370: 1003  			MOV		A,STATUS
000371: 6C1F  			XOR		A,@0x1F		; Check Status ?
000372: 3A03  			JBS		Z			; Check Z = 1?
000373: 5063  			JMP	INS_FAIL
000374: 3603  			JBC		N			; Check N = 0?
000375: 5063  			JMP	INS_FAIL
000376: 1050  			MOV		A,0x50
000377: 6C00  			XOR		A,@0x00		; Check Result ?
000378: 3A03  			JBS		Z			; Check Z = 1?
000379: 5063  			JMP	INS_FAIL
00037A: 3603  			JBC		N			; Check N = 0?
00037B: 5063  			JMP	INS_FAIL
00037C: 0012  		RET
00037D: 6006  			MOV		A,@0x06
00037E: 0150  			MOV		INST,A
00037F: 6000  			MOV		A,@0x00
000380: 60FF  			MOV		A,@0xFF
000381: 0104  			MOV		RSR,A		; Start Address
000382: 0084  			BTG		RSR
000383: 1004  			MOV		A,RSR
000384: 6CFE  			XOR		A,@0xFE		; Check Result ?
000385: 3A03  			JBS		Z			; Check Z = 1?
000386: 5063  			JMP	INS_FAIL
000387: 3603  			JBC		N			; Check N = 0?
000388: 5063  			JMP	INS_FAIL
000389: 600E  			MOV		A,@0x0E
00038A: 0150  			MOV		INST,A
00038B: 6000  			MOV		A,@0x00
00038C: 0103  			MOV		STATUS,A
00038D: 6000  			MOV		A,@0x00
00038E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00038F: 6000  			MOV		A,@0x00
000390: 2203  			BC		Z
000391: 0850  			OR		A,0x50		; A = A | [0x50]
000392: 3003  			JBC		C			; Check C = 0?
000393: 5063  			JMP	INS_FAIL
000394: 3103  			JBC		DC			; Check DC = 0?
000395: 5063  			JMP	INS_FAIL
000396: 3A03  			JBS		Z			; Check Z = 1?
000397: 5063  			JMP	INS_FAIL
000398: 3503  			JBC		OV			; Check OV = 0?
000399: 5063  			JMP	INS_FAIL
00039A: 3603  			JBC		N			; Check N = 0?
00039B: 5063  			JMP	INS_FAIL
00039C: 2203  			BC		Z
00039D: 6C00  			XOR		A,@0x00		; Check Result ?
00039E: 3A03  			JBS		Z			; Check Z = 1?
00039F: 5063  			JMP	INS_FAIL
0003A0: 3603  			JBC		N			; Check N = 0?
0003A1: 5063  			JMP	INS_FAIL
0003A2: 6000  			MOV		A,@0x00
0003A3: 0103  			MOV		STATUS,A
0003A4: 6055  			MOV		A,@0x55
0003A5: 0150  			MOV		0x50,A		; [0x50] = 0x55
0003A6: 60AA  			MOV		A,@0xAA
0003A7: 2203  			BC		Z
0003A8: 0850  			OR		A,0x50		; A = A | [0x50]
0003A9: 3003  			JBC		C			; Check C = 0?
0003AA: 5063  			JMP	INS_FAIL
0003AB: 3103  			JBC		DC			; Check DC = 0?
0003AC: 5063  			JMP	INS_FAIL
0003AD: 3203  			JBC		Z			; Check Z = 0?
0003AE: 5063  			JMP	INS_FAIL
0003AF: 3503  			JBC		OV			; Check OV = 0?
0003B0: 5063  			JMP	INS_FAIL
0003B1: 3E03  			JBS		N			; Check N = 1?
0003B2: 5063  			JMP	INS_FAIL
0003B3: 2203  			BC		Z
0003B4: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003B5: 3A03  			JBS		Z			; Check Z = 1?
0003B6: 5063  			JMP	INS_FAIL
0003B7: 3603  			JBC		N			; Check N = 0?
0003B8: 5063  			JMP	INS_FAIL
0003B9: 600F  			MOV		A,@0x0F
0003BA: 0150  			MOV		INST,A
0003BB: 6000  			MOV		A,@0x00
0003BC: 0103  			MOV		STATUS,A
0003BD: 6000  			MOV		A,@0x00
0003BE: 0150  			MOV		0x50,A		; [0x50] = 0x00
0003BF: 6000  			MOV		A,@0x00		; A = 0x00
0003C0: 2203  			BC		Z
0003C1: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0003C2: 1003  			MOV		A,STATUS
0003C3: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0003C4: 3A03  			JBS		Z			; Check Z = 1?
0003C5: 5063  			JMP	INS_FAIL
0003C6: 3603  			JBC		N			; Check N = 0?
0003C7: 5063  			JMP	INS_FAIL
0003C8: 1050  			MOV		A,0x50		; A = Result[0x50]
0003C9: 2203  			BC		Z
0003CA: 2603  			BC		N
0003CB: 6C00  			XOR		A,@0x00		; Check Result ?
0003CC: 3A03  			JBS		Z			; Check Z = 1?
0003CD: 5063  			JMP	INS_FAIL
0003CE: 3603  			JBC		N			; Check N = 0?
0003CF: 5063  			JMP	INS_FAIL
0003D0: 6000  			MOV		A,@0x00
0003D1: 0103  			MOV		STATUS,A
0003D2: 6055  			MOV		A,@0x55
0003D3: 0150  			MOV		0x50,A		; [0x50] = 0x55
0003D4: 60AA  			MOV		A,@0xAA		; A = 0xAA
0003D5: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0003D6: 1003  			MOV		A,STATUS
0003D7: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0003D8: 3A03  			JBS		Z			; Check Z = 1?
0003D9: 5063  			JMP	INS_FAIL
0003DA: 3603  			JBC		N			; Check N = 0?
0003DB: 5063  			JMP	INS_FAIL
0003DC: 1050  			MOV		A,0x50
0003DD: 2203  			BC		Z
0003DE: 2603  			BC		N
0003DF: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003E0: 3A03  			JBS		Z			; Check Z = 1?
0003E1: 5063  			JMP	INS_FAIL
0003E2: 3603  			JBC		N			; Check N = 0?
0003E3: 5063  			JMP	INS_FAIL
0003E4: 6010  			MOV		A,@0x10
0003E5: 0150  			MOV		INST,A
0003E6: 40DA  			CALL	STATUS_CLEAR
0003E7: 6055  			MOV		A,@0x55
0003E8: 0150  			MOV		0x50,A		; [0x50] = 0x55
0003E9: 60AA  			MOV		A,@0xAA
0003EA: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
0003EB: 3003  			JBC		C			; Check C = 0?
0003EC: 5063  			JMP	INS_FAIL
0003ED: 3103  			JBC		DC			; Check DC = 0?
0003EE: 5063  			JMP	INS_FAIL
0003EF: 3A03  			JBS		Z			; Check Z = 1?
0003F0: 5063  			JMP	INS_FAIL
0003F1: 3503  			JBC		OV			; Check OV = 0?
0003F2: 5063  			JMP	INS_FAIL
0003F3: 3603  			JBC		N			; Check N = 0?
0003F4: 5063  			JMP	INS_FAIL
0003F5: 6C00  			XOR		A,@0x00		; Check Result ?
0003F6: 3A03  			JBS		Z			; Check Z = 1?
0003F7: 5063  			JMP	INS_FAIL
0003F8: 3603  			JBC		N			; Check N = 0?
0003F9: 5063  			JMP	INS_FAIL
0003FA: 40DA  			CALL	STATUS_CLEAR
0003FB: 60F5  			MOV		A,@0xF5
0003FC: 0150  			MOV		0x50,A		; [0x50] = 0xF5
0003FD: 60FA  			MOV		A,@0xFA
0003FE: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
0003FF: 3003  			JBC		C			; Check C = 0?
000400: 5063  			JMP	INS_FAIL
000401: 3103  			JBC		DC			; Check DC = 0?
000402: 5063  			JMP	INS_FAIL
000403: 3203  			JBC		Z			; Check Z = 0?
000404: 5063  			JMP	INS_FAIL
000405: 3503  			JBC		OV			; Check OV = 0?
000406: 5063  			JMP	INS_FAIL
000407: 3E03  			JBS		N			; Check N = 1?
000408: 5063  			JMP	INS_FAIL
000409: 6CF0  			XOR		A,@0xF0		; Check Result ?
00040A: 3A03  			JBS		Z			; Check Z = 1?
00040B: 5063  			JMP	INS_FAIL
00040C: 3603  			JBC		N			; Check N = 0?
00040D: 5063  			JMP	INS_FAIL
00040E: 6011  			MOV		A,@0x11
00040F: 0150  			MOV		INST,A
000410: 40DA  			CALL	STATUS_CLEAR
000411: 6055  			MOV		A,@0x55
000412: 0150  			MOV		0x50,A		; [0x50] = 0x55
000413: 60AA  			MOV		A,@0xAA
000414: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
000415: 1003  			MOV		A,STATUS
000416: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
000417: 3A03  			JBS		Z			; Check Z = 1?
000418: 5063  			JMP	INS_FAIL
000419: 3603  			JBC		N			; Check N = 0?
00041A: 5063  			JMP	INS_FAIL
00041B: 2203  			BC		Z
00041C: 1050  			MOV		A,0x50
00041D: 2203  			BC		Z
00041E: 6C00  			XOR		A,@0x00		; Check Result ?
00041F: 3A03  			JBS		Z			; Check Z = 1?
000420: 5063  			JMP	INS_FAIL
000421: 3603  			JBC		N			; Check N = 0?
000422: 5063  			JMP	INS_FAIL
000423: 40DA  			CALL	STATUS_CLEAR
000424: 60F5  			MOV		A,@0xF5
000425: 0150  			MOV		0x50,A		; [0x50] = 0xF5
000426: 60FA  			MOV		A,@0xFA
000427: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
000428: 1003  			MOV		A,STATUS
000429: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00042A: 3A03  			JBS		Z			; Check Z = 1?
00042B: 5063  			JMP	INS_FAIL
00042C: 3603  			JBC		N			; Check N = 0?
00042D: 5063  			JMP	INS_FAIL
00042E: 2203  			BC		Z
00042F: 1050  			MOV		A,0x50
000430: 2203  			BC		Z
000431: 6CF0  			XOR		A,@0xF0		; Check Result ?
000432: 3A03  			JBS		Z			; Check Z = 1?
000433: 5063  			JMP	INS_FAIL
000434: 3603  			JBC		N			; Check N = 0?
000435: 5063  			JMP	INS_FAIL
000436: 6015  			MOV		A,@0x15
000437: 0150  			MOV		INST,A
000438: 40DA  			CALL	STATUS_CLEAR
000439: 60FF  			MOV		A,@0xFF
00043A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00043B: 1250  			COMA	0x50		; A = /R
00043C: 3003  			JBC		C			; Check C = 0?
00043D: 5063  			JMP	INS_FAIL
00043E: 3103  			JBC		DC			; Check DC = 0?
00043F: 5063  			JMP	INS_FAIL
000440: 3A03  			JBS		Z			; Check Z = 1?
000441: 5063  			JMP	INS_FAIL
000442: 3503  			JBC		OV			; Check OV = 0?
000443: 5063  			JMP	INS_FAIL
000444: 3603  			JBC		N			; Check N = 0?
000445: 5063  			JMP	INS_FAIL
000446: 6C00  			XOR		A,@0x00		; Check Result ?
000447: 3A03  			JBS		Z			; Check Z = 1?
000448: 5063  			JMP	INS_FAIL
000449: 3603  			JBC		N			; Check N = 0?
00044A: 5063  			JMP	INS_FAIL	
00044B: 40DA  			CALL	STATUS_CLEAR
00044C: 6005  			MOV		A,@0x05
00044D: 0150  			MOV		0x50,A		; [0x50] = 0x05
00044E: 1250  			COMA	0x50		; A = /R
00044F: 3003  			JBC		C			; Check C = 0?
000450: 5063  			JMP	INS_FAIL
000451: 3103  			JBC		DC			; Check DC = 0?
000452: 5063  			JMP	INS_FAIL
000453: 3203  			JBC		Z			; Check Z = 0?
000454: 5063  			JMP	INS_FAIL
000455: 3503  			JBC		OV			; Check OV = 0?
000456: 5063  			JMP	INS_FAIL
000457: 3E03  			JBS		N			; Check N = 1?
000458: 5063  			JMP	INS_FAIL
000459: 6CFA  			XOR		A,@0xFA		; Check Result ?
00045A: 3A03  			JBS		Z			; Check Z = 1?
00045B: 5063  			JMP	INS_FAIL
00045C: 3603  			JBC		N			; Check N = 0?
00045D: 5063  			JMP	INS_FAIL
00045E: 6016  			MOV		A,@0x16
00045F: 0150  			MOV		INST,A
000460: 40DA  			CALL	STATUS_CLEAR
000461: 60FF  			MOV		A,@0xFF
000462: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000463: 1350  			COM		0x50		; [0x50] = /[0x50]
000464: 1003  			MOV		A,STATUS
000465: 6C1C  			XOR		A,@0x1C		; Check Status ?
000466: 3A03  			JBS		Z			; Check Z = 1?
000467: 5063  			JMP	INS_FAIL
000468: 3603  			JBC		N			; Check N = 0?
000469: 5063  			JMP	INS_FAIL
00046A: 2203  			BC		Z
00046B: 2603  			BC		N
00046C: 1050  			MOV		A,0x50
00046D: 6C00  			XOR		A,@0x00		; Check Result ?
00046E: 3A03  			JBS		Z			; Check Z = 1?
00046F: 5063  			JMP	INS_FAIL
000470: 3603  			JBC		N			; Check N = 0?
000471: 5063  			JMP	INS_FAIL
000472: 40DA  			CALL	STATUS_CLEAR
000473: 6000  			MOV		A,@0x00
000474: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000475: 1350  			COM		0x50		; [0x50] = /[0x50]
000476: 1003  			MOV		A,STATUS
000477: 6C58  			XOR		A,@0x58		; Check Status ?
000478: 3A03  			JBS		Z			; Check Z = 1?
000479: 5063  			JMP	INS_FAIL
00047A: 3603  			JBC		N			; Check N = 0?
00047B: 5063  			JMP	INS_FAIL
00047C: 2203  			BC		Z
00047D: 2603  			BC		N
00047E: 1050  			MOV		A,0x50
00047F: 6CFF  			XOR		A,@0xFF		; Check Result ?
000480: 3A03  			JBS		Z			; Check Z = 1?
000481: 5063  			JMP	INS_FAIL
000482: 3603  			JBC		N			; Check N = 0?
000483: 5063  			JMP	INS_FAIL
000484: 6026  			MOV		A,@0x26
000485: 0150  			MOV		INST,A
000486: 40DA  			CALL	STATUS_CLEAR
000487: 60A5  			MOV		A,@0xA5
000488: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
000489: 6CFF  			XOR		A,@0xFF		; Check Result ?
00048A: 40DD  			CALL	INST_XOR_JUDGE
00048B: 0012  		RET
00048C: 601B  			MOV		A,@0x1B
00048D: 0150  			MOV		INST,A
00048E: 40DA  			CALL	STATUS_CLEAR
00048F: 2803  			BS		C
000490: 60AA  			MOV		A,@0xAA
000491: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000492: 1850  			RRCA	0x50		; A = [0x50] >> 1
000493: 3003  			JBC		C			; Check C = 0?
000494: 5063  			JMP	INS_FAIL
000495: 3103  			JBC		DC			; Check DC = 0?
000496: 5063  			JMP	INS_FAIL
000497: 3203  			JBC		Z			; Check Z = 0?
000498: 5063  			JMP	INS_FAIL
000499: 3503  			JBC		OV			; Check OV = 0?
00049A: 5063  			JMP	INS_FAIL
00049B: 3E03  			JBS		N			; Check N = 1?
00049C: 5063  			JMP	INS_FAIL
00049D: 6CD5  			XOR		A,@0xD5		; Check Result ?
00049E: 40DD  			CALL	INST_XOR_JUDGE
00049F: 40DA  			CALL	STATUS_CLEAR
0004A0: 6055  			MOV		A,@0x55
0004A1: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004A2: 1850  			RRCA	0x50		; A = [0x50] >> 1
0004A3: 3803  			JBS		C			; Check C = 1?
0004A4: 5063  			JMP	INS_FAIL
0004A5: 3103  			JBC		DC			; Check DC = 0?
0004A6: 5063  			JMP	INS_FAIL
0004A7: 3203  			JBC		Z			; Check Z = 0?
0004A8: 5063  			JMP	INS_FAIL
0004A9: 3503  			JBC		OV			; Check OV = 0?
0004AA: 5063  			JMP	INS_FAIL
0004AB: 3603  			JBC		N			; Check N = 0?
0004AC: 5063  			JMP	INS_FAIL
0004AD: 6C2A  			XOR		A,@0x2A		; Check Result ?
0004AE: 40DD  			CALL	INST_XOR_JUDGE
0004AF: 601C  			MOV		A,@0x1C
0004B0: 0150  			MOV		INST,A
0004B1: 40DA  			CALL	STATUS_CLEAR
0004B2: 2803  			BS		C
0004B3: 60AA  			MOV		A,@0xAA
0004B4: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0004B5: 2203  			BC		Z
0004B6: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0004B7: 1003  			MOV		A,STATUS
0004B8: 6C58  			XOR		A,@0x58		; Check Status ?
0004B9: 40DD  			CALL	INST_XOR_JUDGE
0004BA: 1050  			MOV		A,0x50
0004BB: 6CD5  			XOR		A,@0xD5		; Check Result ?
0004BC: 40DD  			CALL	INST_XOR_JUDGE
0004BD: 40DA  			CALL	STATUS_CLEAR
0004BE: 6055  			MOV		A,@0x55
0004BF: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004C0: 2203  			BC		Z
0004C1: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
0004C2: 1003  			MOV		A,STATUS
0004C3: 6C19  			XOR		A,@0x19		; Check Status ?
0004C4: 3A03  			JBS		Z			; Check Z = 1?
0004C5: 5063  			JMP	INS_FAIL
0004C6: 3603  			JBC		N			; Check N = 0?
0004C7: 5063  			JMP	INS_FAIL
0004C8: 1050  			MOV		A,0x50
0004C9: 6C2A  			XOR		A,@0x2A		; Check Result ?
0004CA: 40DD  			CALL	INST_XOR_JUDGE
0004CB: 601D  			MOV		A,@0x1D
0004CC: 0150  			MOV		INST,A
0004CD: 40DA  			CALL STATUS_CLEAR
0004CE: 2803  			BS		C
0004CF: 6055  			MOV		A,@0x55
0004D0: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004D1: 1A50  			RLCA	0x50		; A = [0x50] << 1
0004D2: 3003  			JBC		C			; Check C = 0?
0004D3: 5063  			JMP	INS_FAIL
0004D4: 3103  			JBC		DC			; Check DC = 0?
0004D5: 5063  			JMP	INS_FAIL
0004D6: 3203  			JBC		Z			; Check Z = 0?
0004D7: 5063  			JMP	INS_FAIL
0004D8: 3503  			JBC		OV			; Check OV = 0?
0004D9: 5063  			JMP	INS_FAIL
0004DA: 3E03  			JBS		N			; Check N = 1?
0004DB: 5063  			JMP	INS_FAIL
0004DC: 6CAB  			XOR		A,@0xAB		; Check Result ?
0004DD: 40DD  			CALL	INST_XOR_JUDGE
0004DE: 40DA  			CALL	STATUS_CLEAR
0004DF: 60AA  			MOV		A,@0xAA
0004E0: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0004E1: 1A50  			RLCA	0x50		; A = [0x50] << 1
0004E2: 3803  			JBS		C			; Check C = 1?
0004E3: 5063  			JMP	INS_FAIL
0004E4: 3103  			JBC		DC			; Check DC = 0?
0004E5: 5063  			JMP	INS_FAIL
0004E6: 3203  			JBC		Z			; Check Z = 0?
0004E7: 5063  			JMP	INS_FAIL
0004E8: 3503  			JBC		OV			; Check OV = 0?
0004E9: 5063  			JMP	INS_FAIL
0004EA: 3603  			JBC		N			; Check N = 0?
0004EB: 5063  			JMP	INS_FAIL
0004EC: 6C54  			XOR		A,@0x54		; Check Result ?
0004ED: 40DD  			CALL	INST_XOR_JUDGE
0004EE: 601E  			MOV		A,@0x1E
0004EF: 0150  			MOV		INST,A
0004F0: 40DA  			CALL	STATUS_CLEAR
0004F1: 2803  			BS		C
0004F2: 6055  			MOV		A,@0x55
0004F3: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004F4: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
0004F5: 1003  			MOV		A,STATUS
0004F6: 6C58  			XOR		A,@0x58		; Check Status ?
0004F7: 40DD  			CALL	INST_XOR_JUDGE
0004F8: 1050  			MOV		A,0x50
0004F9: 6CAB  			XOR		A,@0xAB		; Check Result ?
0004FA: 40DD  			CALL	INST_XOR_JUDGE
0004FB: 40DA  			CALL	STATUS_CLEAR
0004FC: 60AA  			MOV		A,@0xAA
0004FD: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0004FE: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
0004FF: 1003  			MOV		A,STATUS
000500: 6C19  			XOR		A,@0x19		; Check Status ?
000501: 40DD  			CALL	INST_XOR_JUDGE
000502: 1050  			MOV		A,0x50
000503: 6C54  			XOR		A,@0x54		; Check Result ?
000504: 40DD  			CALL	INST_XOR_JUDGE
000505: 0012  		RET
000506: 6007  			MOV		A,@0x07
000507: 0150  			MOV		INST,A
000508: 40DA  			CALL	STATUS_CLEAR
000509: 60FF  			MOV		A,@0xFF
00050A: 0150  			MOV		0x50,A
00050B: 1003  			MOV		A,STATUS
00050C: 6C18  			XOR		A,@0x18		;At  OCDS
00050D: 40DD  			CALL	INST_XOR_JUDGE
00050E: 1050  			MOV		A,0x50
00050F: 6CFF  			XOR		A,@0xFF		; Check Result ?
000510: 40DD  			CALL	INST_XOR_JUDGE
000511: 6014  			MOV		A,@0x14
000512: 0150  			MOV		INST,A
000513: 40DA  			CALL	STATUS_CLEAR
000514: 6000  			MOV		A,@0x00
000515: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000516: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000517: 1003  			MOV		A,STATUS
000518: 6C1C  			XOR		A,@0x1C		; Check Status ?
000519: 3A03  			JBS		Z			; Check Z = 1?
00051A: 5063  			JMP	INS_FAIL
00051B: 3603  			JBC		N			; Check N = 0?
00051C: 5063  			JMP	INS_FAIL
00051D: 1050  			MOV		A,0x50
00051E: 2203  			BC		Z
00051F: 6C00  			XOR		A,@0x00		; Check Result ?
000520: 3A03  			JBS		Z			; Check Z = 1?
000521: 5063  			JMP	INS_FAIL
000522: 3603  			JBC		N			; Check N = 0?
000523: 5063  			JMP	INS_FAIL
000524: 40DA  			CALL	STATUS_CLEAR
000525: 6000  			MOV		A,@0x00
000526: 0150  			MOV		0x50,A		; [0x50] = 0x00		
000527: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
000528: 2850  			BS		0x50,0
000529: 1050  			MOV		A,0x50
00052A: 6C01  			XOR		A,@0x01		; Check Result ?
00052B: 40DD  			CALL	INST_XOR_JUDGE
00052C: 601F  			MOV		A,@0x1F
00052D: 0150  			MOV		INST,A
00052E: 40DA  			CALL	STATUS_CLEAR
00052F: 605A  			MOV		A,@0x5A
000530: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000531: 1C50  			SWAPA	0x50
000532: 6CA5  			XOR		A,@0xA5		; Check Result ?
000533: 40DD  			CALL	INST_XOR_JUDGE
000534: 6020  			MOV		A,@0x20
000535: 0150  			MOV		INST,A
000536: 40DA  			CALL	STATUS_CLEAR
000537: 605A  			MOV		A,@0x5A
000538: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000539: 1D50  			SWAP	0x50
00053A: 1050  			MOV		A,0x50
00053B: 6CA5  			XOR		A,@0xA5		; Check Result ?
00053C: 40DD  			CALL	INST_XOR_JUDGE
00053D: 0012  		RET
00053E: 0012  		RET
00053F: 0012  		RET
000540: 6004  			MOV		A,@0x04
000541: 0150  			MOV		INST,A
000542: 0010  			ENI
000543: 3F03  			JBS		IT		; Check IT = 1?
000544: 5063  			JMP	INS_FAIL
000545: 6005  			MOV		A,@0x05
000546: 0150  			MOV		INST,A
000547: 0011  			DISI
000548: 3703  			JBC		IT		; Check IT = 0?
000549: 5063  			JMP	INS_FAIL
00054A: 0012  		RET
00054B: 6019  	MOV		A,@0x19
00054C: 0150  	MOV		INST,A
00054D: 6000  	MOV		A,@0x00
00054E: 0103  	MOV		STATUS,A
00054F: 6001  		MOV		A,@0x01
000550: 0150  		MOV		0x50,A		; [0x50] = 0x01
000551: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
000552: 5063  		JMP	INS_FAIL
000553: 6C00  		XOR		A,@0x00		; Check Result ?
000554: 3A03  		JBS		Z			; Check Z = 1?
000555: 5063  		JMP	INS_FAIL
000556: 3603  		JBC		N			; Check N = 0?
000557: 5063  		JMP	INS_FAIL
000558: 6000  	MOV		A,@0x00
000559: 0103  	MOV		STATUS,A
00055A: 6002  		MOV		A,@0x02
00055B: 0150  		MOV		0x50,A		; [0x50] = 0x02
00055C: 1650  		DJZA	0x50		; A = [0x50] - 0x01,if z,skip
00055D: 555F  		JMP		$+2
00055E: 5063  		JMP	INS_FAIL
00055F: 601A  	MOV		A,@0x1A
000560: 0150  	MOV		INST,A
000561: 6000  	MOV		A,@0x00
000562: 0103  	MOV		STATUS,A
000563: 6001  		MOV		A,@0x01
000564: 0150  		MOV		0x50,A		; [0x50] = 0x01
000565: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
000566: 5063  		JMP	INS_FAIL
000567: 1050  		MOV		A,0x50
000568: 6C00  		XOR		A,@0x00		; Check Result ?
000569: 3A03  		JBS		Z			; Check Z = 1?
00056A: 5063  		JMP	INS_FAIL
00056B: 3603  		JBC		N			; Check N = 0?
00056C: 5063  		JMP	INS_FAIL
00056D: 6000  	MOV		A,@0x00
00056E: 0103  	MOV		STATUS,A
00056F: 6002  		MOV		A,@0x02
000570: 0150  		MOV		0x50,A		; [0x50] = 0x02
000571: 1750  		DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
000572: 5574  		JMP		$+2
000573: 5063  		JMP	INS_FAIL
000574: 6021  	MOV		A,@0x21
000575: 0150  	MOV		INST,A
000576: 6000  	MOV		A,@0x00
000577: 0103  	MOV		STATUS,A
000578: 60FF  		MOV		A,@0xFF
000579: 0150  		MOV		0x50,A
00057A: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
00057B: 5063  		JMP		INS_FAIL
00057C: 6C00  		XOR		A,@0x00		; Check Result ?
00057D: 3A03  		JBS		Z			; Check Z = 1?
00057E: 5063  		JMP	INS_FAIL
00057F: 3603  		JBC		N			; Check N = 0?
000580: 5063  		JMP	INS_FAIL
000581: 6000  	MOV		A,@0x00
000582: 0103  	MOV		STATUS,A
000583: 6080  		MOV		A,@0x80
000584: 0150  		MOV		0x50,A
000585: 1E50  		JZA		0x50		; A = [0x50] + 1,if 0 skip
000586: 5588  		JMP		$+2
000587: 5063  		JMP		INS_FAIL
000588: 6022  	MOV		A,@0x22
000589: 0150  	MOV		INST,A
00058A: 6000  	MOV		A,@0x00
00058B: 0103  	MOV		STATUS,A
00058C: 60FF  		MOV		A,@0xFF
00058D: 0150  		MOV		0x50,A		; [0x50] = 0xFF
00058E: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
00058F: 5063  		JMP		INS_FAIL
000590: 1050  		MOV		A,0x50
000591: 6C00  		XOR		A,@0x00		; Check Result ?
000592: 3A03  		JBS		Z			; Check Z = 1?
000593: 5063  		JMP	INS_FAIL
000594: 3603  		JBC		N			; Check N = 0?
000595: 5063  		JMP	INS_FAIL
000596: 6000  	MOV		A,@0x00
000597: 0103  	MOV		STATUS,A
000598: 6080  		MOV		A,@0x80
000599: 0150  		MOV		0x50,A		; [0x50] = 0xFF
00059A: 1F50  		JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
00059B: 559D  		JMP		$+2
00059C: 5063  		JMP		INS_FAIL
00059D: 6023  	MOV		A,@0x23
00059E: 0150  	MOV		INST,A
00059F: 6000  	MOV		A,@0x00
0005A0: 0103  	MOV		STATUS,A
0005A1: 605A  		MOV		A,@0x5A
0005A2: 0150  		MOV		0x50,A		; [0x50] = 0x5A
0005A3: 6150  		JE		0x50		; [0x50] = A?
0005A4: 5063  		JMP		INS_FAIL
0005A5: 605B  		MOV		A,@0x5B
0005A6: 0150  		MOV		0x50,A		; [0x50] = 0x5B
0005A7: 605C  		MOV		A,@0x5C
0005A8: 6150  		JE		0x50		; [0x50] = A(0x5C)?
0005A9: 55AB  		JMP		$+2
0005AA: 5063  		JMP		INS_FAIL
0005AB: 6024  	MOV		A,@0x24
0005AC: 0150  	MOV		INST,A
0005AD: 6000  	MOV		A,@0x00
0005AE: 0103  	MOV		STATUS,A
0005AF: 607F  		MOV		A,@0x7F
0005B0: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0005B1: 6000  		MOV		A,@0x00
0005B2: 6250  		JGE		0x50		; [0x50] > A ?
0005B3: 5063  		JMP		INS_FAIL
0005B4: 6000  	MOV		A,@0x00
0005B5: 0103  	MOV		STATUS,A
0005B6: 60FF  		MOV		A,@0xFF
0005B7: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0005B8: 6080  		MOV		A,@0x80
0005B9: 6250  		JGE		0x50		; [0x50] > A ?
0005BA: 5063  		JMP		INS_FAIL
0005BB: 6000  	MOV		A,@0x00
0005BC: 0103  	MOV		STATUS,A
0005BD: 6000  		MOV		A,@0x00
0005BE: 0150  		MOV		0x50,A		; [0x50] = 0x00
0005BF: 60FF  		MOV		A,@0xFF
0005C0: 6250  		JGE		0x50		; [0x50] > A(0xFF) ?x
0005C1: 55C3  		JMP		$+2
0005C2: 5063  		JMP		INS_FAIL
0005C3: 6025  	MOV		A,@0x25
0005C4: 0150  	MOV		INST,A
0005C5: 6000  	MOV		A,@0x00
0005C6: 0103  	MOV		STATUS,A
0005C7: 6000  		MOV		A,@0x00
0005C8: 0150  		MOV		0x50,A		; [0x50] = 0x00
0005C9: 607F  		MOV		A,@0x7F
0005CA: 6350  		JLE		0x50		; [0x50] < A ?
0005CB: 5063  		JMP		INS_FAIL
0005CC: 6000  	MOV		A,@0x00
0005CD: 0103  	MOV		STATUS,A
0005CE: 6080  		MOV		A,@0x80
0005CF: 0150  		MOV		0x50,A		; [0x50] = 0x80
0005D0: 60FF  		MOV		A,@0xFF
0005D1: 6350  		JLE		0x50		; [0x50] < A ?
0005D2: 5063  		JMP		INS_FAIL
0005D3: 6000  	MOV		A,@0x00
0005D4: 0103  	MOV		STATUS,A
0005D5: 60FF  		MOV		A,@0xFF
0005D6: 0150  		MOV		0x50,A		; [0x50] = 0xFF
0005D7: 6000  		MOV		A,@0x00
0005D8: 6350  		JLE		0x50		; [0x50] < A(0x00) ?x
0005D9: 55DB  		JMP		$+2
0005DA: 5063  		JMP		INS_FAIL
0005DB: 6027  	MOV		A,@0x27
0005DC: 0150  	MOV		INST,A
0005DD: 6000  	MOV		A,@0x00
0005DE: 0103  	MOV		STATUS,A
0005DF: 607F  		MOV		A,@0x7F
0005E0: 657F  		JE		@0x7F
0005E1: 5063  		JMP	INS_FAIL
0005E2: 6029  	MOV		A,@0x29
0005E3: 0150  	MOV		INST,A
0005E4: 6000  	MOV		A,@0x00
0005E5: 0103  	MOV		STATUS,A
0005E6: 60AA  		MOV		A,@0xAA
0005E7: 6855  		AND		A,@0x55		; A = 0xAA & 0x55
0005E8: 3003  		JBC		C			; Check C = 0?
0005E9: 5063  		JMP	INS_FAIL
0005EA: 3103  		JBC		DC			; Check DC = 0?
0005EB: 5063  		JMP	INS_FAIL
0005EC: 3A03  		JBS		Z			; Check Z = 1?
0005ED: 5063  		JMP	INS_FAIL
0005EE: 3503  		JBC		OV			; Check OV = 0?
0005EF: 5063  		JMP	INS_FAIL
0005F0: 3603  		JBC		N			; Check N = 0?
0005F1: 5063  		JMP	INS_FAIL
0005F2: 6C00  		XOR		A,@0x00		; Check Result ?
0005F3: 3A03  		JBS		Z			; Check Z = 1?
0005F4: 5063  		JMP	INS_FAIL
0005F5: 3603  		JBC		N			; Check N = 0?
0005F6: 5063  		JMP	INS_FAIL
0005F7: 6000  	MOV		A,@0x00
0005F8: 0103  	MOV		STATUS,A
0005F9: 60AA  		MOV		A,@0xAA
0005FA: 68FF  		AND		A,@0xFF		; A = A & 0xFF
0005FB: 3003  		JBC		C			; Check C = 0?
0005FC: 5063  		JMP	INS_FAIL
0005FD: 3103  		JBC		DC			; Check DC = 0?
0005FE: 5063  		JMP	INS_FAIL
0005FF: 3203  		JBC		Z			; Check Z = 0?
000600: 5063  		JMP	INS_FAIL
000601: 3503  		JBC		OV			; Check OV = 0?
000602: 5063  		JMP	INS_FAIL
000603: 3E03  		JBS		N			; Check N = 1?
000604: 5063  		JMP	INS_FAIL
000605: 6CAA  		XOR		A,@0xAA		; Check Result ?
000606: 3A03  		JBS		Z			; Check Z = 1?
000607: 5063  		JMP	INS_FAIL
000608: 3603  		JBC		N			; Check N = 0?
000609: 5063  		JMP	INS_FAIL
00060A: 602A  	MOV		A,@0x2A
00060B: 0150  	MOV		INST,A
00060C: 6000  	MOV		A,@0x00
00060D: 0103  	MOV		STATUS,A
00060E: 6055  		MOV		A,@0x55
00060F: 0150  		MOV		0x50,A		; [0x50] = 0x55
000610: 6E50  		RRA		0x50		; A = [0x50] >> 1
000611: 3003  		JBC		C			; Check C = 0?
000612: 5063  		JMP	INS_FAIL
000613: 3103  		JBC		DC			; Check DC = 0?
000614: 5063  		JMP	INS_FAIL
000615: 3203  		JBC		Z			; Check Z = 0?
000616: 5063  		JMP	INS_FAIL
000617: 3503  		JBC		OV			; Check OV = 0?
000618: 5063  		JMP	INS_FAIL
000619: 3E03  		JBS		N			; Check N = 1?
00061A: 5063  		JMP	INS_FAIL
00061B: 6CAA  		XOR		A,@0xAA		; Check Result ?
00061C: 3A03  		JBS		Z			; Check Z = 1?
00061D: 5063  		JMP	INS_FAIL
00061E: 3603  		JBC		N			; Check N = 0?
00061F: 5063  		JMP	INS_FAIL
000620: 602B  	MOV		A,@0x2B
000621: 0150  	MOV		INST,A
000622: 6000  	MOV		A,@0x00
000623: 0103  	MOV		STATUS,A	
000624: 6055  		MOV		A,@0x55
000625: 0150  		MOV		0x50,A		; [0x50] = 0x55
000626: 6F50  		RR		0x50		; [0x50] = [0x50] >> 1
000627: 1003  		MOV		A,STATUS
000628: 6C58  		XOR		A,@0x58		; Check Status ?
000629: 3A03  		JBS		Z			; Check Z = 1?
00062A: 5063  		JMP	INS_FAIL
00062B: 3603  		JBC		N			; Check N = 0?
00062C: 5063  		JMP	INS_FAIL
00062D: 1050  		MOV		A,0x50
00062E: 6CAA  		XOR		A,@0xAA		; Check Result ?
00062F: 3A03  		JBS		Z			; Check Z = 1?
000630: 5063  		JMP	INS_FAIL
000631: 3603  		JBC		N			; Check N = 0?
000632: 5063  		JMP	INS_FAIL
000633: 602D  	MOV		A,@0x2D
000634: 0150  	MOV		INST,A
000635: 6000  	MOV		A,@0x00
000636: 0103  	MOV		STATUS,A
000637: 6055  		MOV		A,@0x55
000638: 0150  		MOV		0x50,A		; [0x50] = 0x55
000639: 60AA  		MOV		A,@0xAA
00063A: 7150  		XCH		0x50		; [0x50] <-> A
00063B: 6C55  		XOR		A,@0x55		; Check Result ?
00063C: 3A03  		JBS		Z			; Check Z = 1?
00063D: 5063  		JMP	INS_FAIL
00063E: 3603  		JBC		N			; Check N = 0?
00063F: 5063  		JMP	INS_FAIL
000640: 1050  		MOV		A,0x50
000641: 6CAA  		XOR		A,@0xAA		; Check Result ?
000642: 3A03  		JBS		Z			; Check Z = 1?
000643: 5063  		JMP	INS_FAIL
000644: 3603  		JBC		N			; Check N = 0?
000645: 5063  		JMP	INS_FAIL
000646: 602E  	MOV		A,@0x2E
000647: 0150  	MOV		INST,A
000648: 6000  	MOV		A,@0x00
000649: 0103  	MOV		STATUS,A	
00064A: 605A  		MOV		A,@0x5A
00064B: 0150  		MOV		0x50,A		; [0x50] = 0x5A
00064C: 7250  		RLA		0x50		; A = [0x50] << 1
00064D: 3003  		JBC		C			; Check C = 0?
00064E: 5063  		JMP	INS_FAIL
00064F: 3103  		JBC		DC			; Check DC = 0?
000650: 5063  		JMP	INS_FAIL
000651: 3203  		JBC		Z			; Check Z = 0?
000652: 5063  		JMP	INS_FAIL
000653: 3503  		JBC		OV			; Check OV = 0?
000654: 5063  		JMP	INS_FAIL
000655: 3E03  		JBS		N			; Check N = 1?
000656: 5063  		JMP	INS_FAIL
000657: 6CB4  		XOR		A,@0xB4		; Check Result ?
000658: 3A03  		JBS		Z			; Check Z = 1?
000659: 5063  		JMP	INS_FAIL
00065A: 3603  		JBC		N			; Check N = 0?
00065B: 5063  		JMP	INS_FAIL
00065C: 602F  	MOV		A,@0x2F
00065D: 0150  	MOV		INST,A
00065E: 6000  	MOV		A,@0x00
00065F: 0103  	MOV		STATUS,A
000660: 605A  		MOV		A,@0x5A
000661: 0150  		MOV		0x50,A		; [0x50] = 0xA5
000662: 7350  		RL		0x50		; [0x50] = [0x50] << 1
000663: 1003  		MOV		A,STATUS
000664: 6C58  		XOR		A,@0x58		; Check Status ?
000665: 3A03  		JBS		Z			; Check Z = 1?
000666: 5063  		JMP	INS_FAIL
000667: 3603  		JBC		N			; Check N = 0?
000668: 5063  		JMP	INS_FAIL
000669: 1050  		MOV		A,0x50
00066A: 6CB4  		XOR		A,@0xB4		; Check Result ?
00066B: 3A03  		JBS		Z			; Check Z = 1?
00066C: 5063  		JMP	INS_FAIL
00066D: 3603  		JBC		N			; Check N = 0?
00066E: 5063  		JMP	INS_FAIL
00066F: 6030  	MOV		A,@0x30
000670: 0150  	MOV		INST,A
000671: 6000  	MOV		A,@0x00
000672: 0103  	MOV		STATUS,A
000673: 60FF  		MOV		A,@0xFF
000674: 74FF  		SUB		A,@0xFF		; A = 0xFF - 0xFF
000675: 3803  		JBS		C			; Check C = 1?
000676: 5063  		JMP	INS_FAIL
000677: 3903  		JBS		DC			; Check DC = 1?
000678: 5063  		JMP	INS_FAIL
000679: 3A03  		JBS		Z			; Check Z = 1?
00067A: 5063  		JMP	INS_FAIL
00067B: 3503  		JBC		OV			; Check OV = 0?
00067C: 5063  		JMP	INS_FAIL
00067D: 3603  		JBC		N			; Check N = 0?
00067E: 5063  		JMP	INS_FAIL
00067F: 6C00  		XOR		A,@0x00		; Check Result ?
000680: 3A03  		JBS		Z			; Check Z = 1?
000681: 5063  		JMP	INS_FAIL
000682: 3603  		JBC		N			; Check N = 0?
000683: 5063  		JMP	INS_FAIL
000684: 6000  	MOV		A,@0x00
000685: 0103  	MOV		STATUS,A
000686: 607F  		MOV		A,@0x7F
000687: 7400  		SUB		A,@0x00		; A = 0x00 - 0x7F
000688: 3003  		JBC		C			; Check C = 0?
000689: 5063  		JMP	INS_FAIL
00068A: 3103  		JBC		DC			; Check DC = 0?
00068B: 5063  		JMP	INS_FAIL
00068C: 3203  		JBC		Z			; Check Z = 0?
00068D: 5063  		JMP	INS_FAIL
00068E: 3503  		JBC		OV			; Check OV = 0?
00068F: 5063  		JMP	INS_FAIL
000690: 3E03  		JBS		N			; Check N = 1?
000691: 5063  		JMP	INS_FAIL
000692: 6C81  		XOR		A,@0x81		; Check Result ?
000693: 3A03  		JBS		Z			; Check Z = 1?
000694: 5063  		JMP	INS_FAIL
000695: 3603  		JBC		N			; Check N = 0?
000696: 5063  		JMP	INS_FAIL
000697: 6000  	MOV		A,@0x00
000698: 0103  	MOV		STATUS,A
000699: 6001  		MOV		A,@0x01
00069A: 7480  		SUB		A,@0x80		; A = 0x80 - 0x01
00069B: 3803  		JBS		C			; Check C = 1?
00069C: 5063  		JMP	INS_FAIL
00069D: 3103  		JBC		DC			; Check DC = 0?
00069E: 5063  		JMP	INS_FAIL
00069F: 3203  		JBC		Z			; Check Z = 0?
0006A0: 5063  		JMP	INS_FAIL
0006A1: 3D03  		JBS		OV			; Check OV = 1?
0006A2: 5063  		JMP	INS_FAIL
0006A3: 3603  		JBC		N			; Check N = 0?
0006A4: 5063  		JMP	INS_FAIL
0006A5: 6C7F  		XOR		A,@0x7F		; Check Result ?
0006A6: 3A03  		JBS		Z			; Check Z = 1?
0006A7: 5063  		JMP	INS_FAIL
0006A8: 3603  		JBC		N			; Check N = 0?
0006A9: 5063  		JMP	INS_FAIL
0006AA: 6031  	MOV		A,@0x31
0006AB: 0150  	MOV		INST,A
0006AC: 6000  	MOV		A,@0x00
0006AD: 0103  	MOV		STATUS,A
0006AE: 2003  		BC		C			; B = 1
0006AF: 6000  		MOV		A,@0x00
0006B0: 0150  		MOV		0x50,A		; [0x50] = 0x00
0006B1: 60FF  		MOV		A,@0xFF		; A = 0x01
0006B2: 7850  		SUBB	A,0x50		; A = [0x50] - A - B
0006B3: 3003  		JBC		C			; Check C = 0?
0006B4: 5063  		JMP	INS_FAIL
0006B5: 3103  		JBC		DC			; Check DC = 0?
0006B6: 5063  		JMP	INS_FAIL
0006B7: 3A03  		JBS		Z			; Check Z = 1?
0006B8: 5063  		JMP	INS_FAIL
0006B9: 3503  		JBC		OV			; Check OV = 0?
0006BA: 5063  		JMP	INS_FAIL
0006BB: 3603  		JBC		N			; Check N = 0?
0006BC: 5063  		JMP	INS_FAIL
0006BD: 6C00  		XOR		A,@0x00		; Check Result ?
0006BE: 3A03  		JBS		Z			; Check Z = 1?
0006BF: 5063  		JMP	INS_FAIL
0006C0: 3603  		JBC		N			; Check N = 0?
0006C1: 5063  		JMP	INS_FAIL	
0006C2: 6000  	MOV		A,@0x00
0006C3: 0103  	MOV		STATUS,A
0006C4: 2003  		BC		C			; B = 1
0006C5: 6000  		MOV		A,@0x00
0006C6: 0150  		MOV		0x50,A		; [0x50] = 0x00
0006C7: 607F  		MOV		A,@0x7F		; A = 0x01
0006C8: 7850  		SUBB	A,0x50		; A = [0x50] - A - B
0006C9: 3003  		JBC		C			; Check C = 0?
0006CA: 5063  		JMP	INS_FAIL
0006CB: 3103  		JBC		DC			; Check DC = 0?
0006CC: 5063  		JMP	INS_FAIL
0006CD: 3203  		JBC		Z			; Check Z = 0?
0006CE: 5063  		JMP	INS_FAIL
0006CF: 3503  		JBC		OV			; Check OV = 0?
0006D0: 5063  		JMP	INS_FAIL
0006D1: 3E03  		JBS		N			; Check N = 1?
0006D2: 5063  		JMP	INS_FAIL
0006D3: 6C80  		XOR		A,@0x80		; Check Result ?
0006D4: 3A03  		JBS		Z			; Check Z = 1?
0006D5: 5063  		JMP	INS_FAIL
0006D6: 3603  		JBC		N			; Check N = 0?
0006D7: 5063  		JMP	INS_FAIL
0006D8: 6000  	MOV		A,@0x00
0006D9: 0103  	MOV		STATUS,A
0006DA: 2003  		BC		C			; B = 1
0006DB: 6080  		MOV		A,@0x80
0006DC: 0150  		MOV		0x50,A		; [0x50] = 0x80
0006DD: 6001  		MOV		A,@0x01		; A = 0x01
0006DE: 7850  		SUBB	A,0x50		; A = [0x50] - A - B
0006DF: 3803  		JBS		C			; Check C = 1?
0006E0: 5063  		JMP	INS_FAIL
0006E1: 3103  		JBC		DC			; Check DC = 0?
0006E2: 5063  		JMP	INS_FAIL
0006E3: 3203  		JBC		Z			; Check Z = 0?
0006E4: 5063  		JMP	INS_FAIL
0006E5: 3D03  		JBS		OV			; Check OV = 1?
0006E6: 5063  		JMP	INS_FAIL
0006E7: 3603  		JBC		N			; Check N = 0?
0006E8: 5063  		JMP	INS_FAIL
0006E9: 6C7E  		XOR		A,@0x7E		; Check Result ?
0006EA: 3A03  		JBS		Z			; Check Z = 1?
0006EB: 5063  		JMP	INS_FAIL
0006EC: 3603  		JBC		N			; Check N = 0?
0006ED: 5063  		JMP	INS_FAIL
0006EE: 6032  	MOV		A,@0x32
0006EF: 0150  	MOV		INST,A
0006F0: 6000  	MOV		A,@0x00
0006F1: 0103  	MOV		STATUS,A
0006F2: 2003  		BC		C			; B = 1
0006F3: 6000  		MOV		A,@0x00
0006F4: 0150  		MOV		0x50,A		; [0x50] = 0x00
0006F5: 60FF  		MOV		A,@0xFF
0006F6: 7950  		SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
0006F7: 1003  		MOV		A,STATUS
0006F8: 6C1C  		XOR		A,@0x1C		; Check Status ?
0006F9: 3A03  		JBS		Z			; Check Z = 1?
0006FA: 5063  		JMP	INS_FAIL
0006FB: 3603  		JBC		N			; Check N = 0?
0006FC: 5063  		JMP	INS_FAIL
0006FD: 1050  		MOV		A,0x50
0006FE: 6C00  		XOR		A,@0x00		; Check Result ?
0006FF: 3A03  		JBS		Z			; Check Z = 1?
000700: 5063  		JMP	INS_FAIL
000701: 3603  		JBC		N			; Check N = 0?
000702: 5063  		JMP	INS_FAIL
000703: 6000  	MOV		A,@0x00
000704: 0103  	MOV		STATUS,A
000705: 2003  		BC		C			; B = 1
000706: 6000  		MOV		A,@0x00
000707: 0150  		MOV		0x50,A		; [0x50] = 0x00
000708: 607F  		MOV		A,@0x7F
000709: 7950  		SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
00070A: 1003  		MOV		A,STATUS
00070B: 6C58  		XOR		A,@0x58		; Check Status ?
00070C: 3A03  		JBS		Z			; Check Z = 1?
00070D: 5063  		JMP	INS_FAIL
00070E: 3603  		JBC		N			; Check N = 0?
00070F: 5063  		JMP	INS_FAIL
000710: 1050  		MOV		A,0x50
000711: 6C80  		XOR		A,@0x80		; Check Result ?
000712: 3A03  		JBS		Z			; Check Z = 1?
000713: 5063  		JMP	INS_FAIL
000714: 3603  		JBC		N			; Check N = 0?
000715: 5063  		JMP	INS_FAIL
000716: 6000  	MOV		A,@0x00
000717: 0103  	MOV		STATUS,A
000718: 2003  		BC		C			; B = 1
000719: 6080  		MOV		A,@0x80
00071A: 0150  		MOV		0x50,A		; [0x50] = 0x80
00071B: 6001  		MOV		A,@0x01
00071C: 7950  		SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
00071D: 1003  		MOV		A,STATUS
00071E: 6C39  		XOR		A,@0x39		; Check Status ?
00071F: 3A03  		JBS		Z			; Check Z = 1?
000720: 5063  		JMP	INS_FAIL
000721: 3603  		JBC		N			; Check N = 0?
000722: 5063  		JMP	INS_FAIL
000723: 1050  		MOV		A,0x50
000724: 6C7E  		XOR		A,@0x7E		; Check Result ?
000725: 3A03  		JBS		Z			; Check Z = 1?
000726: 5063  		JMP	INS_FAIL
000727: 3603  		JBC		N			; Check N = 0?
000728: 5063  		JMP	INS_FAIL
000729: 6034  	MOV		A,@0x34
00072A: 0150  	MOV		INST,A
00072B: 6000  	MOV		A,@0x00
00072C: 0103  	MOV		STATUS,A
00072D: 607F  		MOV		A,@0x7F
00072E: 7C01  		ADD		A,@0x01		; A = 0x01 + A
00072F: 3003  		JBC		C			; Check C = 0?
000730: 5063  		JMP	INS_FAIL
000731: 3903  		JBS		DC			; Check DC = 1?
000732: 5063  		JMP	INS_FAIL
000733: 3203  		JBC		Z			; Check Z = 0?
000734: 5063  		JMP	INS_FAIL
000735: 3D03  		JBS		OV			; Check OV = 1?
000736: 5063  		JMP	INS_FAIL
000737: 3E03  		JBS		N			; Check N = 1?
000738: 5063  		JMP	INS_FAIL
000739: 6C80  		XOR		A,@0x80		; Check Result ?
00073A: 3A03  		JBS		Z			; Check Z = 1?
00073B: 5063  		JMP	INS_FAIL
00073C: 3603  		JBC		N			; Check N = 0?
00073D: 5063  		JMP	INS_FAIL
00073E: 6000  	MOV		A,@0x00
00073F: 0103  	MOV		STATUS,A
000740: 60FF  		MOV		A,@0xFF
000741: 7C01  		ADD		A,@0x01		; A = 0x01 + A
000742: 3803  		JBS		C			; Check C = 1?
000743: 5063  		JMP	INS_FAIL
000744: 3903  		JBS		DC			; Check DC = 1?
000745: 5063  		JMP	INS_FAIL
000746: 3A03  		JBS		Z			; Check Z = 1?
000747: 5063  		JMP	INS_FAIL
000748: 3503  		JBC		OV			; Check OV = 0?
000749: 5063  		JMP	INS_FAIL
00074A: 3603  		JBC		N			; Check N = 0?
00074B: 5063  		JMP	INS_FAIL
00074C: 6C00  		XOR		A,@0x00		; Check Result ?
00074D: 3A03  		JBS		Z			; Check Z = 1?
00074E: 5063  		JMP	INS_FAIL
00074F: 3603  		JBC		N			; Check N = 0?
000750: 5063  		JMP	INS_FAIL
000751: 6000  	MOV		A,@0x00
000752: 0103  	MOV		STATUS,A
000753: 607F  		MOV		A,@0x7F
000754: 7C80  		ADD		A,@0x80		; A = 0x80 + A
000755: 3003  		JBC		C			; Check C = 0?
000756: 5063  		JMP	INS_FAIL
000757: 3103  		JBC		DC			; Check DC = 0?
000758: 5063  		JMP	INS_FAIL
000759: 3203  		JBC		Z			; Check Z = 0?
00075A: 5063  		JMP	INS_FAIL
00075B: 3503  		JBC		OV			; Check OV = 0?
00075C: 5063  		JMP	INS_FAIL
00075D: 3E03  		JBS		N			; Check N = 1?
00075E: 5063  		JMP	INS_FAIL
00075F: 6CFF  		XOR		A,@0xFF		; Check Result ?
000760: 3A03  		JBS		Z			; Check Z = 1?
000761: 5063  		JMP	INS_FAIL
000762: 3603  		JBC		N			; Check N = 0?
000763: 5063  		JMP	INS_FAIL
000764: 6035  	MOV		A,@0x35
000765: 0150  	MOV		INST,A
000766: 6000  	MOV		A,@0x00
000767: 0103  	MOV		STATUS,A
000768: 6000  		MOV		A,@0x00
000769: 0150  		MOV		0x50,A		; [0x50] = 0x00
00076A: 7D50  		NEG		0x50
00076B: 1003  		MOV		A,STATUS
00076C: 6C1F  		XOR		A,@0x1F		; Check Status ?
00076D: 3A03  		JBS		Z			; Check Z = 1?
00076E: 5063  		JMP	INS_FAIL
00076F: 3603  		JBC		N			; Check N = 0?
000770: 5063  		JMP	INS_FAIL
000771: 1050  		MOV		A,0x50
000772: 6C00  		XOR		A,@0x00		; Check Result ?
000773: 3A03  		JBS		Z			; Check Z = 1?
000774: 5063  		JMP	INS_FAIL
000775: 3603  		JBC		N			; Check N = 0?
000776: 5063  		JMP	INS_FAIL
000777: 6000  	MOV		A,@0x00
000778: 0103  	MOV		STATUS,A
000779: 6001  		MOV		A,@0x01
00077A: 0150  		MOV		0x50,A		; [0x50] = 0x01
00077B: 7D50  		NEG		0x50
00077C: 1003  		MOV		A,STATUS
00077D: 6C58  		XOR		A,@0x58		; Check Status ?
00077E: 3A03  		JBS		Z			; Check Z = 1?
00077F: 5063  		JMP	INS_FAIL
000780: 3603  		JBC		N			; Check N = 0?
000781: 5063  		JMP	INS_FAIL
000782: 1050  		MOV		A,0x50
000783: 6CFF  		XOR		A,@0xFF		; Check Result ?
000784: 3A03  		JBS		Z			; Check Z = 1?
000785: 5063  		JMP	INS_FAIL
000786: 3603  		JBC		N			; Check N = 0?
000787: 5063  		JMP	INS_FAIL
000788: 6000  	MOV		A,@0x00
000789: 0103  	MOV		STATUS,A
00078A: 6080  		MOV		A,@0x80
00078B: 0150  		MOV		0x50,A		; [0x50] = 0x80
00078C: 7D50  		NEG		0x50
00078D: 1003  		MOV		A,STATUS
00078E: 6C7A  		XOR		A,@0x7A		; Check Status ?
00078F: 3A03  		JBS		Z			; Check Z = 1?
000790: 5063  		JMP	INS_FAIL
000791: 3603  		JBC		N			; Check N = 0?
000792: 5063  		JMP	INS_FAIL
000793: 1050  		MOV		A,0x50
000794: 6C80  		XOR		A,@0x80		; Check Result ?
000795: 3A03  		JBS		Z			; Check Z = 1?
000796: 5063  		JMP	INS_FAIL
000797: 3603  		JBC		N			; Check N = 0?
000798: 5063  		JMP	INS_FAIL
000799: 6036  	MOV		A,@0x36
00079A: 0150  	MOV		INST,A
00079B: 6000  	MOV		A,@0x00
00079C: 0103  	MOV		STATUS,A
00079D: 2803  		BS		C
00079E: 607F  		MOV		A,@0x7F
00079F: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0007A0: 6000  		MOV		A,@0x00		; A = 0x00
0007A1: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
0007A2: 3003  		JBC		C			; Check C = 0?
0007A3: 5063  		JMP	INS_FAIL
0007A4: 3903  		JBS		DC			; Check DC = 1?
0007A5: 5063  		JMP	INS_FAIL
0007A6: 3203  		JBC		Z			; Check Z = 0?
0007A7: 5063  		JMP	INS_FAIL
0007A8: 3D03  		JBS		OV			; Check OV = 1?
0007A9: 5063  		JMP	INS_FAIL
0007AA: 3E03  		JBS		N			; Check N = 1?
0007AB: 5063  		JMP	INS_FAIL
0007AC: 6C80  		XOR		A,@0x80		; Check Result ?
0007AD: 3A03  		JBS		Z			; Check Z = 1?
0007AE: 5063  		JMP	INS_FAIL
0007AF: 3603  		JBC		N			; Check N = 0?
0007B0: 5063  		JMP	INS_FAIL
0007B1: 6000  	MOV		A,@0x00
0007B2: 0103  	MOV		STATUS,A
0007B3: 2803  		BS		C
0007B4: 6080  		MOV		A,@0x80
0007B5: 0150  		MOV		0x50,A		; [0x50] = 0x80
0007B6: 607F  		MOV		A,@0x7F		; A = 0x7F
0007B7: 7E50  		ADC		A,0x50		; A = A + [0x50] + C
0007B8: 3803  		JBS		C			; Check C = 1?
0007B9: 5063  		JMP	INS_FAIL
0007BA: 3903  		JBS		DC			; Check DC = 1?
0007BB: 5063  		JMP	INS_FAIL
0007BC: 3A03  		JBS		Z			; Check Z = 1?
0007BD: 5063  		JMP	INS_FAIL
0007BE: 3503  		JBC		OV			; Check OV = 0?
0007BF: 5063  		JMP	INS_FAIL
0007C0: 3603  		JBC		N			; Check N = 0?
0007C1: 5063  		JMP	INS_FAIL
0007C2: 6C00  		XOR		A,@0x00		; Check Result ?
0007C3: 3A03  		JBS		Z			; Check Z = 1?
0007C4: 5063  		JMP	INS_FAIL
0007C5: 3603  		JBC		N			; Check N = 0?
0007C6: 5063  		JMP	INS_FAIL
0007C7: 6037  	MOV		A,@0x37
0007C8: 0150  	MOV		INST,A
0007C9: 6000  	MOV		A,@0x00
0007CA: 0103  	MOV		STATUS,A
0007CB: 2803  		BS		C
0007CC: 607F  		MOV		A,@0x7F
0007CD: 0150  		MOV		0x50,A		; [0x50] = 0x7F
0007CE: 6000  		MOV		A,@0x00		; A = 0x00
0007CF: 2203  		BC		Z
0007D0: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
0007D1: 1003  		MOV		A,STATUS
0007D2: 6C7A  		XOR		A,@0x7A		; Check Status ?
0007D3: 3A03  		JBS		Z			; Check Z = 1?
0007D4: 5063  		JMP	INS_FAIL
0007D5: 3603  		JBC		N			; Check N = 0?
0007D6: 5063  		JMP	INS_FAIL
0007D7: 1050  		MOV		A,0x50
0007D8: 6C80  		XOR		A,@0x80		; Check Result ?
0007D9: 3A03  		JBS		Z			; Check Z = 1?
0007DA: 5063  		JMP	INS_FAIL
0007DB: 3603  		JBC		N			; Check N = 0?
0007DC: 5063  		JMP	INS_FAIL
0007DD: 6000  	MOV		A,@0x00
0007DE: 0103  	MOV		STATUS,A
0007DF: 2803  		BS		C
0007E0: 6080  		MOV		A,@0x80
0007E1: 0150  		MOV		0x50,A		; [0x50] = 0x80
0007E2: 607F  		MOV		A,@0x7F		; A = 0x7F
0007E3: 2203  		BC		Z
0007E4: 7F50  		ADC		0x50,A		; TMP1 = A + [0x50] + C
0007E5: 1003  		MOV		A,STATUS
0007E6: 6C1F  		XOR		A,@0x1F		; Check Status ?
0007E7: 3A03  		JBS		Z			; Check Z = 1?
0007E8: 5063  		JMP	INS_FAIL
0007E9: 3603  		JBC		N			; Check N = 0?
0007EA: 5063  		JMP	INS_FAIL
0007EB: 1050  		MOV		A,0x50
0007EC: 6C00  		XOR		A,@0x00		; Check Result ?
0007ED: 3A03  		JBS		Z			; Check Z = 1?
0007EE: 5063  		JMP	INS_FAIL
0007EF: 3603  		JBC		N			; Check N = 0?
0007F0: 5063  		JMP	INS_FAIL
0007F1: 0000  		NOP
0007F2: 0000  		NOP
0007F3: 0000  		NOP
0007F4: 0000  		NOP
0007F5: 6000  	MOV		A,@0x00
0007F6: 0103  	MOV		STATUS,A
0007F7: 2803  		BS	C
0007F8: 6903  		SJC		@0x03
0007F9: 505F  		JMP	JMP_FAIL
0007FA: 505F  		JMP	JMP_FAIL
0007FB: 505F  		JMP	JMP_FAIL
0007FC: 2003  		BC	C
0007FD: 6A03  		SJNC	bbb
0007FE: 505F  		JMP	JMP_FAIL
0007FF: 505F  		JMP	JMP_FAIL
000800: 505F  		JMP	JMP_FAIL
000801: 2A03  		BS	Z
000802: 6B03  		SJZ		@0x03
000803: 505F  		JMP	JMP_FAIL
000804: 505F  		JMP	JMP_FAIL
000805: 505F  		JMP	JMP_FAIL
000806: 0200  		CLRA
000807: 6B03  		SJZ		@0x03
000808: 505F  		JMP	JMP_FAIL
000809: 505F  		JMP	JMP_FAIL
00080A: 505F  		JMP	JMP_FAIL
00080B: 5813  		JMP	IATEST1
00080C: 5820  		JMP	IATEST2		; -9
00080D: 505F  		JMP	JMP_FAIL	; -8
00080E: 505F  		JMP	JMP_FAIL	; -7
00080F: 505F  		JMP	JMP_FAIL	; -6
000810: 505F  		JMP	JMP_FAIL	; -5
000811: 505F  		JMP	JMP_FAIL	; -4
000812: 505F  		JMP	JMP_FAIL	; -3
000813: 2803  		BS		C		; -2
000814: 69F7  		SJC		aaa		; -1
000815: 69F7  		SJC		@0xF7	; -1
000816: 505F  		JMP	JMP_FAIL
000817: 505F  		JMP	JMP_FAIL
000818: 505F  		JMP	JMP_FAIL
000819: 582C  		JMP	IATEST3		; -9
00081A: 505F  		JMP	JMP_FAIL	; -8
00081B: 505F  		JMP	JMP_FAIL	; -7
00081C: 505F  		JMP	JMP_FAIL	; -6
00081D: 505F  		JMP	JMP_FAIL	; -5
00081E: 505F  		JMP	JMP_FAIL	; -4
00081F: 505F  		JMP	JMP_FAIL	; -3
000820: 2003  		BC		C		; -2
000821: 6AF7  		SJNC		@0xF7	; -1
000822: 583D  		JMP	_IPass
000823: 583D  		JMP	_IPass
000824: 583D  		JMP	_IPass
000825: 5838  		JMP	IATEST4		; -9
000826: 505F  		JMP	JMP_FAIL	; -8
000827: 505F  		JMP	JMP_FAIL	; -7
000828: 505F  		JMP	JMP_FAIL	; -6
000829: 505F  		JMP	JMP_FAIL	; -5
00082A: 505F  		JMP	JMP_FAIL	; -4
00082B: 505F  		JMP	JMP_FAIL	; -3
00082C: 2A03  		BS		Z		; -2
00082D: 6BF7  		SJZ		@0xF7	; -1
00082E: 505F  		JMP	JMP_FAIL
00082F: 505F  		JMP	JMP_FAIL
000830: 505F  		JMP	JMP_FAIL
000831: 583D  		JMP	_IPass		; -9
000832: 505F  		JMP	JMP_FAIL	; -8
000833: 505F  		JMP	JMP_FAIL	; -7
000834: 505F  		JMP	JMP_FAIL	; -6
000835: 505F  		JMP	JMP_FAIL	; -5
000836: 505F  		JMP	JMP_FAIL	; -4
000837: 505F  		JMP	JMP_FAIL	; -3
000838: 2203  		BC		Z		; -2
000839: 6DF7  		SJNZ	@0xF7	; -1
00083A: 505F  		JMP	JMP_FAIL
00083B: 505F  		JMP	JMP_FAIL
00083C: 505F  		JMP	JMP_FAIL
00083D: 0000  		NOP
00083E: 7A41  	GBANK   1
00083F: 6050  	MOV		A,@0x50
000840: 0104  	MOV		RSR,A			; Start Address
000841: 60AF  	MOV		A,@0xAF			; For count from 0x50~0xFF
000842: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF, count value
000843: 6055  	MOV		A,@0x55			; IAR = 0x55
000844: 0100  	MOV		IAR,A			; Write IAR to [RSR]
000845: 1504  	INC		RSR				; RSR = RSR + 1
000846: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
000847: 5843  	JMP		LOOP1			; Until [0xFF] = 0
000848: 6050  	MOV		A,@0x50
000849: 0104  	MOV		RSR,A
00084A: 60AF  	MOV		A,@0xAF
00084B: 01FF  	MOV		0xFF,A
00084C: 60AA  	MOV		A,@0xAA
00084D: 1300  	COM		IAR				; IAR = ~IAR
00084E: 0D00  	XOR		IAR,A
00084F: 3A03  	JBS		Z
000850: 5061  	JMP		RAM_FAIL
000851: 1504  	INC		RSR				; RSR = RSR + 1
000852: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
000853: 584C  	JMP		CHECK1			; Until [0xFF] = 0
000854: 6050  	MOV		A,@0x50
000855: 0104  	MOV		RSR,A			; Start Address
000856: 60AF  	MOV		A,@0xAF			; For count from 0x50~0xFF
000857: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF, count value
000858: 60AA  	MOV		A,@0xAA			; IAR = 0xAA
000859: 0100  	MOV		IAR,A			; Write IAR to [RSR]
00085A: 1504  	INC		RSR				; RSR = RSR + 1
00085B: 17FF  	DJZ		0xFF			; [0xFF] = [0xFF] - 1
00085C: 5858  	JMP		LOOP2			; Until  [0xFF] = 0	
00085D: 6050  	MOV		A,@0x50
00085E: 0104  	MOV		RSR,A			; RSR = 0x50
00085F: 60AF  	MOV		A,@0xAF
000860: 01FF  	MOV		0xFF,A			; [0xFF] = 0xAF
000861: 60AA  	MOV		A,@0xAA
000862: 0D00  	XOR		IAR,A
000863: 3A03  	JBS		Z
000864: 5061  	JMP		RAM_FAIL
000865: 1504  	INC		RSR
000866: 17FF  	DJZ		0xFF
000867: 5861  	JMP		CHECK2			; Until [0xFF] = 0
000868: 0000  	NOP
