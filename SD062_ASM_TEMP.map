****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X1    , Size=1
Start=0X22   , End=0X4F   , Size=46
Start=0X7EE  , End=0XEEF  , Size=1794
Start=0XEF9  , End=0XEFF  , Size=7
Start=0XF5C  , End=0XFFF  , Size=164
Start=0X1002 , End=0X17FF , Size=2046
----------------------------------------
SD062           |        ROM Size        
----------------+-----------------------
Total           |  6144 x 15 bits(100.0%)
Used            |  2086 x 15 bits( 34.0%)
Free            |  4058 x 15 bits( 66.0%)
----------------------------------------
****************************************
The Checksum is -- 0x6CBB
****************************************
--------------- ROM Code ---------------
000000: 5050  	JMP 	MAIN
000002: 5067  	JMP 	JMP_FAIL	;0x0030
000003: 5067  	JMP 	JMP_FAIL	;0x0031
000004: 5067  	JMP 	JMP_FAIL	;0x0032
000005: 5067  	JMP 	JMP_FAIL	;0x0033
000006: 5067  	JMP 	JMP_FAIL	;0x0034
000007: 5067  	JMP 	JMP_FAIL	;0x0035
000008: 5067  	JMP 	JMP_FAIL	;0x0036
000009: 5067  	JMP 	JMP_FAIL	;0x0037
00000A: 5067  	JMP 	JMP_FAIL	;0x0038
00000B: 5067  	JMP 	JMP_FAIL	;0x0039
00000C: 5067  	JMP 	JMP_FAIL	;0x003A
00000D: 5067  	JMP 	JMP_FAIL	;0x003B
00000E: 5067  	JMP 	JMP_FAIL	;0x003C
00000F: 5067  	JMP 	JMP_FAIL	;0x003D
000010: 5067  	JMP 	JMP_FAIL	;0x003E
000011: 5067  	JMP 	JMP_FAIL	;0x003F
000012: 5067  	JMP 	JMP_FAIL	;0x0040
000013: 5067  	JMP 	JMP_FAIL	;0x0041
000014: 5067  	JMP 	JMP_FAIL	;0x0042
000015: 5067  	JMP 	JMP_FAIL	;0x0043
000016: 5067  	JMP 	JMP_FAIL	;0x0044
000017: 5067  	JMP 	JMP_FAIL	;0x0045
000018: 5067  	JMP 	JMP_FAIL	;0x0046
000019: 5067  	JMP 	JMP_FAIL	;0x0047
00001A: 5067  	JMP 	JMP_FAIL	;0x0048
00001B: 5067  	JMP 	JMP_FAIL	;0x0049
00001C: 5067  	JMP 	JMP_FAIL	;0x004A
00001D: 5067  	JMP 	JMP_FAIL	;0x004B
00001E: 5067  	JMP 	JMP_FAIL	;0x004C
00001F: 5067  	JMP 	JMP_FAIL	;0x004D
000020: 5067  	JMP 	JMP_FAIL	;0x004E
000021: 5067  	JMP 	JMP_FAIL	;0x004F
000050: 4070  	CALL	SYS_INIT
000051: 4075  	CALL	GPIO_INIT
000052: 40A5  	CALL	RAM_SHA_INIT
000053: 40AF  	CALL	RAM_IND_INIT
000054: 40D8  	CALL	EEPROM_INIT
000055: 7A00  	SBANK	0
000056: 40EE  	CALL	TEST_INST_ARITHEMATIC	;ADD, SUB, DAA, DEC, DECA, INC, INCA, ADC, SUBB, NEG
000057: 4498  	CALL	TEST_INST_LOGIC_I		;AND, OR, COM, COMA, XOR, CLR, CLRA, BTG
000058: 45C7  	CALL	TEST_INST_LOGIC_II		;RLC, RLCA, RRC, RRCA, RRA, RR, RLA, RL, XCH
000059: 468F  	CALL	TEST_INST_TRANSFER		;MOV, SWAP, SWAPA
00005A: 46C7  	CALL	TEST_INST_MANIPULATION	;BC, BS, JBC, JBS
00005B: 46C8  	CALL	TEST_INST_BRANCH_I		;JC, JNC, JZ, JNZ, DJZ, DJZA, JZ, JZA
00005C: 4707  	CALL	TEST_INST_BRANCH_II		;JE R, JGE, JLE, JE K
00005D: 4746  	CALL	TEST_INST_BRANCH_III	;CALL, JMP, LCALL, LJMP, RETL
00005E: 476D  	CALL	TEST_INST_CONTROL		;ENI, DISI, WDTC, SLEP, NOP, RETI, RET
00005F: 4778  	CALL	TEST_SHORT_BRANCH		;SJC, SJZ, SJNC, SJNZ
000060: 47C1  	CALL	TEST_READ_ROM			;TBRD, TBRDA
000061: 4F00  	CALL	TEST_RAM_BANK_0_5		;Write(0x55),Read(0x55),Clear(0x00)
000062: 4F17  	CALL	TEST_RAM_BANK_0_A		;Write(0xAA),Read(0xAA),Clear(0x00)
000063: 4F2E  	CALL	TEST_RAM_BANK_1_3		;Write(0x33),Read(0x33),Clear(0x00)
000064: 4F45  	CALL	TEST_RAM_BANK_1_C		;Write(0xCC),Read(0xCC),Clear(0x00)
000065: 0095  	BTG		P5,1
000066: 5055  	JMP		BACK_GROUND_LOOP
000067: 7A00  	SBANK	0
000068: 2205  	BC		P5,2
000069: 5067  	JMP		JMP_FAIL
00006A: 7A00  	SBANK	0
00006B: 2305  	BC		P5,3
00006C: 506A  	JMP		RAM_FAIL
00006D: 7A00  	SBANK	0
00006E: 2405  	BC		P5,4
00006F: 506D  	JMP		INS_FAIL
000070: 7A00  		SBANK	0
000071: 260E  		BC		IDLE	;SLEEP_MODE
000072: 6000  		MOV		A,@0x00
000073: 0114  		MOV		SFR1,A
000074: 0012  		RET
000075: 7A00  		SBANK	0
000076: 0305  		CLR		P5
000077: 60F0  		MOV		A,@0xF0
000078: 010B  		MOV		IOCR5,A
000079: 60FF  		MOV		A,@0xFF	;Turn-Off LED (Active-Low)
00007A: 0105  		MOV		P5,A
00007B: 0012  		RET
00007C: 7A00  		SBANK	0
00007D: 3B03  		JBS		P			; PWR ON reset(1)/RST pin reset(0)
00007E: 5081  		JMP		$+3
00007F: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000080: 0003  		SLEP
000081: 3B03  		JBS		P
000082: 5085  		JMP		$+3
000083: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000084: 0003  		SLEP
000085: 3B03  		JBS		P
000086: 5089  		JMP		$+3
000087: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000088: 2005  		BC		P5,0		; PWR ON reset,Light PWR_LED
000089: 0003  		SLEP		
00008A: 0012  		RET
00008B: 3D05  		JBS		P5,5		; Push, or not
00008C: 508E  		JMP		$+2
00008D: 508B  		JMP		$-2
00008E: 3D05  		JBS		P5,5
00008F: 508B  		JMP		KEY_DEBOUNCE
000090: 3D05  		JBS		P5,5
000091: 508B  		JMP		KEY_DEBOUNCE
000092: 3D05  		JBS		P5,5
000093: 508B  		JMP		KEY_DEBOUNCE
000094: 3D05  		JBS		P5,5
000095: 508B  		JMP		KEY_DEBOUNCE
000096: 3D05  		JBS		P5,5
000097: 508B  		JMP		KEY_DEBOUNCE
000098: 3D05  		JBS		P5,5
000099: 508B  		JMP		KEY_DEBOUNCE
00009A: 3D05  		JBS		P5,5
00009B: 508B  		JMP		KEY_DEBOUNCE
00009C: 3D05  		JBS		P5,5
00009D: 508B  		JMP		KEY_DEBOUNCE
00009E: 3D05  		JBS		P5,5
00009F: 508B  		JMP		KEY_DEBOUNCE
0000A0: 3D05  		JBS		P5,5
0000A1: 509F  		JMP		$-2
0000A2: 60FF  		MOV		A,@0xFF		; Turn Off all LED
0000A3: 0105  		MOV		P5,A		
0000A4: 0012  		RET
0000A5: 6050  		MOV		A,@0x50
0000A6: 0104  		MOV		RSR,A
0000A7: 60FF  		MOV		A,@0xFF		;RAM_SHA_LOOP
0000A8: 0100  		MOV		IAR,A
0000A9: 1504  		INC		RSR
0000AA: 6080  		MOV		A,@0x80
0000AB: 0C04  		XOR		A,RSR
0000AC: 3A03  		JBS		Z
0000AD: 50A7  		JMP		$-6
0000AE: 0012  		RET
0000AF: 6080  		MOV		A,@0x80
0000B0: 0104  		MOV		RSR,A
0000B1: 7A40  		GBANK	0
0000B2: 60FF  		MOV		A,@0xFF
0000B3: 0100  		MOV		IAR,A
0000B4: 1504  		INC		RSR
0000B5: 6000  		MOV		A,@0x00
0000B6: 0C04  		XOR		A,RSR
0000B7: 3A03  		JBS		Z
0000B8: 50B1  		JMP		RAM_IND_LOOP_0
0000B9: 6080  		MOV		A,@0x80
0000BA: 0104  		MOV		RSR,A
0000BB: 7A41  		GBANK	1
0000BC: 60FF  		MOV		A,@0xFF
0000BD: 0100  		MOV		IAR,A
0000BE: 1504  		INC		RSR
0000BF: 6000  		MOV		A,@0x00
0000C0: 0C04  		XOR		A,RSR
0000C1: 3A03  		JBS		Z
0000C2: 50BB  		JMP		RAM_IND_LOOP_1
0000C3: 6080  		MOV		A,@0x80
0000C4: 0104  		MOV		RSR,A
0000C5: 7A42  		GBANK	2
0000C6: 60FF  		MOV		A,@0xFF
0000C7: 0100  		MOV		IAR,A
0000C8: 1504  		INC		RSR
0000C9: 6000  		MOV		A,@0x00
0000CA: 0C04  		XOR		A,RSR
0000CB: 3A03  		JBS		Z
0000CC: 50C5  		JMP		RAM_IND_LOOP_2
0000CD: 6080  		MOV		A,@0x80
0000CE: 0104  		MOV		RSR,A
0000CF: 7A43  		GBANK	3
0000D0: 60FF  		MOV		A,@0xFF
0000D1: 0100  		MOV		IAR,A
0000D2: 1504  		INC		RSR
0000D3: 6000  		MOV		A,@0x00
0000D4: 0C04  		XOR		A,RSR
0000D5: 3A03  		JBS		Z
0000D6: 50CF  		JMP		RAM_IND_LOOP_3
0000D7: 0012  		RET
0000D8: 6080  		MOV		A,@0x80
0000D9: 0141  		MOV		EECR2,A
0000DA: 1000  		MOV		A,0x00
0000DB: 0150  		MOV		TMP50,A
0000DC: 1050  		MOV		A,TMP50
0000DD: 0142  		MOV		EERA,A
0000DE: 60FF  		MOV		A,@0xFF
0000DF: 0143  		MOV		EERD,A
0000E0: 1550  		INC		TMP50
0000E1: 1080  		MOV		A,0x80
0000E2: 0C50  		XOR		A,TMP50
0000E3: 3A03  		JBS		Z
0000E4: 50DC  		JMP		EEPROM_INIT_LOOP
0000E5: 0012  		RET
0000E6: 6000  		MOV		A,@0x00
0000E7: 0103  		MOV		STATUS,A
0000E8: 0012  		RET
0000E9: 3A03  		JBS		Z			; IF(Z=1) BRANCH
0000EA: 506D  		JMP		INS_FAIL
0000EB: 3603  		JBC		N			; IF(N=0) BRANCH
0000EC: 506D  		JMP		INS_FAIL
0000ED: 0012  		RET
0000EE: 6001  			MOV		A,@0x01
0000EF: 015A  			MOV		INST,A
0000F0: 40E6  			CALL	STATUS_CLEAR	;-------DAA(0xAA)=10
0000F1: 60AA  			MOV		A,@0xAA
0000F2: 0001  			DAA
0000F3: 3803  			JBS		C			; Check C = 1?
0000F4: 506D  			JMP	INS_FAIL
0000F5: 3103  			JBC		DC			; Check DC = 0?
0000F6: 506D  			JMP	INS_FAIL
0000F7: 3203  			JBC		Z			; Check Z = 0?
0000F8: 506D  			JMP	INS_FAIL
0000F9: 3503  			JBC		OV			; Check OV = 0?
0000FA: 506D  			JMP	INS_FAIL
0000FB: 3603  			JBC		N			; Check N = 0?
0000FC: 506D  			JMP	INS_FAIL
0000FD: 6C10  			XOR		A,@0x10		; Check Result ?
0000FE: 3A03  			JBS		Z			; Check Z = 1?
0000FF: 506D  			JMP	INS_FAIL
000100: 3603  			JBC		N			; Check N = 0?
000101: 506D  			JMP	INS_FAIL
000102: 40E6  			CALL	STATUS_CLEAR	;-------DAA(0xFF)=65
000103: 6080  			MOV		A,@0x80
000104: 0150  			MOV		0x50,A		; [0x50] = 0x80
000105: 607F  			MOV		A,@0x7F		; 
000106: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80 = 0xFF
000107: 0001  			DAA
000108: 3803  			JBS		C			; Check C = 1?
000109: 506D  			JMP	INS_FAIL
00010A: 3103  			JBC		DC			; Check DC = 0?
00010B: 506D  			JMP	INS_FAIL
00010C: 3203  			JBC		Z			; Check Z = 0?
00010D: 506D  			JMP	INS_FAIL
00010E: 3503  			JBC		OV			; Check OV = 0?
00010F: 506D  			JMP	INS_FAIL
000110: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000111: 506D  			JMP	INS_FAIL
000112: 2203  			BC		Z
000113: 2603  			BC		N
000114: 6C65  			XOR		A,@0x65		; Check Result ?
000115: 3A03  			JBS		Z			; Check Z = 1?
000116: 506D  			JMP	INS_FAIL
000117: 3603  			JBC		N			; Check N = 0?
000118: 506D  			JMP	INS_FAIL
000119: 0000  			NOP
00011A: 6000  			MOV		A,@0x00
00011B: 0103  			MOV		STATUS,A
00011C: 2803  			BS		C
00011D: 6080  			MOV		A,@0x80
00011E: 0150  			MOV		0x50,A		; [0x50] = 0x80
00011F: 607F  			MOV		A,@0x7F		; 
000120: 7E50  			ADC		A,0x50		; A = 0x7F + 0x80
000121: 0001  			DAA
000122: 3803  			JBS		C			; Check C = 1? 	/ By ADC
000123: 506D  			JMP	INS_FAIL
000124: 3903  			JBS		DC			; Check DC = 1? / By ADC
000125: 506D  			JMP	INS_FAIL
000126: 3A03  			JBS		Z			; Check Z = 1? 	/ By ADC
000127: 506D  			JMP	INS_FAIL
000128: 3503  			JBC		OV			; Check OV = 0?
000129: 506D  			JMP	INS_FAIL
00012A: 3603  			JBC		N			; Check N = 0?
00012B: 506D  			JMP	INS_FAIL
00012C: 6C66  			XOR		A,@0x66		; Check Result ?
00012D: 3A03  			JBS		Z			; Check Z = 1?
00012E: 506D  			JMP	INS_FAIL
00012F: 3603  			JBC		N			; Check N = 0?
000130: 506D  			JMP	INS_FAIL
000131: 6000  			MOV		A,@0x00
000132: 0103  			MOV		STATUS,A
000133: 60FF  			MOV		A,@0xFF
000134: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000135: 607F  			MOV		A,@0x7F		; 
000136: 0450  			SUB		A,0x50		; A = 0xFF - 0x7F
000137: 0001  			DAA
000138: 3803  			JBS		C			; Check C = 1? 	/ By SUB
000139: 506D  			JMP	INS_FAIL
00013A: 3903  			JBS		DC			; Check DC = 1? / By SUB
00013B: 506D  			JMP	INS_FAIL
00013C: 3203  			JBC		Z			; Check Z = 0?
00013D: 506D  			JMP	INS_FAIL
00013E: 3503  			JBC		OV			; Check OV = 0?
00013F: 506D  			JMP	INS_FAIL
000140: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
000141: 506D  			JMP	INS_FAIL
000142: 2203  			BC		Z
000143: 2603  			BC		N
000144: 6CE6  			XOR		A,@0xE6		; Check Result ?
000145: 3A03  			JBS		Z			; Check Z = 1?
000146: 506D  			JMP	INS_FAIL
000147: 3603  			JBC		N			; Check N = 0?
000148: 506D  			JMP	INS_FAIL
000149: 6008  			MOV		A,@0x08
00014A: 015A  			MOV		INST,A
00014B: 605A  			MOV		A,@0x5A
00014C: 6C5A  			XOR		A,@0x5A		; Check Result ?
00014D: 3A03  			JBS		Z			; Check Z = 1?
00014E: 506D  			JMP	INS_FAIL
00014F: 3603  			JBC		N			; Check N = 0?
000150: 506D  			JMP	INS_FAIL
000151: 605A  			MOV		A,@0x5A
000152: 0200  			CLRA
000153: 3A03  			JBS		Z			; Check Z = 1?
000154: 506D  			JMP	INS_FAIL
000155: 2203  			BC		Z
000156: 6C00  			XOR		A,@0x00		; Check Result ?
000157: 3A03  			JBS		Z			; Check Z = 1?
000158: 506D  			JMP	INS_FAIL
000159: 3603  			JBC		N			; Check N = 0?
00015A: 506D  			JMP	INS_FAIL
00015B: 6009  			MOV		A,@0x09
00015C: 015A  			MOV		INST,A
00015D: 60AA  			MOV		A,@0xAA
00015E: 0150  			MOV		0x50,A
00015F: 1050  			MOV		A,0x50
000160: 6CAA  			XOR		A,@0xAA		; Check Result ?
000161: 3A03  			JBS		Z			; Check Z = 1?
000162: 506D  			JMP	INS_FAIL
000163: 3603  			JBC		N			; Check N = 0?
000164: 506D  			JMP	INS_FAIL
000165: 0350  			CLR		0x50
000166: 3A03  			JBS		Z			; Check Z = 1?
000167: 506D  			JMP	INS_FAIL
000168: 2203  			BC		Z
000169: 1050  			MOV		A,0x50
00016A: 6C00  			XOR		A,@0x00		; Check Result ?
00016B: 3A03  			JBS		Z			; Check Z = 1?
00016C: 506D  			JMP	INS_FAIL
00016D: 3603  			JBC		N			; Check N = 0?
00016E: 506D  			JMP	INS_FAIL
00016F: 600A  			MOV		A,@0x0A
000170: 015A  			MOV		INST,A
000171: 6000  			MOV		A,@0x00
000172: 0103  			MOV		STATUS,A
000173: 6002  			MOV		A,@0x02		; SUB(2-1)=1
000174: 0150  			MOV		0x50,A		; [0x50] = 0x02
000175: 6001  			MOV		A,@0x01
000176: 0450  			SUB		A,0x50		; A = [0x50] - A
000177: 3803  			JBS		C			; Check C = 1? 	; Resulet is Positive
000178: 506D  			JMP	INS_FAIL
000179: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
00017A: 506D  			JMP	INS_FAIL
00017B: 3203  			JBC		Z			; Check Z = 0?
00017C: 506D  			JMP	INS_FAIL
00017D: 3503  			JBC		OV			; Check OV = 0?
00017E: 506D  			JMP	INS_FAIL
00017F: 3603  			JBC		N			; Check N = 0?
000180: 506D  			JMP	INS_FAIL
000181: 2203  			BC		Z
000182: 6C01  			XOR		A,@0x01		; Check Result ?
000183: 3A03  			JBS		Z			; Check Z = 1?
000184: 506D  			JMP	INS_FAIL
000185: 3603  			JBC		N			; Check N = 0?
000186: 506D  			JMP	INS_FAIL
000187: 6000  			MOV		A,@0x00
000188: 0103  			MOV		STATUS,A
000189: 6002  			MOV		A,@0x02		; SUB(2-2)=0
00018A: 0150  			MOV		0x50,A		; [0x50] = 0x02
00018B: 6002  			MOV		A,@0x02
00018C: 0450  			SUB		A,0x50		; A = [0x50] - A
00018D: 3803  			JBS		C			; Check C = 1?	; Result is Positive
00018E: 506D  			JMP	INS_FAIL
00018F: 3903  			JBS		DC			; Check DC = 1?	; Low-Byte is Positve
000190: 506D  			JMP	INS_FAIL
000191: 3A03  			JBS		Z			; Check Z = 1?	; Result is Zero
000192: 506D  			JMP	INS_FAIL
000193: 3503  			JBC		OV			; Check OV = 0?
000194: 506D  			JMP	INS_FAIL
000195: 3603  			JBC		N			; Check N = 0?
000196: 506D  			JMP	INS_FAIL
000197: 2203  			BC		Z
000198: 6C00  			XOR		A,@0x00		; Check Result ?
000199: 3A03  			JBS		Z			; Check Z = 1?
00019A: 506D  			JMP	INS_FAIL
00019B: 3603  			JBC		N			; Check N = 0?
00019C: 506D  			JMP	INS_FAIL
00019D: 6000  			MOV		A,@0x00
00019E: 0103  			MOV		STATUS,A
00019F: 60FF  			MOV		A,@0xFF		; SUB(-1-127) = -128(0x80)
0001A0: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0001A1: 607F  			MOV		A,@0x7F
0001A2: 0450  			SUB		A,0x50		; A = [0x50] - A
0001A3: 3803  			JBS		C			; Check C = 1?
0001A4: 506D  			JMP	INS_FAIL
0001A5: 3903  			JBS		DC			; Check DC = 1?
0001A6: 506D  			JMP	INS_FAIL
0001A7: 3203  			JBC		Z			; Check Z = 0?
0001A8: 506D  			JMP	INS_FAIL
0001A9: 3503  			JBC		OV			; Check OV = 0?
0001AA: 506D  			JMP	INS_FAIL
0001AB: 3E03  			JBS		N			; Check N = 1?
0001AC: 506D  			JMP	INS_FAIL
0001AD: 2203  			BC		Z
0001AE: 2603  			BC		N
0001AF: 6C80  			XOR		A,@0x80		; Check Result ?
0001B0: 3A03  			JBS		Z			; Check Z = 1?
0001B1: 506D  			JMP	INS_FAIL
0001B2: 3603  			JBC		N			; Check N = 0?
0001B3: 506D  			JMP	INS_FAIL
0001B4: 6000  			MOV		A,@0x00
0001B5: 0103  			MOV		STATUS,A
0001B6: 6080  			MOV		A,@0x80		; SUB(-128-127) = 1(0x01)
0001B7: 0150  			MOV		0x50,A		; [0x50] = 0x80
0001B8: 607F  			MOV		A,@0x7F
0001B9: 0450  			SUB		A,0x50		; A = [0x50] - A
0001BA: 3803  			JBS		C			; Check C = 1?
0001BB: 506D  			JMP	INS_FAIL
0001BC: 3103  			JBC		DC			; Check DC = 0?
0001BD: 506D  			JMP	INS_FAIL
0001BE: 3203  			JBC		Z			; Check Z = 0?
0001BF: 506D  			JMP	INS_FAIL
0001C0: 3D03  			JBS		OV			; Check OV = 1?
0001C1: 506D  			JMP	INS_FAIL
0001C2: 3603  			JBC		N			; Check N = 0?
0001C3: 506D  			JMP	INS_FAIL
0001C4: 2203  			BC		Z
0001C5: 2603  			BC		N
0001C6: 6C01  			XOR		A,@0x01		; Check Result ?
0001C7: 3A03  			JBS		Z			; Check Z = 1?
0001C8: 506D  			JMP	INS_FAIL
0001C9: 3603  			JBC		N			; Check N = 0?
0001CA: 506D  			JMP	INS_FAIL
0001CB: 6000  			MOV		A,@0x00
0001CC: 0103  			MOV		STATUS,A
0001CD: 6001  			MOV		A,@0x01		; SUB(1-3) = -2(0xFE)
0001CE: 0150  			MOV		0x50,A		; [0x50] = 0x01
0001CF: 6003  			MOV		A,@0x03
0001D0: 0450  			SUB		A,0x50		; A = [0x50] - A
0001D1: 3003  			JBC		C			; Check C = 0?
0001D2: 506D  			JMP	INS_FAIL
0001D3: 3103  			JBC		DC			; Check DC = 0?
0001D4: 506D  			JMP	INS_FAIL
0001D5: 3203  			JBC		Z			; Check Z = 0?
0001D6: 506D  			JMP	INS_FAIL
0001D7: 3503  			JBC		OV			; Check OV = 0?
0001D8: 506D  			JMP	INS_FAIL
0001D9: 3E03  			JBS		N			; Check N = 1?
0001DA: 506D  			JMP	INS_FAIL
0001DB: 2203  			BC		Z
0001DC: 2603  			BC		N
0001DD: 6CFE  			XOR		A,@0xFE		; Check Result ?
0001DE: 3A03  			JBS		Z			; Check Z = 1?
0001DF: 506D  			JMP	INS_FAIL
0001E0: 3603  			JBC		N			; Check N = 0?
0001E1: 506D  			JMP	INS_FAIL
0001E2: 600B  			MOV		A,@0x0B
0001E3: 015A  			MOV		INST,A
0001E4: 6000  			MOV		A,@0x00
0001E5: 0103  			MOV		STATUS,A
0001E6: 6002  			MOV		A,@0x02
0001E7: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001E8: 6001  			MOV		A,@0x01
0001E9: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
0001EA: 1003  			MOV		A,STATUS
0001EB: 6C1B  			XOR		A,@0x1B		; for non reset
0001EC: 40E9  			CALL	INST_XOR_JUDGE
0001ED: 2203  			BC		Z
0001EE: 2603  			BC		N
0001EF: 1050  			MOV		A,0x50
0001F0: 6C01  			XOR		A,@0x01		; Check Result ?
0001F1: 40E9  			CALL	INST_XOR_JUDGE
0001F2: 6000  			MOV		A,@0x00
0001F3: 0103  			MOV		STATUS,A
0001F4: 6002  			MOV		A,@0x02
0001F5: 0150  			MOV		0x50,A		; [0x50] = 0x02
0001F6: 6002  			MOV		A,@0x02
0001F7: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x02
0001F8: 1003  			MOV		A,STATUS
0001F9: 6C1F  			XOR		A,@0x1F		; for nono reset
0001FA: 40E9  			CALL	INST_XOR_JUDGE
0001FB: 2203  			BC		Z
0001FC: 2603  			BC		N
0001FD: 1050  			MOV		A,0x50
0001FE: 6C00  			XOR		A,@0x00		; Check Result ?
0001FF: 3A03  			JBS		Z			; Check Z = 1?
000200: 506D  			JMP	INS_FAIL
000201: 3603  			JBC		N			; Check N = 0?
000202: 506D  			JMP	INS_FAIL
000203: 6000  			MOV		A,@0x00
000204: 0103  			MOV		STATUS,A
000205: 6080  			MOV		A,@0x80
000206: 0150  			MOV		0x50,A		; [0x50] = 0x80
000207: 6001  			MOV		A,@0x01
000208: 0550  			SUB		0x50,A		; [0x50] = [0x50] - 0x01
000209: 1003  			MOV		A,STATUS
00020A: 6C39  			XOR		A,@0x39	;; for non reset
00020B: 40E9  			CALL	INST_XOR_JUDGE
00020C: 2203  			BC		Z
00020D: 2603  			BC		N
00020E: 1050  			MOV		A,0x50
00020F: 6C7F  			XOR		A,@0x7F		; Check Result ?
000210: 40E9  			CALL	INST_XOR_JUDGE
000211: 6030  			MOV		A,@0x30
000212: 015A  			MOV		INST,A
000213: 40E6  			CALL	STATUS_CLEAR
000214: 60FF  			MOV		A,@0xFF		; 0xFF-0xFF
000215: 74FF  			SUB		A,@0xFF		; A = 0xFF - 0xFF
000216: 3803  			JBS		C			; Check C = 1?
000217: 506D  			JMP	INS_FAIL
000218: 3903  			JBS		DC			; Check DC = 1?
000219: 506D  			JMP	INS_FAIL
00021A: 3A03  			JBS		Z			; Check Z = 1?
00021B: 506D  			JMP	INS_FAIL
00021C: 3503  			JBC		OV			; Check OV = 0?
00021D: 506D  			JMP	INS_FAIL
00021E: 3603  			JBC		N			; Check N = 0?
00021F: 506D  			JMP	INS_FAIL
000220: 6C00  			XOR		A,@0x00		; Check Result ?
000221: 40E9  			CALL	INST_XOR_JUDGE
000222: 40E6  			CALL	STATUS_CLEAR
000223: 607F  			MOV		A,@0x7F		; 0x00-0x7F
000224: 7400  			SUB		A,@0x00		; A = 0x00 - 0x7F
000225: 3003  			JBC		C			; Check C = 0?
000226: 506D  			JMP	INS_FAIL
000227: 3103  			JBC		DC			; Check DC = 0?
000228: 506D  			JMP	INS_FAIL
000229: 3203  			JBC		Z			; Check Z = 0?
00022A: 506D  			JMP	INS_FAIL
00022B: 3503  			JBC		OV			; Check OV = 0?
00022C: 506D  			JMP	INS_FAIL
00022D: 3E03  			JBS		N			; Check N = 1?
00022E: 506D  			JMP	INS_FAIL
00022F: 6C81  			XOR		A,@0x81		; Check Result ?
000230: 40E9  			CALL	INST_XOR_JUDGE
000231: 40E6  			CALL	STATUS_CLEAR
000232: 6001  			MOV		A,@0x01		; 0x80-0x01
000233: 7480  			SUB		A,@0x80		; A = 0x80 - 0x01
000234: 3803  			JBS		C			; Check C = 1?
000235: 506D  			JMP	INS_FAIL
000236: 3103  			JBC		DC			; Check DC = 0?
000237: 506D  			JMP	INS_FAIL
000238: 3203  			JBC		Z			; Check Z = 0?
000239: 506D  			JMP	INS_FAIL
00023A: 3D03  			JBS		OV			; Check OV = 1?
00023B: 506D  			JMP	INS_FAIL
00023C: 3603  			JBC		N			; Check N = 0?
00023D: 506D  			JMP	INS_FAIL
00023E: 6C7F  			XOR		A,@0x7F		; Check Result ?
00023F: 40E9  			CALL	INST_XOR_JUDGE
000240: 6031  			MOV		A,@0x31
000241: 015A  			MOV		INST,A
000242: 40E6  			CALL	STATUS_CLEAR
000243: 2003  			BC		C			; B = 1
000244: 6000  			MOV		A,@0x00		;0x00-0xF
000245: 0150  			MOV		0x50,A		; [0x50] = 0x00
000246: 60FF  			MOV		A,@0xFF		; A = 0x01
000247: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
000248: 3003  			JBC		C			; Check C = 0?
000249: 506D  			JMP	INS_FAIL
00024A: 3103  			JBC		DC			; Check DC = 0?
00024B: 506D  			JMP	INS_FAIL
00024C: 3A03  			JBS		Z			; Check Z = 1?
00024D: 506D  			JMP	INS_FAIL
00024E: 3503  			JBC		OV			; Check OV = 0?
00024F: 506D  			JMP	INS_FAIL
000250: 3603  			JBC		N			; Check N = 0?
000251: 506D  			JMP	INS_FAIL
000252: 6C00  			XOR		A,@0x00		; Check Result ?
000253: 40E9  			CALL	INST_XOR_JUDGE	
000254: 40E6  			CALL	STATUS_CLEAR
000255: 2003  			BC		C			; B = 1
000256: 6000  			MOV		A,@0x00		; 0x00-0x7F
000257: 0150  			MOV		0x50,A		; [0x50] = 0x00
000258: 607F  			MOV		A,@0x7F		; A = 0x01
000259: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00025A: 3003  			JBC		C			; Check C = 0?
00025B: 506D  			JMP	INS_FAIL
00025C: 3103  			JBC		DC			; Check DC = 0?
00025D: 506D  			JMP	INS_FAIL
00025E: 3203  			JBC		Z			; Check Z = 0?
00025F: 506D  			JMP	INS_FAIL
000260: 3503  			JBC		OV			; Check OV = 0?
000261: 506D  			JMP	INS_FAIL
000262: 3E03  			JBS		N			; Check N = 1?
000263: 506D  			JMP	INS_FAIL
000264: 6C80  			XOR		A,@0x80		; Check Result ?
000265: 40E9  			CALL	INST_XOR_JUDGE
000266: 40E6  			CALL	STATUS_CLEAR
000267: 2003  			BC		C			; B = 1
000268: 6080  			MOV		A,@0x80		; 0x80-0x01
000269: 0150  			MOV		0x50,A		; [0x50] = 0x80
00026A: 6001  			MOV		A,@0x01		; A = 0x01
00026B: 7850  			SUBB	A,0x50		; A = [0x50] - A - B
00026C: 3803  			JBS		C			; Check C = 1?
00026D: 506D  			JMP	INS_FAIL
00026E: 3103  			JBC		DC			; Check DC = 0?
00026F: 506D  			JMP	INS_FAIL
000270: 3203  			JBC		Z			; Check Z = 0?
000271: 506D  			JMP	INS_FAIL
000272: 3D03  			JBS		OV			; Check OV = 1?
000273: 506D  			JMP	INS_FAIL
000274: 3603  			JBC		N			; Check N = 0?
000275: 506D  			JMP	INS_FAIL
000276: 6C7E  			XOR		A,@0x7E		; Check Result ?
000277: 40E9  			CALL	INST_XOR_JUDGE
000278: 6032  			MOV		A,@0x32
000279: 015A  			MOV		INST,A
00027A: 40E6  			CALL	STATUS_CLEAR
00027B: 2003  			BC		C			; B = 1
00027C: 6000  			MOV		A,@0x00		; 0x00-0xFF
00027D: 0150  			MOV		0x50,A		; [0x50] = 0x00
00027E: 60FF  			MOV		A,@0xFF
00027F: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0xFF - B
000280: 1003  			MOV		A,STATUS
000281: 6C1C  			XOR		A,@0x1C		; Check Status ?
000282: 40E9  			CALL	INST_XOR_JUDGE
000283: 1050  			MOV		A,0x50
000284: 6C00  			XOR		A,@0x00		; Check Result ?
000285: 40E9  			CALL	INST_XOR_JUDGE
000286: 40E6  			CALL	STATUS_CLEAR
000287: 2003  			BC		C			; B = 1
000288: 6000  			MOV		A,@0x00		; 0x00-0x7F
000289: 0150  			MOV		0x50,A		; [0x50] = 0x00
00028A: 607F  			MOV		A,@0x7F
00028B: 7950  			SUBB	0x50,A		; [0x50] = 0x00 - 0x7F - B
00028C: 1003  			MOV		A,STATUS
00028D: 6C58  			XOR		A,@0x58		; Check Status ?
00028E: 40E9  			CALL	INST_XOR_JUDGE
00028F: 1050  			MOV		A,0x50
000290: 6C80  			XOR		A,@0x80		; Check Result ?
000291: 40E9  			CALL	INST_XOR_JUDGE
000292: 40E6  			CALL	STATUS_CLEAR
000293: 2003  			BC		C			; B = 1
000294: 6080  			MOV		A,@0x80		; ,0x80-0x01
000295: 0150  			MOV		0x50,A		; [0x50] = 0x80
000296: 6001  			MOV		A,@0x01
000297: 7950  			SUBB	0x50,A		; [0x50] = 0x80 - 0x01 - B
000298: 1003  			MOV		A,STATUS
000299: 6C39  			XOR		A,@0x39		; Check Status ?
00029A: 40E9  			CALL	INST_XOR_JUDGE
00029B: 1050  			MOV		A,0x50
00029C: 6C7E  			XOR		A,@0x7E		; Check Result ?
00029D: 40E9  			CALL	INST_XOR_JUDGE
00029E: 600C  			MOV		A,@0x0C
00029F: 015A  			MOV		INST,A
0002A0: 6000  			MOV		A,@0x00
0002A1: 0103  			MOV		STATUS,A
0002A2: 6020  			MOV		A,@0x20		; 0x20-1
0002A3: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002A4: 0650  			DECA	0x50		; A = [0x50] - 1
0002A5: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002A6: 506D  			JMP	INS_FAIL
0002A7: 3103  			JBC		DC			; Check DC = 0?
0002A8: 506D  			JMP	INS_FAIL
0002A9: 3203  			JBC		Z			; Check Z = 0?
0002AA: 506D  			JMP	INS_FAIL
0002AB: 3503  			JBC		OV			; Check OV = 0?
0002AC: 506D  			JMP	INS_FAIL
0002AD: 3603  			JBC		N			; Check N = 0?
0002AE: 506D  			JMP	INS_FAIL
0002AF: 6C1F  			XOR		A,@0x1F		; Check Result ?
0002B0: 3A03  			JBS		Z			; Check Z = 1?
0002B1: 506D  			JMP	INS_FAIL
0002B2: 3603  			JBC		N			; Check N = 0?
0002B3: 506D  			JMP	INS_FAIL
0002B4: 6000  			MOV		A,@0x00
0002B5: 0103  			MOV		STATUS,A
0002B6: 6001  			MOV		A,@0x01		; 0x01-1
0002B7: 0150  			MOV		0x50,A		; [0x50] = 0x01
0002B8: 0650  			DECA	0x50		; A = [0x50] - 1
0002B9: 3803  			JBS		C			; Check C = 1?	; Result is Positive
0002BA: 506D  			JMP	INS_FAIL
0002BB: 3903  			JBS		DC			; Check DC = 1?
0002BC: 506D  			JMP	INS_FAIL
0002BD: 3A03  			JBS		Z			; Check Z = 1?
0002BE: 506D  			JMP	INS_FAIL
0002BF: 3503  			JBC		OV			; Check OV = 0?
0002C0: 506D  			JMP	INS_FAIL
0002C1: 3603  			JBC		N			; Check N = 0?
0002C2: 506D  			JMP	INS_FAIL
0002C3: 2203  			BC		Z
0002C4: 6C00  			XOR		A,@0x00		; Check Result ?
0002C5: 3A03  			JBS		Z			; Check Z = 1?
0002C6: 506D  			JMP	INS_FAIL
0002C7: 3603  			JBC		N			; Check N = 0?
0002C8: 506D  			JMP	INS_FAIL
0002C9: 6000  			MOV		A,@0x00
0002CA: 0103  			MOV		STATUS,A
0002CB: 6000  			MOV		A,@0x00		; 0x00-1
0002CC: 0150  			MOV		0x50,A		; [0x50] = 0x00
0002CD: 0650  			DECA	0x50		; A = [0x50] - 1
0002CE: 3003  			JBC		C			; Check C = 0?
0002CF: 506D  			JMP	INS_FAIL
0002D0: 3103  			JBC		DC			; Check DC = 0?
0002D1: 506D  			JMP	INS_FAIL
0002D2: 3203  			JBC		Z			; Check Z = 0?
0002D3: 506D  			JMP	INS_FAIL
0002D4: 3503  			JBC		OV			; Check OV = 0?
0002D5: 506D  			JMP	INS_FAIL
0002D6: 3E03  			JBS		N			; Check N = 1?
0002D7: 506D  			JMP	INS_FAIL
0002D8: 2203  			BC		Z
0002D9: 2603  			BC		N
0002DA: 6CFF  			XOR		A,@0xFF		; Check Result ?
0002DB: 3A03  			JBS		Z			; Check Z = 1?
0002DC: 506D  			JMP	INS_FAIL
0002DD: 3603  			JBC		N			; Check N = 0?
0002DE: 506D  			JMP	INS_FAIL
0002DF: 6000  			MOV		A,@0x00
0002E0: 0103  			MOV		STATUS,A
0002E1: 6080  			MOV		A,@0x80		; 0x80-1
0002E2: 0150  			MOV		0x50,A		; [0x50] = 0x80
0002E3: 0650  			DECA	0x50		; A = [0x50] - 1
0002E4: 3803  			JBS		C			; Check C = 1?
0002E5: 506D  			JMP	INS_FAIL
0002E6: 3103  			JBC		DC			; Check DC = 0?
0002E7: 506D  			JMP	INS_FAIL
0002E8: 3203  			JBC		Z			; Check Z = 0?
0002E9: 506D  			JMP	INS_FAIL
0002EA: 3D03  			JBS		OV			; Check OV = 1?
0002EB: 506D  			JMP	INS_FAIL
0002EC: 3603  			JBC		N			; Check N = 0?
0002ED: 506D  			JMP	INS_FAIL
0002EE: 2203  			BC		Z
0002EF: 2603  			BC		N
0002F0: 6C7F  			XOR		A,@0x7F		; Check Result ?
0002F1: 3A03  			JBS		Z			; Check Z = 1?
0002F2: 506D  			JMP	INS_FAIL
0002F3: 3603  			JBC		N			; Check N = 0?
0002F4: 506D  			JMP	INS_FAIL
0002F5: 600D  			MOV		A,@0x0D
0002F6: 015A  			MOV		INST,A
0002F7: 6000  			MOV		A,@0x00
0002F8: 0103  			MOV		STATUS,A
0002F9: 6020  			MOV		A,@0x20		; 0x20-1
0002FA: 0150  			MOV		0x50,A		; [0x50] = 0x20
0002FB: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
0002FC: 1003  			MOV		A,STATUS
0002FD: 6C19  			XOR		A,@0x19		; Check Status ? for non rest
0002FE: 3A03  			JBS		Z			; Check Z = 1?
0002FF: 506D  			JMP	INS_FAIL
000300: 3603  			JBC		N			; Check N = 0?
000301: 506D  			JMP	INS_FAIL
000302: 2203  			BC		Z
000303: 1050  			MOV		A,0x50
000304: 6C1F  			XOR		A,@0x1F		; Check Result ?
000305: 3A03  			JBS		Z			; Check Z = 1?
000306: 506D  			JMP	INS_FAIL
000307: 3603  			JBC		N			; Check N = 0?
000308: 506D  			JMP	INS_FAIL
000309: 6000  			MOV		A,@0x00
00030A: 0103  			MOV		STATUS,A
00030B: 6001  			MOV		A,@0x01		; 0x01-1
00030C: 0150  			MOV		0x50,A		; [0x50] = 0x01
00030D: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
00030E: 1003  			MOV		A,STATUS
00030F: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
000310: 3A03  			JBS		Z			; Check Z = 1?
000311: 506D  			JMP	INS_FAIL
000312: 3603  			JBC		N			; Check N = 0?
000313: 506D  			JMP	INS_FAIL
000314: 2203  			BC		Z
000315: 1050  			MOV		A,0x50
000316: 6C00  			XOR		A,@0x00		; Check Result ?
000317: 3A03  			JBS		Z			; Check Z = 1?
000318: 506D  			JMP	INS_FAIL
000319: 3603  			JBC		N			; Check N = 0?
00031A: 506D  			JMP	INS_FAIL
00031B: 6000  			MOV		A,@0x00
00031C: 0103  			MOV		STATUS,A
00031D: 6000  			MOV		A,@0x00		; 0x00-1
00031E: 0150  			MOV		0x50,A		; [0x50] = 0x00
00031F: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000320: 1003  			MOV		A,STATUS
000321: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000322: 3A03  			JBS		Z			; Check Z = 1?
000323: 506D  			JMP	INS_FAIL
000324: 3603  			JBC		N			; Check N = 0?
000325: 506D  			JMP	INS_FAIL
000326: 2203  			BC		Z
000327: 1050  			MOV		A,0x50
000328: 6CFF  			XOR		A,@0xFF		; Check Result ?
000329: 3A03  			JBS		Z			; Check Z = 1?
00032A: 506D  			JMP	INS_FAIL
00032B: 3603  			JBC		N			; Check N = 0?
00032C: 506D  			JMP	INS_FAIL
00032D: 6000  			MOV		A,@0x00
00032E: 0103  			MOV		STATUS,A
00032F: 6080  			MOV		A,@0x80		; 0x80-1
000330: 0150  			MOV		0x50,A		; [0x50] = 0x80
000331: 0750  			DEC		0x50		; [0x50] = [0x50] - 0x01
000332: 1003  			MOV		A,STATUS
000333: 6C39  			XOR		A,@0x39		; Check Status ? for non reset
000334: 3A03  			JBS		Z			; Check Z = 1?
000335: 506D  			JMP	INS_FAIL
000336: 3603  			JBC		N			; Check N = 0?
000337: 506D  			JMP	INS_FAIL
000338: 2203  			BC		Z
000339: 1050  			MOV		A,0x50
00033A: 6C7F  			XOR		A,@0x7F		; Check Result ?
00033B: 3A03  			JBS		Z			; Check Z = 1?
00033C: 506D  			JMP	INS_FAIL
00033D: 3603  			JBC		N			; Check N = 0?
00033E: 506D  			JMP	INS_FAIL
00033F: 6012  			MOV		A,@0x12
000340: 015A  			MOV		INST,A
000341: 40E6  			CALL	STATUS_CLEAR	; 0x80+0x7F
000342: 6080  			MOV		A,@0x80
000343: 0150  			MOV		0x50,A		; [0x50] = 0x80
000344: 607F  			MOV		A,@0x7F		; 
000345: 0E50  			ADD		A,0x50		; A = 0x7F + 0x80
000346: 3003  			JBC		C			; Check C = 0?
000347: 506D  			JMP	INS_FAIL
000348: 3103  			JBC		DC			; Check DC = 0?
000349: 506D  			JMP	INS_FAIL
00034A: 3203  			JBC		Z			; Check Z = 0?
00034B: 506D  			JMP	INS_FAIL
00034C: 3503  			JBC		OV			; Check OV = 0?
00034D: 506D  			JMP	INS_FAIL
00034E: 3E03  			JBS		N			; Check N = 1?	; Result is Negative
00034F: 506D  			JMP	INS_FAIL
000350: 2203  			BC		Z
000351: 2603  			BC		N
000352: 6CFF  			XOR		A,@0xFF		; Check Result ?
000353: 3A03  			JBS		Z			; Check Z = 1?
000354: 506D  			JMP	INS_FAIL
000355: 3603  			JBC		N			; Check N = 0?
000356: 506D  			JMP	INS_FAIL
000357: 40E6  			CALL	STATUS_CLEAR	; 0xFF+0x01
000358: 60FF  			MOV		A,@0xFF
000359: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00035A: 6001  			MOV		A,@0x01		; 
00035B: 0E50  			ADD		A,0x50		; A = 0x01 + 0xFF
00035C: 3803  			JBS		C			; Check C = 1?
00035D: 506D  			JMP	INS_FAIL
00035E: 3903  			JBS		DC			; Check DC = 1?
00035F: 506D  			JMP	INS_FAIL
000360: 3A03  			JBS		Z			; Check Z = 1?
000361: 506D  			JMP	INS_FAIL
000362: 3503  			JBC		OV			; Check OV = 0?
000363: 506D  			JMP	INS_FAIL
000364: 3603  			JBC		N			; Check N = 0?
000365: 506D  			JMP	INS_FAIL
000366: 2203  			BC		Z
000367: 2603  			BC		N
000368: 6C00  			XOR		A,@0x00		; Check Result ?
000369: 3A03  			JBS		Z			; Check Z = 1?
00036A: 506D  			JMP	INS_FAIL
00036B: 3603  			JBC		N			; Check N = 0?
00036C: 506D  			JMP	INS_FAIL
00036D: 40E6  			CALL	STATUS_CLEAR	; 0x7F+0x01
00036E: 607F  			MOV		A,@0x7F
00036F: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000370: 6001  			MOV		A,@0x01		; 
000371: 0E50  			ADD		A,0x50		; A = 0x01 + 0x7F
000372: 3003  			JBC		C			; Check C = 0?
000373: 506D  			JMP	INS_FAIL
000374: 3903  			JBS		DC			; Check DC = 1?
000375: 506D  			JMP	INS_FAIL
000376: 3203  			JBC		Z			; Check Z = 0?
000377: 506D  			JMP	INS_FAIL
000378: 3D03  			JBS		OV			; Check OV = 1?
000379: 506D  			JMP	INS_FAIL
00037A: 3E03  			JBS		N			; Check N = 1?
00037B: 506D  			JMP	INS_FAIL
00037C: 2203  			BC		Z
00037D: 2603  			BC		N
00037E: 6C80  			XOR		A,@0x80		; Check Result ?
00037F: 3A03  			JBS		Z			; Check Z = 1?
000380: 506D  			JMP	INS_FAIL
000381: 3603  			JBC		N			; Check N = 0?
000382: 506D  			JMP	INS_FAIL
000383: 6013  			MOV		A,@0x13
000384: 015A  			MOV		INST,A
000385: 40E6  			CALL	STATUS_CLEAR	; 0x80+0x7F
000386: 6080  			MOV		A,@0x80
000387: 0150  			MOV		0x50,A		; [0x50] = 0x80
000388: 607F  			MOV		A,@0x7F		; A = 0x7F
000389: 0F50  			ADD		0x50,A		; [0x50] = 0x80 + 0x7F
00038A: 1003  			MOV		A,STATUS
00038B: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
00038C: 3A03  			JBS		Z			; Check Z = 1?
00038D: 506D  			JMP	INS_FAIL
00038E: 3603  			JBC		N			; Check N = 0?
00038F: 506D  			JMP	INS_FAIL
000390: 1050  			MOV		A,0x50
000391: 6CFF  			XOR		A,@0xFF		; Check Result ?
000392: 3A03  			JBS		Z			; Check Z = 1?
000393: 506D  			JMP	INS_FAIL
000394: 3603  			JBC		N			; Check N = 0?
000395: 506D  			JMP	INS_FAIL
000396: 40E6  			CALL	STATUS_CLEAR	; 0xFF+0x01
000397: 60FF  			MOV		A,@0xFF
000398: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000399: 6001  			MOV		A,@0x01		; A = 0x01
00039A: 0F50  			ADD		0x50,A		; [0x50] = 0xFF + 0x01
00039B: 1003  			MOV		A,STATUS
00039C: 6C1F  			XOR		A,@0x1F		; Check Status ? for non reset
00039D: 3A03  			JBS		Z			; Check Z = 1?
00039E: 506D  			JMP	INS_FAIL
00039F: 3603  			JBC		N			; Check N = 0?
0003A0: 506D  			JMP	INS_FAIL
0003A1: 1050  			MOV		A,0x50
0003A2: 6C00  			XOR		A,@0x00		; Check Result ?
0003A3: 3A03  			JBS		Z			; Check Z = 1?
0003A4: 506D  			JMP	INS_FAIL
0003A5: 3603  			JBC		N			; Check N = 0?
0003A6: 506D  			JMP	INS_FAIL
0003A7: 40E6  			CALL	STATUS_CLEAR	;0x7F+0x01
0003A8: 607F  			MOV		A,@0x7F
0003A9: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003AA: 6001  			MOV		A,@0x01		; A = 0x01
0003AB: 0F50  			ADD		0x50,A		; [0x50] = 0x7F + 0x01
0003AC: 1003  			MOV		A,STATUS
0003AD: 6C7A  			XOR		A,@0x7A		; Check Status ? for non reset
0003AE: 3A03  			JBS		Z			; Check Z = 1?
0003AF: 506D  			JMP	INS_FAIL
0003B0: 3603  			JBC		N			; Check N = 0?
0003B1: 506D  			JMP	INS_FAIL
0003B2: 1050  			MOV		A,0x50
0003B3: 6C80  			XOR		A,@0x80		; Check Result ?
0003B4: 3A03  			JBS		Z			; Check Z = 1?
0003B5: 506D  			JMP	INS_FAIL
0003B6: 3603  			JBC		N			; Check N = 0?
0003B7: 506D  			JMP	INS_FAIL
0003B8: 6034  			MOV		A,@0x34
0003B9: 015A  			MOV		INST,A
0003BA: 40E6  			CALL	STATUS_CLEAR
0003BB: 607F  			MOV		A,@0x7F		;0x7F+0x01
0003BC: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003BD: 3003  			JBC		C			; Check C = 0?
0003BE: 506D  			JMP	INS_FAIL
0003BF: 3903  			JBS		DC			; Check DC = 1?
0003C0: 506D  			JMP	INS_FAIL
0003C1: 3203  			JBC		Z			; Check Z = 0?
0003C2: 506D  			JMP	INS_FAIL
0003C3: 3D03  			JBS		OV			; Check OV = 1?
0003C4: 506D  			JMP	INS_FAIL
0003C5: 3E03  			JBS		N			; Check N = 1?
0003C6: 506D  			JMP	INS_FAIL
0003C7: 6C80  			XOR		A,@0x80		; Check Result ?
0003C8: 40E9  			CALL	INST_XOR_JUDGE
0003C9: 40E6  			CALL	STATUS_CLEAR
0003CA: 60FF  			MOV		A,@0xFF		;0xFF+0x01
0003CB: 7C01  			ADD		A,@0x01		; A = 0x01 + A
0003CC: 3803  			JBS		C			; Check C = 1?
0003CD: 506D  			JMP	INS_FAIL
0003CE: 3903  			JBS		DC			; Check DC = 1?
0003CF: 506D  			JMP	INS_FAIL
0003D0: 3A03  			JBS		Z			; Check Z = 1?
0003D1: 506D  			JMP	INS_FAIL
0003D2: 3503  			JBC		OV			; Check OV = 0?
0003D3: 506D  			JMP	INS_FAIL
0003D4: 3603  			JBC		N			; Check N = 0?
0003D5: 506D  			JMP	INS_FAIL
0003D6: 6C00  			XOR		A,@0x00		; Check Result ?
0003D7: 40E9  			CALL	INST_XOR_JUDGE
0003D8: 40E6  			CALL	STATUS_CLEAR
0003D9: 607F  			MOV		A,@0x7F		; 0x80+0x7F
0003DA: 7C80  			ADD		A,@0x80		; A = 0x80 + A
0003DB: 3003  			JBC		C			; Check C = 0?
0003DC: 506D  			JMP	INS_FAIL
0003DD: 3103  			JBC		DC			; Check DC = 0?
0003DE: 506D  			JMP	INS_FAIL
0003DF: 3203  			JBC		Z			; Check Z = 0?
0003E0: 506D  			JMP	INS_FAIL
0003E1: 3503  			JBC		OV			; Check OV = 0?
0003E2: 506D  			JMP	INS_FAIL
0003E3: 3E03  			JBS		N			; Check N = 1?
0003E4: 506D  			JMP	INS_FAIL
0003E5: 6CFF  			XOR		A,@0xFF		; Check Result ?
0003E6: 40E9  			CALL	INST_XOR_JUDGE
0003E7: 6036  			MOV		A,@0x36
0003E8: 015A  			MOV		INST,A
0003E9: 40E6  			CALL	STATUS_CLEAR
0003EA: 2803  			BS		C			; 0x7F+0x00
0003EB: 607F  			MOV		A,@0x7F		
0003EC: 0150  			MOV		0x50,A		; [0x50] = 0x7F
0003ED: 6000  			MOV		A,@0x00		; A = 0x00
0003EE: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
0003EF: 3003  			JBC		C			; Check C = 0?
0003F0: 506D  			JMP	INS_FAIL
0003F1: 3903  			JBS		DC			; Check DC = 1?
0003F2: 506D  			JMP	INS_FAIL
0003F3: 3203  			JBC		Z			; Check Z = 0?
0003F4: 506D  			JMP	INS_FAIL
0003F5: 3D03  			JBS		OV			; Check OV = 1?
0003F6: 506D  			JMP	INS_FAIL
0003F7: 3E03  			JBS		N			; Check N = 1?
0003F8: 506D  			JMP	INS_FAIL
0003F9: 6C80  			XOR		A,@0x80		; Check Result ?
0003FA: 40E9  			CALL	INST_XOR_JUDGE
0003FB: 40E6  			CALL	STATUS_CLEAR
0003FC: 2803  			BS		C			; 0x80+0x7F
0003FD: 6080  			MOV		A,@0x80
0003FE: 0150  			MOV		0x50,A		; [0x50] = 0x80
0003FF: 607F  			MOV		A,@0x7F		; A = 0x7F
000400: 7E50  			ADC		A,0x50		; A = A + [0x50] + C
000401: 3803  			JBS		C			; Check C = 1?
000402: 506D  			JMP	INS_FAIL
000403: 3903  			JBS		DC			; Check DC = 1?
000404: 506D  			JMP	INS_FAIL
000405: 3A03  			JBS		Z			; Check Z = 1?
000406: 506D  			JMP	INS_FAIL
000407: 3503  			JBC		OV			; Check OV = 0?
000408: 506D  			JMP	INS_FAIL
000409: 3603  			JBC		N			; Check N = 0?
00040A: 506D  			JMP	INS_FAIL
00040B: 6C00  			XOR		A,@0x00		; Check Result ?
00040C: 40E9  			CALL	INST_XOR_JUDGE
00040D: 6037  			MOV		A,@0x37
00040E: 015A  			MOV		INST,A
00040F: 40E6  			CALL	STATUS_CLEAR
000410: 2803  			BS		C			;0x7F+0x00
000411: 607F  			MOV		A,@0x7F
000412: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000413: 6000  			MOV		A,@0x00		; A = 0x00
000414: 2203  			BC		Z
000415: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000416: 1003  			MOV		A,STATUS
000417: 6C7A  			XOR		A,@0x7A		; Check Status ?
000418: 40E9  			CALL	INST_XOR_JUDGE
000419: 1050  			MOV		A,0x50
00041A: 6C80  			XOR		A,@0x80		; Check Result ?
00041B: 40E9  			CALL	INST_XOR_JUDGE
00041C: 40E6  			CALL	STATUS_CLEAR
00041D: 2803  			BS		C			;0x80+0x7F
00041E: 6080  			MOV		A,@0x80
00041F: 0150  			MOV		0x50,A		; [0x50] = 0x80
000420: 607F  			MOV		A,@0x7F		; A = 0x7F
000421: 2203  			BC		Z
000422: 7F50  			ADC		0x50,A		; TMP1 = A + [0x50] + C
000423: 1003  			MOV		A,STATUS
000424: 6C1F  			XOR		A,@0x1F		; Check Status ?
000425: 40E9  			CALL	INST_XOR_JUDGE
000426: 1050  			MOV		A,0x50
000427: 6C00  			XOR		A,@0x00		; Check Result ?
000428: 40E9  			CALL	INST_XOR_JUDGE
000429: 6017  			MOV		A,@0x17
00042A: 015A  			MOV		INST,A
00042B: 40E6  			CALL	STATUS_CLEAR	; 0x7F+0x01
00042C: 607F  			MOV		A,@0x7F
00042D: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00042E: 1450  			INCA	0x50		; A = [0x50] +1		
00042F: 3003  			JBC		C			; Check C = 0?
000430: 506D  			JMP	INS_FAIL
000431: 3903  			JBS		DC			; Check DC = 1?
000432: 506D  			JMP	INS_FAIL
000433: 3203  			JBC		Z			; Check Z = 0?
000434: 506D  			JMP	INS_FAIL
000435: 3D03  			JBS		OV			; Check OV = 1?
000436: 506D  			JMP	INS_FAIL
000437: 3E03  			JBS		N			; Check N = 1?
000438: 506D  			JMP	INS_FAIL
000439: 2203  			BC		Z
00043A: 2603  			BC		N
00043B: 6C80  			XOR		A,@0x80		; Check Result ?
00043C: 3A03  			JBS		Z			; Check Z = 1?
00043D: 506D  			JMP	INS_FAIL
00043E: 3603  			JBC		N			; Check N = 0?
00043F: 506D  			JMP	INS_FAIL
000440: 40E6  			CALL	STATUS_CLEAR	; 0xFF+0x01
000441: 60FF  			MOV		A,@0xFF
000442: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000443: 1450  			INCA	0x50		; A = [0x50] +1		
000444: 3803  			JBS		C			; Check C = 1?
000445: 506D  			JMP	INS_FAIL
000446: 3903  			JBS		DC			; Check DC = 1?
000447: 506D  			JMP	INS_FAIL
000448: 3A03  			JBS		Z			; Check Z = 1?
000449: 506D  			JMP	INS_FAIL
00044A: 3503  			JBC		OV			; Check OV = 0?
00044B: 506D  			JMP	INS_FAIL
00044C: 3603  			JBC		N			; Check N = 0?
00044D: 506D  			JMP	INS_FAIL
00044E: 2203  			BC		Z
00044F: 2603  			BC		N
000450: 6C00  			XOR		A,@0x00		; Check Result ?
000451: 3A03  			JBS		Z			; Check Z = 1?
000452: 506D  			JMP	INS_FAIL
000453: 3603  			JBC		N			; Check N = 0?
000454: 506D  			JMP	INS_FAIL
000455: 6018  			MOV		A,@0x18
000456: 015A  			MOV		INST,A
000457: 40E6  			CALL 	STATUS_CLEAR	; 0x7F+0x01
000458: 607F  			MOV		A,@0x7F
000459: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00045A: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00045B: 1003  			MOV		A,STATUS
00045C: 6C7A  			XOR		A,@0x7A		; Check Status ?
00045D: 3A03  			JBS		Z			; Check Z = 1?
00045E: 506D  			JMP	INS_FAIL
00045F: 3603  			JBC		N			; Check N = 0?
000460: 506D  			JMP	INS_FAIL
000461: 1050  			MOV		A,0x50
000462: 6C80  			XOR		A,@0x80		; Check Result ?
000463: 3A03  			JBS		Z			; Check Z = 1?
000464: 506D  			JMP	INS_FAIL
000465: 3603  			JBC		N			; Check N = 0?
000466: 506D  			JMP	INS_FAIL
000467: 40E6  			CALL	STATUS_CLEAR	; 0xFF+0x01
000468: 60FF  			MOV		A,@0xFF
000469: 0150  			MOV		0x50,A		; [0x50] = 0x7F
00046A: 1550  			INC		0x50		; [0x50] = [0x50] + 0x01
00046B: 1003  			MOV		A,STATUS
00046C: 6C1F  			XOR		A,@0x1F		; Check Status ?
00046D: 3A03  			JBS		Z			; Check Z = 1?
00046E: 506D  			JMP	INS_FAIL
00046F: 3603  			JBC		N			; Check N = 0?
000470: 506D  			JMP	INS_FAIL
000471: 1050  			MOV		A,0x50
000472: 6C00  			XOR		A,@0x00		; Check Result ?
000473: 3A03  			JBS		Z			; Check Z = 1?
000474: 506D  			JMP	INS_FAIL
000475: 3603  			JBC		N			; Check N = 0?
000476: 506D  			JMP	INS_FAIL
000477: 6035  			MOV		A,@0x35
000478: 015A  			MOV		INST,A
000479: 40E6  			CALL	STATUS_CLEAR
00047A: 6000  			MOV		A,@0x00		; 0x00
00047B: 0150  			MOV		0x50,A		; [0x50] = 0x00
00047C: 7D50  			NEG		0x50
00047D: 1003  			MOV		A,STATUS
00047E: 6C1F  			XOR		A,@0x1F		; Check Status ?
00047F: 40E9  			CALL	INST_XOR_JUDGE
000480: 1050  			MOV		A,0x50
000481: 6C00  			XOR		A,@0x00		; Check Result ?
000482: 40E9  			CALL	INST_XOR_JUDGE
000483: 40E6  			CALL	STATUS_CLEAR
000484: 6001  			MOV		A,@0x01		; 0x01
000485: 0150  			MOV		0x50,A		; [0x50] = 0x01
000486: 7D50  			NEG		0x50
000487: 1003  			MOV		A,STATUS
000488: 6C58  			XOR		A,@0x58		; Check Status ?
000489: 40E9  			CALL	INST_XOR_JUDGE
00048A: 1050  			MOV		A,0x50
00048B: 6CFF  			XOR		A,@0xFF		; Check Result ?
00048C: 467F  			CALL	INST_XCH
00048D: 40E6  			CALL	STATUS_CLEAR
00048E: 6080  			MOV		A,@0x80		; 0x80
00048F: 0150  			MOV		0x50,A		; [0x50] = 0x80
000490: 7D50  			NEG		0x50
000491: 1003  			MOV		A,STATUS
000492: 6C7A  			XOR		A,@0x7A		; Check Status ?
000493: 40E9  			CALL	INST_XOR_JUDGE
000494: 1050  			MOV		A,0x50
000495: 6C80  			XOR		A,@0x80		; Check Result ?
000496: 40E9  			CALL	INST_XOR_JUDGE
000497: 0012  		RET
000498: 6006  			MOV		A,@0x06
000499: 015A  			MOV		INST,A
00049A: 40E6  			CALL	STATUS_CLEAR
00049B: 60FF  			MOV		A,@0xFF
00049C: 0104  			MOV		RSR,A		; Start Address
00049D: 0084  			BTG		RSR
00049E: 1004  			MOV		A,RSR
00049F: 6CFE  			XOR		A,@0xFE		; Check Result ?
0004A0: 40E9  			CALL	INST_XOR_JUDGE
0004A1: 600E  			MOV		A,@0x0E
0004A2: 015A  			MOV		INST,A
0004A3: 6000  			MOV		A,@0x00
0004A4: 0103  			MOV		STATUS,A
0004A5: 6000  			MOV		A,@0x00
0004A6: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004A7: 6000  			MOV		A,@0x00
0004A8: 2203  			BC		Z
0004A9: 0850  			OR		A,0x50		; A = A | [0x50]
0004AA: 3003  			JBC		C			; Check C = 0?
0004AB: 506D  			JMP	INS_FAIL
0004AC: 3103  			JBC		DC			; Check DC = 0?
0004AD: 506D  			JMP	INS_FAIL
0004AE: 3A03  			JBS		Z			; Check Z = 1?
0004AF: 506D  			JMP	INS_FAIL
0004B0: 3503  			JBC		OV			; Check OV = 0?
0004B1: 506D  			JMP	INS_FAIL
0004B2: 3603  			JBC		N			; Check N = 0?
0004B3: 506D  			JMP	INS_FAIL
0004B4: 2203  			BC		Z
0004B5: 6C00  			XOR		A,@0x00		; Check Result ?
0004B6: 3A03  			JBS		Z			; Check Z = 1?
0004B7: 506D  			JMP	INS_FAIL
0004B8: 3603  			JBC		N			; Check N = 0?
0004B9: 506D  			JMP	INS_FAIL
0004BA: 6000  			MOV		A,@0x00
0004BB: 0103  			MOV		STATUS,A
0004BC: 6055  			MOV		A,@0x55
0004BD: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004BE: 60AA  			MOV		A,@0xAA
0004BF: 2203  			BC		Z
0004C0: 0850  			OR		A,0x50		; A = A | [0x50]
0004C1: 3003  			JBC		C			; Check C = 0?
0004C2: 506D  			JMP	INS_FAIL
0004C3: 3103  			JBC		DC			; Check DC = 0?
0004C4: 506D  			JMP	INS_FAIL
0004C5: 3203  			JBC		Z			; Check Z = 0?
0004C6: 506D  			JMP	INS_FAIL
0004C7: 3503  			JBC		OV			; Check OV = 0?
0004C8: 506D  			JMP	INS_FAIL
0004C9: 3E03  			JBS		N			; Check N = 1?
0004CA: 506D  			JMP	INS_FAIL
0004CB: 2203  			BC		Z
0004CC: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004CD: 3A03  			JBS		Z			; Check Z = 1?
0004CE: 506D  			JMP	INS_FAIL
0004CF: 3603  			JBC		N			; Check N = 0?
0004D0: 506D  			JMP	INS_FAIL
0004D1: 600F  			MOV		A,@0x0F
0004D2: 015A  			MOV		INST,A
0004D3: 6000  			MOV		A,@0x00
0004D4: 0103  			MOV		STATUS,A
0004D5: 6000  			MOV		A,@0x00
0004D6: 0150  			MOV		0x50,A		; [0x50] = 0x00
0004D7: 6000  			MOV		A,@0x00		; A = 0x00
0004D8: 2203  			BC		Z
0004D9: 0950  			OR		0x50,A		; [0x50] = A | [0x50]
0004DA: 1003  			MOV		A,STATUS
0004DB: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
0004DC: 3A03  			JBS		Z			; Check Z = 1?
0004DD: 506D  			JMP	INS_FAIL
0004DE: 3603  			JBC		N			; Check N = 0?
0004DF: 506D  			JMP	INS_FAIL
0004E0: 1050  			MOV		A,0x50		; A = Result[0x50]
0004E1: 2203  			BC		Z
0004E2: 2603  			BC		N
0004E3: 6C00  			XOR		A,@0x00		; Check Result ?
0004E4: 3A03  			JBS		Z			; Check Z = 1?
0004E5: 506D  			JMP	INS_FAIL
0004E6: 3603  			JBC		N			; Check N = 0?
0004E7: 506D  			JMP	INS_FAIL
0004E8: 6000  			MOV		A,@0x00
0004E9: 0103  			MOV		STATUS,A
0004EA: 6055  			MOV		A,@0x55
0004EB: 0150  			MOV		0x50,A		; [0x50] = 0x55
0004EC: 60AA  			MOV		A,@0xAA		; A = 0xAA
0004ED: 0950  			OR		0x50,A		; [0x50] = 0xAA | 0x55
0004EE: 1003  			MOV		A,STATUS
0004EF: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
0004F0: 3A03  			JBS		Z			; Check Z = 1?
0004F1: 506D  			JMP	INS_FAIL
0004F2: 3603  			JBC		N			; Check N = 0?
0004F3: 506D  			JMP	INS_FAIL
0004F4: 1050  			MOV		A,0x50
0004F5: 2203  			BC		Z
0004F6: 2603  			BC		N
0004F7: 6CFF  			XOR		A,@0xFF		; Check Result ?
0004F8: 3A03  			JBS		Z			; Check Z = 1?
0004F9: 506D  			JMP	INS_FAIL
0004FA: 3603  			JBC		N			; Check N = 0?
0004FB: 506D  			JMP	INS_FAIL
0004FC: 6010  			MOV		A,@0x10
0004FD: 015A  			MOV		INST,A
0004FE: 40E6  			CALL	STATUS_CLEAR
0004FF: 6055  			MOV		A,@0x55
000500: 0150  			MOV		0x50,A		; [0x50] = 0x55
000501: 60AA  			MOV		A,@0xAA
000502: 0A50  			AND		A,0x50		; A = 0xAA & 0x55
000503: 3003  			JBC		C			; Check C = 0?
000504: 506D  			JMP	INS_FAIL
000505: 3103  			JBC		DC			; Check DC = 0?
000506: 506D  			JMP	INS_FAIL
000507: 3A03  			JBS		Z			; Check Z = 1?
000508: 506D  			JMP	INS_FAIL
000509: 3503  			JBC		OV			; Check OV = 0?
00050A: 506D  			JMP	INS_FAIL
00050B: 3603  			JBC		N			; Check N = 0?
00050C: 506D  			JMP	INS_FAIL
00050D: 6C00  			XOR		A,@0x00		; Check Result ?
00050E: 3A03  			JBS		Z			; Check Z = 1?
00050F: 506D  			JMP	INS_FAIL
000510: 3603  			JBC		N			; Check N = 0?
000511: 506D  			JMP	INS_FAIL
000512: 40E6  			CALL	STATUS_CLEAR
000513: 60F5  			MOV		A,@0xF5
000514: 0150  			MOV		0x50,A		; [0x50] = 0xF5
000515: 60FA  			MOV		A,@0xFA
000516: 0A50  			AND		A,0x50		; A = 0xFA & 0xF5
000517: 3003  			JBC		C			; Check C = 0?
000518: 506D  			JMP	INS_FAIL
000519: 3103  			JBC		DC			; Check DC = 0?
00051A: 506D  			JMP	INS_FAIL
00051B: 3203  			JBC		Z			; Check Z = 0?
00051C: 506D  			JMP	INS_FAIL
00051D: 3503  			JBC		OV			; Check OV = 0?
00051E: 506D  			JMP	INS_FAIL
00051F: 3E03  			JBS		N			; Check N = 1?
000520: 506D  			JMP	INS_FAIL
000521: 6CF0  			XOR		A,@0xF0		; Check Result ?
000522: 3A03  			JBS		Z			; Check Z = 1?
000523: 506D  			JMP	INS_FAIL
000524: 3603  			JBC		N			; Check N = 0?
000525: 506D  			JMP	INS_FAIL
000526: 6011  			MOV		A,@0x11
000527: 015A  			MOV		INST,A
000528: 40E6  			CALL	STATUS_CLEAR
000529: 6055  			MOV		A,@0x55
00052A: 0150  			MOV		0x50,A		; [0x50] = 0x55
00052B: 60AA  			MOV		A,@0xAA
00052C: 0B50  			AND		0x50,A		; [0x50] = 0xAA & 0x55
00052D: 1003  			MOV		A,STATUS
00052E: 6C1C  			XOR		A,@0x1C		; Check Status ? for non reset
00052F: 3A03  			JBS		Z			; Check Z = 1?
000530: 506D  			JMP	INS_FAIL
000531: 3603  			JBC		N			; Check N = 0?
000532: 506D  			JMP	INS_FAIL
000533: 2203  			BC		Z
000534: 1050  			MOV		A,0x50
000535: 2203  			BC		Z
000536: 6C00  			XOR		A,@0x00		; Check Result ?
000537: 3A03  			JBS		Z			; Check Z = 1?
000538: 506D  			JMP	INS_FAIL
000539: 3603  			JBC		N			; Check N = 0?
00053A: 506D  			JMP	INS_FAIL
00053B: 40E6  			CALL	STATUS_CLEAR
00053C: 60F5  			MOV		A,@0xF5
00053D: 0150  			MOV		0x50,A		; [0x50] = 0xF5
00053E: 60FA  			MOV		A,@0xFA
00053F: 0B50  			AND		0x50,A		; [0x50] = 0xFA & 0xF5
000540: 1003  			MOV		A,STATUS
000541: 6C58  			XOR		A,@0x58		; Check Status ? for non reset
000542: 3A03  			JBS		Z			; Check Z = 1?
000543: 506D  			JMP	INS_FAIL
000544: 3603  			JBC		N			; Check N = 0?
000545: 506D  			JMP	INS_FAIL
000546: 2203  			BC		Z
000547: 1050  			MOV		A,0x50
000548: 2203  			BC		Z
000549: 6CF0  			XOR		A,@0xF0		; Check Result ?
00054A: 3A03  			JBS		Z			; Check Z = 1?
00054B: 506D  			JMP	INS_FAIL
00054C: 3603  			JBC		N			; Check N = 0?
00054D: 506D  			JMP	INS_FAIL
00054E: 6029  			MOV		A,@0x29
00054F: 015A  			MOV		INST,A
000550: 40E6  			CALL	STATUS_CLEAR
000551: 60AA  			MOV		A,@0xAA
000552: 6855  			AND		A,@0x55		; A = 0xAA & 0x55
000553: 3003  			JBC		C			; Check C = 0?
000554: 506D  			JMP	INS_FAIL
000555: 3103  			JBC		DC			; Check DC = 0?
000556: 506D  			JMP	INS_FAIL
000557: 3A03  			JBS		Z			; Check Z = 1?
000558: 506D  			JMP	INS_FAIL
000559: 3503  			JBC		OV			; Check OV = 0?
00055A: 506D  			JMP	INS_FAIL
00055B: 3603  			JBC		N			; Check N = 0?
00055C: 506D  			JMP	INS_FAIL
00055D: 6C00  			XOR		A,@0x00		; Check Result ?
00055E: 3A03  			JBS		Z			; Check Z = 1?
00055F: 506D  			JMP	INS_FAIL
000560: 3603  			JBC		N			; Check N = 0?
000561: 506D  			JMP	INS_FAIL
000562: 40E6  			CALL	STATUS_CLEAR
000563: 60AA  			MOV		A,@0xAA
000564: 68FF  			AND		A,@0xFF		; A = A & 0xFF
000565: 3003  			JBC		C			; Check C = 0?
000566: 506D  			JMP	INS_FAIL
000567: 3103  			JBC		DC			; Check DC = 0?
000568: 506D  			JMP	INS_FAIL
000569: 3203  			JBC		Z			; Check Z = 0?
00056A: 506D  			JMP	INS_FAIL
00056B: 3503  			JBC		OV			; Check OV = 0?
00056C: 506D  			JMP	INS_FAIL
00056D: 3E03  			JBS		N			; Check N = 1?
00056E: 506D  			JMP	INS_FAIL
00056F: 6CAA  			XOR		A,@0xAA		; Check Result ?
000570: 40E9  			CALL	INST_XOR_JUDGE
000571: 6015  			MOV		A,@0x15
000572: 015A  			MOV		INST,A
000573: 40E6  			CALL	STATUS_CLEAR
000574: 60FF  			MOV		A,@0xFF
000575: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000576: 1250  			COMA	0x50		; A = /R
000577: 3003  			JBC		C			; Check C = 0?
000578: 506D  			JMP	INS_FAIL
000579: 3103  			JBC		DC			; Check DC = 0?
00057A: 506D  			JMP	INS_FAIL
00057B: 3A03  			JBS		Z			; Check Z = 1?
00057C: 506D  			JMP	INS_FAIL
00057D: 3503  			JBC		OV			; Check OV = 0?
00057E: 506D  			JMP	INS_FAIL
00057F: 3603  			JBC		N			; Check N = 0?
000580: 506D  			JMP	INS_FAIL
000581: 6C00  			XOR		A,@0x00		; Check Result ?
000582: 3A03  			JBS		Z			; Check Z = 1?
000583: 506D  			JMP	INS_FAIL
000584: 3603  			JBC		N			; Check N = 0?
000585: 506D  			JMP	INS_FAIL	
000586: 40E6  			CALL	STATUS_CLEAR
000587: 6005  			MOV		A,@0x05
000588: 0150  			MOV		0x50,A		; [0x50] = 0x05
000589: 1250  			COMA	0x50		; A = /R
00058A: 3003  			JBC		C			; Check C = 0?
00058B: 506D  			JMP	INS_FAIL
00058C: 3103  			JBC		DC			; Check DC = 0?
00058D: 506D  			JMP	INS_FAIL
00058E: 3203  			JBC		Z			; Check Z = 0?
00058F: 506D  			JMP	INS_FAIL
000590: 3503  			JBC		OV			; Check OV = 0?
000591: 506D  			JMP	INS_FAIL
000592: 3E03  			JBS		N			; Check N = 1?
000593: 506D  			JMP	INS_FAIL
000594: 6CFA  			XOR		A,@0xFA		; Check Result ?
000595: 3A03  			JBS		Z			; Check Z = 1?
000596: 506D  			JMP	INS_FAIL
000597: 3603  			JBC		N			; Check N = 0?
000598: 506D  			JMP	INS_FAIL
000599: 6016  			MOV		A,@0x16
00059A: 015A  			MOV		INST,A
00059B: 40E6  			CALL	STATUS_CLEAR
00059C: 60FF  			MOV		A,@0xFF
00059D: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00059E: 1350  			COM		0x50		; [0x50] = /[0x50]
00059F: 1003  			MOV		A,STATUS
0005A0: 6C1C  			XOR		A,@0x1C		; Check Status ?
0005A1: 3A03  			JBS		Z			; Check Z = 1?
0005A2: 506D  			JMP	INS_FAIL
0005A3: 3603  			JBC		N			; Check N = 0?
0005A4: 506D  			JMP	INS_FAIL
0005A5: 2203  			BC		Z
0005A6: 2603  			BC		N
0005A7: 1050  			MOV		A,0x50
0005A8: 6C00  			XOR		A,@0x00		; Check Result ?
0005A9: 3A03  			JBS		Z			; Check Z = 1?
0005AA: 506D  			JMP	INS_FAIL
0005AB: 3603  			JBC		N			; Check N = 0?
0005AC: 506D  			JMP	INS_FAIL
0005AD: 40E6  			CALL	STATUS_CLEAR
0005AE: 6000  			MOV		A,@0x00
0005AF: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0005B0: 1350  			COM		0x50		; [0x50] = /[0x50]
0005B1: 1003  			MOV		A,STATUS
0005B2: 6C58  			XOR		A,@0x58		; Check Status ?
0005B3: 3A03  			JBS		Z			; Check Z = 1?
0005B4: 506D  			JMP	INS_FAIL
0005B5: 3603  			JBC		N			; Check N = 0?
0005B6: 506D  			JMP	INS_FAIL
0005B7: 2203  			BC		Z
0005B8: 2603  			BC		N
0005B9: 1050  			MOV		A,0x50
0005BA: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005BB: 3A03  			JBS		Z			; Check Z = 1?
0005BC: 506D  			JMP	INS_FAIL
0005BD: 3603  			JBC		N			; Check N = 0?
0005BE: 506D  			JMP	INS_FAIL
0005BF: 6026  			MOV		A,@0x26
0005C0: 015A  			MOV		INST,A
0005C1: 40E6  			CALL	STATUS_CLEAR
0005C2: 60A5  			MOV		A,@0xA5
0005C3: 645A  			OR		A,@0x5A		; A = 0xA5 | 0x5A
0005C4: 6CFF  			XOR		A,@0xFF		; Check Result ?
0005C5: 40E9  			CALL	INST_XOR_JUDGE
0005C6: 0012  		RET
0005C7: 602B  			MOV		A,@0x2B
0005C8: 015A  			MOV		INST,A
0005C9: 40E6  			CALL	STATUS_CLEAR
0005CA: 6055  			MOV		A,@0x55
0005CB: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005CC: 6F50  			RR		0x50		; [0x50] = [0x50] >> 1
0005CD: 1003  			MOV		A,STATUS
0005CE: 6C58  			XOR		A,@0x58		; Check Status ?
0005CF: 40E9  			CALL	INST_XOR_JUDGE
0005D0: 1050  			MOV		A,0x50
0005D1: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005D2: 40E9  			CALL	INST_XOR_JUDGE
0005D3: 602A  			MOV		A,@0x2A
0005D4: 015A  			MOV		INST,A
0005D5: 40E6  			CALL 	STATUS_CLEAR
0005D6: 6055  			MOV		A,@0x55
0005D7: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005D8: 6E50  			RRA		0x50		; A = [0x50] >> 1
0005D9: 3003  			JBC		C			; Check C = 0?
0005DA: 506D  			JMP	INS_FAIL
0005DB: 3103  			JBC		DC			; Check DC = 0?
0005DC: 506D  			JMP	INS_FAIL
0005DD: 3203  			JBC		Z			; Check Z = 0?
0005DE: 506D  			JMP	INS_FAIL
0005DF: 3503  			JBC		OV			; Check OV = 0?
0005E0: 506D  			JMP	INS_FAIL
0005E1: 3E03  			JBS		N			; Check N = 1?
0005E2: 506D  			JMP	INS_FAIL
0005E3: 6CAA  			XOR		A,@0xAA		; Check Result ?
0005E4: 40E9  			CALL	INST_XOR_JUDGE
0005E5: 601B  			MOV		A,@0x1B
0005E6: 015A  			MOV		INST,A
0005E7: 40E6  			CALL	STATUS_CLEAR
0005E8: 2803  			BS		C
0005E9: 60AA  			MOV		A,@0xAA
0005EA: 0150  			MOV		0x50,A		; [0x50] = 0xAA
0005EB: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005EC: 3003  			JBC		C			; Check C = 0?
0005ED: 506D  			JMP	INS_FAIL
0005EE: 3103  			JBC		DC			; Check DC = 0?
0005EF: 506D  			JMP	INS_FAIL
0005F0: 3203  			JBC		Z			; Check Z = 0?
0005F1: 506D  			JMP	INS_FAIL
0005F2: 3503  			JBC		OV			; Check OV = 0?
0005F3: 506D  			JMP	INS_FAIL
0005F4: 3E03  			JBS		N			; Check N = 1?
0005F5: 506D  			JMP	INS_FAIL
0005F6: 6CD5  			XOR		A,@0xD5		; Check Result ?
0005F7: 40E9  			CALL	INST_XOR_JUDGE
0005F8: 40E6  			CALL	STATUS_CLEAR
0005F9: 6055  			MOV		A,@0x55
0005FA: 0150  			MOV		0x50,A		; [0x50] = 0x55
0005FB: 1850  			RRCA	0x50		; A = [0x50] >> 1
0005FC: 3803  			JBS		C			; Check C = 1?
0005FD: 506D  			JMP	INS_FAIL
0005FE: 3103  			JBC		DC			; Check DC = 0?
0005FF: 506D  			JMP	INS_FAIL
000600: 3203  			JBC		Z			; Check Z = 0?
000601: 506D  			JMP	INS_FAIL
000602: 3503  			JBC		OV			; Check OV = 0?
000603: 506D  			JMP	INS_FAIL
000604: 3603  			JBC		N			; Check N = 0?
000605: 506D  			JMP	INS_FAIL
000606: 6C2A  			XOR		A,@0x2A		; Check Result ?
000607: 40E9  			CALL	INST_XOR_JUDGE
000608: 601C  			MOV		A,@0x1C
000609: 015A  			MOV		INST,A
00060A: 40E6  			CALL	STATUS_CLEAR
00060B: 2803  			BS		C
00060C: 60AA  			MOV		A,@0xAA
00060D: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00060E: 2203  			BC		Z
00060F: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
000610: 1003  			MOV		A,STATUS
000611: 6C58  			XOR		A,@0x58		; Check Status ?
000612: 40E9  			CALL	INST_XOR_JUDGE
000613: 1050  			MOV		A,0x50
000614: 6CD5  			XOR		A,@0xD5		; Check Result ?
000615: 40E9  			CALL	INST_XOR_JUDGE
000616: 40E6  			CALL	STATUS_CLEAR
000617: 6055  			MOV		A,@0x55
000618: 0150  			MOV		0x50,A		; [0x50] = 0x55
000619: 2203  			BC		Z
00061A: 1950  			RRC		0x50		; [0x50] = [0x50] >> 1
00061B: 1003  			MOV		A,STATUS
00061C: 6C19  			XOR		A,@0x19		; Check Status ?
00061D: 3A03  			JBS		Z			; Check Z = 1?
00061E: 506D  			JMP	INS_FAIL
00061F: 3603  			JBC		N			; Check N = 0?
000620: 506D  			JMP	INS_FAIL
000621: 1050  			MOV		A,0x50
000622: 6C2A  			XOR		A,@0x2A		; Check Result ?
000623: 40E9  			CALL	INST_XOR_JUDGE
000624: 601D  			MOV		A,@0x1D
000625: 015A  			MOV		INST,A
000626: 40E6  			CALL STATUS_CLEAR
000627: 2803  			BS		C
000628: 6055  			MOV		A,@0x55
000629: 0150  			MOV		0x50,A		; [0x50] = 0x55
00062A: 1A50  			RLCA	0x50		; A = [0x50] << 1
00062B: 3003  			JBC		C			; Check C = 0?
00062C: 506D  			JMP	INS_FAIL
00062D: 3103  			JBC		DC			; Check DC = 0?
00062E: 506D  			JMP	INS_FAIL
00062F: 3203  			JBC		Z			; Check Z = 0?
000630: 506D  			JMP	INS_FAIL
000631: 3503  			JBC		OV			; Check OV = 0?
000632: 506D  			JMP	INS_FAIL
000633: 3E03  			JBS		N			; Check N = 1?
000634: 506D  			JMP	INS_FAIL
000635: 6CAB  			XOR		A,@0xAB		; Check Result ?
000636: 40E9  			CALL	INST_XOR_JUDGE
000637: 40E6  			CALL	STATUS_CLEAR
000638: 60AA  			MOV		A,@0xAA
000639: 0150  			MOV		0x50,A		; [0x50] = 0xAA
00063A: 1A50  			RLCA	0x50		; A = [0x50] << 1
00063B: 3803  			JBS		C			; Check C = 1?
00063C: 506D  			JMP	INS_FAIL
00063D: 3103  			JBC		DC			; Check DC = 0?
00063E: 506D  			JMP	INS_FAIL
00063F: 3203  			JBC		Z			; Check Z = 0?
000640: 506D  			JMP	INS_FAIL
000641: 3503  			JBC		OV			; Check OV = 0?
000642: 506D  			JMP	INS_FAIL
000643: 3603  			JBC		N			; Check N = 0?
000644: 506D  			JMP	INS_FAIL
000645: 6C54  			XOR		A,@0x54		; Check Result ?
000646: 40E9  			CALL	INST_XOR_JUDGE
000647: 601E  			MOV		A,@0x1E
000648: 015A  			MOV		INST,A
000649: 40E6  			CALL	STATUS_CLEAR
00064A: 2803  			BS		C
00064B: 6055  			MOV		A,@0x55
00064C: 0150  			MOV		0x50,A		; [0x50] = 0x55
00064D: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
00064E: 1003  			MOV		A,STATUS
00064F: 6C58  			XOR		A,@0x58		; Check Status ?
000650: 40E9  			CALL	INST_XOR_JUDGE
000651: 1050  			MOV		A,0x50
000652: 6CAB  			XOR		A,@0xAB		; Check Result ?
000653: 40E9  			CALL	INST_XOR_JUDGE
000654: 40E6  			CALL	STATUS_CLEAR
000655: 60AA  			MOV		A,@0xAA
000656: 0150  			MOV		0x50,A		; [0x50] = 0xAA
000657: 1B50  			RLC		0x50		; [0x50] = [0x50] << 1
000658: 1003  			MOV		A,STATUS
000659: 6C19  			XOR		A,@0x19		; Check Status ?
00065A: 40E9  			CALL	INST_XOR_JUDGE
00065B: 1050  			MOV		A,0x50
00065C: 6C54  			XOR		A,@0x54		; Check Result ?
00065D: 40E9  			CALL	INST_XOR_JUDGE
00065E: 602E  			MOV		A,@0x2E
00065F: 015A  			MOV		INST,A
000660: 40E6  			CALL	STATUS_CLEAR
000661: 605A  			MOV		A,@0x5A
000662: 0150  			MOV		0x50,A		; [0x50] = 0x5A
000663: 7250  			RLA		0x50		; A = [0x50] << 1
000664: 3003  			JBC		C			; Check C = 0?
000665: 506D  			JMP	INS_FAIL
000666: 3103  			JBC		DC			; Check DC = 0?
000667: 506D  			JMP	INS_FAIL
000668: 3203  			JBC		Z			; Check Z = 0?
000669: 506D  			JMP	INS_FAIL
00066A: 3503  			JBC		OV			; Check OV = 0?
00066B: 506D  			JMP	INS_FAIL
00066C: 3E03  			JBS		N			; Check N = 1?
00066D: 506D  			JMP	INS_FAIL
00066E: 6CB4  			XOR		A,@0xB4		; Check Result ?
00066F: 40E9  			CALL	INST_XOR_JUDGE
000670: 602F  			MOV		A,@0x2F
000671: 015A  			MOV		INST,A
000672: 40E6  			CALL	STATUS_CLEAR
000673: 605A  			MOV		A,@0x5A
000674: 0150  			MOV		0x50,A		; [0x50] = 0xA5
000675: 7350  			RL		0x50		; [0x50] = [0x50] << 1
000676: 1003  			MOV		A,STATUS
000677: 6C58  			XOR		A,@0x58		; Check Status ?
000678: 3A03  			JBS		Z			; Check Z = 1?
000679: 506D  			JMP	INS_FAIL
00067A: 3603  			JBC		N			; Check N = 0?
00067B: 506D  			JMP	INS_FAIL
00067C: 1050  			MOV		A,0x50
00067D: 6CB4  			XOR		A,@0xB4		; Check Result ?
00067E: 40E9  			CALL	INST_XOR_JUDGE
00067F: 602D  			MOV		A,@0x2D
000680: 015A  			MOV		INST,A
000681: 40E6  			CALL	STATUS_CLEAR
000682: 6055  			MOV		A,@0x55
000683: 0150  			MOV		0x50,A		; [0x50] = 0x55
000684: 60AA  			MOV		A,@0xAA
000685: 7150  			XCH		0x50		; [0x50] <-> A
000686: 6C55  			XOR		A,@0x55		; Check Result ?
000687: 3A03  			JBS		Z			; Check Z = 1?
000688: 506D  			JMP	INS_FAIL
000689: 3603  			JBC		N			; Check N = 0?
00068A: 506D  			JMP	INS_FAIL
00068B: 1050  			MOV		A,0x50
00068C: 6CAA  			XOR		A,@0xAA		; Check Result ?
00068D: 40E9  			CALL	INST_XOR_JUDGE
00068E: 0012  		RET
00068F: 6007  			MOV		A,@0x07
000690: 015A  			MOV		INST,A
000691: 40E6  			CALL	STATUS_CLEAR
000692: 60FF  			MOV		A,@0xFF
000693: 0150  			MOV		0x50,A
000694: 1003  			MOV		A,STATUS
000695: 6C18  			XOR		A,@0x18		;At  OCDS
000696: 40E9  			CALL	INST_XOR_JUDGE
000697: 1050  			MOV		A,0x50
000698: 6CFF  			XOR		A,@0xFF		; Check Result ?
000699: 40E9  			CALL	INST_XOR_JUDGE
00069A: 6014  			MOV		A,@0x14
00069B: 015A  			MOV		INST,A
00069C: 40E6  			CALL	STATUS_CLEAR
00069D: 6000  			MOV		A,@0x00
00069E: 0150  			MOV		0x50,A		; [0x50] = 0x00		
00069F: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
0006A0: 1003  			MOV		A,STATUS
0006A1: 6C1C  			XOR		A,@0x1C		; Check Status ?
0006A2: 3A03  			JBS		Z			; Check Z = 1?
0006A3: 506D  			JMP	INS_FAIL
0006A4: 3603  			JBC		N			; Check N = 0?
0006A5: 506D  			JMP	INS_FAIL
0006A6: 1050  			MOV		A,0x50
0006A7: 2203  			BC		Z
0006A8: 6C00  			XOR		A,@0x00		; Check Result ?
0006A9: 3A03  			JBS		Z			; Check Z = 1?
0006AA: 506D  			JMP	INS_FAIL
0006AB: 3603  			JBC		N			; Check N = 0?
0006AC: 506D  			JMP	INS_FAIL
0006AD: 40E6  			CALL	STATUS_CLEAR
0006AE: 6000  			MOV		A,@0x00
0006AF: 0150  			MOV		0x50,A		; [0x50] = 0x00		
0006B0: 1150  			MOV		0x50,0x50	; [0x50] = [0x50]
0006B1: 2850  			BS		0x50,0
0006B2: 1050  			MOV		A,0x50
0006B3: 6C01  			XOR		A,@0x01		; Check Result ?
0006B4: 40E9  			CALL	INST_XOR_JUDGE
0006B5: 601F  			MOV		A,@0x1F
0006B6: 015A  			MOV		INST,A
0006B7: 40E6  			CALL	STATUS_CLEAR
0006B8: 605A  			MOV		A,@0x5A
0006B9: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006BA: 1C50  			SWAPA	0x50
0006BB: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006BC: 40E9  			CALL	INST_XOR_JUDGE
0006BD: 6020  			MOV		A,@0x20
0006BE: 015A  			MOV		INST,A
0006BF: 40E6  			CALL	STATUS_CLEAR
0006C0: 605A  			MOV		A,@0x5A
0006C1: 0150  			MOV		0x50,A		; [0x50] = 0x5A
0006C2: 1D50  			SWAP	0x50
0006C3: 1050  			MOV		A,0x50
0006C4: 6CA5  			XOR		A,@0xA5		; Check Result ?
0006C5: 40E9  			CALL	INST_XOR_JUDGE
0006C6: 0012  		RET
0006C7: 0012  		RET
0006C8: 601A  			MOV		A,@0x1A
0006C9: 015A  			MOV		INST,A
0006CA: 40E6  			CALL	STATUS_CLEAR
0006CB: 6001  			MOV		A,@0x01
0006CC: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006CD: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006CE: 506D  			JMP		INS_FAIL
0006CF: 1050  			MOV		A,0x50
0006D0: 6C00  			XOR		A,@0x00		; Check Result ?
0006D1: 40E9  			CALL	INST_XOR_JUDGE	
0006D2: 40E6  			CALL	STATUS_CLEAR
0006D3: 6002  			MOV		A,@0x02
0006D4: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006D5: 1750  			DJZ		0x50		; [0x50] = [0x50] - 1,if z,skip
0006D6: 56D8  			JMP		$+2
0006D7: 506D  			JMP		INS_FAIL
0006D8: 6019  			MOV		A,@0x19
0006D9: 015A  			MOV		INST,A
0006DA: 40E6  			CALL	STATUS_CLEAR
0006DB: 6001  			MOV		A,@0x01
0006DC: 0150  			MOV		0x50,A		; [0x50] = 0x01
0006DD: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006DE: 506D  			JMP	INS_FAIL
0006DF: 6C00  			XOR		A,@0x00		; Check Result ?
0006E0: 40E9  			CALL	INST_XOR_JUDGE
0006E1: 40E6  			CALL	STATUS_CLEAR
0006E2: 6002  			MOV		A,@0x02
0006E3: 0150  			MOV		0x50,A		; [0x50] = 0x02
0006E4: 1650  			DJZA	0x50		; A = [0x50] - 0x01,if z,skip
0006E5: 56E7  			JMP		$+2
0006E6: 506D  			JMP	INS_FAIL
0006E7: 6021  			MOV		A,@0x21
0006E8: 015A  			MOV		INST,A
0006E9: 40E6  			CALL	STATUS_CLEAR
0006EA: 60FF  			MOV		A,@0xFF
0006EB: 0150  			MOV		0x50,A
0006EC: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006ED: 506D  			JMP		INS_FAIL
0006EE: 6C00  			XOR		A,@0x00		; Check Result ?
0006EF: 40E9  			CALL	INST_XOR_JUDGE
0006F0: 40E6  			CALL	STATUS_CLEAR
0006F1: 6080  			MOV		A,@0x80
0006F2: 0150  			MOV		0x50,A
0006F3: 1E50  			JZA		0x50		; A = [0x50] + 1,if 0 skip
0006F4: 56F6  			JMP		$+2
0006F5: 506D  			JMP		INS_FAIL
0006F6: 6022  			MOV		A,@0x22
0006F7: 015A  			MOV		INST,A
0006F8: 40E6  			CALL	STATUS_CLEAR
0006F9: 60FF  			MOV		A,@0xFF
0006FA: 0150  			MOV		0x50,A		; [0x50] = 0xFF
0006FB: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
0006FC: 506D  			JMP		INS_FAIL
0006FD: 1050  			MOV		A,0x50
0006FE: 6C00  			XOR		A,@0x00		; Check Result ?
0006FF: 40E9  			CALL	INST_XOR_JUDGE
000700: 40E6  			CALL	STATUS_CLEAR
000701: 6080  			MOV		A,@0x80
000702: 0150  			MOV		0x50,A		; [0x50] = 0xFF
000703: 1F50  			JZ		0x50		; [0x50] = [0x50] + 1,if 0 skip
000704: 5706  			JMP		$+2
000705: 506D  			JMP		INS_FAIL
000706: 0012  		RET
000707: 6023  			MOV		A,@0x23
000708: 015A  			MOV		INST,A
000709: 40E6  			CALL	STATUS_CLEAR
00070A: 605A  			MOV		A,@0x5A
00070B: 0150  			MOV		0x50,A		; [0x50] = 0x5A
00070C: 6150  			JE		0x50		; [0x50] = A?
00070D: 506D  			JMP		INS_FAIL
00070E: 605B  			MOV		A,@0x5B
00070F: 0150  			MOV		0x50,A		; [0x50] = 0x5B
000710: 605C  			MOV		A,@0x5C
000711: 6150  			JE		0x50		; [0x50] = A(0x5C)?
000712: 5714  			JMP		$+2
000713: 506D  			JMP		INS_FAIL
000714: 6024  			MOV		A,@0x24
000715: 015A  			MOV		INST,A
000716: 40E6  			CALL	STATUS_CLEAR
000717: 607F  			MOV		A,@0x7F
000718: 0150  			MOV		0x50,A		; [0x50] = 0x7F
000719: 6000  			MOV		A,@0x00
00071A: 6250  			JGE		0x50		; [0x50] > A ?
00071B: 506D  			JMP		INS_FAIL
00071C: 40E6  			CALL	STATUS_CLEAR
00071D: 60FF  			MOV		A,@0xFF
00071E: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00071F: 6080  			MOV		A,@0x80
000720: 6250  			JGE		0x50		; [0x50] > A ?
000721: 506D  			JMP		INS_FAIL
000722: 40E6  			CALL	STATUS_CLEAR
000723: 6000  			MOV		A,@0x00
000724: 0150  			MOV		0x50,A		; [0x50] = 0x00
000725: 60FF  			MOV		A,@0xFF
000726: 6250  			JGE		0x50		; [0x50] > A(0xFF) ?x
000727: 5729  			JMP		$+2
000728: 506D  			JMP		INS_FAIL
000729: 6025  			MOV		A,@0x25
00072A: 015A  			MOV		INST,A
00072B: 40E6  			CALL	STATUS_CLEAR
00072C: 6000  			MOV		A,@0x00
00072D: 0150  			MOV		0x50,A		; [0x50] = 0x00
00072E: 607F  			MOV		A,@0x7F
00072F: 6350  			JLE		0x50		; [0x50] < A ?
000730: 506D  			JMP		INS_FAIL
000731: 6000  			MOV		A,@0x00
000732: 0103  			MOV		STATUS,A
000733: 6080  			MOV		A,@0x80
000734: 0150  			MOV		0x50,A		; [0x50] = 0x80
000735: 60FF  			MOV		A,@0xFF
000736: 6350  			JLE		0x50		; [0x50] < A ?
000737: 506D  			JMP		INS_FAIL
000738: 40E6  			CALL	STATUS_CLEAR
000739: 60FF  			MOV		A,@0xFF
00073A: 0150  			MOV		0x50,A		; [0x50] = 0xFF
00073B: 6000  			MOV		A,@0x00
00073C: 6350  			JLE		0x50		; [0x50] < A(0x00) ?x
00073D: 573F  			JMP		$+2
00073E: 506D  			JMP		INS_FAIL
00073F: 6027  			MOV		A,@0x27
000740: 015A  			MOV		INST,A
000741: 40E6  			CALL	STATUS_CLEAR
000742: 607F  			MOV		A,@0x7F
000743: 657F  			JE		@0x7F
000744: 506D  			JMP	INS_FAIL
000745: 0012  		RET
000746: 6002  			MOV	A,@0x02
000747: 015A  			MOV	INST,A
000748: 40E6  			CALL	STATUS_CLEAR
000749: 6003  			MOV		A,@0x03
00074A: 0150  			MOV		0x50,A
00074B: 47EC  			CALL	CALL_Test
00074C: 1050  			MOV		A,0x50
00074D: 6C04  			XOR		A,@0x04
00074E: 40E9  			CALL	INST_XOR_JUDGE
00074F: 6003  			MOV		A,@0x03
000750: 015A  			MOV		INST,A
000751: 40E6  			CALL	STATUS_CLEAR
000752: 6003  			MOV		A,@0x03
000753: 0151  			MOV		0x51,A
000754: 7A80 1000  			LCALL	LCALL_Test
000756: 1051  			MOV		A,0x51
000757: 6C04  			XOR		A,@0x04		; Check Result ?
000758: 40E9  			CALL	INST_XOR_JUDGE
000759: 602C  			MOV		A,@0x2C
00075A: 015A  			MOV		INST,A
00075B: 40E6  			CALL	STATUS_CLEAR
00075C: 6000  			MOV		A,@0x00
00075D: 4EF0  			CALL	INST_RETL_TABLE
00075E: 6CA1  			XOR		A,@0xA1
00075F: 40E9  			CALL	INST_XOR_JUDGE
000760: 6001  			MOV		A,@0x01
000761: 4EF0  			CALL	INST_RETL_TABLE
000762: 6CA2  			XOR		A,@0xA2
000763: 40E9  			CALL	INST_XOR_JUDGE
000764: 6002  			MOV		A,@0x02
000765: 4EF0  			CALL	INST_RETL_TABLE
000766: 6CA4  			XOR		A,@0xA4
000767: 40E9  			CALL	INST_XOR_JUDGE
000768: 6003  			MOV		A,@0x03
000769: 4EF0  			CALL	INST_RETL_TABLE
00076A: 6CA8  			XOR		A,@0xA8
00076B: 40E9  			CALL	INST_XOR_JUDGE
00076C: 0012  		RET
00076D: 6004  			MOV		A,@0x04
00076E: 015A  			MOV		INST,A
00076F: 0010  			ENI
000770: 3F03  			JBS		IT		; Check IT = 1?
000771: 506D  			JMP	INS_FAIL
000772: 6005  			MOV		A,@0x05
000773: 015A  			MOV		INST,A
000774: 0011  			DISI
000775: 3703  			JBC		IT		; Check IT = 0?
000776: 506D  			JMP	INS_FAIL
000777: 0012  		RET
000778: 40E6  		CALL	STATUS_CLEAR
000779: 2803  		BS	C
00077A: 6903  		SJC		@0x03
00077B: 5067  		JMP		JMP_FAIL
00077C: 5067  		JMP		JMP_FAIL
00077D: 5067  		JMP		JMP_FAIL
00077E: 2003  		BC	C
00077F: 6A03  		SJNC	bbb		;@0x03
000780: 5067  		JMP		JMP_FAIL
000781: 5067  		JMP		JMP_FAIL
000782: 5067  		JMP		JMP_FAIL
000783: 2A03  			BS		Z
000784: 6B03  			SJZ		@0x03
000785: 5067  			JMP		JMP_FAIL
000786: 5067  			JMP		JMP_FAIL
000787: 5067  			JMP		JMP_FAIL
000788: 0200  			CLRA
000789: 6B03  			SJZ		@0x03
00078A: 5067  			JMP		JMP_FAIL
00078B: 5067  			JMP		JMP_FAIL
00078C: 5067  			JMP		JMP_FAIL
00078D: 5795  		JMP		IATEST1		;JMP back Test as below
00078E: 57A2  			JMP	IATEST2		; -9
00078F: 5067  			JMP	JMP_FAIL	; -8
000790: 5067  			JMP	JMP_FAIL	; -7
000791: 5067  			JMP	JMP_FAIL	; -6
000792: 5067  			JMP	JMP_FAIL	; -5
000793: 5067  			JMP	JMP_FAIL	; -4
000794: 5067  			JMP	JMP_FAIL	; -3
000795: 2803  			BS		C		; -2
000796: 69F7  			SJC		aaa		; -1
000797: 69F7  			SJC		@0xF7	; -1
000798: 5067  			JMP		JMP_FAIL
000799: 5067  			JMP		JMP_FAIL
00079A: 5067  			JMP		JMP_FAIL
00079B: 57AE  			JMP		IATEST3		; -9
00079C: 5067  			JMP		JMP_FAIL	; -8
00079D: 5067  			JMP		JMP_FAIL	; -7
00079E: 5067  			JMP		JMP_FAIL	; -6
00079F: 5067  			JMP		JMP_FAIL	; -5
0007A0: 5067  			JMP		JMP_FAIL	; -4
0007A1: 5067  			JMP		JMP_FAIL	; -3
0007A2: 2003  			BC		C		; -2
0007A3: 6AF7  			SJNC		@0xF7	; -1
0007A4: 57BF  			JMP		_IPass
0007A5: 57BF  			JMP		_IPass
0007A6: 57BF  			JMP		_IPass
0007A7: 57BA  			JMP		IATEST4		; -9
0007A8: 5067  			JMP		JMP_FAIL	; -8
0007A9: 5067  			JMP		JMP_FAIL	; -7
0007AA: 5067  			JMP		JMP_FAIL	; -6
0007AB: 5067  			JMP		JMP_FAIL	; -5
0007AC: 5067  			JMP		JMP_FAIL	; -4
0007AD: 5067  			JMP		JMP_FAIL	; -3
0007AE: 2A03  			BS		Z		; -2
0007AF: 6BF7  			SJZ		@0xF7	; -1
0007B0: 5067  			JMP		JMP_FAIL
0007B1: 5067  			JMP		JMP_FAIL
0007B2: 5067  			JMP		JMP_FAIL
0007B3: 57BF  			JMP		_IPass		; -9
0007B4: 5067  			JMP		JMP_FAIL	; -8
0007B5: 5067  			JMP		JMP_FAIL	; -7
0007B6: 5067  			JMP		JMP_FAIL	; -6
0007B7: 5067  			JMP		JMP_FAIL	; -5
0007B8: 5067  			JMP		JMP_FAIL	; -4
0007B9: 5067  			JMP		JMP_FAIL	; -3
0007BA: 2203  			BC		Z		; -2
0007BB: 6DF7  			SJNZ	@0xF7	; -1
0007BC: 5067  			JMP		JMP_FAIL
0007BD: 5067  			JMP		JMP_FAIL
0007BE: 5067  			JMP		JMP_FAIL
0007BF: 0000  				NOP
0007C0: 0012  		RET
0007C1: 6028  			MOV		A,@0x28
0007C2: 015A  			MOV		INST,A
0007C3: 7A01  			SBANK	1
0007C4: 60F1  			MOV		A,@0xF1		;ADDR(0x0EF1)
0007C5: 0145  			MOV		TBPTL,A
0007C6: 600E  			MOV		A,@0x0E
0007C7: 0146  			MOV		TBPTH,A
0007C8: 7A00  			SBANK	0
0007C9: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007CA: 6CA1  			XOR		A,@0xA1
0007CB: 40E9  			CALL	INST_XOR_JUDGE
0007CC: 1050  			MOV		A,0x50
0007CD: 6C70  			XOR		A,@0x70
0007CE: 40E9  			CALL	INST_XOR_JUDGE
0007CF: 7A01  			SBANK	1
0007D0: 1545  			INC		TBPTL		;ADDR(0x0EF2)
0007D1: 7A00  			SBANK	0
0007D2: 6750  			TBRDA	0x50		; [0x50]+ A = [TABPTR] 
0007D3: 6CA2  			XOR		A,@0xA2
0007D4: 40E9  			CALL	INST_XOR_JUDGE
0007D5: 1050  			MOV		A,0x50
0007D6: 6C70  			XOR		A,@0x70
0007D7: 40E9  			CALL	INST_XOR_JUDGE
0007D8: 6033  			MOV		A,@0x33
0007D9: 015A  			MOV		INST,A
0007DA: 7A01  			SBANK	1
0007DB: 60F3  			MOV		A,@0xF3		;ADDR(0x0EF3)
0007DC: 0145  			MOV		TBPTL,A
0007DD: 600E  			MOV		A,@0x0E
0007DE: 0146  			MOV		TBPTH,A
0007DF: 7A00  			SBANK	0
0007E0: 7B50  			TBRD	0x50
0007E1: 1050  			MOV		A,0x50
0007E2: 6CA4  			XOR		A,@0xA4
0007E3: 40E9  			CALL	INST_XOR_JUDGE
0007E4: 7A01  			SBANK	1
0007E5: 1545  			INC		TBPTL		;ADDR(0x0EF4)
0007E6: 7A00  			SBANK	0
0007E7: 7B50  			TBRD	0x50
0007E8: 1050  			MOV		A,0x50
0007E9: 6CA8  			XOR		A,@0xA8
0007EA: 40E9  			CALL	INST_XOR_JUDGE
0007EB: 0012  		RET
0007EC: 1550  		INC		0x50
0007ED: 0012  		RET
000EF0: 0F02  		ADD		PCL, A	;BackUp PC to STACK,then SEARCH TABLE By PC
000EF1: 70A1  		RETL	@0xA1
000EF2: 70A2  		RETL	@0xA2
000EF3: 70A4  		RETL	@0xA4
000EF4: 70A8  		RETL	@0xA8
000EF5: 701A  		RETL	@0x1A
000EF6: 702A  		RETL	@0x2A
000EF7: 704A  		RETL	@0x4A
000EF8: 708A  		RETL	@0x8A
000F00: 6080  		MOV		A,@0x80		; Write Start SRAM(0x55)
000F01: 0104  		MOV		RSR,A
000F02: 7A40  		GBANK	0
000F03: 6055  		MOV		A,@0x55
000F04: 0100  		MOV		IAR,A
000F05: 1504  		INC		RSR
000F06: 6000  		MOV		A,@0x00
000F07: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F08: 3A03  		JBS		Z
000F09: 5F03  		JMP		$-6
000F0A: 6080  		MOV		A,@0x80		; Read Start SRAM(0x55)
000F0B: 0104  		MOV		RSR,A
000F0C: 7A40  		GBANK	0
000F0D: 6055  		MOV		A,@0x55
000F0E: 0D00  		XOR		IAR,A
000F0F: 3A03  		JBS		Z
000F10: 506A  		JMP		RAM_FAIL
000F11: 1504  		INC		RSR
000F12: 6000  		MOV		A,@0x00
000F13: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F14: 3A03  		JBS		Z
000F15: 5F0D  		JMP		$-8
000F16: 0012  		RET
000F17: 6080  		MOV		A,@0x80		; Write Start SRAM(0xAA)
000F18: 0104  		MOV		RSR,A
000F19: 7A40  		GBANK	0
000F1A: 60AA  		MOV		A,@0xAA		; SRAM(0xAA)
000F1B: 0100  		MOV		IAR,A
000F1C: 1504  		INC		RSR
000F1D: 6000  		MOV		A,@0x00
000F1E: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F1F: 3A03  		JBS		Z
000F20: 5F1A  		JMP		$-6
000F21: 6080  		MOV		A,@0x80
000F22: 0104  		MOV		RSR,A
000F23: 7A40  		GBANK	0
000F24: 60AA  		MOV		A,@0xAA
000F25: 0D00  		XOR		IAR,A
000F26: 3A03  		JBS		Z
000F27: 506A  		JMP		RAM_FAIL
000F28: 1504  		INC		RSR
000F29: 6000  		MOV		A,@0x00
000F2A: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F2B: 3A03  		JBS		Z
000F2C: 5F24  		JMP		$-8
000F2D: 0012  		RET
000F2E: 6080  		MOV		A,@0x80		; Write Start SRAM(0x33)
000F2F: 0104  		MOV		RSR,A
000F30: 7A41  		GBANK	1
000F31: 6033  		MOV		A,@0x33		; SRAM(0x33)
000F32: 0100  		MOV		IAR,A
000F33: 1504  		INC		RSR
000F34: 6000  		MOV		A,@0x00
000F35: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F36: 3A03  		JBS		Z
000F37: 5F31  		JMP		$-6
000F38: 6080  		MOV		A,@0x80
000F39: 0104  		MOV		RSR,A
000F3A: 7A41  		GBANK	1
000F3B: 6033  		MOV		A,@0x33
000F3C: 0D00  		XOR		IAR,A
000F3D: 3A03  		JBS		Z
000F3E: 506A  		JMP		RAM_FAIL
000F3F: 1504  		INC		RSR
000F40: 6000  		MOV		A,@0x00
000F41: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F42: 3A03  		JBS		Z
000F43: 5F3B  		JMP		$-8
000F44: 0012  		RET
000F45: 6080  		MOV		A,@0x80		; Write Start SRAM(0xCC)
000F46: 0104  		MOV		RSR,A
000F47: 7A41  		GBANK	1
000F48: 60CC  		MOV		A,@0xCC		; SRAM(0xCC)
000F49: 0100  		MOV		IAR,A
000F4A: 1504  		INC		RSR
000F4B: 6000  		MOV		A,@0x00
000F4C: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F4D: 3A03  		JBS		Z
000F4E: 5F48  		JMP		$-6
000F4F: 6080  		MOV		A,@0x80
000F50: 0104  		MOV		RSR,A
000F51: 7A41  		GBANK	1
000F52: 60CC  		MOV		A,@0xCC
000F53: 0D00  		XOR		IAR,A
000F54: 3A03  		JBS		Z
000F55: 506A  		JMP		RAM_FAIL
000F56: 1504  		INC		RSR
000F57: 6000  		MOV		A,@0x00
000F58: 0C04  		XOR		A,RSR		; INC(0x80),UNTIL(0x00)
000F59: 3A03  		JBS		Z
000F5A: 5F52  		JMP		$-8
000F5B: 0012  		RET
001000: 1551  		INC		0x51
001001: 0012  		RET
